// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Organizations
{
    public static class GetIAMPolicy
    {
        /// <summary>
        /// Generates an IAM policy document that may be referenced by and applied to
        /// other Google Cloud Platform IAM resources, such as the `gcp.projects.IAMPolicy` resource.
        /// 
        /// **Note:** Please review the documentation of the resource that you will be using the datasource with. Some resources such as `gcp.projects.IAMPolicy` and others have limitations in their API methods which are noted on their respective page.
        /// 
        /// 
        /// This data source is used to define IAM policies to apply to other resources.
        /// Currently, defining a policy through a datasource and referencing that policy
        /// from another resource is the only way to apply an IAM policy to a resource.
        /// </summary>
        public static Task<GetIAMPolicyResult> InvokeAsync(GetIAMPolicyArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetIAMPolicyResult>("gcp:organizations/getIAMPolicy:getIAMPolicy", args ?? new GetIAMPolicyArgs(), options.WithVersion());
    }


    public sealed class GetIAMPolicyArgs : Pulumi.InvokeArgs
    {
        [Input("auditConfigs")]
        private List<Inputs.GetIAMPolicyAuditConfigArgs>? _auditConfigs;

        /// <summary>
        /// A nested configuration block that defines logging additional configuration for your project. This field is only supported on `gcp.projects.IAMPolicy`, `gcp.folder.IAMPolicy` and `gcp.organizations.IAMPolicy`.
        /// </summary>
        public List<Inputs.GetIAMPolicyAuditConfigArgs> AuditConfigs
        {
            get => _auditConfigs ?? (_auditConfigs = new List<Inputs.GetIAMPolicyAuditConfigArgs>());
            set => _auditConfigs = value;
        }

        [Input("bindings")]
        private List<Inputs.GetIAMPolicyBindingArgs>? _bindings;

        /// <summary>
        /// A nested configuration block (described below)
        /// defining a binding to be included in the policy document. Multiple
        /// `binding` arguments are supported.
        /// </summary>
        public List<Inputs.GetIAMPolicyBindingArgs> Bindings
        {
            get => _bindings ?? (_bindings = new List<Inputs.GetIAMPolicyBindingArgs>());
            set => _bindings = value;
        }

        public GetIAMPolicyArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetIAMPolicyResult
    {
        public readonly ImmutableArray<Outputs.GetIAMPolicyAuditConfigResult> AuditConfigs;
        public readonly ImmutableArray<Outputs.GetIAMPolicyBindingResult> Bindings;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The above bindings serialized in a format suitable for
        /// referencing from a resource that supports IAM.
        /// </summary>
        public readonly string PolicyData;

        [OutputConstructor]
        private GetIAMPolicyResult(
            ImmutableArray<Outputs.GetIAMPolicyAuditConfigResult> auditConfigs,

            ImmutableArray<Outputs.GetIAMPolicyBindingResult> bindings,

            string id,

            string policyData)
        {
            AuditConfigs = auditConfigs;
            Bindings = bindings;
            Id = id;
            PolicyData = policyData;
        }
    }
}
