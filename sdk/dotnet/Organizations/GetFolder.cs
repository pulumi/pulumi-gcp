// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Organizations
{
    public static partial class Invokes
    {
        /// <summary>
        /// Use this data source to get information about a Google Cloud Folder.
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/d/folder.html.markdown.
        /// </summary>
        public static Task<GetFolderResult> GetFolder(GetFolderArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetFolderResult>("gcp:organizations/getFolder:getFolder", args ?? ResourceArgs.Empty, options.WithVersion());
    }

    public sealed class GetFolderArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Folder in the form `{folder_id}` or `folders/{folder_id}`.
        /// </summary>
        [Input("folder", required: true)]
        public Input<string> Folder { get; set; } = null!;

        /// <summary>
        /// `true` to find the organization that the folder belongs, `false` to avoid the lookup. It searches up the tree. (defaults to `false`)
        /// </summary>
        [Input("lookupOrganization")]
        public Input<bool>? LookupOrganization { get; set; }

        public GetFolderArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetFolderResult
    {
        /// <summary>
        /// Timestamp when the Organization was created. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The folder's display name.
        /// </summary>
        public readonly string DisplayName;
        public readonly string Folder;
        /// <summary>
        /// The Folder's current lifecycle state.
        /// </summary>
        public readonly string LifecycleState;
        public readonly bool? LookupOrganization;
        /// <summary>
        /// The resource name of the Folder in the form `folders/{folder_id}`.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// If `lookup_organization` is enable, the resource name of the Organization that the folder belongs.
        /// </summary>
        public readonly string Organization;
        /// <summary>
        /// The resource name of the parent Folder or Organization.
        /// </summary>
        public readonly string Parent;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetFolderResult(
            string createTime,
            string displayName,
            string folder,
            string lifecycleState,
            bool? lookupOrganization,
            string name,
            string organization,
            string parent,
            string id)
        {
            CreateTime = createTime;
            DisplayName = displayName;
            Folder = folder;
            LifecycleState = lifecycleState;
            LookupOrganization = lookupOrganization;
            Name = name;
            Organization = organization;
            Parent = parent;
            Id = id;
        }
    }
}
