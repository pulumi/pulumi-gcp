// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Organizations
{
    public static class GetClientConfig
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```tf
        /// data "google_client_config" "current" {
        /// }
        /// 
        /// output "project" {
        ///   value = data.google_client_config.current.project
        /// }
        /// ```
        /// 
        /// 
        /// ### Configure Kubernetes Provider With OAuth2 Access Token
        /// 
        /// ```tf
        /// data "google_client_config" "default" {
        /// }
        /// 
        /// data "google_container_cluster" "my_cluster" {
        ///   name = "my-cluster"
        ///   zone = "us-east1-a"
        /// }
        /// 
        /// provider "kubernetes" {
        ///   host  = "https://${data.google_container_cluster.my_cluster.endpoint}"
        ///   token = data.google_client_config.default.access_token
        ///   cluster_ca_certificate = base64decode(
        ///     data.google_container_cluster.my_cluster.master_auth[0].cluster_ca_certificate,
        ///   )
        /// }
        /// ```
        /// </summary>
        public static Task<GetClientConfigResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetClientConfigResult>("gcp:organizations/getClientConfig:getClientConfig", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```tf
        /// data "google_client_config" "current" {
        /// }
        /// 
        /// output "project" {
        ///   value = data.google_client_config.current.project
        /// }
        /// ```
        /// 
        /// 
        /// ### Configure Kubernetes Provider With OAuth2 Access Token
        /// 
        /// ```tf
        /// data "google_client_config" "default" {
        /// }
        /// 
        /// data "google_container_cluster" "my_cluster" {
        ///   name = "my-cluster"
        ///   zone = "us-east1-a"
        /// }
        /// 
        /// provider "kubernetes" {
        ///   host  = "https://${data.google_container_cluster.my_cluster.endpoint}"
        ///   token = data.google_client_config.default.access_token
        ///   cluster_ca_certificate = base64decode(
        ///     data.google_container_cluster.my_cluster.master_auth[0].cluster_ca_certificate,
        ///   )
        /// }
        /// ```
        /// </summary>
        public static Output<GetClientConfigResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetClientConfigResult>("gcp:organizations/getClientConfig:getClientConfig", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetClientConfigResult
    {
        /// <summary>
        /// The OAuth2 access token used by the client to authenticate against the Google Cloud API.
        /// </summary>
        public readonly string AccessToken;
        /// <summary>
        /// The default labels configured on the provider.
        /// </summary>
        public readonly ImmutableDictionary<string, string> DefaultLabels;
        public readonly string Id;
        /// <summary>
        /// The ID of the project to apply any resources to.
        /// </summary>
        public readonly string Project;
        /// <summary>
        /// The region to operate under.
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// The zone to operate under.
        /// </summary>
        public readonly string Zone;

        [OutputConstructor]
        private GetClientConfigResult(
            string accessToken,

            ImmutableDictionary<string, string> defaultLabels,

            string id,

            string project,

            string region,

            string zone)
        {
            AccessToken = accessToken;
            DefaultLabels = defaultLabels;
            Id = id;
            Project = project;
            Region = region;
            Zone = zone;
        }
    }
}
