// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.ModelArmor.Inputs
{

    public sealed class TemplateTemplateMetadataArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Indicates the custom error code set by the user to be returned to the end
        /// user if the LLM response trips Model Armor filters.
        /// </summary>
        [Input("customLlmResponseSafetyErrorCode")]
        public Input<int>? CustomLlmResponseSafetyErrorCode { get; set; }

        /// <summary>
        /// Indicates the custom error message set by the user to be returned to the
        /// end user if the LLM response trips Model Armor filters.
        /// </summary>
        [Input("customLlmResponseSafetyErrorMessage")]
        public Input<string>? CustomLlmResponseSafetyErrorMessage { get; set; }

        /// <summary>
        /// Indicates the custom error code set by the user to be returned to the end
        /// user by the service extension if the prompt trips Model Armor filters.
        /// </summary>
        [Input("customPromptSafetyErrorCode")]
        public Input<int>? CustomPromptSafetyErrorCode { get; set; }

        /// <summary>
        /// Indicates the custom error message set by the user to be returned to the
        /// end user if the prompt trips Model Armor filters.
        /// </summary>
        [Input("customPromptSafetyErrorMessage")]
        public Input<string>? CustomPromptSafetyErrorMessage { get; set; }

        /// <summary>
        /// Possible values:
        /// INSPECT_ONLY
        /// INSPECT_AND_BLOCK
        /// </summary>
        [Input("enforcementType")]
        public Input<string>? EnforcementType { get; set; }

        /// <summary>
        /// If true, partial detector failures should be ignored.
        /// </summary>
        [Input("ignorePartialInvocationFailures")]
        public Input<bool>? IgnorePartialInvocationFailures { get; set; }

        /// <summary>
        /// If true, log sanitize operations.
        /// </summary>
        [Input("logSanitizeOperations")]
        public Input<bool>? LogSanitizeOperations { get; set; }

        /// <summary>
        /// If true, log template crud operations.
        /// </summary>
        [Input("logTemplateOperations")]
        public Input<bool>? LogTemplateOperations { get; set; }

        /// <summary>
        /// Metadata to enable multi language detection via template.
        /// Structure is documented below.
        /// </summary>
        [Input("multiLanguageDetection")]
        public Input<Inputs.TemplateTemplateMetadataMultiLanguageDetectionArgs>? MultiLanguageDetection { get; set; }

        public TemplateTemplateMetadataArgs()
        {
        }
        public static new TemplateTemplateMetadataArgs Empty => new TemplateTemplateMetadataArgs();
    }
}
