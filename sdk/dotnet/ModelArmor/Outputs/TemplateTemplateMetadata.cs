// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.ModelArmor.Outputs
{

    [OutputType]
    public sealed class TemplateTemplateMetadata
    {
        /// <summary>
        /// Indicates the custom error code set by the user to be returned to the end
        /// user if the LLM response trips Model Armor filters.
        /// </summary>
        public readonly int? CustomLlmResponseSafetyErrorCode;
        /// <summary>
        /// Indicates the custom error message set by the user to be returned to the
        /// end user if the LLM response trips Model Armor filters.
        /// </summary>
        public readonly string? CustomLlmResponseSafetyErrorMessage;
        /// <summary>
        /// Indicates the custom error code set by the user to be returned to the end
        /// user by the service extension if the prompt trips Model Armor filters.
        /// </summary>
        public readonly int? CustomPromptSafetyErrorCode;
        /// <summary>
        /// Indicates the custom error message set by the user to be returned to the
        /// end user if the prompt trips Model Armor filters.
        /// </summary>
        public readonly string? CustomPromptSafetyErrorMessage;
        /// <summary>
        /// Possible values:
        /// INSPECT_ONLY
        /// INSPECT_AND_BLOCK
        /// </summary>
        public readonly string? EnforcementType;
        /// <summary>
        /// If true, partial detector failures should be ignored.
        /// </summary>
        public readonly bool? IgnorePartialInvocationFailures;
        /// <summary>
        /// If true, log sanitize operations.
        /// </summary>
        public readonly bool? LogSanitizeOperations;
        /// <summary>
        /// If true, log template crud operations.
        /// </summary>
        public readonly bool? LogTemplateOperations;
        /// <summary>
        /// Metadata to enable multi language detection via template.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.TemplateTemplateMetadataMultiLanguageDetection? MultiLanguageDetection;

        [OutputConstructor]
        private TemplateTemplateMetadata(
            int? customLlmResponseSafetyErrorCode,

            string? customLlmResponseSafetyErrorMessage,

            int? customPromptSafetyErrorCode,

            string? customPromptSafetyErrorMessage,

            string? enforcementType,

            bool? ignorePartialInvocationFailures,

            bool? logSanitizeOperations,

            bool? logTemplateOperations,

            Outputs.TemplateTemplateMetadataMultiLanguageDetection? multiLanguageDetection)
        {
            CustomLlmResponseSafetyErrorCode = customLlmResponseSafetyErrorCode;
            CustomLlmResponseSafetyErrorMessage = customLlmResponseSafetyErrorMessage;
            CustomPromptSafetyErrorCode = customPromptSafetyErrorCode;
            CustomPromptSafetyErrorMessage = customPromptSafetyErrorMessage;
            EnforcementType = enforcementType;
            IgnorePartialInvocationFailures = ignorePartialInvocationFailures;
            LogSanitizeOperations = logSanitizeOperations;
            LogTemplateOperations = logTemplateOperations;
            MultiLanguageDetection = multiLanguageDetection;
        }
    }
}
