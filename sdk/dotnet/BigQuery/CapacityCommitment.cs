// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.BigQuery
{
    /// <summary>
    /// Capacity commitment is a way to purchase compute capacity for BigQuery jobs (in the form of slots) with some committed period of usage. Annual commitments renew by default. Commitments can be removed after their commitment end time passes.
    /// 
    /// In order to remove annual commitment, its plan needs to be changed to monthly or flex first.
    /// 
    /// To get more information about CapacityCommitment, see:
    /// 
    /// * [API documentation](https://cloud.google.com/bigquery/docs/reference/reservations/rest/v1/projects.locations.capacityCommitments)
    /// * How-to Guides
    ///     * [Introduction to Reservations](https://cloud.google.com/bigquery/docs/reservations-intro)
    /// 
    /// ## Example Usage
    /// ### Bigquery Reservation Capacity Commitment Docs
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Gcp.BigQuery.CapacityCommitment("example", new()
    ///     {
    ///         CapacityCommitmentId = "example-commitment",
    ///         Location = "us-west1",
    ///         Plan = "FLEX",
    ///         SlotCount = 100,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// CapacityCommitment can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import gcp:bigquery/capacityCommitment:CapacityCommitment default {{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:bigquery/capacityCommitment:CapacityCommitment")]
    public partial class CapacityCommitment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The optional capacity commitment ID. Capacity commitment name will be generated automatically if this field is
        /// empty. This field must only contain lower case alphanumeric characters or dashes. The first and last character
        /// cannot be a dash. Max length is 64 characters. NOTE: this ID won't be kept if the capacity commitment is split
        /// or merged.
        /// </summary>
        [Output("capacityCommitmentId")]
        public Output<string?> CapacityCommitmentId { get; private set; } = null!;

        /// <summary>
        /// The start of the current commitment period. It is applicable only for ACTIVE capacity commitments.
        /// </summary>
        [Output("commitmentEndTime")]
        public Output<string> CommitmentEndTime { get; private set; } = null!;

        /// <summary>
        /// The start of the current commitment period. It is applicable only for ACTIVE capacity commitments.
        /// </summary>
        [Output("commitmentStartTime")]
        public Output<string> CommitmentStartTime { get; private set; } = null!;

        /// <summary>
        /// If true, fail the request if another project in the organization has a capacity commitment.
        /// </summary>
        [Output("enforceSingleAdminProjectPerOrg")]
        public Output<string?> EnforceSingleAdminProjectPerOrg { get; private set; } = null!;

        /// <summary>
        /// The geographic location where the transfer config should reside.
        /// Examples: US, EU, asia-northeast1. The default value is US.
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// The resource name of the capacity commitment, e.g., projects/myproject/locations/US/capacityCommitments/123
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Capacity commitment plan. Valid values are FLEX, TRIAL, MONTHLY, ANNUAL
        /// </summary>
        [Output("plan")]
        public Output<string> Plan { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The plan this capacity commitment is converted to after commitmentEndTime passes. Once the plan is changed, committed period is extended according to commitment plan. Only applicable for ANNUAL and TRIAL commitments.
        /// </summary>
        [Output("renewalPlan")]
        public Output<string?> RenewalPlan { get; private set; } = null!;

        /// <summary>
        /// Number of slots in this commitment.
        /// </summary>
        [Output("slotCount")]
        public Output<int> SlotCount { get; private set; } = null!;

        /// <summary>
        /// State of the commitment
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;


        /// <summary>
        /// Create a CapacityCommitment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CapacityCommitment(string name, CapacityCommitmentArgs args, CustomResourceOptions? options = null)
            : base("gcp:bigquery/capacityCommitment:CapacityCommitment", name, args ?? new CapacityCommitmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CapacityCommitment(string name, Input<string> id, CapacityCommitmentState? state = null, CustomResourceOptions? options = null)
            : base("gcp:bigquery/capacityCommitment:CapacityCommitment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CapacityCommitment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CapacityCommitment Get(string name, Input<string> id, CapacityCommitmentState? state = null, CustomResourceOptions? options = null)
        {
            return new CapacityCommitment(name, id, state, options);
        }
    }

    public sealed class CapacityCommitmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The optional capacity commitment ID. Capacity commitment name will be generated automatically if this field is
        /// empty. This field must only contain lower case alphanumeric characters or dashes. The first and last character
        /// cannot be a dash. Max length is 64 characters. NOTE: this ID won't be kept if the capacity commitment is split
        /// or merged.
        /// </summary>
        [Input("capacityCommitmentId")]
        public Input<string>? CapacityCommitmentId { get; set; }

        /// <summary>
        /// If true, fail the request if another project in the organization has a capacity commitment.
        /// </summary>
        [Input("enforceSingleAdminProjectPerOrg")]
        public Input<string>? EnforceSingleAdminProjectPerOrg { get; set; }

        /// <summary>
        /// The geographic location where the transfer config should reside.
        /// Examples: US, EU, asia-northeast1. The default value is US.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Capacity commitment plan. Valid values are FLEX, TRIAL, MONTHLY, ANNUAL
        /// </summary>
        [Input("plan", required: true)]
        public Input<string> Plan { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The plan this capacity commitment is converted to after commitmentEndTime passes. Once the plan is changed, committed period is extended according to commitment plan. Only applicable for ANNUAL and TRIAL commitments.
        /// </summary>
        [Input("renewalPlan")]
        public Input<string>? RenewalPlan { get; set; }

        /// <summary>
        /// Number of slots in this commitment.
        /// </summary>
        [Input("slotCount", required: true)]
        public Input<int> SlotCount { get; set; } = null!;

        public CapacityCommitmentArgs()
        {
        }
        public static new CapacityCommitmentArgs Empty => new CapacityCommitmentArgs();
    }

    public sealed class CapacityCommitmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The optional capacity commitment ID. Capacity commitment name will be generated automatically if this field is
        /// empty. This field must only contain lower case alphanumeric characters or dashes. The first and last character
        /// cannot be a dash. Max length is 64 characters. NOTE: this ID won't be kept if the capacity commitment is split
        /// or merged.
        /// </summary>
        [Input("capacityCommitmentId")]
        public Input<string>? CapacityCommitmentId { get; set; }

        /// <summary>
        /// The start of the current commitment period. It is applicable only for ACTIVE capacity commitments.
        /// </summary>
        [Input("commitmentEndTime")]
        public Input<string>? CommitmentEndTime { get; set; }

        /// <summary>
        /// The start of the current commitment period. It is applicable only for ACTIVE capacity commitments.
        /// </summary>
        [Input("commitmentStartTime")]
        public Input<string>? CommitmentStartTime { get; set; }

        /// <summary>
        /// If true, fail the request if another project in the organization has a capacity commitment.
        /// </summary>
        [Input("enforceSingleAdminProjectPerOrg")]
        public Input<string>? EnforceSingleAdminProjectPerOrg { get; set; }

        /// <summary>
        /// The geographic location where the transfer config should reside.
        /// Examples: US, EU, asia-northeast1. The default value is US.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The resource name of the capacity commitment, e.g., projects/myproject/locations/US/capacityCommitments/123
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Capacity commitment plan. Valid values are FLEX, TRIAL, MONTHLY, ANNUAL
        /// </summary>
        [Input("plan")]
        public Input<string>? Plan { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The plan this capacity commitment is converted to after commitmentEndTime passes. Once the plan is changed, committed period is extended according to commitment plan. Only applicable for ANNUAL and TRIAL commitments.
        /// </summary>
        [Input("renewalPlan")]
        public Input<string>? RenewalPlan { get; set; }

        /// <summary>
        /// Number of slots in this commitment.
        /// </summary>
        [Input("slotCount")]
        public Input<int>? SlotCount { get; set; }

        /// <summary>
        /// State of the commitment
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public CapacityCommitmentState()
        {
        }
        public static new CapacityCommitmentState Empty => new CapacityCommitmentState();
    }
}
