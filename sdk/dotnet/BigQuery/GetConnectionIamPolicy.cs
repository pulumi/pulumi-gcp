// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.BigQuery
{
    public static class GetConnectionIamPolicy
    {
        /// <summary>
        /// Retrieves the current IAM policy data for connection
        /// 
        /// 
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.BigQuery.GetConnectionIamPolicy.Invoke(new()
        ///     {
        ///         Project = google_bigquery_connection.Connection.Project,
        ///         Location = google_bigquery_connection.Connection.Location,
        ///         ConnectionId = google_bigquery_connection.Connection.Connection_id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetConnectionIamPolicyResult> InvokeAsync(GetConnectionIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConnectionIamPolicyResult>("gcp:bigquery/getConnectionIamPolicy:getConnectionIamPolicy", args ?? new GetConnectionIamPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the current IAM policy data for connection
        /// 
        /// 
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.BigQuery.GetConnectionIamPolicy.Invoke(new()
        ///     {
        ///         Project = google_bigquery_connection.Connection.Project,
        ///         Location = google_bigquery_connection.Connection.Location,
        ///         ConnectionId = google_bigquery_connection.Connection.Connection_id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetConnectionIamPolicyResult> Invoke(GetConnectionIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConnectionIamPolicyResult>("gcp:bigquery/getConnectionIamPolicy:getConnectionIamPolicy", args ?? new GetConnectionIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConnectionIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Optional connection id that should be assigned to the created connection.
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("connectionId", required: true)]
        public string ConnectionId { get; set; } = null!;

        /// <summary>
        /// The geographic location where the connection should reside.
        /// Cloud SQL instance must be in the same location as the connection
        /// with following exceptions: Cloud SQL us-central1 maps to BigQuery US, Cloud SQL europe-west1 maps to BigQuery EU.
        /// Examples: US, EU, asia-northeast1, us-central1, europe-west1.
        /// Spanner Connections same as spanner region
        /// AWS allowed regions are aws-us-east-1
        /// Azure allowed regions are azure-eastus2 Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("location")]
        public string? Location { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        public GetConnectionIamPolicyArgs()
        {
        }
        public static new GetConnectionIamPolicyArgs Empty => new GetConnectionIamPolicyArgs();
    }

    public sealed class GetConnectionIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Optional connection id that should be assigned to the created connection.
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("connectionId", required: true)]
        public Input<string> ConnectionId { get; set; } = null!;

        /// <summary>
        /// The geographic location where the connection should reside.
        /// Cloud SQL instance must be in the same location as the connection
        /// with following exceptions: Cloud SQL us-central1 maps to BigQuery US, Cloud SQL europe-west1 maps to BigQuery EU.
        /// Examples: US, EU, asia-northeast1, us-central1, europe-west1.
        /// Spanner Connections same as spanner region
        /// AWS allowed regions are aws-us-east-1
        /// Azure allowed regions are azure-eastus2 Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetConnectionIamPolicyInvokeArgs()
        {
        }
        public static new GetConnectionIamPolicyInvokeArgs Empty => new GetConnectionIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetConnectionIamPolicyResult
    {
        public readonly string ConnectionId;
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Location;
        /// <summary>
        /// (Required only by `gcp.bigquery.ConnectionIamPolicy`) The policy data generated by
        /// a `gcp.organizations.getIAMPolicy` data source.
        /// </summary>
        public readonly string PolicyData;
        public readonly string Project;

        [OutputConstructor]
        private GetConnectionIamPolicyResult(
            string connectionId,

            string etag,

            string id,

            string location,

            string policyData,

            string project)
        {
            ConnectionId = connectionId;
            Etag = etag;
            Id = id;
            Location = location;
            PolicyData = policyData;
            Project = project;
        }
    }
}
