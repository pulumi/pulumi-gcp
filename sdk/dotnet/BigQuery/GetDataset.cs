// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.BigQuery
{
    public static class GetDataset
    {
        /// <summary>
        /// Get information about a BigQuery dataset. For more information see
        /// the [official documentation](https://cloud.google.com/bigquery/docs)
        /// and [API](https://cloud.google.com/bigquery/docs/reference/rest/v2/datasets).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var dataset = Gcp.BigQuery.GetDataset.Invoke(new()
        ///     {
        ///         DatasetId = "my-bq-dataset",
        ///         Project = "my-project",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDatasetResult> InvokeAsync(GetDatasetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDatasetResult>("gcp:bigquery/getDataset:getDataset", args ?? new GetDatasetArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a BigQuery dataset. For more information see
        /// the [official documentation](https://cloud.google.com/bigquery/docs)
        /// and [API](https://cloud.google.com/bigquery/docs/reference/rest/v2/datasets).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var dataset = Gcp.BigQuery.GetDataset.Invoke(new()
        ///     {
        ///         DatasetId = "my-bq-dataset",
        ///         Project = "my-project",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDatasetResult> Invoke(GetDatasetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatasetResult>("gcp:bigquery/getDataset:getDataset", args ?? new GetDatasetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDatasetArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The dataset ID.
        /// </summary>
        [Input("datasetId", required: true)]
        public string DatasetId { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        public GetDatasetArgs()
        {
        }
        public static new GetDatasetArgs Empty => new GetDatasetArgs();
    }

    public sealed class GetDatasetInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The dataset ID.
        /// </summary>
        [Input("datasetId", required: true)]
        public Input<string> DatasetId { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetDatasetInvokeArgs()
        {
        }
        public static new GetDatasetInvokeArgs Empty => new GetDatasetInvokeArgs();
    }


    [OutputType]
    public sealed class GetDatasetResult
    {
        public readonly ImmutableArray<Outputs.GetDatasetAccessResult> Accesses;
        public readonly int CreationTime;
        public readonly string DatasetId;
        public readonly string DefaultCollation;
        public readonly ImmutableArray<Outputs.GetDatasetDefaultEncryptionConfigurationResult> DefaultEncryptionConfigurations;
        public readonly int DefaultPartitionExpirationMs;
        public readonly int DefaultTableExpirationMs;
        public readonly bool DeleteContentsOnDestroy;
        public readonly string Description;
        public readonly ImmutableDictionary<string, string> EffectiveLabels;
        public readonly string Etag;
        public readonly ImmutableArray<Outputs.GetDatasetExternalDatasetReferenceResult> ExternalDatasetReferences;
        public readonly string FriendlyName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool IsCaseInsensitive;
        public readonly ImmutableDictionary<string, string> Labels;
        public readonly int LastModifiedTime;
        public readonly string Location;
        public readonly string MaxTimeTravelHours;
        public readonly string? Project;
        public readonly ImmutableDictionary<string, string> PulumiLabels;
        public readonly ImmutableDictionary<string, string> ResourceTags;
        public readonly string SelfLink;
        public readonly string StorageBillingModel;

        [OutputConstructor]
        private GetDatasetResult(
            ImmutableArray<Outputs.GetDatasetAccessResult> accesses,

            int creationTime,

            string datasetId,

            string defaultCollation,

            ImmutableArray<Outputs.GetDatasetDefaultEncryptionConfigurationResult> defaultEncryptionConfigurations,

            int defaultPartitionExpirationMs,

            int defaultTableExpirationMs,

            bool deleteContentsOnDestroy,

            string description,

            ImmutableDictionary<string, string> effectiveLabels,

            string etag,

            ImmutableArray<Outputs.GetDatasetExternalDatasetReferenceResult> externalDatasetReferences,

            string friendlyName,

            string id,

            bool isCaseInsensitive,

            ImmutableDictionary<string, string> labels,

            int lastModifiedTime,

            string location,

            string maxTimeTravelHours,

            string? project,

            ImmutableDictionary<string, string> pulumiLabels,

            ImmutableDictionary<string, string> resourceTags,

            string selfLink,

            string storageBillingModel)
        {
            Accesses = accesses;
            CreationTime = creationTime;
            DatasetId = datasetId;
            DefaultCollation = defaultCollation;
            DefaultEncryptionConfigurations = defaultEncryptionConfigurations;
            DefaultPartitionExpirationMs = defaultPartitionExpirationMs;
            DefaultTableExpirationMs = defaultTableExpirationMs;
            DeleteContentsOnDestroy = deleteContentsOnDestroy;
            Description = description;
            EffectiveLabels = effectiveLabels;
            Etag = etag;
            ExternalDatasetReferences = externalDatasetReferences;
            FriendlyName = friendlyName;
            Id = id;
            IsCaseInsensitive = isCaseInsensitive;
            Labels = labels;
            LastModifiedTime = lastModifiedTime;
            Location = location;
            MaxTimeTravelHours = maxTimeTravelHours;
            Project = project;
            PulumiLabels = pulumiLabels;
            ResourceTags = resourceTags;
            SelfLink = selfLink;
            StorageBillingModel = storageBillingModel;
        }
    }
}
