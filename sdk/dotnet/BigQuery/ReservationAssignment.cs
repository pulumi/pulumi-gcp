// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.BigQuery
{
    /// <summary>
    /// The BigqueryReservation Assignment resource
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// Assignment can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import gcp:bigquery/reservationAssignment:ReservationAssignment default projects/{{project}}/locations/{{location}}/reservations/{{reservation}}/assignments/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:bigquery/reservationAssignment:ReservationAssignment default {{project}}/{{location}}/{{reservation}}/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:bigquery/reservationAssignment:ReservationAssignment default {{location}}/{{reservation}}/{{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:bigquery/reservationAssignment:ReservationAssignment")]
    public partial class ReservationAssignment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The resource which will use the reservation. E.g. projects/myproject, folders/123, organizations/456.
        /// </summary>
        [Output("assignee")]
        public Output<string> Assignee { get; private set; } = null!;

        /// <summary>
        /// Types of job, which could be specified when using the reservation. Possible values: JOB_TYPE_UNSPECIFIED, PIPELINE, QUERY
        /// </summary>
        [Output("jobType")]
        public Output<string> JobType { get; private set; } = null!;

        /// <summary>
        /// The location for the resource
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Output only. The resource name of the assignment.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The project for the resource
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The reservation for the resource
        /// </summary>
        [Output("reservation")]
        public Output<string> Reservation { get; private set; } = null!;

        /// <summary>
        /// Assignment will remain in PENDING state if no active capacity commitment is present. It will become ACTIVE when some capacity commitment becomes active. Possible values: STATE_UNSPECIFIED, PENDING, ACTIVE
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;


        /// <summary>
        /// Create a ReservationAssignment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ReservationAssignment(string name, ReservationAssignmentArgs args, CustomResourceOptions? options = null)
            : base("gcp:bigquery/reservationAssignment:ReservationAssignment", name, args ?? new ReservationAssignmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ReservationAssignment(string name, Input<string> id, ReservationAssignmentState? state = null, CustomResourceOptions? options = null)
            : base("gcp:bigquery/reservationAssignment:ReservationAssignment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ReservationAssignment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ReservationAssignment Get(string name, Input<string> id, ReservationAssignmentState? state = null, CustomResourceOptions? options = null)
        {
            return new ReservationAssignment(name, id, state, options);
        }
    }

    public sealed class ReservationAssignmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The resource which will use the reservation. E.g. projects/myproject, folders/123, organizations/456.
        /// </summary>
        [Input("assignee", required: true)]
        public Input<string> Assignee { get; set; } = null!;

        /// <summary>
        /// Types of job, which could be specified when using the reservation. Possible values: JOB_TYPE_UNSPECIFIED, PIPELINE, QUERY
        /// </summary>
        [Input("jobType", required: true)]
        public Input<string> JobType { get; set; } = null!;

        /// <summary>
        /// The location for the resource
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The project for the resource
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The reservation for the resource
        /// </summary>
        [Input("reservation", required: true)]
        public Input<string> Reservation { get; set; } = null!;

        public ReservationAssignmentArgs()
        {
        }
        public static new ReservationAssignmentArgs Empty => new ReservationAssignmentArgs();
    }

    public sealed class ReservationAssignmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The resource which will use the reservation. E.g. projects/myproject, folders/123, organizations/456.
        /// </summary>
        [Input("assignee")]
        public Input<string>? Assignee { get; set; }

        /// <summary>
        /// Types of job, which could be specified when using the reservation. Possible values: JOB_TYPE_UNSPECIFIED, PIPELINE, QUERY
        /// </summary>
        [Input("jobType")]
        public Input<string>? JobType { get; set; }

        /// <summary>
        /// The location for the resource
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Output only. The resource name of the assignment.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The project for the resource
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The reservation for the resource
        /// </summary>
        [Input("reservation")]
        public Input<string>? Reservation { get; set; }

        /// <summary>
        /// Assignment will remain in PENDING state if no active capacity commitment is present. It will become ACTIVE when some capacity commitment becomes active. Possible values: STATE_UNSPECIFIED, PENDING, ACTIVE
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public ReservationAssignmentState()
        {
        }
        public static new ReservationAssignmentState Empty => new ReservationAssignmentState();
    }
}
