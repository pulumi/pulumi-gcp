// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.BigQuery
{
    /// <summary>
    /// BigQuery Data Policy
    /// 
    /// To get more information about DataPolicy, see:
    /// 
    /// * [API documentation](https://cloud.google.com/bigquery/docs/reference/bigquerydatapolicy/rest/v2/projects.locations.dataPolicies)
    /// * How-to Guides
    ///     * [Official Documentation](https://cloud.google.com/bigquery/docs/column-data-masking-intro)
    /// 
    /// ## Example Usage
    /// 
    /// ### Bigquery Datapolicyv2 Datapolicy Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var basicDataPolicy = new Gcp.BigQuery.Datapolicyv2DataPolicy("basic_data_policy", new()
    ///     {
    ///         Location = "us-central1",
    ///         DataPolicyType = "RAW_DATA_ACCESS_POLICY",
    ///         DataPolicyId = "basic_data_policy",
    ///     });
    /// 
    /// });
    /// ```
    /// ### Bigquery Datapolicyv2 Datapolicy Predefined Masking
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var predefinedMaskingDataPolicy = new Gcp.BigQuery.Datapolicyv2DataPolicy("predefined_masking_data_policy", new()
    ///     {
    ///         Location = "us-central1",
    ///         DataPolicyType = "DATA_MASKING_POLICY",
    ///         DataMaskingPolicy = new Gcp.BigQuery.Inputs.Datapolicyv2DataPolicyDataMaskingPolicyArgs
    ///         {
    ///             PredefinedExpression = "SHA256",
    ///         },
    ///         DataPolicyId = "predefined_masking_data_policy",
    ///     });
    /// 
    /// });
    /// ```
    /// ### Bigquery Datapolicyv2 Datapolicy Routine
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new Gcp.BigQuery.Dataset("test", new()
    ///     {
    ///         DatasetId = "dataset_id",
    ///         Location = "us-central1",
    ///     });
    /// 
    ///     var customMaskingRoutine = new Gcp.BigQuery.Routine("custom_masking_routine", new()
    ///     {
    ///         DatasetId = test.DatasetId,
    ///         RoutineId = "custom_masking_routine",
    ///         RoutineType = "SCALAR_FUNCTION",
    ///         Language = "SQL",
    ///         DataGovernanceType = "DATA_MASKING",
    ///         DefinitionBody = "SAFE.REGEXP_REPLACE(ssn, '[0-9]', 'X')",
    ///         ReturnType = "{\"typeKind\" :  \"STRING\"}",
    ///         Arguments = new[]
    ///         {
    ///             new Gcp.BigQuery.Inputs.RoutineArgumentArgs
    ///             {
    ///                 Name = "ssn",
    ///                 DataType = "{\"typeKind\" :  \"STRING\"}",
    ///             },
    ///         },
    ///     });
    /// 
    ///     var routineDataPolicy = new Gcp.BigQuery.Datapolicyv2DataPolicy("routine_data_policy", new()
    ///     {
    ///         Location = "us-central1",
    ///         DataPolicyId = "routine_data_policy",
    ///         DataPolicyType = "DATA_MASKING_POLICY",
    ///         DataMaskingPolicy = new Gcp.BigQuery.Inputs.Datapolicyv2DataPolicyDataMaskingPolicyArgs
    ///         {
    ///             Routine = customMaskingRoutine.Id,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Bigquery Datapolicyv2 Datapolicy Withgrantees
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var dataPolicyWithGrantees = new Gcp.BigQuery.Datapolicyv2DataPolicy("data_policy_with_grantees", new()
    ///     {
    ///         Location = "us-central1",
    ///         DataPolicyType = "RAW_DATA_ACCESS_POLICY",
    ///         Grantees = new[]
    ///         {
    ///             "principal://goog/subject/jane@example.com",
    ///         },
    ///         DataPolicyId = "data_policy_with_grantees",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// DataPolicy can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/locations/{{location}}/dataPolicies/{{data_policy_id}}`
    /// 
    /// * `{{project}}/{{location}}/{{data_policy_id}}`
    /// 
    /// * `{{location}}/{{data_policy_id}}`
    /// 
    /// When using the `pulumi import` command, DataPolicy can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:bigquery/datapolicyv2DataPolicy:Datapolicyv2DataPolicy default projects/{{project}}/locations/{{location}}/dataPolicies/{{data_policy_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:bigquery/datapolicyv2DataPolicy:Datapolicyv2DataPolicy default {{project}}/{{location}}/{{data_policy_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:bigquery/datapolicyv2DataPolicy:Datapolicyv2DataPolicy default {{location}}/{{data_policy_id}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:bigquery/datapolicyv2DataPolicy:Datapolicyv2DataPolicy")]
    public partial class Datapolicyv2DataPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The policy used to specify data masking rule.
        /// Structure is documented below.
        /// </summary>
        [Output("dataMaskingPolicy")]
        public Output<Outputs.Datapolicyv2DataPolicyDataMaskingPolicy?> DataMaskingPolicy { get; private set; } = null!;

        /// <summary>
        /// User-assigned (human readable) ID of the data policy that needs to be
        /// unique within a project. Used as {data_policy_id} in part of the resource
        /// name.
        /// </summary>
        [Output("dataPolicyId")]
        public Output<string> DataPolicyId { get; private set; } = null!;

        /// <summary>
        /// Type of data policy.
        /// Possible values:
        /// DATA_MASKING_POLICY
        /// RAW_DATA_ACCESS_POLICY
        /// COLUMN_LEVEL_SECURITY_POLICY
        /// </summary>
        [Output("dataPolicyType")]
        public Output<string> DataPolicyType { get; private set; } = null!;

        /// <summary>
        /// The etag for this Data Policy.
        /// This field is used for UpdateDataPolicy calls. If Data Policy exists, this
        /// field is required and must match the server's etag. It will also be
        /// populated in the response of GetDataPolicy, CreateDataPolicy, and
        /// UpdateDataPolicy calls.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// The list of IAM principals that have Fine Grained Access to the underlying
        /// data goverened by this data policy.
        /// Uses the [IAM V2 principal
        /// syntax](https://cloud.google.com/iam/docs/principal-identifiers#v2) Only
        /// supports principal types users, groups, serviceaccounts, cloudidentity.
        /// This field is supported in V2 Data Policy only. In case of V1 data policies
        /// (i.e. verion = 1 and policy_tag is set), this field is not populated.
        /// </summary>
        [Output("grantees")]
        public Output<ImmutableArray<string>> Grantees { get; private set; } = null!;

        /// <summary>
        /// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Identifier. Resource name of this data policy, in the format of
        /// `projects/{project_number}/locations/{location_id}/dataPolicies/{data_policy_id}`.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Policy tag resource name, in the format of
        /// `projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{policyTag_id}`.
        /// policy_tag is supported only for V1 data policies.
        /// </summary>
        [Output("policyTag")]
        public Output<string> PolicyTag { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The version of the Data Policy resource.
        /// Possible values:
        /// V1
        /// V2
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a Datapolicyv2DataPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Datapolicyv2DataPolicy(string name, Datapolicyv2DataPolicyArgs args, CustomResourceOptions? options = null)
            : base("gcp:bigquery/datapolicyv2DataPolicy:Datapolicyv2DataPolicy", name, args ?? new Datapolicyv2DataPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Datapolicyv2DataPolicy(string name, Input<string> id, Datapolicyv2DataPolicyState? state = null, CustomResourceOptions? options = null)
            : base("gcp:bigquery/datapolicyv2DataPolicy:Datapolicyv2DataPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Datapolicyv2DataPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Datapolicyv2DataPolicy Get(string name, Input<string> id, Datapolicyv2DataPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new Datapolicyv2DataPolicy(name, id, state, options);
        }
    }

    public sealed class Datapolicyv2DataPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The policy used to specify data masking rule.
        /// Structure is documented below.
        /// </summary>
        [Input("dataMaskingPolicy")]
        public Input<Inputs.Datapolicyv2DataPolicyDataMaskingPolicyArgs>? DataMaskingPolicy { get; set; }

        /// <summary>
        /// User-assigned (human readable) ID of the data policy that needs to be
        /// unique within a project. Used as {data_policy_id} in part of the resource
        /// name.
        /// </summary>
        [Input("dataPolicyId", required: true)]
        public Input<string> DataPolicyId { get; set; } = null!;

        /// <summary>
        /// Type of data policy.
        /// Possible values:
        /// DATA_MASKING_POLICY
        /// RAW_DATA_ACCESS_POLICY
        /// COLUMN_LEVEL_SECURITY_POLICY
        /// </summary>
        [Input("dataPolicyType", required: true)]
        public Input<string> DataPolicyType { get; set; } = null!;

        /// <summary>
        /// The etag for this Data Policy.
        /// This field is used for UpdateDataPolicy calls. If Data Policy exists, this
        /// field is required and must match the server's etag. It will also be
        /// populated in the response of GetDataPolicy, CreateDataPolicy, and
        /// UpdateDataPolicy calls.
        /// </summary>
        [Input("etag")]
        public Input<string>? Etag { get; set; }

        [Input("grantees")]
        private InputList<string>? _grantees;

        /// <summary>
        /// The list of IAM principals that have Fine Grained Access to the underlying
        /// data goverened by this data policy.
        /// Uses the [IAM V2 principal
        /// syntax](https://cloud.google.com/iam/docs/principal-identifiers#v2) Only
        /// supports principal types users, groups, serviceaccounts, cloudidentity.
        /// This field is supported in V2 Data Policy only. In case of V1 data policies
        /// (i.e. verion = 1 and policy_tag is set), this field is not populated.
        /// </summary>
        public InputList<string> Grantees
        {
            get => _grantees ?? (_grantees = new InputList<string>());
            set => _grantees = value;
        }

        /// <summary>
        /// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public Datapolicyv2DataPolicyArgs()
        {
        }
        public static new Datapolicyv2DataPolicyArgs Empty => new Datapolicyv2DataPolicyArgs();
    }

    public sealed class Datapolicyv2DataPolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The policy used to specify data masking rule.
        /// Structure is documented below.
        /// </summary>
        [Input("dataMaskingPolicy")]
        public Input<Inputs.Datapolicyv2DataPolicyDataMaskingPolicyGetArgs>? DataMaskingPolicy { get; set; }

        /// <summary>
        /// User-assigned (human readable) ID of the data policy that needs to be
        /// unique within a project. Used as {data_policy_id} in part of the resource
        /// name.
        /// </summary>
        [Input("dataPolicyId")]
        public Input<string>? DataPolicyId { get; set; }

        /// <summary>
        /// Type of data policy.
        /// Possible values:
        /// DATA_MASKING_POLICY
        /// RAW_DATA_ACCESS_POLICY
        /// COLUMN_LEVEL_SECURITY_POLICY
        /// </summary>
        [Input("dataPolicyType")]
        public Input<string>? DataPolicyType { get; set; }

        /// <summary>
        /// The etag for this Data Policy.
        /// This field is used for UpdateDataPolicy calls. If Data Policy exists, this
        /// field is required and must match the server's etag. It will also be
        /// populated in the response of GetDataPolicy, CreateDataPolicy, and
        /// UpdateDataPolicy calls.
        /// </summary>
        [Input("etag")]
        public Input<string>? Etag { get; set; }

        [Input("grantees")]
        private InputList<string>? _grantees;

        /// <summary>
        /// The list of IAM principals that have Fine Grained Access to the underlying
        /// data goverened by this data policy.
        /// Uses the [IAM V2 principal
        /// syntax](https://cloud.google.com/iam/docs/principal-identifiers#v2) Only
        /// supports principal types users, groups, serviceaccounts, cloudidentity.
        /// This field is supported in V2 Data Policy only. In case of V1 data policies
        /// (i.e. verion = 1 and policy_tag is set), this field is not populated.
        /// </summary>
        public InputList<string> Grantees
        {
            get => _grantees ?? (_grantees = new InputList<string>());
            set => _grantees = value;
        }

        /// <summary>
        /// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Identifier. Resource name of this data policy, in the format of
        /// `projects/{project_number}/locations/{location_id}/dataPolicies/{data_policy_id}`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Policy tag resource name, in the format of
        /// `projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{policyTag_id}`.
        /// policy_tag is supported only for V1 data policies.
        /// </summary>
        [Input("policyTag")]
        public Input<string>? PolicyTag { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The version of the Data Policy resource.
        /// Possible values:
        /// V1
        /// V2
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public Datapolicyv2DataPolicyState()
        {
        }
        public static new Datapolicyv2DataPolicyState Empty => new Datapolicyv2DataPolicyState();
    }
}
