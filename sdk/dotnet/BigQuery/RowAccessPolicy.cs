// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.BigQuery
{
    /// <summary>
    /// Represents access on a subset of rows on the specified table, defined by its filter predicate. Access to the subset of rows is controlled by its IAM policy.
    /// 
    /// ## Example Usage
    /// 
    /// ### Bigquery Row Access Policy Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Gcp.BigQuery.Dataset("example", new()
    ///     {
    ///         DatasetId = "dataset_id",
    ///         Location = "US",
    ///     });
    /// 
    ///     var exampleTable = new Gcp.BigQuery.Table("example", new()
    ///     {
    ///         DeletionProtection = false,
    ///         DatasetId = example.DatasetId,
    ///         TableId = "table_id",
    ///     });
    /// 
    ///     var exampleRowAccessPolicy = new Gcp.BigQuery.RowAccessPolicy("example", new()
    ///     {
    ///         DatasetId = example.DatasetId,
    ///         TableId = exampleTable.TableId,
    ///         PolicyId = "policy_id",
    ///         FilterPredicate = "nullable_field is not NULL",
    ///         Grantees = new[]
    ///         {
    ///             "domain:google.com",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// RowAccessPolicy can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/datasets/{{dataset_id}}/tables/{{table_id}}/rowAccessPolicies/{{policy_id}}`
    /// 
    /// * `{{project}}/{{dataset_id}}/{{table_id}}/{{policy_id}}`
    /// 
    /// * `{{dataset_id}}/{{table_id}}/{{policy_id}}`
    /// 
    /// When using the `pulumi import` command, RowAccessPolicy can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:bigquery/rowAccessPolicy:RowAccessPolicy default projects/{{project}}/datasets/{{dataset_id}}/tables/{{table_id}}/rowAccessPolicies/{{policy_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:bigquery/rowAccessPolicy:RowAccessPolicy default {{project}}/{{dataset_id}}/{{table_id}}/{{policy_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:bigquery/rowAccessPolicy:RowAccessPolicy default {{dataset_id}}/{{table_id}}/{{policy_id}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:bigquery/rowAccessPolicy:RowAccessPolicy")]
    public partial class RowAccessPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The time when this row access policy was created, in milliseconds since
        /// the epoch.
        /// </summary>
        [Output("creationTime")]
        public Output<string> CreationTime { get; private set; } = null!;

        /// <summary>
        /// The ID of the dataset containing this row access policy.
        /// </summary>
        [Output("datasetId")]
        public Output<string> DatasetId { get; private set; } = null!;

        /// <summary>
        /// A SQL boolean expression that represents the rows defined by this row
        /// access policy, similar to the boolean expression in a WHERE clause of a
        /// SELECT query on a table.
        /// References to other tables, routines, and temporary functions are not
        /// supported.
        /// Examples: region="EU"
        /// date_field = CAST('2019-9-27' as DATE)
        /// nullable_field is not NULL
        /// numeric_field BETWEEN 1.0 AND 5.0
        /// 
        /// 
        /// - - -
        /// </summary>
        [Output("filterPredicate")]
        public Output<string> FilterPredicate { get; private set; } = null!;

        /// <summary>
        /// Input only. The optional list of iam_member users or groups that specifies the initial
        /// members that the row-level access policy should be created with.
        /// grantees types:
        /// - "user:alice@example.com": An email address that represents a specific
        /// Google account.
        /// - "serviceAccount:my-other-app@appspot.gserviceaccount.com": An email
        /// address that represents a service account.
        /// - "group:admins@example.com": An email address that represents a Google
        /// group.
        /// - "domain:example.com":The Google Workspace domain (primary) that
        /// represents all the users of that domain.
        /// - "allAuthenticatedUsers": A special identifier that represents all service
        /// accounts and all users on the internet who have authenticated with a Google
        /// Account. This identifier includes accounts that aren't connected to a
        /// Google Workspace or Cloud Identity domain, such as personal Gmail accounts.
        /// Users who aren't authenticated, such as anonymous visitors, aren't
        /// included.
        /// - "allUsers":A special identifier that represents anyone who is on
        /// the internet, including authenticated and unauthenticated users. Because
        /// BigQuery requires authentication before a user can access the service,
        /// allUsers includes only authenticated users.
        /// </summary>
        [Output("grantees")]
        public Output<ImmutableArray<string>> Grantees { get; private set; } = null!;

        /// <summary>
        /// The time when this row access policy was last modified, in milliseconds
        /// since the epoch.
        /// </summary>
        [Output("lastModifiedTime")]
        public Output<string> LastModifiedTime { get; private set; } = null!;

        /// <summary>
        /// The ID of the row access policy. The ID must contain only
        /// letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum
        /// length is 256 characters.
        /// </summary>
        [Output("policyId")]
        public Output<string> PolicyId { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The ID of the table containing this row access policy.
        /// </summary>
        [Output("tableId")]
        public Output<string> TableId { get; private set; } = null!;


        /// <summary>
        /// Create a RowAccessPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RowAccessPolicy(string name, RowAccessPolicyArgs args, CustomResourceOptions? options = null)
            : base("gcp:bigquery/rowAccessPolicy:RowAccessPolicy", name, args ?? new RowAccessPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RowAccessPolicy(string name, Input<string> id, RowAccessPolicyState? state = null, CustomResourceOptions? options = null)
            : base("gcp:bigquery/rowAccessPolicy:RowAccessPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RowAccessPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RowAccessPolicy Get(string name, Input<string> id, RowAccessPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new RowAccessPolicy(name, id, state, options);
        }
    }

    public sealed class RowAccessPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the dataset containing this row access policy.
        /// </summary>
        [Input("datasetId", required: true)]
        public Input<string> DatasetId { get; set; } = null!;

        /// <summary>
        /// A SQL boolean expression that represents the rows defined by this row
        /// access policy, similar to the boolean expression in a WHERE clause of a
        /// SELECT query on a table.
        /// References to other tables, routines, and temporary functions are not
        /// supported.
        /// Examples: region="EU"
        /// date_field = CAST('2019-9-27' as DATE)
        /// nullable_field is not NULL
        /// numeric_field BETWEEN 1.0 AND 5.0
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("filterPredicate", required: true)]
        public Input<string> FilterPredicate { get; set; } = null!;

        [Input("grantees")]
        private InputList<string>? _grantees;

        /// <summary>
        /// Input only. The optional list of iam_member users or groups that specifies the initial
        /// members that the row-level access policy should be created with.
        /// grantees types:
        /// - "user:alice@example.com": An email address that represents a specific
        /// Google account.
        /// - "serviceAccount:my-other-app@appspot.gserviceaccount.com": An email
        /// address that represents a service account.
        /// - "group:admins@example.com": An email address that represents a Google
        /// group.
        /// - "domain:example.com":The Google Workspace domain (primary) that
        /// represents all the users of that domain.
        /// - "allAuthenticatedUsers": A special identifier that represents all service
        /// accounts and all users on the internet who have authenticated with a Google
        /// Account. This identifier includes accounts that aren't connected to a
        /// Google Workspace or Cloud Identity domain, such as personal Gmail accounts.
        /// Users who aren't authenticated, such as anonymous visitors, aren't
        /// included.
        /// - "allUsers":A special identifier that represents anyone who is on
        /// the internet, including authenticated and unauthenticated users. Because
        /// BigQuery requires authentication before a user can access the service,
        /// allUsers includes only authenticated users.
        /// </summary>
        public InputList<string> Grantees
        {
            get => _grantees ?? (_grantees = new InputList<string>());
            set => _grantees = value;
        }

        /// <summary>
        /// The ID of the row access policy. The ID must contain only
        /// letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum
        /// length is 256 characters.
        /// </summary>
        [Input("policyId", required: true)]
        public Input<string> PolicyId { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The ID of the table containing this row access policy.
        /// </summary>
        [Input("tableId", required: true)]
        public Input<string> TableId { get; set; } = null!;

        public RowAccessPolicyArgs()
        {
        }
        public static new RowAccessPolicyArgs Empty => new RowAccessPolicyArgs();
    }

    public sealed class RowAccessPolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The time when this row access policy was created, in milliseconds since
        /// the epoch.
        /// </summary>
        [Input("creationTime")]
        public Input<string>? CreationTime { get; set; }

        /// <summary>
        /// The ID of the dataset containing this row access policy.
        /// </summary>
        [Input("datasetId")]
        public Input<string>? DatasetId { get; set; }

        /// <summary>
        /// A SQL boolean expression that represents the rows defined by this row
        /// access policy, similar to the boolean expression in a WHERE clause of a
        /// SELECT query on a table.
        /// References to other tables, routines, and temporary functions are not
        /// supported.
        /// Examples: region="EU"
        /// date_field = CAST('2019-9-27' as DATE)
        /// nullable_field is not NULL
        /// numeric_field BETWEEN 1.0 AND 5.0
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("filterPredicate")]
        public Input<string>? FilterPredicate { get; set; }

        [Input("grantees")]
        private InputList<string>? _grantees;

        /// <summary>
        /// Input only. The optional list of iam_member users or groups that specifies the initial
        /// members that the row-level access policy should be created with.
        /// grantees types:
        /// - "user:alice@example.com": An email address that represents a specific
        /// Google account.
        /// - "serviceAccount:my-other-app@appspot.gserviceaccount.com": An email
        /// address that represents a service account.
        /// - "group:admins@example.com": An email address that represents a Google
        /// group.
        /// - "domain:example.com":The Google Workspace domain (primary) that
        /// represents all the users of that domain.
        /// - "allAuthenticatedUsers": A special identifier that represents all service
        /// accounts and all users on the internet who have authenticated with a Google
        /// Account. This identifier includes accounts that aren't connected to a
        /// Google Workspace or Cloud Identity domain, such as personal Gmail accounts.
        /// Users who aren't authenticated, such as anonymous visitors, aren't
        /// included.
        /// - "allUsers":A special identifier that represents anyone who is on
        /// the internet, including authenticated and unauthenticated users. Because
        /// BigQuery requires authentication before a user can access the service,
        /// allUsers includes only authenticated users.
        /// </summary>
        public InputList<string> Grantees
        {
            get => _grantees ?? (_grantees = new InputList<string>());
            set => _grantees = value;
        }

        /// <summary>
        /// The time when this row access policy was last modified, in milliseconds
        /// since the epoch.
        /// </summary>
        [Input("lastModifiedTime")]
        public Input<string>? LastModifiedTime { get; set; }

        /// <summary>
        /// The ID of the row access policy. The ID must contain only
        /// letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum
        /// length is 256 characters.
        /// </summary>
        [Input("policyId")]
        public Input<string>? PolicyId { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The ID of the table containing this row access policy.
        /// </summary>
        [Input("tableId")]
        public Input<string>? TableId { get; set; }

        public RowAccessPolicyState()
        {
        }
        public static new RowAccessPolicyState Empty => new RowAccessPolicyState();
    }
}
