// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.DatabaseMigrationService.Inputs
{

    public sealed class ConnectionProfilePostgresqlSslArgs : global::Pulumi.ResourceArgs
    {
        [Input("caCertificate", required: true)]
        private Input<string>? _caCertificate;

        /// <summary>
        /// Required. Input only. The x509 PEM-encoded certificate of the CA that signed the source database server's certificate.
        /// The replica will use this certificate to verify it's connecting to the right host.
        /// **Note**: This property is sensitive and will not be displayed in the plan.
        /// </summary>
        public Input<string>? CaCertificate
        {
            get => _caCertificate;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _caCertificate = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("clientCertificate")]
        private Input<string>? _clientCertificate;

        /// <summary>
        /// Input only. The x509 PEM-encoded certificate that will be used by the replica to authenticate against the source database server.
        /// If this field is used then the 'clientKey' field is mandatory
        /// **Note**: This property is sensitive and will not be displayed in the plan.
        /// </summary>
        public Input<string>? ClientCertificate
        {
            get => _clientCertificate;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientCertificate = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("clientKey")]
        private Input<string>? _clientKey;

        /// <summary>
        /// Input only. The unencrypted PKCS#1 or PKCS#8 PEM-encoded private key associated with the Client Certificate.
        /// If this field is used then the 'clientCertificate' field is mandatory.
        /// **Note**: This property is sensitive and will not be displayed in the plan.
        /// </summary>
        public Input<string>? ClientKey
        {
            get => _clientKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _clientKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// (Output)
        /// The current connection profile state.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public ConnectionProfilePostgresqlSslArgs()
        {
        }
        public static new ConnectionProfilePostgresqlSslArgs Empty => new ConnectionProfilePostgresqlSslArgs();
    }
}
