// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.DatabaseMigrationService.Outputs
{

    [OutputType]
    public sealed class ConnectionProfileMysqlSsl
    {
        /// <summary>
        /// Required. Input only. The x509 PEM-encoded certificate of the CA that signed the source database server's certificate.
        /// The replica will use this certificate to verify it's connecting to the right host.
        /// **Note**: This property is sensitive and will not be displayed in the plan.
        /// </summary>
        public readonly string CaCertificate;
        /// <summary>
        /// Input only. The x509 PEM-encoded certificate that will be used by the replica to authenticate against the source database server.
        /// If this field is used then the 'clientKey' field is mandatory
        /// **Note**: This property is sensitive and will not be displayed in the plan.
        /// </summary>
        public readonly string? ClientCertificate;
        /// <summary>
        /// Input only. The unencrypted PKCS#1 or PKCS#8 PEM-encoded private key associated with the Client Certificate.
        /// If this field is used then the 'clientCertificate' field is mandatory.
        /// **Note**: This property is sensitive and will not be displayed in the plan.
        /// </summary>
        public readonly string? ClientKey;
        /// <summary>
        /// (Output)
        /// The current connection profile state.
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private ConnectionProfileMysqlSsl(
            string caCertificate,

            string? clientCertificate,

            string? clientKey,

            string? type)
        {
            CaCertificate = caCertificate;
            ClientCertificate = clientCertificate;
            ClientKey = clientKey;
            Type = type;
        }
    }
}
