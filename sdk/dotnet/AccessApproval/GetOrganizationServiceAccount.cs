// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.AccessApproval
{
    public static class GetOrganizationServiceAccount
    {
        /// <summary>
        /// Get the email address of an organization's Access Approval service account.
        /// 
        /// Each Google Cloud organization has a unique service account used by Access Approval.
        /// When using Access Approval with a
        /// [custom signing key](https://cloud.google.com/cloud-provider-access-management/access-approval/docs/review-approve-access-requests-custom-keys),
        /// this account needs to be granted the `cloudkms.signerVerifier` IAM role on the
        /// Cloud KMS key used to sign approvals.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var serviceAccount = Gcp.AccessApproval.GetOrganizationServiceAccount.Invoke(new()
        ///     {
        ///         OrganizationId = "my-organization",
        ///     });
        /// 
        ///     var iam = new Gcp.Kms.CryptoKeyIAMMember("iam", new()
        ///     {
        ///         CryptoKeyId = google_kms_crypto_key.Crypto_key.Id,
        ///         Role = "roles/cloudkms.signerVerifier",
        ///         Member = $"serviceAccount:{serviceAccount.Apply(getOrganizationServiceAccountResult =&gt; getOrganizationServiceAccountResult.AccountEmail)}",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetOrganizationServiceAccountResult> InvokeAsync(GetOrganizationServiceAccountArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetOrganizationServiceAccountResult>("gcp:accessapproval/getOrganizationServiceAccount:getOrganizationServiceAccount", args ?? new GetOrganizationServiceAccountArgs(), options.WithDefaults());

        /// <summary>
        /// Get the email address of an organization's Access Approval service account.
        /// 
        /// Each Google Cloud organization has a unique service account used by Access Approval.
        /// When using Access Approval with a
        /// [custom signing key](https://cloud.google.com/cloud-provider-access-management/access-approval/docs/review-approve-access-requests-custom-keys),
        /// this account needs to be granted the `cloudkms.signerVerifier` IAM role on the
        /// Cloud KMS key used to sign approvals.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var serviceAccount = Gcp.AccessApproval.GetOrganizationServiceAccount.Invoke(new()
        ///     {
        ///         OrganizationId = "my-organization",
        ///     });
        /// 
        ///     var iam = new Gcp.Kms.CryptoKeyIAMMember("iam", new()
        ///     {
        ///         CryptoKeyId = google_kms_crypto_key.Crypto_key.Id,
        ///         Role = "roles/cloudkms.signerVerifier",
        ///         Member = $"serviceAccount:{serviceAccount.Apply(getOrganizationServiceAccountResult =&gt; getOrganizationServiceAccountResult.AccountEmail)}",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetOrganizationServiceAccountResult> Invoke(GetOrganizationServiceAccountInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetOrganizationServiceAccountResult>("gcp:accessapproval/getOrganizationServiceAccount:getOrganizationServiceAccount", args ?? new GetOrganizationServiceAccountInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOrganizationServiceAccountArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The organization ID the service account was created for.
        /// </summary>
        [Input("organizationId", required: true)]
        public string OrganizationId { get; set; } = null!;

        public GetOrganizationServiceAccountArgs()
        {
        }
        public static new GetOrganizationServiceAccountArgs Empty => new GetOrganizationServiceAccountArgs();
    }

    public sealed class GetOrganizationServiceAccountInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The organization ID the service account was created for.
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        public GetOrganizationServiceAccountInvokeArgs()
        {
        }
        public static new GetOrganizationServiceAccountInvokeArgs Empty => new GetOrganizationServiceAccountInvokeArgs();
    }


    [OutputType]
    public sealed class GetOrganizationServiceAccountResult
    {
        /// <summary>
        /// The email address of the service account. This value is
        /// often used to refer to the service account in order to grant IAM permissions.
        /// </summary>
        public readonly string AccountEmail;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The Access Approval service account resource name. Format is "organizations/{organization_id}/serviceAccount".
        /// </summary>
        public readonly string Name;
        public readonly string OrganizationId;

        [OutputConstructor]
        private GetOrganizationServiceAccountResult(
            string accountEmail,

            string id,

            string name,

            string organizationId)
        {
            AccountEmail = accountEmail;
            Id = id;
            Name = name;
            OrganizationId = organizationId;
        }
    }
}
