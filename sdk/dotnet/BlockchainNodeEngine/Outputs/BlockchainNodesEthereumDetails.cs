// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.BlockchainNodeEngine.Outputs
{

    [OutputType]
    public sealed class BlockchainNodesEthereumDetails
    {
        /// <summary>
        /// (Output)
        /// User-provided key-value pairs
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.BlockchainNodesEthereumDetailsAdditionalEndpoint> AdditionalEndpoints;
        /// <summary>
        /// Enables JSON-RPC access to functions in the admin namespace. Defaults to false.
        /// </summary>
        public readonly bool? ApiEnableAdmin;
        /// <summary>
        /// Enables JSON-RPC access to functions in the debug namespace. Defaults to false.
        /// </summary>
        public readonly bool? ApiEnableDebug;
        /// <summary>
        /// The consensus client
        /// Possible values are: `CONSENSUS_CLIENT_UNSPECIFIED`, `LIGHTHOUSE`.
        /// </summary>
        public readonly string? ConsensusClient;
        /// <summary>
        /// The execution client
        /// Possible values are: `EXECUTION_CLIENT_UNSPECIFIED`, `GETH`, `ERIGON`.
        /// </summary>
        public readonly string? ExecutionClient;
        /// <summary>
        /// User-provided key-value pairs
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.BlockchainNodesEthereumDetailsGethDetails? GethDetails;
        /// <summary>
        /// The Ethereum environment being accessed.
        /// Possible values are: `MAINNET`, `TESTNET_GOERLI_PRATER`, `TESTNET_SEPOLIA`.
        /// </summary>
        public readonly string? Network;
        /// <summary>
        /// The type of Ethereum node.
        /// Possible values are: `LIGHT`, `FULL`, `ARCHIVE`.
        /// </summary>
        public readonly string? NodeType;
        /// <summary>
        /// Configuration for validator-related parameters on the beacon client, and for any managed validator client.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.BlockchainNodesEthereumDetailsValidatorConfig? ValidatorConfig;

        [OutputConstructor]
        private BlockchainNodesEthereumDetails(
            ImmutableArray<Outputs.BlockchainNodesEthereumDetailsAdditionalEndpoint> additionalEndpoints,

            bool? apiEnableAdmin,

            bool? apiEnableDebug,

            string? consensusClient,

            string? executionClient,

            Outputs.BlockchainNodesEthereumDetailsGethDetails? gethDetails,

            string? network,

            string? nodeType,

            Outputs.BlockchainNodesEthereumDetailsValidatorConfig? validatorConfig)
        {
            AdditionalEndpoints = additionalEndpoints;
            ApiEnableAdmin = apiEnableAdmin;
            ApiEnableDebug = apiEnableDebug;
            ConsensusClient = consensusClient;
            ExecutionClient = executionClient;
            GethDetails = gethDetails;
            Network = network;
            NodeType = nodeType;
            ValidatorConfig = validatorConfig;
        }
    }
}
