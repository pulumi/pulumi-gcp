// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.VMwareEngine
{
    public static class GetNetworkPeering
    {
        /// <summary>
        /// Use this data source to get details about a network peering resource.
        /// 
        /// To get more information about network peering, see:
        /// * [API documentation](https://cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.networkPeerings)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myNetworkPeering = Gcp.VMwareEngine.GetNetworkPeering.Invoke(new()
        ///     {
        ///         Name = "my-network-peering",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNetworkPeeringResult> InvokeAsync(GetNetworkPeeringArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNetworkPeeringResult>("gcp:vmwareengine/getNetworkPeering:getNetworkPeering", args ?? new GetNetworkPeeringArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get details about a network peering resource.
        /// 
        /// To get more information about network peering, see:
        /// * [API documentation](https://cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.networkPeerings)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myNetworkPeering = Gcp.VMwareEngine.GetNetworkPeering.Invoke(new()
        ///     {
        ///         Name = "my-network-peering",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNetworkPeeringResult> Invoke(GetNetworkPeeringInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkPeeringResult>("gcp:vmwareengine/getNetworkPeering:getNetworkPeering", args ?? new GetNetworkPeeringInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNetworkPeeringArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the resource.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetNetworkPeeringArgs()
        {
        }
        public static new GetNetworkPeeringArgs Empty => new GetNetworkPeeringArgs();
    }

    public sealed class GetNetworkPeeringInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the resource.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetNetworkPeeringInvokeArgs()
        {
        }
        public static new GetNetworkPeeringInvokeArgs Empty => new GetNetworkPeeringInvokeArgs();
    }


    [OutputType]
    public sealed class GetNetworkPeeringResult
    {
        public readonly string CreateTime;
        public readonly string Description;
        public readonly bool ExportCustomRoutes;
        public readonly bool ExportCustomRoutesWithPublicIp;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool ImportCustomRoutes;
        public readonly bool ImportCustomRoutesWithPublicIp;
        public readonly string Name;
        public readonly string PeerNetwork;
        public readonly string PeerNetworkType;
        public readonly string? Project;
        public readonly string State;
        public readonly string StateDetails;
        public readonly string Uid;
        public readonly string UpdateTime;
        public readonly string VmwareEngineNetwork;
        public readonly string VmwareEngineNetworkCanonical;

        [OutputConstructor]
        private GetNetworkPeeringResult(
            string createTime,

            string description,

            bool exportCustomRoutes,

            bool exportCustomRoutesWithPublicIp,

            string id,

            bool importCustomRoutes,

            bool importCustomRoutesWithPublicIp,

            string name,

            string peerNetwork,

            string peerNetworkType,

            string? project,

            string state,

            string stateDetails,

            string uid,

            string updateTime,

            string vmwareEngineNetwork,

            string vmwareEngineNetworkCanonical)
        {
            CreateTime = createTime;
            Description = description;
            ExportCustomRoutes = exportCustomRoutes;
            ExportCustomRoutesWithPublicIp = exportCustomRoutesWithPublicIp;
            Id = id;
            ImportCustomRoutes = importCustomRoutes;
            ImportCustomRoutesWithPublicIp = importCustomRoutesWithPublicIp;
            Name = name;
            PeerNetwork = peerNetwork;
            PeerNetworkType = peerNetworkType;
            Project = project;
            State = state;
            StateDetails = stateDetails;
            Uid = uid;
            UpdateTime = updateTime;
            VmwareEngineNetwork = vmwareEngineNetwork;
            VmwareEngineNetworkCanonical = vmwareEngineNetworkCanonical;
        }
    }
}
