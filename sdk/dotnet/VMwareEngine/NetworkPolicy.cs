// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.VMwareEngine
{
    /// <summary>
    /// Represents a network policy resource. Network policies are regional resources.
    /// 
    /// To get more information about NetworkPolicy, see:
    /// 
    /// * [API documentation](https://cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.networkPolicies)
    /// 
    /// ## Example Usage
    /// 
    /// ### Vmware Engine Network Policy Basic
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var network_policy_nw = new Gcp.VMwareEngine.Network("network-policy-nw", new()
    ///     {
    ///         Name = "standard-nw",
    ///         Location = "global",
    ///         Type = "STANDARD",
    ///         Description = "VMwareEngine standard network sample",
    ///     });
    /// 
    ///     var vmw_engine_network_policy = new Gcp.VMwareEngine.NetworkPolicy("vmw-engine-network-policy", new()
    ///     {
    ///         Location = "us-west1",
    ///         Name = "sample-network-policy",
    ///         EdgeServicesCidr = "192.168.30.0/26",
    ///         VmwareEngineNetwork = network_policy_nw.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// ### Vmware Engine Network Policy Full
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var network_policy_nw = new Gcp.VMwareEngine.Network("network-policy-nw", new()
    ///     {
    ///         Name = "standard-full-nw",
    ///         Location = "global",
    ///         Type = "STANDARD",
    ///         Description = "VMwareEngine standard network sample",
    ///     });
    /// 
    ///     var vmw_engine_network_policy = new Gcp.VMwareEngine.NetworkPolicy("vmw-engine-network-policy", new()
    ///     {
    ///         Location = "us-west1",
    ///         Name = "sample-network-policy-full",
    ///         EdgeServicesCidr = "192.168.30.0/26",
    ///         VmwareEngineNetwork = network_policy_nw.Id,
    ///         Description = "Sample Network Policy",
    ///         InternetAccess = new Gcp.VMwareEngine.Inputs.NetworkPolicyInternetAccessArgs
    ///         {
    ///             Enabled = true,
    ///         },
    ///         ExternalIp = new Gcp.VMwareEngine.Inputs.NetworkPolicyExternalIpArgs
    ///         {
    ///             Enabled = true,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// NetworkPolicy can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/locations/{{location}}/networkPolicies/{{name}}`
    /// 
    /// * `{{project}}/{{location}}/{{name}}`
    /// 
    /// * `{{location}}/{{name}}`
    /// 
    /// When using the `pulumi import` command, NetworkPolicy can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:vmwareengine/networkPolicy:NetworkPolicy default projects/{{project}}/locations/{{location}}/networkPolicies/{{name}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:vmwareengine/networkPolicy:NetworkPolicy default {{project}}/{{location}}/{{name}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:vmwareengine/networkPolicy:NetworkPolicy default {{location}}/{{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:vmwareengine/networkPolicy:NetworkPolicy")]
    public partial class NetworkPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Creation time of this resource.
        /// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and
        /// up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// User-provided description for this network policy.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// IP address range in CIDR notation used to create internet access and external IP access.
        /// An RFC 1918 CIDR block, with a "/26" prefix, is required. The range cannot overlap with any
        /// prefixes either in the consumer VPC network or in use by the private clouds attached to that VPC network.
        /// </summary>
        [Output("edgeServicesCidr")]
        public Output<string> EdgeServicesCidr { get; private set; } = null!;

        /// <summary>
        /// Network service that allows External IP addresses to be assigned to VMware workloads.
        /// This service can only be enabled when internetAccess is also enabled.
        /// Structure is documented below.
        /// </summary>
        [Output("externalIp")]
        public Output<Outputs.NetworkPolicyExternalIp> ExternalIp { get; private set; } = null!;

        /// <summary>
        /// Network service that allows VMware workloads to access the internet.
        /// Structure is documented below.
        /// </summary>
        [Output("internetAccess")]
        public Output<Outputs.NetworkPolicyInternetAccess> InternetAccess { get; private set; } = null!;

        /// <summary>
        /// The resource name of the location (region) to create the new network policy in.
        /// Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names.
        /// For example: projects/my-project/locations/us-central1
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The ID of the Network Policy.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// System-generated unique identifier for the resource.
        /// </summary>
        [Output("uid")]
        public Output<string> Uid { get; private set; } = null!;

        /// <summary>
        /// Last updated time of this resource.
        /// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
        /// fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;

        /// <summary>
        /// The relative resource name of the VMware Engine network. Specify the name in the following form:
        /// projects/{project}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId} where {project}
        /// can either be a project number or a project ID.
        /// </summary>
        [Output("vmwareEngineNetwork")]
        public Output<string> VmwareEngineNetwork { get; private set; } = null!;

        /// <summary>
        /// The canonical name of the VMware Engine network in the form:
        /// projects/{project_number}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId}
        /// </summary>
        [Output("vmwareEngineNetworkCanonical")]
        public Output<string> VmwareEngineNetworkCanonical { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkPolicy(string name, NetworkPolicyArgs args, CustomResourceOptions? options = null)
            : base("gcp:vmwareengine/networkPolicy:NetworkPolicy", name, args ?? new NetworkPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkPolicy(string name, Input<string> id, NetworkPolicyState? state = null, CustomResourceOptions? options = null)
            : base("gcp:vmwareengine/networkPolicy:NetworkPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkPolicy Get(string name, Input<string> id, NetworkPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new NetworkPolicy(name, id, state, options);
        }
    }

    public sealed class NetworkPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// User-provided description for this network policy.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// IP address range in CIDR notation used to create internet access and external IP access.
        /// An RFC 1918 CIDR block, with a "/26" prefix, is required. The range cannot overlap with any
        /// prefixes either in the consumer VPC network or in use by the private clouds attached to that VPC network.
        /// </summary>
        [Input("edgeServicesCidr", required: true)]
        public Input<string> EdgeServicesCidr { get; set; } = null!;

        /// <summary>
        /// Network service that allows External IP addresses to be assigned to VMware workloads.
        /// This service can only be enabled when internetAccess is also enabled.
        /// Structure is documented below.
        /// </summary>
        [Input("externalIp")]
        public Input<Inputs.NetworkPolicyExternalIpArgs>? ExternalIp { get; set; }

        /// <summary>
        /// Network service that allows VMware workloads to access the internet.
        /// Structure is documented below.
        /// </summary>
        [Input("internetAccess")]
        public Input<Inputs.NetworkPolicyInternetAccessArgs>? InternetAccess { get; set; }

        /// <summary>
        /// The resource name of the location (region) to create the new network policy in.
        /// Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names.
        /// For example: projects/my-project/locations/us-central1
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The ID of the Network Policy.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The relative resource name of the VMware Engine network. Specify the name in the following form:
        /// projects/{project}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId} where {project}
        /// can either be a project number or a project ID.
        /// </summary>
        [Input("vmwareEngineNetwork", required: true)]
        public Input<string> VmwareEngineNetwork { get; set; } = null!;

        public NetworkPolicyArgs()
        {
        }
        public static new NetworkPolicyArgs Empty => new NetworkPolicyArgs();
    }

    public sealed class NetworkPolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Creation time of this resource.
        /// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and
        /// up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// User-provided description for this network policy.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// IP address range in CIDR notation used to create internet access and external IP access.
        /// An RFC 1918 CIDR block, with a "/26" prefix, is required. The range cannot overlap with any
        /// prefixes either in the consumer VPC network or in use by the private clouds attached to that VPC network.
        /// </summary>
        [Input("edgeServicesCidr")]
        public Input<string>? EdgeServicesCidr { get; set; }

        /// <summary>
        /// Network service that allows External IP addresses to be assigned to VMware workloads.
        /// This service can only be enabled when internetAccess is also enabled.
        /// Structure is documented below.
        /// </summary>
        [Input("externalIp")]
        public Input<Inputs.NetworkPolicyExternalIpGetArgs>? ExternalIp { get; set; }

        /// <summary>
        /// Network service that allows VMware workloads to access the internet.
        /// Structure is documented below.
        /// </summary>
        [Input("internetAccess")]
        public Input<Inputs.NetworkPolicyInternetAccessGetArgs>? InternetAccess { get; set; }

        /// <summary>
        /// The resource name of the location (region) to create the new network policy in.
        /// Resource names are schemeless URIs that follow the conventions in https://cloud.google.com/apis/design/resource_names.
        /// For example: projects/my-project/locations/us-central1
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The ID of the Network Policy.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// System-generated unique identifier for the resource.
        /// </summary>
        [Input("uid")]
        public Input<string>? Uid { get; set; }

        /// <summary>
        /// Last updated time of this resource.
        /// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
        /// fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        /// <summary>
        /// The relative resource name of the VMware Engine network. Specify the name in the following form:
        /// projects/{project}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId} where {project}
        /// can either be a project number or a project ID.
        /// </summary>
        [Input("vmwareEngineNetwork")]
        public Input<string>? VmwareEngineNetwork { get; set; }

        /// <summary>
        /// The canonical name of the VMware Engine network in the form:
        /// projects/{project_number}/locations/{location}/vmwareEngineNetworks/{vmwareEngineNetworkId}
        /// </summary>
        [Input("vmwareEngineNetworkCanonical")]
        public Input<string>? VmwareEngineNetworkCanonical { get; set; }

        public NetworkPolicyState()
        {
        }
        public static new NetworkPolicyState Empty => new NetworkPolicyState();
    }
}
