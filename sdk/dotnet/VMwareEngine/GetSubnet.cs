// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.VMwareEngine
{
    public static class GetSubnet
    {
        /// <summary>
        /// Use this data source to get details about a subnet. Management subnets support only read operations and should be configured through this data source. User defined subnets can be configured using the resource as well as the datasource.
        /// 
        /// To get more information about private cloud subnet, see:
        /// * [API documentation](https://cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.privateClouds.subnets)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var mySubnet = Gcp.VMwareEngine.GetSubnet.Invoke(new()
        ///     {
        ///         Name = "service-1",
        ///         Parent = "project/my-project/locations/us-west1-a/privateClouds/my-cloud",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSubnetResult> InvokeAsync(GetSubnetArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSubnetResult>("gcp:vmwareengine/getSubnet:getSubnet", args ?? new GetSubnetArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get details about a subnet. Management subnets support only read operations and should be configured through this data source. User defined subnets can be configured using the resource as well as the datasource.
        /// 
        /// To get more information about private cloud subnet, see:
        /// * [API documentation](https://cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.privateClouds.subnets)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var mySubnet = Gcp.VMwareEngine.GetSubnet.Invoke(new()
        ///     {
        ///         Name = "service-1",
        ///         Parent = "project/my-project/locations/us-west1-a/privateClouds/my-cloud",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSubnetResult> Invoke(GetSubnetInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSubnetResult>("gcp:vmwareengine/getSubnet:getSubnet", args ?? new GetSubnetInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get details about a subnet. Management subnets support only read operations and should be configured through this data source. User defined subnets can be configured using the resource as well as the datasource.
        /// 
        /// To get more information about private cloud subnet, see:
        /// * [API documentation](https://cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.privateClouds.subnets)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var mySubnet = Gcp.VMwareEngine.GetSubnet.Invoke(new()
        ///     {
        ///         Name = "service-1",
        ///         Parent = "project/my-project/locations/us-west1-a/privateClouds/my-cloud",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSubnetResult> Invoke(GetSubnetInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSubnetResult>("gcp:vmwareengine/getSubnet:getSubnet", args ?? new GetSubnetInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSubnetArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the resource. 
        /// UserDefined subnets are named in the format of "service-n", where n ranges from 1 to 5.
        /// Management subnets have arbitary names including "vmotion", "vsan", "system-management" etc. More details about subnet names can be found on the cloud console.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The resource name of the private cloud that this subnet belongs.
        /// </summary>
        [Input("parent", required: true)]
        public string Parent { get; set; } = null!;

        public GetSubnetArgs()
        {
        }
        public static new GetSubnetArgs Empty => new GetSubnetArgs();
    }

    public sealed class GetSubnetInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the resource. 
        /// UserDefined subnets are named in the format of "service-n", where n ranges from 1 to 5.
        /// Management subnets have arbitary names including "vmotion", "vsan", "system-management" etc. More details about subnet names can be found on the cloud console.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The resource name of the private cloud that this subnet belongs.
        /// </summary>
        [Input("parent", required: true)]
        public Input<string> Parent { get; set; } = null!;

        public GetSubnetInvokeArgs()
        {
        }
        public static new GetSubnetInvokeArgs Empty => new GetSubnetInvokeArgs();
    }


    [OutputType]
    public sealed class GetSubnetResult
    {
        public readonly string CreateTime;
        public readonly ImmutableArray<Outputs.GetSubnetDhcpAddressRangeResult> DhcpAddressRanges;
        public readonly string GatewayId;
        public readonly string GatewayIp;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string IpCidrRange;
        public readonly string Name;
        public readonly string Parent;
        public readonly bool StandardConfig;
        public readonly string State;
        public readonly string Type;
        public readonly string Uid;
        public readonly string UpdateTime;
        public readonly int VlanId;

        [OutputConstructor]
        private GetSubnetResult(
            string createTime,

            ImmutableArray<Outputs.GetSubnetDhcpAddressRangeResult> dhcpAddressRanges,

            string gatewayId,

            string gatewayIp,

            string id,

            string ipCidrRange,

            string name,

            string parent,

            bool standardConfig,

            string state,

            string type,

            string uid,

            string updateTime,

            int vlanId)
        {
            CreateTime = createTime;
            DhcpAddressRanges = dhcpAddressRanges;
            GatewayId = gatewayId;
            GatewayIp = gatewayIp;
            Id = id;
            IpCidrRange = ipCidrRange;
            Name = name;
            Parent = parent;
            StandardConfig = standardConfig;
            State = state;
            Type = type;
            Uid = uid;
            UpdateTime = updateTime;
            VlanId = vlanId;
        }
    }
}
