// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.VMwareEngine
{
    public static class GetNetworkPolicy
    {
        /// <summary>
        /// Use this data source to get details about a network policy resource.
        /// 
        /// To get more information about network policy, see:
        /// * [API documentation](https://cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.networkPolicies)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myNetworkPolicy = Gcp.VMwareEngine.GetNetworkPolicy.Invoke(new()
        ///     {
        ///         Name = "my-network-policy",
        ///         Location = "us-central1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetNetworkPolicyResult> InvokeAsync(GetNetworkPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNetworkPolicyResult>("gcp:vmwareengine/getNetworkPolicy:getNetworkPolicy", args ?? new GetNetworkPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get details about a network policy resource.
        /// 
        /// To get more information about network policy, see:
        /// * [API documentation](https://cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.networkPolicies)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myNetworkPolicy = Gcp.VMwareEngine.GetNetworkPolicy.Invoke(new()
        ///     {
        ///         Name = "my-network-policy",
        ///         Location = "us-central1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNetworkPolicyResult> Invoke(GetNetworkPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkPolicyResult>("gcp:vmwareengine/getNetworkPolicy:getNetworkPolicy", args ?? new GetNetworkPolicyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get details about a network policy resource.
        /// 
        /// To get more information about network policy, see:
        /// * [API documentation](https://cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.networkPolicies)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myNetworkPolicy = Gcp.VMwareEngine.GetNetworkPolicy.Invoke(new()
        ///     {
        ///         Name = "my-network-policy",
        ///         Location = "us-central1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetNetworkPolicyResult> Invoke(GetNetworkPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkPolicyResult>("gcp:vmwareengine/getNetworkPolicy:getNetworkPolicy", args ?? new GetNetworkPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNetworkPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Location of the resource.
        /// </summary>
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        /// <summary>
        /// Name of the resource.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetNetworkPolicyArgs()
        {
        }
        public static new GetNetworkPolicyArgs Empty => new GetNetworkPolicyArgs();
    }

    public sealed class GetNetworkPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Location of the resource.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// Name of the resource.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetNetworkPolicyInvokeArgs()
        {
        }
        public static new GetNetworkPolicyInvokeArgs Empty => new GetNetworkPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetNetworkPolicyResult
    {
        public readonly string CreateTime;
        public readonly string Description;
        public readonly string EdgeServicesCidr;
        public readonly ImmutableArray<Outputs.GetNetworkPolicyExternalIpResult> ExternalIps;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetNetworkPolicyInternetAccessResult> InternetAccesses;
        public readonly string Location;
        public readonly string Name;
        public readonly string? Project;
        public readonly string Uid;
        public readonly string UpdateTime;
        public readonly string VmwareEngineNetwork;
        public readonly string VmwareEngineNetworkCanonical;

        [OutputConstructor]
        private GetNetworkPolicyResult(
            string createTime,

            string description,

            string edgeServicesCidr,

            ImmutableArray<Outputs.GetNetworkPolicyExternalIpResult> externalIps,

            string id,

            ImmutableArray<Outputs.GetNetworkPolicyInternetAccessResult> internetAccesses,

            string location,

            string name,

            string? project,

            string uid,

            string updateTime,

            string vmwareEngineNetwork,

            string vmwareEngineNetworkCanonical)
        {
            CreateTime = createTime;
            Description = description;
            EdgeServicesCidr = edgeServicesCidr;
            ExternalIps = externalIps;
            Id = id;
            InternetAccesses = internetAccesses;
            Location = location;
            Name = name;
            Project = project;
            Uid = uid;
            UpdateTime = updateTime;
            VmwareEngineNetwork = vmwareEngineNetwork;
            VmwareEngineNetworkCanonical = vmwareEngineNetworkCanonical;
        }
    }
}
