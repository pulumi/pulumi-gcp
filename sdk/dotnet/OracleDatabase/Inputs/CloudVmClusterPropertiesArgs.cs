// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.OracleDatabase.Inputs
{

    public sealed class CloudVmClusterPropertiesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// OCI Cluster name.
        /// </summary>
        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        /// <summary>
        /// (Output)
        /// Compartment ID of cluster.
        /// </summary>
        [Input("compartmentId")]
        public Input<string>? CompartmentId { get; set; }

        /// <summary>
        /// Number of enabled CPU cores.
        /// </summary>
        [Input("cpuCoreCount", required: true)]
        public Input<int> CpuCoreCount { get; set; } = null!;

        /// <summary>
        /// The data disk group size to be allocated in TBs.
        /// </summary>
        [Input("dataStorageSizeTb")]
        public Input<double>? DataStorageSizeTb { get; set; }

        /// <summary>
        /// Local storage per VM
        /// </summary>
        [Input("dbNodeStorageSizeGb")]
        public Input<int>? DbNodeStorageSizeGb { get; set; }

        [Input("dbServerOcids")]
        private InputList<string>? _dbServerOcids;

        /// <summary>
        /// OCID of database servers.
        /// </summary>
        public InputList<string> DbServerOcids
        {
            get => _dbServerOcids ?? (_dbServerOcids = new InputList<string>());
            set => _dbServerOcids = value;
        }

        /// <summary>
        /// Data collection options for diagnostics.
        /// Structure is documented below.
        /// </summary>
        [Input("diagnosticsDataCollectionOptions")]
        public Input<Inputs.CloudVmClusterPropertiesDiagnosticsDataCollectionOptionsArgs>? DiagnosticsDataCollectionOptions { get; set; }

        /// <summary>
        /// The type of redundancy.
        /// Possible values:
        /// DISK_REDUNDANCY_UNSPECIFIED
        /// HIGH
        /// NORMAL
        /// </summary>
        [Input("diskRedundancy")]
        public Input<string>? DiskRedundancy { get; set; }

        /// <summary>
        /// (Output)
        /// DNS listener IP.
        /// </summary>
        [Input("dnsListenerIp")]
        public Input<string>? DnsListenerIp { get; set; }

        /// <summary>
        /// (Output)
        /// Parent DNS domain where SCAN DNS and hosts names are qualified.
        /// ex: ocispdelegated.ocisp10jvnet.oraclevcn.com
        /// </summary>
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        /// <summary>
        /// Grid Infrastructure Version.
        /// </summary>
        [Input("giVersion")]
        public Input<string>? GiVersion { get; set; }

        /// <summary>
        /// (Output)
        /// host name without domain.
        /// format: "-" with some suffix.
        /// ex: sp2-yi0xq where "sp2" is the hostname_prefix.
        /// </summary>
        [Input("hostname")]
        public Input<string>? Hostname { get; set; }

        /// <summary>
        /// Prefix for VM cluster host names.
        /// </summary>
        [Input("hostnamePrefix")]
        public Input<string>? HostnamePrefix { get; set; }

        /// <summary>
        /// License type of VM Cluster.
        /// Possible values:
        /// LICENSE_TYPE_UNSPECIFIED
        /// LICENSE_INCLUDED
        /// BRING_YOUR_OWN_LICENSE
        /// </summary>
        [Input("licenseType", required: true)]
        public Input<string> LicenseType { get; set; } = null!;

        /// <summary>
        /// Use local backup.
        /// </summary>
        [Input("localBackupEnabled")]
        public Input<bool>? LocalBackupEnabled { get; set; }

        /// <summary>
        /// Memory allocated in GBs.
        /// </summary>
        [Input("memorySizeGb")]
        public Input<int>? MemorySizeGb { get; set; }

        /// <summary>
        /// Number of database servers.
        /// </summary>
        [Input("nodeCount")]
        public Input<int>? NodeCount { get; set; }

        /// <summary>
        /// (Output)
        /// Deep link to the OCI console to view this resource.
        /// </summary>
        [Input("ociUrl")]
        public Input<string>? OciUrl { get; set; }

        /// <summary>
        /// (Output)
        /// Oracle Cloud Infrastructure ID of VM Cluster.
        /// </summary>
        [Input("ocid")]
        public Input<string>? Ocid { get; set; }

        /// <summary>
        /// OCPU count per VM. Minimum is 0.1.
        /// </summary>
        [Input("ocpuCount")]
        public Input<double>? OcpuCount { get; set; }

        /// <summary>
        /// (Output)
        /// SCAN DNS name.
        /// ex: sp2-yi0xq-scan.ocispdelegated.ocisp10jvnet.oraclevcn.com
        /// </summary>
        [Input("scanDns")]
        public Input<string>? ScanDns { get; set; }

        /// <summary>
        /// (Output)
        /// OCID of scan DNS record.
        /// </summary>
        [Input("scanDnsRecordId")]
        public Input<string>? ScanDnsRecordId { get; set; }

        [Input("scanIpIds")]
        private InputList<string>? _scanIpIds;

        /// <summary>
        /// (Output)
        /// OCIDs of scan IPs.
        /// </summary>
        public InputList<string> ScanIpIds
        {
            get => _scanIpIds ?? (_scanIpIds = new InputList<string>());
            set => _scanIpIds = value;
        }

        /// <summary>
        /// (Output)
        /// SCAN listener port - TCP
        /// </summary>
        [Input("scanListenerPortTcp")]
        public Input<int>? ScanListenerPortTcp { get; set; }

        /// <summary>
        /// (Output)
        /// SCAN listener port - TLS
        /// </summary>
        [Input("scanListenerPortTcpSsl")]
        public Input<int>? ScanListenerPortTcpSsl { get; set; }

        /// <summary>
        /// (Output)
        /// Shape of VM Cluster.
        /// </summary>
        [Input("shape")]
        public Input<string>? Shape { get; set; }

        /// <summary>
        /// Use exadata sparse snapshots.
        /// </summary>
        [Input("sparseDiskgroupEnabled")]
        public Input<bool>? SparseDiskgroupEnabled { get; set; }

        [Input("sshPublicKeys")]
        private InputList<string>? _sshPublicKeys;

        /// <summary>
        /// SSH public keys to be stored with cluster.
        /// </summary>
        public InputList<string> SshPublicKeys
        {
            get => _sshPublicKeys ?? (_sshPublicKeys = new InputList<string>());
            set => _sshPublicKeys = value;
        }

        /// <summary>
        /// (Output)
        /// State of the cluster.
        /// Possible values:
        /// STATE_UNSPECIFIED
        /// PROVISIONING
        /// AVAILABLE
        /// UPDATING
        /// TERMINATING
        /// TERMINATED
        /// FAILED
        /// MAINTENANCE_IN_PROGRESS
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// (Output)
        /// The storage allocation for the disk group, in gigabytes (GB).
        /// </summary>
        [Input("storageSizeGb")]
        public Input<int>? StorageSizeGb { get; set; }

        /// <summary>
        /// (Output)
        /// Operating system version of the image.
        /// </summary>
        [Input("systemVersion")]
        public Input<string>? SystemVersion { get; set; }

        /// <summary>
        /// Represents a time zone from the
        /// [IANA Time Zone Database](https://www.iana.org/time-zones).
        /// Structure is documented below.
        /// </summary>
        [Input("timeZone")]
        public Input<Inputs.CloudVmClusterPropertiesTimeZoneArgs>? TimeZone { get; set; }

        public CloudVmClusterPropertiesArgs()
        {
        }
        public static new CloudVmClusterPropertiesArgs Empty => new CloudVmClusterPropertiesArgs();
    }
}
