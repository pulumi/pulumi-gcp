// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.OracleDatabase
{
    public static class GetAutonomousDatabase
    {
        /// <summary>
        /// Get information about an AutonomousDatabase.
        /// 
        /// For more information see the
        /// [API](https://cloud.google.com/oracle/database/docs/reference/rest/v1/projects.locations.autonomousDatabases).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var my_instance = Gcp.OracleDatabase.GetAutonomousDatabase.Invoke(new()
        ///     {
        ///         Location = "us-east4",
        ///         AutonomousDatabaseId = "autonomous_database_id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAutonomousDatabaseResult> InvokeAsync(GetAutonomousDatabaseArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAutonomousDatabaseResult>("gcp:oracledatabase/getAutonomousDatabase:getAutonomousDatabase", args ?? new GetAutonomousDatabaseArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about an AutonomousDatabase.
        /// 
        /// For more information see the
        /// [API](https://cloud.google.com/oracle/database/docs/reference/rest/v1/projects.locations.autonomousDatabases).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var my_instance = Gcp.OracleDatabase.GetAutonomousDatabase.Invoke(new()
        ///     {
        ///         Location = "us-east4",
        ///         AutonomousDatabaseId = "autonomous_database_id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAutonomousDatabaseResult> Invoke(GetAutonomousDatabaseInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAutonomousDatabaseResult>("gcp:oracledatabase/getAutonomousDatabase:getAutonomousDatabase", args ?? new GetAutonomousDatabaseInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAutonomousDatabaseArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the AutonomousDatabase.
        /// </summary>
        [Input("autonomousDatabaseId", required: true)]
        public string AutonomousDatabaseId { get; set; } = null!;

        /// <summary>
        /// The location of the resource.
        /// 
        /// - - -
        /// </summary>
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        /// <summary>
        /// The project to which the resource belongs. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        public GetAutonomousDatabaseArgs()
        {
        }
        public static new GetAutonomousDatabaseArgs Empty => new GetAutonomousDatabaseArgs();
    }

    public sealed class GetAutonomousDatabaseInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the AutonomousDatabase.
        /// </summary>
        [Input("autonomousDatabaseId", required: true)]
        public Input<string> AutonomousDatabaseId { get; set; } = null!;

        /// <summary>
        /// The location of the resource.
        /// 
        /// - - -
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The project to which the resource belongs. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetAutonomousDatabaseInvokeArgs()
        {
        }
        public static new GetAutonomousDatabaseInvokeArgs Empty => new GetAutonomousDatabaseInvokeArgs();
    }


    [OutputType]
    public sealed class GetAutonomousDatabaseResult
    {
        public readonly string AdminPassword;
        public readonly string AutonomousDatabaseId;
        public readonly string Cidr;
        public readonly string CreateTime;
        public readonly string Database;
        public readonly string DisplayName;
        public readonly ImmutableDictionary<string, string> EffectiveLabels;
        public readonly string EntitlementId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableDictionary<string, string> Labels;
        public readonly string Location;
        public readonly string Name;
        public readonly string Network;
        public readonly string? Project;
        public readonly ImmutableArray<Outputs.GetAutonomousDatabasePropertyResult> Properties;
        public readonly ImmutableDictionary<string, string> PulumiLabels;

        [OutputConstructor]
        private GetAutonomousDatabaseResult(
            string adminPassword,

            string autonomousDatabaseId,

            string cidr,

            string createTime,

            string database,

            string displayName,

            ImmutableDictionary<string, string> effectiveLabels,

            string entitlementId,

            string id,

            ImmutableDictionary<string, string> labels,

            string location,

            string name,

            string network,

            string? project,

            ImmutableArray<Outputs.GetAutonomousDatabasePropertyResult> properties,

            ImmutableDictionary<string, string> pulumiLabels)
        {
            AdminPassword = adminPassword;
            AutonomousDatabaseId = autonomousDatabaseId;
            Cidr = cidr;
            CreateTime = createTime;
            Database = database;
            DisplayName = displayName;
            EffectiveLabels = effectiveLabels;
            EntitlementId = entitlementId;
            Id = id;
            Labels = labels;
            Location = location;
            Name = name;
            Network = network;
            Project = project;
            Properties = properties;
            PulumiLabels = pulumiLabels;
        }
    }
}
