// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.OracleDatabase.Outputs
{

    [OutputType]
    public sealed class GetCloudExadataInfrastructurePropertyMaintenanceWindowResult
    {
        /// <summary>
        /// Determines the amount of time the system will wait before the start of each
        /// database server patching operation. Custom action timeout is in minutes and
        /// valid value is between 15 to 120 (inclusive).
        /// </summary>
        public readonly int CustomActionTimeoutMins;
        /// <summary>
        /// Days during the week when maintenance should be performed.
        /// </summary>
        public readonly ImmutableArray<string> DaysOfWeeks;
        /// <summary>
        /// The window of hours during the day when maintenance should be performed.
        /// The window is a 4 hour slot. Valid values are:
        ///   0 - represents time slot 0:00 - 3:59 UTC
        ///   4 - represents time slot 4:00 - 7:59 UTC
        ///   8 - represents time slot 8:00 - 11:59 UTC
        ///   12 - represents time slot 12:00 - 15:59 UTC
        ///   16 - represents time slot 16:00 - 19:59 UTC
        ///   20 - represents time slot 20:00 - 23:59 UTC
        /// </summary>
        public readonly ImmutableArray<int> HoursOfDays;
        /// <summary>
        /// If true, enables the configuration of a custom action timeout (waiting
        /// period) between database server patching operations.
        /// </summary>
        public readonly bool IsCustomActionTimeoutEnabled;
        /// <summary>
        /// Lead time window allows user to set a lead time to prepare for a down time.
        /// The lead time is in weeks and valid value is between 1 to 4.
        /// </summary>
        public readonly int LeadTimeWeek;
        /// <summary>
        /// Months during the year when maintenance should be performed.
        /// </summary>
        public readonly ImmutableArray<string> Months;
        /// <summary>
        /// Cloud CloudExadataInfrastructure node patching method, either "ROLLING"
        ///  or "NONROLLING". Default value is ROLLING. 
        ///  Possible values:
        ///  PATCHING_MODE_UNSPECIFIED
        /// ROLLING
        /// NON_ROLLING
        /// </summary>
        public readonly string PatchingMode;
        /// <summary>
        /// The maintenance window scheduling preference. 
        ///  Possible values:
        ///  MAINTENANCE_WINDOW_PREFERENCE_UNSPECIFIED
        /// CUSTOM_PREFERENCE
        /// NO_PREFERENCE
        /// </summary>
        public readonly string Preference;
        /// <summary>
        /// Weeks during the month when maintenance should be performed. Weeks start on
        /// the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7
        /// days. Weeks start and end based on calendar dates, not days of the week.
        /// </summary>
        public readonly ImmutableArray<int> WeeksOfMonths;

        [OutputConstructor]
        private GetCloudExadataInfrastructurePropertyMaintenanceWindowResult(
            int customActionTimeoutMins,

            ImmutableArray<string> daysOfWeeks,

            ImmutableArray<int> hoursOfDays,

            bool isCustomActionTimeoutEnabled,

            int leadTimeWeek,

            ImmutableArray<string> months,

            string patchingMode,

            string preference,

            ImmutableArray<int> weeksOfMonths)
        {
            CustomActionTimeoutMins = customActionTimeoutMins;
            DaysOfWeeks = daysOfWeeks;
            HoursOfDays = hoursOfDays;
            IsCustomActionTimeoutEnabled = isCustomActionTimeoutEnabled;
            LeadTimeWeek = leadTimeWeek;
            Months = months;
            PatchingMode = patchingMode;
            Preference = preference;
            WeeksOfMonths = weeksOfMonths;
        }
    }
}
