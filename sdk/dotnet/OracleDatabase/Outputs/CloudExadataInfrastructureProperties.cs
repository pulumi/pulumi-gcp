// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.OracleDatabase.Outputs
{

    [OutputType]
    public sealed class CloudExadataInfrastructureProperties
    {
        /// <summary>
        /// (Output)
        /// The requested number of additional storage servers activated for the
        /// Exadata Infrastructure.
        /// </summary>
        public readonly int? ActivatedStorageCount;
        /// <summary>
        /// (Output)
        /// The requested number of additional storage servers for the Exadata
        /// Infrastructure.
        /// </summary>
        public readonly int? AdditionalStorageCount;
        /// <summary>
        /// (Output)
        /// The available storage can be allocated to the Exadata Infrastructure
        /// resource, in gigabytes (GB).
        /// </summary>
        public readonly int? AvailableStorageSizeGb;
        /// <summary>
        /// The number of compute servers for the Exadata Infrastructure.
        /// </summary>
        public readonly int? ComputeCount;
        /// <summary>
        /// (Output)
        /// The number of enabled CPU cores.
        /// </summary>
        public readonly int? CpuCount;
        /// <summary>
        /// The list of customer contacts.
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.CloudExadataInfrastructurePropertiesCustomerContact> CustomerContacts;
        /// <summary>
        /// (Output)
        /// Size, in terabytes, of the DATA disk group.
        /// </summary>
        public readonly double? DataStorageSizeTb;
        /// <summary>
        /// (Output)
        /// The local node storage allocated in GBs.
        /// </summary>
        public readonly int? DbNodeStorageSizeGb;
        /// <summary>
        /// (Output)
        /// The software version of the database servers (dom0) in the Exadata
        /// Infrastructure.
        /// </summary>
        public readonly string? DbServerVersion;
        /// <summary>
        /// Maintenance window as defined by Oracle.
        /// https://docs.oracle.com/en-us/iaas/api/#/en/database/20160918/datatypes/MaintenanceWindow
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.CloudExadataInfrastructurePropertiesMaintenanceWindow? MaintenanceWindow;
        /// <summary>
        /// (Output)
        /// The total number of CPU cores available.
        /// </summary>
        public readonly int? MaxCpuCount;
        /// <summary>
        /// (Output)
        /// The total available DATA disk group size.
        /// </summary>
        public readonly double? MaxDataStorageTb;
        /// <summary>
        /// (Output)
        /// The total local node storage available in GBs.
        /// </summary>
        public readonly int? MaxDbNodeStorageSizeGb;
        /// <summary>
        /// (Output)
        /// The total memory available in GBs.
        /// </summary>
        public readonly int? MaxMemoryGb;
        /// <summary>
        /// (Output)
        /// The memory allocated in GBs.
        /// </summary>
        public readonly int? MemorySizeGb;
        /// <summary>
        /// (Output)
        /// The monthly software version of the database servers (dom0)
        /// in the Exadata Infrastructure. Example: 20.1.15
        /// </summary>
        public readonly string? MonthlyDbServerVersion;
        /// <summary>
        /// (Output)
        /// The monthly software version of the storage servers (cells)
        /// in the Exadata Infrastructure. Example: 20.1.15
        /// </summary>
        public readonly string? MonthlyStorageServerVersion;
        /// <summary>
        /// (Output)
        /// The OCID of the next maintenance run.
        /// </summary>
        public readonly string? NextMaintenanceRunId;
        /// <summary>
        /// (Output)
        /// The time when the next maintenance run will occur.
        /// </summary>
        public readonly string? NextMaintenanceRunTime;
        /// <summary>
        /// (Output)
        /// The time when the next security maintenance run will occur.
        /// </summary>
        public readonly string? NextSecurityMaintenanceRunTime;
        /// <summary>
        /// (Output)
        /// Deep link to the OCI console to view this resource.
        /// </summary>
        public readonly string? OciUrl;
        /// <summary>
        /// (Output)
        /// OCID of created infra.
        /// https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm#Oracle
        /// </summary>
        public readonly string? Ocid;
        /// <summary>
        /// The shape of the Exadata Infrastructure. The shape determines the
        /// amount of CPU, storage, and memory resources allocated to the instance.
        /// </summary>
        public readonly string Shape;
        /// <summary>
        /// (Output)
        /// The current lifecycle state of the Exadata Infrastructure.
        /// Possible values:
        /// STATE_UNSPECIFIED
        /// PROVISIONING
        /// AVAILABLE
        /// UPDATING
        /// TERMINATING
        /// TERMINATED
        /// FAILED
        /// MAINTENANCE_IN_PROGRESS
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// The number of Cloud Exadata storage servers for the Exadata Infrastructure.
        /// </summary>
        public readonly int? StorageCount;
        /// <summary>
        /// (Output)
        /// The software version of the storage servers (cells) in the Exadata
        /// Infrastructure.
        /// </summary>
        public readonly string? StorageServerVersion;
        /// <summary>
        /// The total storage allocated to the Exadata Infrastructure
        /// resource, in gigabytes (GB).
        /// </summary>
        public readonly int? TotalStorageSizeGb;

        [OutputConstructor]
        private CloudExadataInfrastructureProperties(
            int? activatedStorageCount,

            int? additionalStorageCount,

            int? availableStorageSizeGb,

            int? computeCount,

            int? cpuCount,

            ImmutableArray<Outputs.CloudExadataInfrastructurePropertiesCustomerContact> customerContacts,

            double? dataStorageSizeTb,

            int? dbNodeStorageSizeGb,

            string? dbServerVersion,

            Outputs.CloudExadataInfrastructurePropertiesMaintenanceWindow? maintenanceWindow,

            int? maxCpuCount,

            double? maxDataStorageTb,

            int? maxDbNodeStorageSizeGb,

            int? maxMemoryGb,

            int? memorySizeGb,

            string? monthlyDbServerVersion,

            string? monthlyStorageServerVersion,

            string? nextMaintenanceRunId,

            string? nextMaintenanceRunTime,

            string? nextSecurityMaintenanceRunTime,

            string? ociUrl,

            string? ocid,

            string shape,

            string? state,

            int? storageCount,

            string? storageServerVersion,

            int? totalStorageSizeGb)
        {
            ActivatedStorageCount = activatedStorageCount;
            AdditionalStorageCount = additionalStorageCount;
            AvailableStorageSizeGb = availableStorageSizeGb;
            ComputeCount = computeCount;
            CpuCount = cpuCount;
            CustomerContacts = customerContacts;
            DataStorageSizeTb = dataStorageSizeTb;
            DbNodeStorageSizeGb = dbNodeStorageSizeGb;
            DbServerVersion = dbServerVersion;
            MaintenanceWindow = maintenanceWindow;
            MaxCpuCount = maxCpuCount;
            MaxDataStorageTb = maxDataStorageTb;
            MaxDbNodeStorageSizeGb = maxDbNodeStorageSizeGb;
            MaxMemoryGb = maxMemoryGb;
            MemorySizeGb = memorySizeGb;
            MonthlyDbServerVersion = monthlyDbServerVersion;
            MonthlyStorageServerVersion = monthlyStorageServerVersion;
            NextMaintenanceRunId = nextMaintenanceRunId;
            NextMaintenanceRunTime = nextMaintenanceRunTime;
            NextSecurityMaintenanceRunTime = nextSecurityMaintenanceRunTime;
            OciUrl = ociUrl;
            Ocid = ocid;
            Shape = shape;
            State = state;
            StorageCount = storageCount;
            StorageServerVersion = storageServerVersion;
            TotalStorageSizeGb = totalStorageSizeGb;
        }
    }
}
