// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.OracleDatabase.Outputs
{

    [OutputType]
    public sealed class CloudVmClusterProperties
    {
        /// <summary>
        /// OCI Cluster name.
        /// </summary>
        public readonly string? ClusterName;
        /// <summary>
        /// (Output)
        /// Compartment ID of cluster.
        /// </summary>
        public readonly string? CompartmentId;
        /// <summary>
        /// Number of enabled CPU cores.
        /// </summary>
        public readonly int CpuCoreCount;
        /// <summary>
        /// The data disk group size to be allocated in TBs.
        /// </summary>
        public readonly double? DataStorageSizeTb;
        /// <summary>
        /// Local storage per VM
        /// </summary>
        public readonly int? DbNodeStorageSizeGb;
        /// <summary>
        /// OCID of database servers.
        /// </summary>
        public readonly ImmutableArray<string> DbServerOcids;
        /// <summary>
        /// Data collection options for diagnostics.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.CloudVmClusterPropertiesDiagnosticsDataCollectionOptions? DiagnosticsDataCollectionOptions;
        /// <summary>
        /// The type of redundancy.
        /// Possible values:
        /// DISK_REDUNDANCY_UNSPECIFIED
        /// HIGH
        /// NORMAL
        /// </summary>
        public readonly string? DiskRedundancy;
        /// <summary>
        /// (Output)
        /// DNS listener IP.
        /// </summary>
        public readonly string? DnsListenerIp;
        /// <summary>
        /// (Output)
        /// Parent DNS domain where SCAN DNS and hosts names are qualified.
        /// ex: ocispdelegated.ocisp10jvnet.oraclevcn.com
        /// </summary>
        public readonly string? Domain;
        /// <summary>
        /// Grid Infrastructure Version.
        /// </summary>
        public readonly string? GiVersion;
        /// <summary>
        /// (Output)
        /// host name without domain.
        /// format: "-" with some suffix.
        /// ex: sp2-yi0xq where "sp2" is the hostname_prefix.
        /// </summary>
        public readonly string? Hostname;
        /// <summary>
        /// Prefix for VM cluster host names.
        /// </summary>
        public readonly string? HostnamePrefix;
        /// <summary>
        /// License type of VM Cluster.
        /// Possible values:
        /// LICENSE_TYPE_UNSPECIFIED
        /// LICENSE_INCLUDED
        /// BRING_YOUR_OWN_LICENSE
        /// </summary>
        public readonly string LicenseType;
        /// <summary>
        /// Use local backup.
        /// </summary>
        public readonly bool? LocalBackupEnabled;
        /// <summary>
        /// Memory allocated in GBs.
        /// </summary>
        public readonly int? MemorySizeGb;
        /// <summary>
        /// Number of database servers.
        /// </summary>
        public readonly int? NodeCount;
        /// <summary>
        /// (Output)
        /// Deep link to the OCI console to view this resource.
        /// </summary>
        public readonly string? OciUrl;
        /// <summary>
        /// (Output)
        /// Oracle Cloud Infrastructure ID of VM Cluster.
        /// </summary>
        public readonly string? Ocid;
        /// <summary>
        /// OCPU count per VM. Minimum is 0.1.
        /// </summary>
        public readonly double? OcpuCount;
        /// <summary>
        /// (Output)
        /// SCAN DNS name.
        /// ex: sp2-yi0xq-scan.ocispdelegated.ocisp10jvnet.oraclevcn.com
        /// </summary>
        public readonly string? ScanDns;
        /// <summary>
        /// (Output)
        /// OCID of scan DNS record.
        /// </summary>
        public readonly string? ScanDnsRecordId;
        /// <summary>
        /// (Output)
        /// OCIDs of scan IPs.
        /// </summary>
        public readonly ImmutableArray<string> ScanIpIds;
        /// <summary>
        /// (Output)
        /// SCAN listener port - TCP
        /// </summary>
        public readonly int? ScanListenerPortTcp;
        /// <summary>
        /// (Output)
        /// SCAN listener port - TLS
        /// </summary>
        public readonly int? ScanListenerPortTcpSsl;
        /// <summary>
        /// (Output)
        /// Shape of VM Cluster.
        /// </summary>
        public readonly string? Shape;
        /// <summary>
        /// Use exadata sparse snapshots.
        /// </summary>
        public readonly bool? SparseDiskgroupEnabled;
        /// <summary>
        /// SSH public keys to be stored with cluster.
        /// </summary>
        public readonly ImmutableArray<string> SshPublicKeys;
        /// <summary>
        /// (Output)
        /// State of the cluster.
        /// Possible values:
        /// STATE_UNSPECIFIED
        /// PROVISIONING
        /// AVAILABLE
        /// UPDATING
        /// TERMINATING
        /// TERMINATED
        /// FAILED
        /// MAINTENANCE_IN_PROGRESS
        /// </summary>
        public readonly string? State;
        /// <summary>
        /// (Output)
        /// The storage allocation for the disk group, in gigabytes (GB).
        /// </summary>
        public readonly int? StorageSizeGb;
        /// <summary>
        /// (Output)
        /// Operating system version of the image.
        /// </summary>
        public readonly string? SystemVersion;
        /// <summary>
        /// Represents a time zone from the
        /// [IANA Time Zone Database](https://www.iana.org/time-zones).
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.CloudVmClusterPropertiesTimeZone? TimeZone;

        [OutputConstructor]
        private CloudVmClusterProperties(
            string? clusterName,

            string? compartmentId,

            int cpuCoreCount,

            double? dataStorageSizeTb,

            int? dbNodeStorageSizeGb,

            ImmutableArray<string> dbServerOcids,

            Outputs.CloudVmClusterPropertiesDiagnosticsDataCollectionOptions? diagnosticsDataCollectionOptions,

            string? diskRedundancy,

            string? dnsListenerIp,

            string? domain,

            string? giVersion,

            string? hostname,

            string? hostnamePrefix,

            string licenseType,

            bool? localBackupEnabled,

            int? memorySizeGb,

            int? nodeCount,

            string? ociUrl,

            string? ocid,

            double? ocpuCount,

            string? scanDns,

            string? scanDnsRecordId,

            ImmutableArray<string> scanIpIds,

            int? scanListenerPortTcp,

            int? scanListenerPortTcpSsl,

            string? shape,

            bool? sparseDiskgroupEnabled,

            ImmutableArray<string> sshPublicKeys,

            string? state,

            int? storageSizeGb,

            string? systemVersion,

            Outputs.CloudVmClusterPropertiesTimeZone? timeZone)
        {
            ClusterName = clusterName;
            CompartmentId = compartmentId;
            CpuCoreCount = cpuCoreCount;
            DataStorageSizeTb = dataStorageSizeTb;
            DbNodeStorageSizeGb = dbNodeStorageSizeGb;
            DbServerOcids = dbServerOcids;
            DiagnosticsDataCollectionOptions = diagnosticsDataCollectionOptions;
            DiskRedundancy = diskRedundancy;
            DnsListenerIp = dnsListenerIp;
            Domain = domain;
            GiVersion = giVersion;
            Hostname = hostname;
            HostnamePrefix = hostnamePrefix;
            LicenseType = licenseType;
            LocalBackupEnabled = localBackupEnabled;
            MemorySizeGb = memorySizeGb;
            NodeCount = nodeCount;
            OciUrl = ociUrl;
            Ocid = ocid;
            OcpuCount = ocpuCount;
            ScanDns = scanDns;
            ScanDnsRecordId = scanDnsRecordId;
            ScanIpIds = scanIpIds;
            ScanListenerPortTcp = scanListenerPortTcp;
            ScanListenerPortTcpSsl = scanListenerPortTcpSsl;
            Shape = shape;
            SparseDiskgroupEnabled = sparseDiskgroupEnabled;
            SshPublicKeys = sshPublicKeys;
            State = state;
            StorageSizeGb = storageSizeGb;
            SystemVersion = systemVersion;
            TimeZone = timeZone;
        }
    }
}
