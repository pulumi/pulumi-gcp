// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.OracleDatabase
{
    /// <summary>
    /// A CloudExadataInfrastructure resource.
    /// 
    /// To get more information about CloudExadataInfrastructure, see:
    /// 
    /// * [API documentation](https://cloud.google.com/oracle/database/docs/reference/rest/v1/projects.locations.cloudExadataInfrastructures)
    /// * How-to Guides
    ///     * [Create Exadata Infrastructure instances](https://cloud.google.com/oracle/database/docs/create-instances)
    /// 
    /// ## Example Usage
    /// 
    /// ### Oracledatabase Cloud Exadata Infrastructure Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var my_cloud_exadata = new Gcp.OracleDatabase.CloudExadataInfrastructure("my-cloud-exadata", new()
    ///     {
    ///         CloudExadataInfrastructureId = "my-instance",
    ///         DisplayName = "my-instance displayname",
    ///         Location = "us-east4",
    ///         Project = "my-project",
    ///         Properties = new Gcp.OracleDatabase.Inputs.CloudExadataInfrastructurePropertiesArgs
    ///         {
    ///             Shape = "Exadata.X9M",
    ///             ComputeCount = 2,
    ///             StorageCount = 3,
    ///         },
    ///         DeletionProtection = true,
    ///     });
    /// 
    /// });
    /// ```
    /// ### Oracledatabase Cloud Exadata Infrastructure Full
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var my_cloud_exadata = new Gcp.OracleDatabase.CloudExadataInfrastructure("my-cloud-exadata", new()
    ///     {
    ///         CloudExadataInfrastructureId = "my-instance",
    ///         DisplayName = "my-instance displayname",
    ///         Location = "us-east4",
    ///         Project = "my-project",
    ///         GcpOracleZone = "us-east4-b-r1",
    ///         Properties = new Gcp.OracleDatabase.Inputs.CloudExadataInfrastructurePropertiesArgs
    ///         {
    ///             Shape = "Exadata.X9M",
    ///             ComputeCount = 2,
    ///             StorageCount = 3,
    ///             CustomerContacts = new[]
    ///             {
    ///                 new Gcp.OracleDatabase.Inputs.CloudExadataInfrastructurePropertiesCustomerContactArgs
    ///                 {
    ///                     Email = "xyz@example.com",
    ///                 },
    ///             },
    ///             MaintenanceWindow = new Gcp.OracleDatabase.Inputs.CloudExadataInfrastructurePropertiesMaintenanceWindowArgs
    ///             {
    ///                 CustomActionTimeoutMins = 20,
    ///                 DaysOfWeeks = new[]
    ///                 {
    ///                     "SUNDAY",
    ///                 },
    ///                 HoursOfDays = new[]
    ///                 {
    ///                     4,
    ///                 },
    ///                 IsCustomActionTimeoutEnabled = false,
    ///                 LeadTimeWeek = 1,
    ///                 Months = new[]
    ///                 {
    ///                     "JANUARY",
    ///                     "APRIL",
    ///                     "MAY",
    ///                     "OCTOBER",
    ///                 },
    ///                 PatchingMode = "ROLLING",
    ///                 Preference = "CUSTOM_PREFERENCE",
    ///                 WeeksOfMonths = new[]
    ///                 {
    ///                     4,
    ///                 },
    ///             },
    ///             TotalStorageSizeGb = 196608,
    ///         },
    ///         Labels = 
    ///         {
    ///             { "label-one", "value-one" },
    ///         },
    ///         DeletionProtection = true,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// CloudExadataInfrastructure can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/locations/{{location}}/cloudExadataInfrastructures/{{cloud_exadata_infrastructure_id}}`
    /// 
    /// * `{{project}}/{{location}}/{{cloud_exadata_infrastructure_id}}`
    /// 
    /// * `{{location}}/{{cloud_exadata_infrastructure_id}}`
    /// 
    /// When using the `pulumi import` command, CloudExadataInfrastructure can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:oracledatabase/cloudExadataInfrastructure:CloudExadataInfrastructure default projects/{{project}}/locations/{{location}}/cloudExadataInfrastructures/{{cloud_exadata_infrastructure_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:oracledatabase/cloudExadataInfrastructure:CloudExadataInfrastructure default {{project}}/{{location}}/{{cloud_exadata_infrastructure_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:oracledatabase/cloudExadataInfrastructure:CloudExadataInfrastructure default {{location}}/{{cloud_exadata_infrastructure_id}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:oracledatabase/cloudExadataInfrastructure:CloudExadataInfrastructure")]
    public partial class CloudExadataInfrastructure : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the Exadata Infrastructure to create. This value is restricted
        /// to (^a-z?$) and must be a maximum of 63
        /// characters in length. The value must start with a letter and end with
        /// a letter or a number.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Output("cloudExadataInfrastructureId")]
        public Output<string> CloudExadataInfrastructureId { get; private set; } = null!;

        /// <summary>
        /// The date and time that the Exadata Infrastructure was created.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        [Output("deletionProtection")]
        public Output<bool?> DeletionProtection { get; private set; } = null!;

        /// <summary>
        /// User friendly name for this resource.
        /// </summary>
        [Output("displayName")]
        public Output<string?> DisplayName { get; private set; } = null!;

        /// <summary>
        /// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
        /// </summary>
        [Output("effectiveLabels")]
        public Output<ImmutableDictionary<string, string>> EffectiveLabels { get; private set; } = null!;

        /// <summary>
        /// Entitlement ID of the private offer against which this infrastructure
        /// resource is provisioned.
        /// </summary>
        [Output("entitlementId")]
        public Output<string> EntitlementId { get; private set; } = null!;

        /// <summary>
        /// GCP location where Oracle Exadata is hosted.
        /// </summary>
        [Output("gcpOracleZone")]
        public Output<string> GcpOracleZone { get; private set; } = null!;

        /// <summary>
        /// Labels or tags associated with the resource.
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `effective_labels` for all of the labels present on the resource.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// Resource ID segment making up resource `name`. See documentation for resource type `oracledatabase.googleapis.com/DbServer`.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Identifier. The name of the Exadata Infrastructure resource with the following format:
        /// projects/{project}/locations/{region}/cloudExadataInfrastructures/{cloud_exadata_infrastructure}
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Various properties of Exadata Infrastructure.
        /// Structure is documented below.
        /// </summary>
        [Output("properties")]
        public Output<Outputs.CloudExadataInfrastructureProperties?> Properties { get; private set; } = null!;

        /// <summary>
        /// The combination of labels configured directly on the resource
        /// and default labels configured on the provider.
        /// </summary>
        [Output("pulumiLabels")]
        public Output<ImmutableDictionary<string, string>> PulumiLabels { get; private set; } = null!;


        /// <summary>
        /// Create a CloudExadataInfrastructure resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CloudExadataInfrastructure(string name, CloudExadataInfrastructureArgs args, CustomResourceOptions? options = null)
            : base("gcp:oracledatabase/cloudExadataInfrastructure:CloudExadataInfrastructure", name, args ?? new CloudExadataInfrastructureArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CloudExadataInfrastructure(string name, Input<string> id, CloudExadataInfrastructureState? state = null, CustomResourceOptions? options = null)
            : base("gcp:oracledatabase/cloudExadataInfrastructure:CloudExadataInfrastructure", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "effectiveLabels",
                    "pulumiLabels",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CloudExadataInfrastructure resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CloudExadataInfrastructure Get(string name, Input<string> id, CloudExadataInfrastructureState? state = null, CustomResourceOptions? options = null)
        {
            return new CloudExadataInfrastructure(name, id, state, options);
        }
    }

    public sealed class CloudExadataInfrastructureArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Exadata Infrastructure to create. This value is restricted
        /// to (^a-z?$) and must be a maximum of 63
        /// characters in length. The value must start with a letter and end with
        /// a letter or a number.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("cloudExadataInfrastructureId", required: true)]
        public Input<string> CloudExadataInfrastructureId { get; set; } = null!;

        [Input("deletionProtection")]
        public Input<bool>? DeletionProtection { get; set; }

        /// <summary>
        /// User friendly name for this resource.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// GCP location where Oracle Exadata is hosted.
        /// </summary>
        [Input("gcpOracleZone")]
        public Input<string>? GcpOracleZone { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Labels or tags associated with the resource.
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `effective_labels` for all of the labels present on the resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Resource ID segment making up resource `name`. See documentation for resource type `oracledatabase.googleapis.com/DbServer`.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Various properties of Exadata Infrastructure.
        /// Structure is documented below.
        /// </summary>
        [Input("properties")]
        public Input<Inputs.CloudExadataInfrastructurePropertiesArgs>? Properties { get; set; }

        public CloudExadataInfrastructureArgs()
        {
        }
        public static new CloudExadataInfrastructureArgs Empty => new CloudExadataInfrastructureArgs();
    }

    public sealed class CloudExadataInfrastructureState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Exadata Infrastructure to create. This value is restricted
        /// to (^a-z?$) and must be a maximum of 63
        /// characters in length. The value must start with a letter and end with
        /// a letter or a number.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("cloudExadataInfrastructureId")]
        public Input<string>? CloudExadataInfrastructureId { get; set; }

        /// <summary>
        /// The date and time that the Exadata Infrastructure was created.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        [Input("deletionProtection")]
        public Input<bool>? DeletionProtection { get; set; }

        /// <summary>
        /// User friendly name for this resource.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("effectiveLabels")]
        private InputMap<string>? _effectiveLabels;

        /// <summary>
        /// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
        /// </summary>
        public InputMap<string> EffectiveLabels
        {
            get => _effectiveLabels ?? (_effectiveLabels = new InputMap<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableDictionary.Create<string, string>());
                _effectiveLabels = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        /// <summary>
        /// Entitlement ID of the private offer against which this infrastructure
        /// resource is provisioned.
        /// </summary>
        [Input("entitlementId")]
        public Input<string>? EntitlementId { get; set; }

        /// <summary>
        /// GCP location where Oracle Exadata is hosted.
        /// </summary>
        [Input("gcpOracleZone")]
        public Input<string>? GcpOracleZone { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Labels or tags associated with the resource.
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `effective_labels` for all of the labels present on the resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Resource ID segment making up resource `name`. See documentation for resource type `oracledatabase.googleapis.com/DbServer`.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Identifier. The name of the Exadata Infrastructure resource with the following format:
        /// projects/{project}/locations/{region}/cloudExadataInfrastructures/{cloud_exadata_infrastructure}
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Various properties of Exadata Infrastructure.
        /// Structure is documented below.
        /// </summary>
        [Input("properties")]
        public Input<Inputs.CloudExadataInfrastructurePropertiesGetArgs>? Properties { get; set; }

        [Input("pulumiLabels")]
        private InputMap<string>? _pulumiLabels;

        /// <summary>
        /// The combination of labels configured directly on the resource
        /// and default labels configured on the provider.
        /// </summary>
        public InputMap<string> PulumiLabels
        {
            get => _pulumiLabels ?? (_pulumiLabels = new InputMap<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableDictionary.Create<string, string>());
                _pulumiLabels = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        public CloudExadataInfrastructureState()
        {
        }
        public static new CloudExadataInfrastructureState Empty => new CloudExadataInfrastructureState();
    }
}
