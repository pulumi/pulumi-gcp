// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.OracleDatabase
{
    /// <summary>
    /// An OdbSubnet resource which represents a subnet under an OdbNetwork.
    /// 
    /// To get more information about OdbSubnet, see:
    /// * How-to Guides
    ///     * [OracleDatabase@Google Cloud](https://cloud.google.com/oracle/database/docs/overview')
    /// 
    /// ## Example Usage
    /// 
    /// ### Oracledatabase Odbsubnet
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var my_odbsubnet = new Gcp.OracleDatabase.OdbSubnet("my-odbsubnet", new()
    ///     {
    ///         OdbSubnetId = "my-odbsubnet",
    ///         Location = "europe-west2",
    ///         Project = "my-project",
    ///         Odbnetwork = "my-odbnetwork",
    ///         CidrRange = "10.1.1.0/24",
    ///         Purpose = "CLIENT_SUBNET",
    ///         Labels = 
    ///         {
    ///             { "terraform_created", "true" },
    ///         },
    ///         DeletionProtection = true,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// OdbSubnet can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/locations/{{location}}/odbNetworks/{{odbnetwork}}/odbSubnets/{{odb_subnet_id}}`
    /// 
    /// * `{{project}}/{{location}}/{{odbnetwork}}/{{odb_subnet_id}}`
    /// 
    /// * `{{location}}/{{odbnetwork}}/{{odb_subnet_id}}`
    /// 
    /// When using the `pulumi import` command, OdbSubnet can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:oracledatabase/odbSubnet:OdbSubnet default projects/{{project}}/locations/{{location}}/odbNetworks/{{odbnetwork}}/odbSubnets/{{odb_subnet_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:oracledatabase/odbSubnet:OdbSubnet default {{project}}/{{location}}/{{odbnetwork}}/{{odb_subnet_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:oracledatabase/odbSubnet:OdbSubnet default {{location}}/{{odbnetwork}}/{{odb_subnet_id}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:oracledatabase/odbSubnet:OdbSubnet")]
    public partial class OdbSubnet : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The CIDR range of the subnet.
        /// </summary>
        [Output("cidrRange")]
        public Output<string> CidrRange { get; private set; } = null!;

        /// <summary>
        /// The date and time that the OdbNetwork was created.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        [Output("deletionProtection")]
        public Output<bool?> DeletionProtection { get; private set; } = null!;

        /// <summary>
        /// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
        /// </summary>
        [Output("effectiveLabels")]
        public Output<ImmutableDictionary<string, string>> EffectiveLabels { get; private set; } = null!;

        /// <summary>
        /// Labels or tags associated with the resource.
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `EffectiveLabels` for all of the labels present on the resource.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// Resource ID segment making up resource `Name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Identifier. The name of the OdbSubnet resource in the following format:
        /// projects/{project}/locations/{location}/odbNetworks/{odb_network}/odbSubnets/{odb_subnet}
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the OdbSubnet to create. This value is restricted
        /// to (^a-z?$) and must be a maximum of 63
        /// characters in length. The value must start with a letter and end with
        /// a letter or a number.
        /// </summary>
        [Output("odbSubnetId")]
        public Output<string> OdbSubnetId { get; private set; } = null!;

        /// <summary>
        /// Resource ID segment making up resource `Name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
        /// </summary>
        [Output("odbnetwork")]
        public Output<string> Odbnetwork { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The combination of labels configured directly on the resource
        /// and default labels configured on the provider.
        /// </summary>
        [Output("pulumiLabels")]
        public Output<ImmutableDictionary<string, string>> PulumiLabels { get; private set; } = null!;

        /// <summary>
        /// Purpose of the subnet.
        /// Possible values:
        /// CLIENT_SUBNET
        /// BACKUP_SUBNET
        /// </summary>
        [Output("purpose")]
        public Output<string> Purpose { get; private set; } = null!;

        /// <summary>
        /// State of the ODB Subnet.
        /// Possible values:
        /// PROVISIONING
        /// AVAILABLE
        /// TERMINATING
        /// FAILED
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;


        /// <summary>
        /// Create a OdbSubnet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OdbSubnet(string name, OdbSubnetArgs args, CustomResourceOptions? options = null)
            : base("gcp:oracledatabase/odbSubnet:OdbSubnet", name, args ?? new OdbSubnetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OdbSubnet(string name, Input<string> id, OdbSubnetState? state = null, CustomResourceOptions? options = null)
            : base("gcp:oracledatabase/odbSubnet:OdbSubnet", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "effectiveLabels",
                    "pulumiLabels",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OdbSubnet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OdbSubnet Get(string name, Input<string> id, OdbSubnetState? state = null, CustomResourceOptions? options = null)
        {
            return new OdbSubnet(name, id, state, options);
        }
    }

    public sealed class OdbSubnetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The CIDR range of the subnet.
        /// </summary>
        [Input("cidrRange", required: true)]
        public Input<string> CidrRange { get; set; } = null!;

        [Input("deletionProtection")]
        public Input<bool>? DeletionProtection { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Labels or tags associated with the resource.
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `EffectiveLabels` for all of the labels present on the resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Resource ID segment making up resource `Name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The ID of the OdbSubnet to create. This value is restricted
        /// to (^a-z?$) and must be a maximum of 63
        /// characters in length. The value must start with a letter and end with
        /// a letter or a number.
        /// </summary>
        [Input("odbSubnetId", required: true)]
        public Input<string> OdbSubnetId { get; set; } = null!;

        /// <summary>
        /// Resource ID segment making up resource `Name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
        /// </summary>
        [Input("odbnetwork", required: true)]
        public Input<string> Odbnetwork { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Purpose of the subnet.
        /// Possible values:
        /// CLIENT_SUBNET
        /// BACKUP_SUBNET
        /// </summary>
        [Input("purpose", required: true)]
        public Input<string> Purpose { get; set; } = null!;

        public OdbSubnetArgs()
        {
        }
        public static new OdbSubnetArgs Empty => new OdbSubnetArgs();
    }

    public sealed class OdbSubnetState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The CIDR range of the subnet.
        /// </summary>
        [Input("cidrRange")]
        public Input<string>? CidrRange { get; set; }

        /// <summary>
        /// The date and time that the OdbNetwork was created.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        [Input("deletionProtection")]
        public Input<bool>? DeletionProtection { get; set; }

        [Input("effectiveLabels")]
        private InputMap<string>? _effectiveLabels;

        /// <summary>
        /// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
        /// </summary>
        public InputMap<string> EffectiveLabels
        {
            get => _effectiveLabels ?? (_effectiveLabels = new InputMap<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableDictionary.Create<string, string>());
                _effectiveLabels = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Labels or tags associated with the resource.
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `EffectiveLabels` for all of the labels present on the resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Resource ID segment making up resource `Name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Identifier. The name of the OdbSubnet resource in the following format:
        /// projects/{project}/locations/{location}/odbNetworks/{odb_network}/odbSubnets/{odb_subnet}
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the OdbSubnet to create. This value is restricted
        /// to (^a-z?$) and must be a maximum of 63
        /// characters in length. The value must start with a letter and end with
        /// a letter or a number.
        /// </summary>
        [Input("odbSubnetId")]
        public Input<string>? OdbSubnetId { get; set; }

        /// <summary>
        /// Resource ID segment making up resource `Name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
        /// </summary>
        [Input("odbnetwork")]
        public Input<string>? Odbnetwork { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("pulumiLabels")]
        private InputMap<string>? _pulumiLabels;

        /// <summary>
        /// The combination of labels configured directly on the resource
        /// and default labels configured on the provider.
        /// </summary>
        public InputMap<string> PulumiLabels
        {
            get => _pulumiLabels ?? (_pulumiLabels = new InputMap<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableDictionary.Create<string, string>());
                _pulumiLabels = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        /// <summary>
        /// Purpose of the subnet.
        /// Possible values:
        /// CLIENT_SUBNET
        /// BACKUP_SUBNET
        /// </summary>
        [Input("purpose")]
        public Input<string>? Purpose { get; set; }

        /// <summary>
        /// State of the ODB Subnet.
        /// Possible values:
        /// PROVISIONING
        /// AVAILABLE
        /// TERMINATING
        /// FAILED
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public OdbSubnetState()
        {
        }
        public static new OdbSubnetState Empty => new OdbSubnetState();
    }
}
