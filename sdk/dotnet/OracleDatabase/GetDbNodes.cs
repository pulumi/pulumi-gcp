// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.OracleDatabase
{
    public static class GetDbNodes
    {
        /// <summary>
        /// List all DbNodes of a Cloud VmCluster.
        /// 
        /// For more information see the
        /// [API](https://cloud.google.com/oracle/database/docs/reference/rest/v1/projects.locations.cloudVmClusters.dbNodes).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myDbNodes = Gcp.OracleDatabase.GetDbNodes.Invoke(new()
        ///     {
        ///         Location = "us-east4",
        ///         CloudVmCluster = "vmcluster-id",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ## Attributes reference
        /// 
        /// The following attributes are exported:
        /// 
        /// * `db_nodes` - List of dbNodes. Structure is documented below.
        /// 
        /// &lt;a name="nested_dbnodes"&gt;&lt;/a&gt; The `db_nodes` block supports:
        /// 
        /// * `name` - The name of the database node resource in the following format: projects/{project}/locations/{location}/cloudVmClusters/{cloudVmCluster}/dbNodes/{db_node}
        /// 
        /// * `properties` - Various properties of the database node. Structure is documented below.
        /// 
        /// &lt;a name="nested_properties"&gt;&lt;/a&gt; The `properties` block supports:
        /// 
        /// * `ocid`- OCID of database node.
        /// 
        /// * `ocpu_count` - OCPU count per database node.
        /// 
        /// * `memory_size_gb` - The allocated memory in GBs on the database node.
        /// 
        /// * `db_node_storage_size_gb` - The allocated local node storage in GBs on the database node.
        /// 
        /// * `db_server_ocid` - The OCID of the Database server associated with the database node.
        /// 
        /// * `hostname` - The host name for the database node.
        /// 
        /// * `state` - State of the database node.
        /// &lt;a name="nested_states"&gt;&lt;/a&gt;Possible values for `state` are:&lt;br&gt;
        /// `PROVISIONING` - Indicates that the resource is being provisioned.&lt;br&gt;
        /// `AVAILABLE` - Indicates that the resource is available.&lt;br&gt;
        /// `UPDATING` - Indicates that the resource is being updated.&lt;br&gt;
        /// `STOPPING` - Indicates that the resource is being stopped.&lt;br&gt;
        /// `STOPPED` - Indicates that the resource is stopped.&lt;br&gt;
        /// `STARTING` - Indicates that the resource is being started.&lt;br&gt;
        /// `TERMINATING` - Indicates that the resource is being terminated.&lt;br&gt;
        /// `TERMINATED` - Indicates that the resource is terminated.&lt;br&gt;
        /// `FAILED` - Indicates that the resource has failed.&lt;br&gt;
        /// 
        /// * `total_cpu_core_count` - The total number of CPU cores reserved on the database node.
        /// </summary>
        public static Task<GetDbNodesResult> InvokeAsync(GetDbNodesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDbNodesResult>("gcp:oracledatabase/getDbNodes:getDbNodes", args ?? new GetDbNodesArgs(), options.WithDefaults());

        /// <summary>
        /// List all DbNodes of a Cloud VmCluster.
        /// 
        /// For more information see the
        /// [API](https://cloud.google.com/oracle/database/docs/reference/rest/v1/projects.locations.cloudVmClusters.dbNodes).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myDbNodes = Gcp.OracleDatabase.GetDbNodes.Invoke(new()
        ///     {
        ///         Location = "us-east4",
        ///         CloudVmCluster = "vmcluster-id",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ## Attributes reference
        /// 
        /// The following attributes are exported:
        /// 
        /// * `db_nodes` - List of dbNodes. Structure is documented below.
        /// 
        /// &lt;a name="nested_dbnodes"&gt;&lt;/a&gt; The `db_nodes` block supports:
        /// 
        /// * `name` - The name of the database node resource in the following format: projects/{project}/locations/{location}/cloudVmClusters/{cloudVmCluster}/dbNodes/{db_node}
        /// 
        /// * `properties` - Various properties of the database node. Structure is documented below.
        /// 
        /// &lt;a name="nested_properties"&gt;&lt;/a&gt; The `properties` block supports:
        /// 
        /// * `ocid`- OCID of database node.
        /// 
        /// * `ocpu_count` - OCPU count per database node.
        /// 
        /// * `memory_size_gb` - The allocated memory in GBs on the database node.
        /// 
        /// * `db_node_storage_size_gb` - The allocated local node storage in GBs on the database node.
        /// 
        /// * `db_server_ocid` - The OCID of the Database server associated with the database node.
        /// 
        /// * `hostname` - The host name for the database node.
        /// 
        /// * `state` - State of the database node.
        /// &lt;a name="nested_states"&gt;&lt;/a&gt;Possible values for `state` are:&lt;br&gt;
        /// `PROVISIONING` - Indicates that the resource is being provisioned.&lt;br&gt;
        /// `AVAILABLE` - Indicates that the resource is available.&lt;br&gt;
        /// `UPDATING` - Indicates that the resource is being updated.&lt;br&gt;
        /// `STOPPING` - Indicates that the resource is being stopped.&lt;br&gt;
        /// `STOPPED` - Indicates that the resource is stopped.&lt;br&gt;
        /// `STARTING` - Indicates that the resource is being started.&lt;br&gt;
        /// `TERMINATING` - Indicates that the resource is being terminated.&lt;br&gt;
        /// `TERMINATED` - Indicates that the resource is terminated.&lt;br&gt;
        /// `FAILED` - Indicates that the resource has failed.&lt;br&gt;
        /// 
        /// * `total_cpu_core_count` - The total number of CPU cores reserved on the database node.
        /// </summary>
        public static Output<GetDbNodesResult> Invoke(GetDbNodesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDbNodesResult>("gcp:oracledatabase/getDbNodes:getDbNodes", args ?? new GetDbNodesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// List all DbNodes of a Cloud VmCluster.
        /// 
        /// For more information see the
        /// [API](https://cloud.google.com/oracle/database/docs/reference/rest/v1/projects.locations.cloudVmClusters.dbNodes).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myDbNodes = Gcp.OracleDatabase.GetDbNodes.Invoke(new()
        ///     {
        ///         Location = "us-east4",
        ///         CloudVmCluster = "vmcluster-id",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ## Attributes reference
        /// 
        /// The following attributes are exported:
        /// 
        /// * `db_nodes` - List of dbNodes. Structure is documented below.
        /// 
        /// &lt;a name="nested_dbnodes"&gt;&lt;/a&gt; The `db_nodes` block supports:
        /// 
        /// * `name` - The name of the database node resource in the following format: projects/{project}/locations/{location}/cloudVmClusters/{cloudVmCluster}/dbNodes/{db_node}
        /// 
        /// * `properties` - Various properties of the database node. Structure is documented below.
        /// 
        /// &lt;a name="nested_properties"&gt;&lt;/a&gt; The `properties` block supports:
        /// 
        /// * `ocid`- OCID of database node.
        /// 
        /// * `ocpu_count` - OCPU count per database node.
        /// 
        /// * `memory_size_gb` - The allocated memory in GBs on the database node.
        /// 
        /// * `db_node_storage_size_gb` - The allocated local node storage in GBs on the database node.
        /// 
        /// * `db_server_ocid` - The OCID of the Database server associated with the database node.
        /// 
        /// * `hostname` - The host name for the database node.
        /// 
        /// * `state` - State of the database node.
        /// &lt;a name="nested_states"&gt;&lt;/a&gt;Possible values for `state` are:&lt;br&gt;
        /// `PROVISIONING` - Indicates that the resource is being provisioned.&lt;br&gt;
        /// `AVAILABLE` - Indicates that the resource is available.&lt;br&gt;
        /// `UPDATING` - Indicates that the resource is being updated.&lt;br&gt;
        /// `STOPPING` - Indicates that the resource is being stopped.&lt;br&gt;
        /// `STOPPED` - Indicates that the resource is stopped.&lt;br&gt;
        /// `STARTING` - Indicates that the resource is being started.&lt;br&gt;
        /// `TERMINATING` - Indicates that the resource is being terminated.&lt;br&gt;
        /// `TERMINATED` - Indicates that the resource is terminated.&lt;br&gt;
        /// `FAILED` - Indicates that the resource has failed.&lt;br&gt;
        /// 
        /// * `total_cpu_core_count` - The total number of CPU cores reserved on the database node.
        /// </summary>
        public static Output<GetDbNodesResult> Invoke(GetDbNodesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDbNodesResult>("gcp:oracledatabase/getDbNodes:getDbNodes", args ?? new GetDbNodesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDbNodesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the VM Cluster.
        /// </summary>
        [Input("cloudVmCluster", required: true)]
        public string CloudVmCluster { get; set; } = null!;

        /// <summary>
        /// The location of the resource.
        /// </summary>
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        /// <summary>
        /// The project in which the resource belongs. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        public GetDbNodesArgs()
        {
        }
        public static new GetDbNodesArgs Empty => new GetDbNodesArgs();
    }

    public sealed class GetDbNodesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the VM Cluster.
        /// </summary>
        [Input("cloudVmCluster", required: true)]
        public Input<string> CloudVmCluster { get; set; } = null!;

        /// <summary>
        /// The location of the resource.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The project in which the resource belongs. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetDbNodesInvokeArgs()
        {
        }
        public static new GetDbNodesInvokeArgs Empty => new GetDbNodesInvokeArgs();
    }


    [OutputType]
    public sealed class GetDbNodesResult
    {
        public readonly string CloudVmCluster;
        public readonly ImmutableArray<Outputs.GetDbNodesDbNodeResult> DbNodes;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Location;
        public readonly string? Project;

        [OutputConstructor]
        private GetDbNodesResult(
            string cloudVmCluster,

            ImmutableArray<Outputs.GetDbNodesDbNodeResult> dbNodes,

            string id,

            string location,

            string? project)
        {
            CloudVmCluster = cloudVmCluster;
            DbNodes = dbNodes;
            Id = id;
            Location = location;
            Project = project;
        }
    }
}
