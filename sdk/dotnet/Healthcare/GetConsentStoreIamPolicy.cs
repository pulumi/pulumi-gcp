// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Healthcare
{
    public static class GetConsentStoreIamPolicy
    {
        /// <summary>
        /// Retrieves the current IAM policy data for consentstore
        /// 
        /// 
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Healthcare.GetConsentStoreIamPolicy.Invoke(new()
        ///     {
        ///         Dataset = google_healthcare_consent_store.My_consent.Dataset,
        ///         ConsentStoreId = google_healthcare_consent_store.My_consent.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetConsentStoreIamPolicyResult> InvokeAsync(GetConsentStoreIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConsentStoreIamPolicyResult>("gcp:healthcare/getConsentStoreIamPolicy:getConsentStoreIamPolicy", args ?? new GetConsentStoreIamPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the current IAM policy data for consentstore
        /// 
        /// 
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Healthcare.GetConsentStoreIamPolicy.Invoke(new()
        ///     {
        ///         Dataset = google_healthcare_consent_store.My_consent.Dataset,
        ///         ConsentStoreId = google_healthcare_consent_store.My_consent.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetConsentStoreIamPolicyResult> Invoke(GetConsentStoreIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConsentStoreIamPolicyResult>("gcp:healthcare/getConsentStoreIamPolicy:getConsentStoreIamPolicy", args ?? new GetConsentStoreIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConsentStoreIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("consentStoreId", required: true)]
        public string ConsentStoreId { get; set; } = null!;

        /// <summary>
        /// Identifies the dataset addressed by this request. Must be in the format
        /// 'projects/{project}/locations/{location}/datasets/{dataset}'
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("dataset", required: true)]
        public string Dataset { get; set; } = null!;

        public GetConsentStoreIamPolicyArgs()
        {
        }
        public static new GetConsentStoreIamPolicyArgs Empty => new GetConsentStoreIamPolicyArgs();
    }

    public sealed class GetConsentStoreIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("consentStoreId", required: true)]
        public Input<string> ConsentStoreId { get; set; } = null!;

        /// <summary>
        /// Identifies the dataset addressed by this request. Must be in the format
        /// 'projects/{project}/locations/{location}/datasets/{dataset}'
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("dataset", required: true)]
        public Input<string> Dataset { get; set; } = null!;

        public GetConsentStoreIamPolicyInvokeArgs()
        {
        }
        public static new GetConsentStoreIamPolicyInvokeArgs Empty => new GetConsentStoreIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetConsentStoreIamPolicyResult
    {
        public readonly string ConsentStoreId;
        public readonly string Dataset;
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (Required only by `gcp.healthcare.ConsentStoreIamPolicy`) The policy data generated by
        /// a `gcp.organizations.getIAMPolicy` data source.
        /// </summary>
        public readonly string PolicyData;

        [OutputConstructor]
        private GetConsentStoreIamPolicyResult(
            string consentStoreId,

            string dataset,

            string etag,

            string id,

            string policyData)
        {
            ConsentStoreId = consentStoreId;
            Dataset = dataset;
            Etag = etag;
            Id = id;
            PolicyData = policyData;
        }
    }
}
