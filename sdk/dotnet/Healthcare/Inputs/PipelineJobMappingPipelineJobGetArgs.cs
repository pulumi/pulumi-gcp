// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Healthcare.Inputs
{

    public sealed class PipelineJobMappingPipelineJobGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// If set, the mapping pipeline will write snapshots to this
        /// FHIR store without assigning stable IDs. You must
        /// grant your pipeline project's Cloud Healthcare Service
        /// Agent serviceaccount healthcare.fhirResources.executeBundle
        /// and healthcare.fhirResources.create permissions on the
        /// destination store. The destination store must set
        /// [disableReferentialIntegrity][FhirStore.disable_referential_integrity]
        /// to true. The destination store must use FHIR version R4.
        /// Format: project/{projectID}/locations/{locationID}/datasets/{datasetName}/fhirStores/{fhirStoreID}.
        /// </summary>
        [Input("fhirStoreDestination")]
        public Input<string>? FhirStoreDestination { get; set; }

        /// <summary>
        /// A streaming FHIR data source.
        /// Structure is documented below.
        /// </summary>
        [Input("fhirStreamingSource")]
        public Input<Inputs.PipelineJobMappingPipelineJobFhirStreamingSourceGetArgs>? FhirStreamingSource { get; set; }

        /// <summary>
        /// The location of the mapping configuration.
        /// Structure is documented below.
        /// </summary>
        [Input("mappingConfig", required: true)]
        public Input<Inputs.PipelineJobMappingPipelineJobMappingConfigGetArgs> MappingConfig { get; set; } = null!;

        /// <summary>
        /// If set to true, a mapping pipeline will send output snapshots
        /// to the reconciliation pipeline in its dataset. A reconciliation
        /// pipeline must exist in this dataset before a mapping pipeline
        /// with a reconciliation destination can be created.
        /// </summary>
        [Input("reconciliationDestination")]
        public Input<bool>? ReconciliationDestination { get; set; }

        public PipelineJobMappingPipelineJobGetArgs()
        {
        }
        public static new PipelineJobMappingPipelineJobGetArgs Empty => new PipelineJobMappingPipelineJobGetArgs();
    }
}
