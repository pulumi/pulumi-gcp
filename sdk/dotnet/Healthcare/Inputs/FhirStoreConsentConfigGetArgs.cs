// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Healthcare.Inputs
{

    public sealed class FhirStoreConsentConfigGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies how the server logs the consent-aware requests. If not specified, the AccessDeterminationLogConfig.LogLevel.MINIMUM option is used.
        /// Structure is documented below.
        /// </summary>
        [Input("accessDeterminationLogConfig")]
        public Input<Inputs.FhirStoreConsentConfigAccessDeterminationLogConfigGetArgs>? AccessDeterminationLogConfig { get; set; }

        /// <summary>
        /// The default value is false. If set to true, when accessing FHIR resources, the consent headers will be verified against consents given by patients. See the ConsentEnforcementVersion for the supported consent headers.
        /// </summary>
        [Input("accessEnforced")]
        public Input<bool>? AccessEnforced { get; set; }

        /// <summary>
        /// Different options to configure the behaviour of the server when handling the X-Consent-Scope header.
        /// Structure is documented below.
        /// </summary>
        [Input("consentHeaderHandling")]
        public Input<Inputs.FhirStoreConsentConfigConsentHeaderHandlingGetArgs>? ConsentHeaderHandling { get; set; }

        [Input("enforcedAdminConsents")]
        private InputList<string>? _enforcedAdminConsents;

        /// <summary>
        /// (Output)
        /// The versioned names of the enforced admin Consent resource(s), in the format projects/{projectId}/locations/{location}/datasets/{datasetId}/fhirStores/{fhirStoreId}/fhir/Consent/{resourceId}/_history/{version_id}. For FHIR stores with disableResourceVersioning=true, the format is projects/{projectId}/locations/{location}/datasets/{datasetId}/fhirStores/{fhirStoreId}/fhir/Consent/{resourceId}. This field can only be updated using [fhirStores.applyAdminConsents][].
        /// </summary>
        public InputList<string> EnforcedAdminConsents
        {
            get => _enforcedAdminConsents ?? (_enforcedAdminConsents = new InputList<string>());
            set => _enforcedAdminConsents = value;
        }

        /// <summary>
        /// Specifies which consent enforcement version is being used for this FHIR store. This field can only be set once by either [fhirStores.create][] or [fhirStores.patch][]. After that, you must call [fhirStores.applyConsents][] to change the version.
        /// Possible values are: `CONSENT_ENFORCEMENT_VERSION_UNSPECIFIED`, `V1`.
        /// </summary>
        [Input("version", required: true)]
        public Input<string> Version { get; set; } = null!;

        public FhirStoreConsentConfigGetArgs()
        {
        }
        public static new FhirStoreConsentConfigGetArgs Empty => new FhirStoreConsentConfigGetArgs();
    }
}
