// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Healthcare
{
    public static class GetDatasetIamPolicy
    {
        /// <summary>
        /// Retrieves the current IAM policy data for a Google Cloud Healthcare dataset.
        /// </summary>
        public static Task<GetDatasetIamPolicyResult> InvokeAsync(GetDatasetIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDatasetIamPolicyResult>("gcp:healthcare/getDatasetIamPolicy:getDatasetIamPolicy", args ?? new GetDatasetIamPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the current IAM policy data for a Google Cloud Healthcare dataset.
        /// </summary>
        public static Output<GetDatasetIamPolicyResult> Invoke(GetDatasetIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatasetIamPolicyResult>("gcp:healthcare/getDatasetIamPolicy:getDatasetIamPolicy", args ?? new GetDatasetIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDatasetIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The dataset ID, in the form
        /// `{project_id}/{location_name}/{dataset_name}` or
        /// `{location_name}/{dataset_name}`. In the second form, the provider's
        /// project setting will be used as a fallback.
        /// </summary>
        [Input("datasetId", required: true)]
        public string DatasetId { get; set; } = null!;

        public GetDatasetIamPolicyArgs()
        {
        }
        public static new GetDatasetIamPolicyArgs Empty => new GetDatasetIamPolicyArgs();
    }

    public sealed class GetDatasetIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The dataset ID, in the form
        /// `{project_id}/{location_name}/{dataset_name}` or
        /// `{location_name}/{dataset_name}`. In the second form, the provider's
        /// project setting will be used as a fallback.
        /// </summary>
        [Input("datasetId", required: true)]
        public Input<string> DatasetId { get; set; } = null!;

        public GetDatasetIamPolicyInvokeArgs()
        {
        }
        public static new GetDatasetIamPolicyInvokeArgs Empty => new GetDatasetIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetDatasetIamPolicyResult
    {
        public readonly string DatasetId;
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (Computed) The policy data
        /// </summary>
        public readonly string PolicyData;

        [OutputConstructor]
        private GetDatasetIamPolicyResult(
            string datasetId,

            string etag,

            string id,

            string policyData)
        {
            DatasetId = datasetId;
            Etag = etag;
            Id = id;
            PolicyData = policyData;
        }
    }
}
