// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Healthcare.Outputs
{

    [OutputType]
    public sealed class PipelineJobMappingPipelineJob
    {
        /// <summary>
        /// If set, the mapping pipeline will write snapshots to this
        /// FHIR store without assigning stable IDs. You must
        /// grant your pipeline project's Cloud Healthcare Service
        /// Agent serviceaccount healthcare.fhirResources.executeBundle
        /// and healthcare.fhirResources.create permissions on the
        /// destination store. The destination store must set
        /// [disableReferentialIntegrity][FhirStore.disable_referential_integrity]
        /// to true. The destination store must use FHIR version R4.
        /// Format: project/{projectID}/locations/{locationID}/datasets/{datasetName}/fhirStores/{fhirStoreID}.
        /// </summary>
        public readonly string? FhirStoreDestination;
        /// <summary>
        /// A streaming FHIR data source.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.PipelineJobMappingPipelineJobFhirStreamingSource? FhirStreamingSource;
        /// <summary>
        /// The location of the mapping configuration.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.PipelineJobMappingPipelineJobMappingConfig MappingConfig;
        /// <summary>
        /// If set to true, a mapping pipeline will send output snapshots
        /// to the reconciliation pipeline in its dataset. A reconciliation
        /// pipeline must exist in this dataset before a mapping pipeline
        /// with a reconciliation destination can be created.
        /// </summary>
        public readonly bool? ReconciliationDestination;

        [OutputConstructor]
        private PipelineJobMappingPipelineJob(
            string? fhirStoreDestination,

            Outputs.PipelineJobMappingPipelineJobFhirStreamingSource? fhirStreamingSource,

            Outputs.PipelineJobMappingPipelineJobMappingConfig mappingConfig,

            bool? reconciliationDestination)
        {
            FhirStoreDestination = fhirStoreDestination;
            FhirStreamingSource = fhirStreamingSource;
            MappingConfig = mappingConfig;
            ReconciliationDestination = reconciliationDestination;
        }
    }
}
