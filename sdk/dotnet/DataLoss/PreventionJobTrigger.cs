// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.DataLoss
{
    /// <summary>
    /// A job trigger configuration.
    /// 
    /// To get more information about JobTrigger, see:
    /// 
    /// * [API documentation](https://cloud.google.com/dlp/docs/reference/rest/v2/projects.jobTriggers)
    /// * How-to Guides
    ///     * [Official Documentation](https://cloud.google.com/dlp/docs/creating-job-triggers)
    /// 
    /// ## Example Usage
    /// ### Dlp Job Trigger Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var basic = new Gcp.DataLoss.PreventionJobTrigger("basic", new()
    ///     {
    ///         Description = "Description",
    ///         DisplayName = "Displayname",
    ///         InspectJob = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobArgs
    ///         {
    ///             Actions = new[]
    ///             {
    ///                 new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobActionArgs
    ///                 {
    ///                     SaveFindings = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobActionSaveFindingsArgs
    ///                     {
    ///                         OutputConfig = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigArgs
    ///                         {
    ///                             Table = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigTableArgs
    ///                             {
    ///                                 DatasetId = "dataset",
    ///                                 ProjectId = "project",
    ///                             },
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             InspectTemplateName = "fake",
    ///             StorageConfig = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobStorageConfigArgs
    ///             {
    ///                 CloudStorageOptions = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsArgs
    ///                 {
    ///                     FileSet = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsFileSetArgs
    ///                     {
    ///                         Url = "gs://mybucket/directory/",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         Parent = "projects/my-project-name",
    ///         Triggers = new[]
    ///         {
    ///             new Gcp.DataLoss.Inputs.PreventionJobTriggerTriggerArgs
    ///             {
    ///                 Schedule = new Gcp.DataLoss.Inputs.PreventionJobTriggerTriggerScheduleArgs
    ///                 {
    ///                     RecurrencePeriodDuration = "86400s",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Dlp Job Trigger Bigquery Row Limit
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var bigqueryRowLimit = new Gcp.DataLoss.PreventionJobTrigger("bigqueryRowLimit", new()
    ///     {
    ///         Description = "Description",
    ///         DisplayName = "Displayname",
    ///         InspectJob = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobArgs
    ///         {
    ///             Actions = new[]
    ///             {
    ///                 new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobActionArgs
    ///                 {
    ///                     SaveFindings = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobActionSaveFindingsArgs
    ///                     {
    ///                         OutputConfig = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigArgs
    ///                         {
    ///                             Table = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigTableArgs
    ///                             {
    ///                                 DatasetId = "dataset",
    ///                                 ProjectId = "project",
    ///                             },
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             InspectTemplateName = "fake",
    ///             StorageConfig = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobStorageConfigArgs
    ///             {
    ///                 BigQueryOptions = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsArgs
    ///                 {
    ///                     RowsLimit = 1000,
    ///                     SampleMethod = "RANDOM_START",
    ///                     TableReference = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsTableReferenceArgs
    ///                     {
    ///                         DatasetId = "dataset",
    ///                         ProjectId = "project",
    ///                         TableId = "table_to_scan",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         Parent = "projects/my-project-name",
    ///         Triggers = new[]
    ///         {
    ///             new Gcp.DataLoss.Inputs.PreventionJobTriggerTriggerArgs
    ///             {
    ///                 Schedule = new Gcp.DataLoss.Inputs.PreventionJobTriggerTriggerScheduleArgs
    ///                 {
    ///                     RecurrencePeriodDuration = "86400s",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Dlp Job Trigger Bigquery Row Limit Percentage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var bigqueryRowLimitPercentage = new Gcp.DataLoss.PreventionJobTrigger("bigqueryRowLimitPercentage", new()
    ///     {
    ///         Description = "Description",
    ///         DisplayName = "Displayname",
    ///         InspectJob = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobArgs
    ///         {
    ///             Actions = new[]
    ///             {
    ///                 new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobActionArgs
    ///                 {
    ///                     SaveFindings = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobActionSaveFindingsArgs
    ///                     {
    ///                         OutputConfig = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigArgs
    ///                         {
    ///                             Table = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigTableArgs
    ///                             {
    ///                                 DatasetId = "dataset",
    ///                                 ProjectId = "project",
    ///                             },
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             InspectTemplateName = "fake",
    ///             StorageConfig = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobStorageConfigArgs
    ///             {
    ///                 BigQueryOptions = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsArgs
    ///                 {
    ///                     RowsLimitPercent = 50,
    ///                     SampleMethod = "RANDOM_START",
    ///                     TableReference = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobStorageConfigBigQueryOptionsTableReferenceArgs
    ///                     {
    ///                         DatasetId = "dataset",
    ///                         ProjectId = "project",
    ///                         TableId = "table_to_scan",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         Parent = "projects/my-project-name",
    ///         Triggers = new[]
    ///         {
    ///             new Gcp.DataLoss.Inputs.PreventionJobTriggerTriggerArgs
    ///             {
    ///                 Schedule = new Gcp.DataLoss.Inputs.PreventionJobTriggerTriggerScheduleArgs
    ///                 {
    ///                     RecurrencePeriodDuration = "86400s",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Dlp Job Trigger Job Notification Emails
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var jobNotificationEmails = new Gcp.DataLoss.PreventionJobTrigger("jobNotificationEmails", new()
    ///     {
    ///         Description = "Description for the job_trigger created by terraform",
    ///         DisplayName = "TerraformDisplayName",
    ///         InspectJob = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobArgs
    ///         {
    ///             Actions = new[]
    ///             {
    ///                 new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobActionArgs
    ///                 {
    ///                     JobNotificationEmails = null,
    ///                 },
    ///             },
    ///             InspectTemplateName = "sample-inspect-template",
    ///             StorageConfig = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobStorageConfigArgs
    ///             {
    ///                 CloudStorageOptions = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsArgs
    ///                 {
    ///                     FileSet = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsFileSetArgs
    ///                     {
    ///                         Url = "gs://mybucket/directory/",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         Parent = "projects/my-project-name",
    ///         Triggers = new[]
    ///         {
    ///             new Gcp.DataLoss.Inputs.PreventionJobTriggerTriggerArgs
    ///             {
    ///                 Schedule = new Gcp.DataLoss.Inputs.PreventionJobTriggerTriggerScheduleArgs
    ///                 {
    ///                     RecurrencePeriodDuration = "86400s",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Dlp Job Trigger Deidentify
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var defaultDataset = new Gcp.BigQuery.Dataset("defaultDataset", new()
    ///     {
    ///         DatasetId = "tf_test",
    ///         FriendlyName = "terraform-test",
    ///         Description = "Description for the dataset created by terraform",
    ///         Location = "US",
    ///         DefaultTableExpirationMs = 3600000,
    ///         Labels = 
    ///         {
    ///             { "env", "default" },
    ///         },
    ///     });
    /// 
    ///     var defaultTable = new Gcp.BigQuery.Table("defaultTable", new()
    ///     {
    ///         DatasetId = defaultDataset.DatasetId,
    ///         TableId = "tf_test",
    ///         DeletionProtection = false,
    ///         TimePartitioning = new Gcp.BigQuery.Inputs.TableTimePartitioningArgs
    ///         {
    ///             Type = "DAY",
    ///         },
    ///         Labels = 
    ///         {
    ///             { "env", "default" },
    ///         },
    ///         Schema = @"    [
    ///     {
    ///       ""name"": ""quantity"",
    ///       ""type"": ""NUMERIC"",
    ///       ""mode"": ""NULLABLE"",
    ///       ""description"": ""The quantity""
    ///     },
    ///     {
    ///       ""name"": ""name"",
    ///       ""type"": ""STRING"",
    ///       ""mode"": ""NULLABLE"",
    ///       ""description"": ""Name of the object""
    ///     }
    ///     ]
    /// ",
    ///     });
    /// 
    ///     var deidentify = new Gcp.DataLoss.PreventionJobTrigger("deidentify", new()
    ///     {
    ///         Parent = "projects/my-project-name",
    ///         Description = "Description for the job_trigger created by terraform",
    ///         DisplayName = "TerraformDisplayName",
    ///         Triggers = new[]
    ///         {
    ///             new Gcp.DataLoss.Inputs.PreventionJobTriggerTriggerArgs
    ///             {
    ///                 Schedule = new Gcp.DataLoss.Inputs.PreventionJobTriggerTriggerScheduleArgs
    ///                 {
    ///                     RecurrencePeriodDuration = "86400s",
    ///                 },
    ///             },
    ///         },
    ///         InspectJob = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobArgs
    ///         {
    ///             InspectTemplateName = "sample-inspect-template",
    ///             Actions = new[]
    ///             {
    ///                 new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobActionArgs
    ///                 {
    ///                     Deidentify = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobActionDeidentifyArgs
    ///                     {
    ///                         CloudStorageOutput = "gs://samplebucket/dir/",
    ///                         FileTypesToTransforms = new[]
    ///                         {
    ///                             "CSV",
    ///                             "TSV",
    ///                         },
    ///                         TransformationDetailsStorageConfig = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobActionDeidentifyTransformationDetailsStorageConfigArgs
    ///                         {
    ///                             Table = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobActionDeidentifyTransformationDetailsStorageConfigTableArgs
    ///                             {
    ///                                 ProjectId = "my-project-name",
    ///                                 DatasetId = defaultDataset.DatasetId,
    ///                                 TableId = defaultTable.TableId,
    ///                             },
    ///                         },
    ///                         TransformationConfig = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobActionDeidentifyTransformationConfigArgs
    ///                         {
    ///                             DeidentifyTemplate = "sample-deidentify-template",
    ///                             ImageRedactTemplate = "sample-image-redact-template",
    ///                             StructuredDeidentifyTemplate = "sample-structured-deidentify-template",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             StorageConfig = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobStorageConfigArgs
    ///             {
    ///                 CloudStorageOptions = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsArgs
    ///                 {
    ///                     FileSet = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsFileSetArgs
    ///                     {
    ///                         Url = "gs://mybucket/directory/",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Dlp Job Trigger Hybrid
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var hybridTrigger = new Gcp.DataLoss.PreventionJobTrigger("hybridTrigger", new()
    ///     {
    ///         InspectJob = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobArgs
    ///         {
    ///             Actions = new[]
    ///             {
    ///                 new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobActionArgs
    ///                 {
    ///                     SaveFindings = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobActionSaveFindingsArgs
    ///                     {
    ///                         OutputConfig = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigArgs
    ///                         {
    ///                             Table = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobActionSaveFindingsOutputConfigTableArgs
    ///                             {
    ///                                 DatasetId = "dataset",
    ///                                 ProjectId = "project",
    ///                             },
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             InspectTemplateName = "fake",
    ///             StorageConfig = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobStorageConfigArgs
    ///             {
    ///                 HybridOptions = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobStorageConfigHybridOptionsArgs
    ///                 {
    ///                     Description = "Hybrid job trigger for data from the comments field of a table that contains customer appointment bookings",
    ///                     Labels = 
    ///                     {
    ///                         { "env", "prod" },
    ///                     },
    ///                     RequiredFindingLabelKeys = new[]
    ///                     {
    ///                         "appointment-bookings-comments",
    ///                     },
    ///                     TableOptions = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobStorageConfigHybridOptionsTableOptionsArgs
    ///                     {
    ///                         IdentifyingFields = new[]
    ///                         {
    ///                             new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobStorageConfigHybridOptionsTableOptionsIdentifyingFieldArgs
    ///                             {
    ///                                 Name = "booking_id",
    ///                             },
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         Parent = "projects/my-project-name",
    ///         Triggers = new[]
    ///         {
    ///             new Gcp.DataLoss.Inputs.PreventionJobTriggerTriggerArgs
    ///             {
    ///                 Manual = null,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Dlp Job Trigger Publish To Stackdriver
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var publishToStackdriver = new Gcp.DataLoss.PreventionJobTrigger("publishToStackdriver", new()
    ///     {
    ///         Description = "Description for the job_trigger created by terraform",
    ///         DisplayName = "TerraformDisplayName",
    ///         InspectJob = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobArgs
    ///         {
    ///             Actions = new[]
    ///             {
    ///                 new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobActionArgs
    ///                 {
    ///                     PublishToStackdriver = null,
    ///                 },
    ///             },
    ///             InspectTemplateName = "sample-inspect-template",
    ///             StorageConfig = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobStorageConfigArgs
    ///             {
    ///                 CloudStorageOptions = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsArgs
    ///                 {
    ///                     FileSet = new Gcp.DataLoss.Inputs.PreventionJobTriggerInspectJobStorageConfigCloudStorageOptionsFileSetArgs
    ///                     {
    ///                         Url = "gs://mybucket/directory/",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         Parent = "projects/my-project-name",
    ///         Triggers = new[]
    ///         {
    ///             new Gcp.DataLoss.Inputs.PreventionJobTriggerTriggerArgs
    ///             {
    ///                 Schedule = new Gcp.DataLoss.Inputs.PreventionJobTriggerTriggerScheduleArgs
    ///                 {
    ///                     RecurrencePeriodDuration = "86400s",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// JobTrigger can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import gcp:dataloss/preventionJobTrigger:PreventionJobTrigger default {{parent}}/jobTriggers/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:dataloss/preventionJobTrigger:PreventionJobTrigger default {{parent}}/{{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:dataloss/preventionJobTrigger:PreventionJobTrigger")]
    public partial class PreventionJobTrigger : global::Pulumi.CustomResource
    {
        /// <summary>
        /// (Output)
        /// The creation timestamp of an inspectTemplate. Set by the server.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// A description of the job trigger.
        /// 
        /// (Optional)
        /// A short description of where the data is coming from. Will be stored once in the job. 256 max length.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// User set display name of the job trigger.
        /// </summary>
        [Output("displayName")]
        public Output<string?> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Controls what and how to inspect for findings.
        /// Structure is documented below.
        /// </summary>
        [Output("inspectJob")]
        public Output<Outputs.PreventionJobTriggerInspectJob?> InspectJob { get; private set; } = null!;

        /// <summary>
        /// The timestamp of the last time this trigger executed.
        /// </summary>
        [Output("lastRunTime")]
        public Output<string> LastRunTime { get; private set; } = null!;

        /// <summary>
        /// Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed
        /// at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type.
        /// 
        /// (Required)
        /// Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed
        /// at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type.
        /// 
        /// (Required)
        /// Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed
        /// at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type.
        /// 
        /// (Required)
        /// Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed
        /// at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type.
        /// 
        /// (Required)
        /// Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names
        /// listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type.
        /// 
        /// (Required)
        /// Resource name of the requested StoredInfoType, for example `organizations/433245324/storedInfoTypes/432452342`
        /// or `projects/project-id/storedInfoTypes/432452342`.
        /// 
        /// (Required)
        /// Specification of the field containing the timestamp of scanned items. Used for data sources like Datastore and BigQuery.
        /// For BigQuery: Required to filter out rows based on the given start and end times. If not specified and the table was
        /// modified between the given start and end times, the entire table will be scanned. The valid data types of the timestamp
        /// field are: INTEGER, DATE, TIMESTAMP, or DATETIME BigQuery column.
        /// For Datastore. Valid data types of the timestamp field are: TIMESTAMP. Datastore entity will be scanned if the
        /// timestamp property does not exist or its value is empty or invalid.
        /// 
        /// (Required)
        /// The name of the Datastore kind.
        /// 
        /// (Required)
        /// Name of a BigQuery field to be returned with the findings.
        /// 
        /// (Required)
        /// Name describing the field.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The parent of the trigger, either in the format `projects/{{project}}`
        /// or `projects/{{project}}/locations/{{location}}`
        /// </summary>
        [Output("parent")]
        public Output<string> Parent { get; private set; } = null!;

        /// <summary>
        /// Whether the trigger is currently active.
        /// Default value is `HEALTHY`.
        /// Possible values are: `PAUSED`, `HEALTHY`, `CANCELLED`.
        /// </summary>
        [Output("status")]
        public Output<string?> Status { get; private set; } = null!;

        /// <summary>
        /// What event needs to occur for a new job to be started.
        /// Structure is documented below.
        /// </summary>
        [Output("triggers")]
        public Output<ImmutableArray<Outputs.PreventionJobTriggerTrigger>> Triggers { get; private set; } = null!;

        /// <summary>
        /// The last update timestamp of an inspectTemplate. Set by the server.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a PreventionJobTrigger resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PreventionJobTrigger(string name, PreventionJobTriggerArgs args, CustomResourceOptions? options = null)
            : base("gcp:dataloss/preventionJobTrigger:PreventionJobTrigger", name, args ?? new PreventionJobTriggerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PreventionJobTrigger(string name, Input<string> id, PreventionJobTriggerState? state = null, CustomResourceOptions? options = null)
            : base("gcp:dataloss/preventionJobTrigger:PreventionJobTrigger", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PreventionJobTrigger resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PreventionJobTrigger Get(string name, Input<string> id, PreventionJobTriggerState? state = null, CustomResourceOptions? options = null)
        {
            return new PreventionJobTrigger(name, id, state, options);
        }
    }

    public sealed class PreventionJobTriggerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A description of the job trigger.
        /// 
        /// (Optional)
        /// A short description of where the data is coming from. Will be stored once in the job. 256 max length.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// User set display name of the job trigger.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Controls what and how to inspect for findings.
        /// Structure is documented below.
        /// </summary>
        [Input("inspectJob")]
        public Input<Inputs.PreventionJobTriggerInspectJobArgs>? InspectJob { get; set; }

        /// <summary>
        /// The parent of the trigger, either in the format `projects/{{project}}`
        /// or `projects/{{project}}/locations/{{location}}`
        /// </summary>
        [Input("parent", required: true)]
        public Input<string> Parent { get; set; } = null!;

        /// <summary>
        /// Whether the trigger is currently active.
        /// Default value is `HEALTHY`.
        /// Possible values are: `PAUSED`, `HEALTHY`, `CANCELLED`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("triggers", required: true)]
        private InputList<Inputs.PreventionJobTriggerTriggerArgs>? _triggers;

        /// <summary>
        /// What event needs to occur for a new job to be started.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.PreventionJobTriggerTriggerArgs> Triggers
        {
            get => _triggers ?? (_triggers = new InputList<Inputs.PreventionJobTriggerTriggerArgs>());
            set => _triggers = value;
        }

        public PreventionJobTriggerArgs()
        {
        }
        public static new PreventionJobTriggerArgs Empty => new PreventionJobTriggerArgs();
    }

    public sealed class PreventionJobTriggerState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Output)
        /// The creation timestamp of an inspectTemplate. Set by the server.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// A description of the job trigger.
        /// 
        /// (Optional)
        /// A short description of where the data is coming from. Will be stored once in the job. 256 max length.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// User set display name of the job trigger.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Controls what and how to inspect for findings.
        /// Structure is documented below.
        /// </summary>
        [Input("inspectJob")]
        public Input<Inputs.PreventionJobTriggerInspectJobGetArgs>? InspectJob { get; set; }

        /// <summary>
        /// The timestamp of the last time this trigger executed.
        /// </summary>
        [Input("lastRunTime")]
        public Input<string>? LastRunTime { get; set; }

        /// <summary>
        /// Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed
        /// at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type.
        /// 
        /// (Required)
        /// Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed
        /// at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type.
        /// 
        /// (Required)
        /// Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed
        /// at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type.
        /// 
        /// (Required)
        /// Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names listed
        /// at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type.
        /// 
        /// (Required)
        /// Name of the information type. Either a name of your choosing when creating a CustomInfoType, or one of the names
        /// listed at https://cloud.google.com/dlp/docs/infotypes-reference when specifying a built-in type.
        /// 
        /// (Required)
        /// Resource name of the requested StoredInfoType, for example `organizations/433245324/storedInfoTypes/432452342`
        /// or `projects/project-id/storedInfoTypes/432452342`.
        /// 
        /// (Required)
        /// Specification of the field containing the timestamp of scanned items. Used for data sources like Datastore and BigQuery.
        /// For BigQuery: Required to filter out rows based on the given start and end times. If not specified and the table was
        /// modified between the given start and end times, the entire table will be scanned. The valid data types of the timestamp
        /// field are: INTEGER, DATE, TIMESTAMP, or DATETIME BigQuery column.
        /// For Datastore. Valid data types of the timestamp field are: TIMESTAMP. Datastore entity will be scanned if the
        /// timestamp property does not exist or its value is empty or invalid.
        /// 
        /// (Required)
        /// The name of the Datastore kind.
        /// 
        /// (Required)
        /// Name of a BigQuery field to be returned with the findings.
        /// 
        /// (Required)
        /// Name describing the field.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The parent of the trigger, either in the format `projects/{{project}}`
        /// or `projects/{{project}}/locations/{{location}}`
        /// </summary>
        [Input("parent")]
        public Input<string>? Parent { get; set; }

        /// <summary>
        /// Whether the trigger is currently active.
        /// Default value is `HEALTHY`.
        /// Possible values are: `PAUSED`, `HEALTHY`, `CANCELLED`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("triggers")]
        private InputList<Inputs.PreventionJobTriggerTriggerGetArgs>? _triggers;

        /// <summary>
        /// What event needs to occur for a new job to be started.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.PreventionJobTriggerTriggerGetArgs> Triggers
        {
            get => _triggers ?? (_triggers = new InputList<Inputs.PreventionJobTriggerTriggerGetArgs>());
            set => _triggers = value;
        }

        /// <summary>
        /// The last update timestamp of an inspectTemplate. Set by the server.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public PreventionJobTriggerState()
        {
        }
        public static new PreventionJobTriggerState Empty => new PreventionJobTriggerState();
    }
}
