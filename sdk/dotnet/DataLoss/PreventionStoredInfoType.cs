// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.DataLoss
{
    /// <summary>
    /// Allows creation of custom info types.
    /// 
    /// To get more information about StoredInfoType, see:
    /// 
    /// * [API documentation](https://cloud.google.com/dlp/docs/reference/rest/v2/projects.storedInfoTypes)
    /// * How-to Guides
    ///     * [Official Documentation](https://cloud.google.com/dlp/docs/creating-stored-infotypes)
    /// 
    /// ## Example Usage
    /// ### Dlp Stored Info Type Basic
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var basic = new Gcp.DataLoss.PreventionStoredInfoType("basic", new Gcp.DataLoss.PreventionStoredInfoTypeArgs
    ///         {
    ///             Description = "Description",
    ///             DisplayName = "Displayname",
    ///             Parent = "projects/my-project-name",
    ///             Regex = new Gcp.DataLoss.Inputs.PreventionStoredInfoTypeRegexArgs
    ///             {
    ///                 GroupIndexes = 
    ///                 {
    ///                     2,
    ///                 },
    ///                 Pattern = "patient",
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// ### Dlp Stored Info Type Dictionary
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var dictionary = new Gcp.DataLoss.PreventionStoredInfoType("dictionary", new Gcp.DataLoss.PreventionStoredInfoTypeArgs
    ///         {
    ///             Description = "Description",
    ///             Dictionary = new Gcp.DataLoss.Inputs.PreventionStoredInfoTypeDictionaryArgs
    ///             {
    ///                 WordList = new Gcp.DataLoss.Inputs.PreventionStoredInfoTypeDictionaryWordListArgs
    ///                 {
    ///                     Words = 
    ///                     {
    ///                         "word",
    ///                         "word2",
    ///                     },
    ///                 },
    ///             },
    ///             DisplayName = "Displayname",
    ///             Parent = "projects/my-project-name",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// ### Dlp Stored Info Type Large Custom Dictionary
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var bucket = new Gcp.Storage.Bucket("bucket", new Gcp.Storage.BucketArgs
    ///         {
    ///             ForceDestroy = true,
    ///         });
    ///         var @object = new Gcp.Storage.BucketObject("object", new Gcp.Storage.BucketObjectArgs
    ///         {
    ///             Bucket = bucket.Name,
    ///             Source = new FileAsset("./test-fixtures/dlp/words.txt"),
    ///         });
    ///         var large = new Gcp.DataLoss.PreventionStoredInfoType("large", new Gcp.DataLoss.PreventionStoredInfoTypeArgs
    ///         {
    ///             Parent = "projects/my-project-name",
    ///             Description = "Description",
    ///             DisplayName = "Displayname",
    ///             LargeCustomDictionary = new Gcp.DataLoss.Inputs.PreventionStoredInfoTypeLargeCustomDictionaryArgs
    ///             {
    ///                 CloudStorageFileSet = new Gcp.DataLoss.Inputs.PreventionStoredInfoTypeLargeCustomDictionaryCloudStorageFileSetArgs
    ///                 {
    ///                     Url = Output.Tuple(bucket.Name, @object.Name).Apply(values =&gt;
    ///                     {
    ///                         var bucketName = values.Item1;
    ///                         var objectName = values.Item2;
    ///                         return $"gs://{bucketName}/{objectName}";
    ///                     }),
    ///                 },
    ///                 OutputPath = new Gcp.DataLoss.Inputs.PreventionStoredInfoTypeLargeCustomDictionaryOutputPathArgs
    ///                 {
    ///                     Path = bucket.Name.Apply(name =&gt; $"gs://{name}/output/dictionary.txt"),
    ///                 },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// StoredInfoType can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import gcp:dataloss/preventionStoredInfoType:PreventionStoredInfoType default {{parent}}/storedInfoTypes/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:dataloss/preventionStoredInfoType:PreventionStoredInfoType default {{parent}}/{{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:dataloss/preventionStoredInfoType:PreventionStoredInfoType")]
    public partial class PreventionStoredInfoType : Pulumi.CustomResource
    {
        /// <summary>
        /// A description of the info type.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Dictionary which defines the rule.
        /// Structure is documented below.
        /// </summary>
        [Output("dictionary")]
        public Output<Outputs.PreventionStoredInfoTypeDictionary?> Dictionary { get; private set; } = null!;

        /// <summary>
        /// User set display name of the info type.
        /// </summary>
        [Output("displayName")]
        public Output<string?> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Dictionary which defines the rule.
        /// Structure is documented below.
        /// </summary>
        [Output("largeCustomDictionary")]
        public Output<Outputs.PreventionStoredInfoTypeLargeCustomDictionary?> LargeCustomDictionary { get; private set; } = null!;

        /// <summary>
        /// Name describing the field.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The parent of the info type in any of the following formats:
        /// * `projects/{{project}}`
        /// * `projects/{{project}}/locations/{{location}}`
        /// * `organizations/{{organization_id}}`
        /// * `organizations/{{organization_id}}/locations/{{location}}`
        /// </summary>
        [Output("parent")]
        public Output<string> Parent { get; private set; } = null!;

        /// <summary>
        /// Regular expression which defines the rule.
        /// Structure is documented below.
        /// </summary>
        [Output("regex")]
        public Output<Outputs.PreventionStoredInfoTypeRegex?> Regex { get; private set; } = null!;


        /// <summary>
        /// Create a PreventionStoredInfoType resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PreventionStoredInfoType(string name, PreventionStoredInfoTypeArgs args, CustomResourceOptions? options = null)
            : base("gcp:dataloss/preventionStoredInfoType:PreventionStoredInfoType", name, args ?? new PreventionStoredInfoTypeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PreventionStoredInfoType(string name, Input<string> id, PreventionStoredInfoTypeState? state = null, CustomResourceOptions? options = null)
            : base("gcp:dataloss/preventionStoredInfoType:PreventionStoredInfoType", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PreventionStoredInfoType resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PreventionStoredInfoType Get(string name, Input<string> id, PreventionStoredInfoTypeState? state = null, CustomResourceOptions? options = null)
        {
            return new PreventionStoredInfoType(name, id, state, options);
        }
    }

    public sealed class PreventionStoredInfoTypeArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A description of the info type.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Dictionary which defines the rule.
        /// Structure is documented below.
        /// </summary>
        [Input("dictionary")]
        public Input<Inputs.PreventionStoredInfoTypeDictionaryArgs>? Dictionary { get; set; }

        /// <summary>
        /// User set display name of the info type.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Dictionary which defines the rule.
        /// Structure is documented below.
        /// </summary>
        [Input("largeCustomDictionary")]
        public Input<Inputs.PreventionStoredInfoTypeLargeCustomDictionaryArgs>? LargeCustomDictionary { get; set; }

        /// <summary>
        /// The parent of the info type in any of the following formats:
        /// * `projects/{{project}}`
        /// * `projects/{{project}}/locations/{{location}}`
        /// * `organizations/{{organization_id}}`
        /// * `organizations/{{organization_id}}/locations/{{location}}`
        /// </summary>
        [Input("parent", required: true)]
        public Input<string> Parent { get; set; } = null!;

        /// <summary>
        /// Regular expression which defines the rule.
        /// Structure is documented below.
        /// </summary>
        [Input("regex")]
        public Input<Inputs.PreventionStoredInfoTypeRegexArgs>? Regex { get; set; }

        public PreventionStoredInfoTypeArgs()
        {
        }
    }

    public sealed class PreventionStoredInfoTypeState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A description of the info type.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Dictionary which defines the rule.
        /// Structure is documented below.
        /// </summary>
        [Input("dictionary")]
        public Input<Inputs.PreventionStoredInfoTypeDictionaryGetArgs>? Dictionary { get; set; }

        /// <summary>
        /// User set display name of the info type.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Dictionary which defines the rule.
        /// Structure is documented below.
        /// </summary>
        [Input("largeCustomDictionary")]
        public Input<Inputs.PreventionStoredInfoTypeLargeCustomDictionaryGetArgs>? LargeCustomDictionary { get; set; }

        /// <summary>
        /// Name describing the field.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The parent of the info type in any of the following formats:
        /// * `projects/{{project}}`
        /// * `projects/{{project}}/locations/{{location}}`
        /// * `organizations/{{organization_id}}`
        /// * `organizations/{{organization_id}}/locations/{{location}}`
        /// </summary>
        [Input("parent")]
        public Input<string>? Parent { get; set; }

        /// <summary>
        /// Regular expression which defines the rule.
        /// Structure is documented below.
        /// </summary>
        [Input("regex")]
        public Input<Inputs.PreventionStoredInfoTypeRegexGetArgs>? Regex { get; set; }

        public PreventionStoredInfoTypeState()
        {
        }
    }
}
