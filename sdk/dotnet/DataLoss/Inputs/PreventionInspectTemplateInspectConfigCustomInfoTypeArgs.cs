// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.DataLoss.Inputs
{

    public sealed class PreventionInspectTemplateInspectConfigCustomInfoTypeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Dictionary which defines the rule.
        /// Structure is documented below.
        /// </summary>
        [Input("dictionary")]
        public Input<Inputs.PreventionInspectTemplateInspectConfigCustomInfoTypeDictionaryArgs>? Dictionary { get; set; }

        /// <summary>
        /// If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It still can be used for rules matching.
        /// Possible values are `EXCLUSION_TYPE_EXCLUDE`.
        /// </summary>
        [Input("exclusionType")]
        public Input<string>? ExclusionType { get; set; }

        /// <summary>
        /// CustomInfoType can either be a new infoType, or an extension of built-in infoType, when the name matches one of existing
        /// infoTypes and that infoType is specified in `info_types` field. Specifying the latter adds findings to the
        /// one detected by the system. If built-in info type is not specified in `info_types` list then the name is
        /// treated as a custom info type.
        /// Structure is documented below.
        /// </summary>
        [Input("infoType", required: true)]
        public Input<Inputs.PreventionInspectTemplateInspectConfigCustomInfoTypeInfoTypeArgs> InfoType { get; set; } = null!;

        /// <summary>
        /// Likelihood to return for this CustomInfoType. This base value can be altered by a detection rule if the finding meets the criteria
        /// specified by the rule.
        /// Default value is `VERY_LIKELY`.
        /// Possible values are `VERY_UNLIKELY`, `UNLIKELY`, `POSSIBLE`, `LIKELY`, and `VERY_LIKELY`.
        /// </summary>
        [Input("likelihood")]
        public Input<string>? Likelihood { get; set; }

        /// <summary>
        /// Regular expression which defines the rule.
        /// Structure is documented below.
        /// </summary>
        [Input("regex")]
        public Input<Inputs.PreventionInspectTemplateInspectConfigCustomInfoTypeRegexArgs>? Regex { get; set; }

        /// <summary>
        /// A reference to a StoredInfoType to use with scanning.
        /// Structure is documented below.
        /// </summary>
        [Input("storedType")]
        public Input<Inputs.PreventionInspectTemplateInspectConfigCustomInfoTypeStoredTypeArgs>? StoredType { get; set; }

        public PreventionInspectTemplateInspectConfigCustomInfoTypeArgs()
        {
        }
        public static new PreventionInspectTemplateInspectConfigCustomInfoTypeArgs Empty => new PreventionInspectTemplateInspectConfigCustomInfoTypeArgs();
    }
}
