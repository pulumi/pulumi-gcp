// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.ServiceNetworking
{
    public static class GetPeeredDnsDomain
    {
        public static Task<GetPeeredDnsDomainResult> InvokeAsync(GetPeeredDnsDomainArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetPeeredDnsDomainResult>("gcp:servicenetworking/getPeeredDnsDomain:getPeeredDnsDomain", args ?? new GetPeeredDnsDomainArgs(), options.WithDefaults());

        public static Output<GetPeeredDnsDomainResult> Invoke(GetPeeredDnsDomainInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetPeeredDnsDomainResult>("gcp:servicenetworking/getPeeredDnsDomain:getPeeredDnsDomain", args ?? new GetPeeredDnsDomainInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPeeredDnsDomainArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("network", required: true)]
        public string Network { get; set; } = null!;

        [Input("project", required: true)]
        public string Project { get; set; } = null!;

        [Input("service", required: true)]
        public string Service { get; set; } = null!;

        public GetPeeredDnsDomainArgs()
        {
        }
        public static new GetPeeredDnsDomainArgs Empty => new GetPeeredDnsDomainArgs();
    }

    public sealed class GetPeeredDnsDomainInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("network", required: true)]
        public Input<string> Network { get; set; } = null!;

        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        [Input("service", required: true)]
        public Input<string> Service { get; set; } = null!;

        public GetPeeredDnsDomainInvokeArgs()
        {
        }
        public static new GetPeeredDnsDomainInvokeArgs Empty => new GetPeeredDnsDomainInvokeArgs();
    }


    [OutputType]
    public sealed class GetPeeredDnsDomainResult
    {
        public readonly string DnsSuffix;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string Network;
        public readonly string Parent;
        public readonly string Project;
        public readonly string Service;

        [OutputConstructor]
        private GetPeeredDnsDomainResult(
            string dnsSuffix,

            string id,

            string name,

            string network,

            string parent,

            string project,

            string service)
        {
            DnsSuffix = dnsSuffix;
            Id = id;
            Name = name;
            Network = network;
            Parent = parent;
            Project = project;
            Service = service;
        }
    }
}
