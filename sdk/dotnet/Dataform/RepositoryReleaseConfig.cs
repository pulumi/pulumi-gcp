// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Dataform
{
    /// <summary>
    /// ## Example Usage
    /// ### Dataform Repository Release Config
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var gitRepository = new Gcp.SourceRepo.Repository("gitRepository", new()
    ///     {
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = google_beta,
    ///     });
    /// 
    ///     var secret = new Gcp.SecretManager.Secret("secret", new()
    ///     {
    ///         SecretId = "my_secret",
    ///         Replication = new Gcp.SecretManager.Inputs.SecretReplicationArgs
    ///         {
    ///             Auto = null,
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = google_beta,
    ///     });
    /// 
    ///     var secretVersion = new Gcp.SecretManager.SecretVersion("secretVersion", new()
    ///     {
    ///         Secret = secret.Id,
    ///         SecretData = "secret-data",
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = google_beta,
    ///     });
    /// 
    ///     var repository = new Gcp.Dataform.Repository("repository", new()
    ///     {
    ///         Region = "us-central1",
    ///         GitRemoteSettings = new Gcp.Dataform.Inputs.RepositoryGitRemoteSettingsArgs
    ///         {
    ///             Url = gitRepository.Url,
    ///             DefaultBranch = "main",
    ///             AuthenticationTokenSecretVersion = secretVersion.Id,
    ///         },
    ///         WorkspaceCompilationOverrides = new Gcp.Dataform.Inputs.RepositoryWorkspaceCompilationOverridesArgs
    ///         {
    ///             DefaultDatabase = "database",
    ///             SchemaSuffix = "_suffix",
    ///             TablePrefix = "prefix_",
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = google_beta,
    ///     });
    /// 
    ///     var release = new Gcp.Dataform.RepositoryReleaseConfig("release", new()
    ///     {
    ///         Project = repository.Project,
    ///         Region = repository.Region,
    ///         Repository = repository.Name,
    ///         GitCommitish = "main",
    ///         CronSchedule = "0 7 * * *",
    ///         TimeZone = "America/New_York",
    ///         CodeCompilationConfig = new Gcp.Dataform.Inputs.RepositoryReleaseConfigCodeCompilationConfigArgs
    ///         {
    ///             DefaultDatabase = "gcp-example-project",
    ///             DefaultSchema = "example-dataset",
    ///             DefaultLocation = "us-central1",
    ///             AssertionSchema = "example-assertion-dataset",
    ///             DatabaseSuffix = "",
    ///             SchemaSuffix = "",
    ///             TablePrefix = "",
    ///             Vars = 
    ///             {
    ///                 { "var1", "value" },
    ///             },
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = google_beta,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// RepositoryReleaseConfig can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import gcp:dataform/repositoryReleaseConfig:RepositoryReleaseConfig default projects/{{project}}/locations/{{region}}/repositories/{{repository}}/releaseConfigs/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:dataform/repositoryReleaseConfig:RepositoryReleaseConfig default {{project}}/{{region}}/{{repository}}/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:dataform/repositoryReleaseConfig:RepositoryReleaseConfig default {{region}}/{{repository}}/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:dataform/repositoryReleaseConfig:RepositoryReleaseConfig default {{repository}}/{{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:dataform/repositoryReleaseConfig:RepositoryReleaseConfig")]
    public partial class RepositoryReleaseConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Optional. If set, fields of codeCompilationConfig override the default compilation settings that are specified in dataform.json.
        /// Structure is documented below.
        /// </summary>
        [Output("codeCompilationConfig")]
        public Output<Outputs.RepositoryReleaseConfigCodeCompilationConfig?> CodeCompilationConfig { get; private set; } = null!;

        /// <summary>
        /// Optional. Optional schedule (in cron format) for automatic creation of compilation results.
        /// </summary>
        [Output("cronSchedule")]
        public Output<string?> CronSchedule { get; private set; } = null!;

        /// <summary>
        /// Git commit/tag/branch name at which the repository should be compiled. Must exist in the remote repository.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Output("gitCommitish")]
        public Output<string> GitCommitish { get; private set; } = null!;

        /// <summary>
        /// The release's name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Records of the 10 most recent scheduled release attempts, ordered in in descending order of releaseTime. Updated whenever automatic creation of a compilation result is triggered by cronSchedule.
        /// Structure is documented below.
        /// </summary>
        [Output("recentScheduledReleaseRecords")]
        public Output<ImmutableArray<Outputs.RepositoryReleaseConfigRecentScheduledReleaseRecord>> RecentScheduledReleaseRecords { get; private set; } = null!;

        /// <summary>
        /// A reference to the region
        /// </summary>
        [Output("region")]
        public Output<string?> Region { get; private set; } = null!;

        /// <summary>
        /// A reference to the Dataform repository
        /// </summary>
        [Output("repository")]
        public Output<string?> Repository { get; private set; } = null!;

        /// <summary>
        /// Optional. Specifies the time zone to be used when interpreting cronSchedule. Must be a time zone name from the time zone database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the default is UTC.
        /// </summary>
        [Output("timeZone")]
        public Output<string?> TimeZone { get; private set; } = null!;


        /// <summary>
        /// Create a RepositoryReleaseConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RepositoryReleaseConfig(string name, RepositoryReleaseConfigArgs args, CustomResourceOptions? options = null)
            : base("gcp:dataform/repositoryReleaseConfig:RepositoryReleaseConfig", name, args ?? new RepositoryReleaseConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RepositoryReleaseConfig(string name, Input<string> id, RepositoryReleaseConfigState? state = null, CustomResourceOptions? options = null)
            : base("gcp:dataform/repositoryReleaseConfig:RepositoryReleaseConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RepositoryReleaseConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RepositoryReleaseConfig Get(string name, Input<string> id, RepositoryReleaseConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new RepositoryReleaseConfig(name, id, state, options);
        }
    }

    public sealed class RepositoryReleaseConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional. If set, fields of codeCompilationConfig override the default compilation settings that are specified in dataform.json.
        /// Structure is documented below.
        /// </summary>
        [Input("codeCompilationConfig")]
        public Input<Inputs.RepositoryReleaseConfigCodeCompilationConfigArgs>? CodeCompilationConfig { get; set; }

        /// <summary>
        /// Optional. Optional schedule (in cron format) for automatic creation of compilation results.
        /// </summary>
        [Input("cronSchedule")]
        public Input<string>? CronSchedule { get; set; }

        /// <summary>
        /// Git commit/tag/branch name at which the repository should be compiled. Must exist in the remote repository.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("gitCommitish", required: true)]
        public Input<string> GitCommitish { get; set; } = null!;

        /// <summary>
        /// The release's name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// A reference to the region
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// A reference to the Dataform repository
        /// </summary>
        [Input("repository")]
        public Input<string>? Repository { get; set; }

        /// <summary>
        /// Optional. Specifies the time zone to be used when interpreting cronSchedule. Must be a time zone name from the time zone database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the default is UTC.
        /// </summary>
        [Input("timeZone")]
        public Input<string>? TimeZone { get; set; }

        public RepositoryReleaseConfigArgs()
        {
        }
        public static new RepositoryReleaseConfigArgs Empty => new RepositoryReleaseConfigArgs();
    }

    public sealed class RepositoryReleaseConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional. If set, fields of codeCompilationConfig override the default compilation settings that are specified in dataform.json.
        /// Structure is documented below.
        /// </summary>
        [Input("codeCompilationConfig")]
        public Input<Inputs.RepositoryReleaseConfigCodeCompilationConfigGetArgs>? CodeCompilationConfig { get; set; }

        /// <summary>
        /// Optional. Optional schedule (in cron format) for automatic creation of compilation results.
        /// </summary>
        [Input("cronSchedule")]
        public Input<string>? CronSchedule { get; set; }

        /// <summary>
        /// Git commit/tag/branch name at which the repository should be compiled. Must exist in the remote repository.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("gitCommitish")]
        public Input<string>? GitCommitish { get; set; }

        /// <summary>
        /// The release's name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("recentScheduledReleaseRecords")]
        private InputList<Inputs.RepositoryReleaseConfigRecentScheduledReleaseRecordGetArgs>? _recentScheduledReleaseRecords;

        /// <summary>
        /// Records of the 10 most recent scheduled release attempts, ordered in in descending order of releaseTime. Updated whenever automatic creation of a compilation result is triggered by cronSchedule.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.RepositoryReleaseConfigRecentScheduledReleaseRecordGetArgs> RecentScheduledReleaseRecords
        {
            get => _recentScheduledReleaseRecords ?? (_recentScheduledReleaseRecords = new InputList<Inputs.RepositoryReleaseConfigRecentScheduledReleaseRecordGetArgs>());
            set => _recentScheduledReleaseRecords = value;
        }

        /// <summary>
        /// A reference to the region
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// A reference to the Dataform repository
        /// </summary>
        [Input("repository")]
        public Input<string>? Repository { get; set; }

        /// <summary>
        /// Optional. Specifies the time zone to be used when interpreting cronSchedule. Must be a time zone name from the time zone database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the default is UTC.
        /// </summary>
        [Input("timeZone")]
        public Input<string>? TimeZone { get; set; }

        public RepositoryReleaseConfigState()
        {
        }
        public static new RepositoryReleaseConfigState Empty => new RepositoryReleaseConfigState();
    }
}
