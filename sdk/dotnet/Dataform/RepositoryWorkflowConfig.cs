// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Dataform
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// RepositoryWorkflowConfig can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import gcp:dataform/repositoryWorkflowConfig:RepositoryWorkflowConfig default projects/{{project}}/locations/{{region}}/repositories/{{repository}}/workflowConfigs/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:dataform/repositoryWorkflowConfig:RepositoryWorkflowConfig default {{project}}/{{region}}/{{repository}}/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:dataform/repositoryWorkflowConfig:RepositoryWorkflowConfig default {{region}}/{{repository}}/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:dataform/repositoryWorkflowConfig:RepositoryWorkflowConfig default {{repository}}/{{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:dataform/repositoryWorkflowConfig:RepositoryWorkflowConfig")]
    public partial class RepositoryWorkflowConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Optional. Optional schedule (in cron format) for automatic creation of compilation results.
        /// </summary>
        [Output("cronSchedule")]
        public Output<string?> CronSchedule { get; private set; } = null!;

        /// <summary>
        /// Optional. If left unset, a default InvocationConfig will be used.
        /// Structure is documented below.
        /// </summary>
        [Output("invocationConfig")]
        public Output<Outputs.RepositoryWorkflowConfigInvocationConfig?> InvocationConfig { get; private set; } = null!;

        /// <summary>
        /// The workflow's name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Records of the 10 most recent scheduled execution attempts, ordered in in descending order of executionTime. Updated whenever automatic creation of a workflow invocation is triggered by cronSchedule.
        /// Structure is documented below.
        /// </summary>
        [Output("recentScheduledExecutionRecords")]
        public Output<ImmutableArray<Outputs.RepositoryWorkflowConfigRecentScheduledExecutionRecord>> RecentScheduledExecutionRecords { get; private set; } = null!;

        /// <summary>
        /// A reference to the region
        /// </summary>
        [Output("region")]
        public Output<string?> Region { get; private set; } = null!;

        /// <summary>
        /// The name of the release config whose releaseCompilationResult should be executed. Must be in the format projects/*/locations/*/repositories/*/releaseConfigs/*.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Output("releaseConfig")]
        public Output<string> ReleaseConfig { get; private set; } = null!;

        /// <summary>
        /// A reference to the Dataform repository
        /// </summary>
        [Output("repository")]
        public Output<string?> Repository { get; private set; } = null!;

        /// <summary>
        /// Optional. Specifies the time zone to be used when interpreting cronSchedule. Must be a time zone name from the time zone database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the default is UTC.
        /// </summary>
        [Output("timeZone")]
        public Output<string?> TimeZone { get; private set; } = null!;


        /// <summary>
        /// Create a RepositoryWorkflowConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RepositoryWorkflowConfig(string name, RepositoryWorkflowConfigArgs args, CustomResourceOptions? options = null)
            : base("gcp:dataform/repositoryWorkflowConfig:RepositoryWorkflowConfig", name, args ?? new RepositoryWorkflowConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RepositoryWorkflowConfig(string name, Input<string> id, RepositoryWorkflowConfigState? state = null, CustomResourceOptions? options = null)
            : base("gcp:dataform/repositoryWorkflowConfig:RepositoryWorkflowConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RepositoryWorkflowConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RepositoryWorkflowConfig Get(string name, Input<string> id, RepositoryWorkflowConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new RepositoryWorkflowConfig(name, id, state, options);
        }
    }

    public sealed class RepositoryWorkflowConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional. Optional schedule (in cron format) for automatic creation of compilation results.
        /// </summary>
        [Input("cronSchedule")]
        public Input<string>? CronSchedule { get; set; }

        /// <summary>
        /// Optional. If left unset, a default InvocationConfig will be used.
        /// Structure is documented below.
        /// </summary>
        [Input("invocationConfig")]
        public Input<Inputs.RepositoryWorkflowConfigInvocationConfigArgs>? InvocationConfig { get; set; }

        /// <summary>
        /// The workflow's name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// A reference to the region
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The name of the release config whose releaseCompilationResult should be executed. Must be in the format projects/*/locations/*/repositories/*/releaseConfigs/*.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("releaseConfig", required: true)]
        public Input<string> ReleaseConfig { get; set; } = null!;

        /// <summary>
        /// A reference to the Dataform repository
        /// </summary>
        [Input("repository")]
        public Input<string>? Repository { get; set; }

        /// <summary>
        /// Optional. Specifies the time zone to be used when interpreting cronSchedule. Must be a time zone name from the time zone database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the default is UTC.
        /// </summary>
        [Input("timeZone")]
        public Input<string>? TimeZone { get; set; }

        public RepositoryWorkflowConfigArgs()
        {
        }
        public static new RepositoryWorkflowConfigArgs Empty => new RepositoryWorkflowConfigArgs();
    }

    public sealed class RepositoryWorkflowConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional. Optional schedule (in cron format) for automatic creation of compilation results.
        /// </summary>
        [Input("cronSchedule")]
        public Input<string>? CronSchedule { get; set; }

        /// <summary>
        /// Optional. If left unset, a default InvocationConfig will be used.
        /// Structure is documented below.
        /// </summary>
        [Input("invocationConfig")]
        public Input<Inputs.RepositoryWorkflowConfigInvocationConfigGetArgs>? InvocationConfig { get; set; }

        /// <summary>
        /// The workflow's name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("recentScheduledExecutionRecords")]
        private InputList<Inputs.RepositoryWorkflowConfigRecentScheduledExecutionRecordGetArgs>? _recentScheduledExecutionRecords;

        /// <summary>
        /// Records of the 10 most recent scheduled execution attempts, ordered in in descending order of executionTime. Updated whenever automatic creation of a workflow invocation is triggered by cronSchedule.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.RepositoryWorkflowConfigRecentScheduledExecutionRecordGetArgs> RecentScheduledExecutionRecords
        {
            get => _recentScheduledExecutionRecords ?? (_recentScheduledExecutionRecords = new InputList<Inputs.RepositoryWorkflowConfigRecentScheduledExecutionRecordGetArgs>());
            set => _recentScheduledExecutionRecords = value;
        }

        /// <summary>
        /// A reference to the region
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The name of the release config whose releaseCompilationResult should be executed. Must be in the format projects/*/locations/*/repositories/*/releaseConfigs/*.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("releaseConfig")]
        public Input<string>? ReleaseConfig { get; set; }

        /// <summary>
        /// A reference to the Dataform repository
        /// </summary>
        [Input("repository")]
        public Input<string>? Repository { get; set; }

        /// <summary>
        /// Optional. Specifies the time zone to be used when interpreting cronSchedule. Must be a time zone name from the time zone database (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left unspecified, the default is UTC.
        /// </summary>
        [Input("timeZone")]
        public Input<string>? TimeZone { get; set; }

        public RepositoryWorkflowConfigState()
        {
        }
        public static new RepositoryWorkflowConfigState Empty => new RepositoryWorkflowConfigState();
    }
}
