// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Dataform.Inputs
{

    public sealed class RepositoryGitRemoteSettingsGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Secret Manager secret version to use as an authentication token for Git operations. This secret is for assigning with HTTPS only(for SSH use `SshAuthenticationConfig`). Must be in the format projects/*/secrets/*/versions/*.
        /// </summary>
        [Input("authenticationTokenSecretVersion")]
        public Input<string>? AuthenticationTokenSecretVersion { get; set; }

        /// <summary>
        /// The Git remote's default branch name.
        /// </summary>
        [Input("defaultBranch", required: true)]
        public Input<string> DefaultBranch { get; set; } = null!;

        /// <summary>
        /// Authentication fields for remote uris using SSH protocol.
        /// Structure is documented below.
        /// </summary>
        [Input("sshAuthenticationConfig")]
        public Input<Inputs.RepositoryGitRemoteSettingsSshAuthenticationConfigGetArgs>? SshAuthenticationConfig { get; set; }

        /// <summary>
        /// (Output)
        /// Indicates the status of the Git access token. https://cloud.google.com/dataform/reference/rest/v1beta1/projects.locations.repositories#TokenStatus
        /// </summary>
        [Input("tokenStatus")]
        public Input<string>? TokenStatus { get; set; }

        /// <summary>
        /// The Git remote's URL.
        /// </summary>
        [Input("url", required: true)]
        public Input<string> Url { get; set; } = null!;

        public RepositoryGitRemoteSettingsGetArgs()
        {
        }
        public static new RepositoryGitRemoteSettingsGetArgs Empty => new RepositoryGitRemoteSettingsGetArgs();
    }
}
