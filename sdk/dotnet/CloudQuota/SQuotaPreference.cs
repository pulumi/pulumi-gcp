// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.CloudQuota
{
    /// <summary>
    /// QuotaPreference represents the preferred quota configuration specified for a project, folder or organization. There is only one QuotaPreference resource for a quota value targeting a unique set of dimensions.
    /// 
    /// To get more information about QuotaPreference, see:
    /// 
    /// * [API documentation](https://cloud.google.com/docs/quotas/reference/rest/v1/projects.locations.quotaPreferences)
    /// * How-to Guides
    ///     * [Cloud Quotas Overview](https://cloud.google.com/docs/quotas/overview)
    /// 
    /// ## Example Usage
    /// 
    /// ### Cloudquotas Quota Preference Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var preference = new Gcp.CloudQuota.SQuotaPreference("preference", new()
    ///     {
    ///         Parent = "projects/my-project-name",
    ///         Name = "compute_googleapis_com-CPUS-per-project_us-east1",
    ///         Dimensions = 
    ///         {
    ///             { "region", "us-east1" },
    ///         },
    ///         Service = "compute.googleapis.com",
    ///         QuotaId = "CPUS-per-project-region",
    ///         ContactEmail = "testuser@gmail.com",
    ///         QuotaConfig = new Gcp.CloudQuota.Inputs.SQuotaPreferenceQuotaConfigArgs
    ///         {
    ///             PreferredValue = "200",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// QuotaPreference can be imported using any of these accepted formats:
    /// 
    /// * `{{parent}}/locations/global/quotaPreferences/{{name}}`
    /// 
    /// When using the `pulumi import` command, QuotaPreference can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:cloudquota/sQuotaPreference:SQuotaPreference default {{parent}}/locations/global/quotaPreferences/{{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:cloudquota/sQuotaPreference:SQuotaPreference")]
    public partial class SQuotaPreference : global::Pulumi.CustomResource
    {
        /// <summary>
        /// An email address that can be used for quota related communication between the Google Cloud and the user in case the Google Cloud needs further information to make a decision on whether the user preferred quota can be granted.
        /// The Google account for the email address must have quota update permission for the project, folder or organization this quota preference is for.
        /// </summary>
        [Output("contactEmail")]
        public Output<string?> ContactEmail { get; private set; } = null!;

        /// <summary>
        /// Create time stamp.
        /// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: `2014-10-02T15:01:23Z` and `2014-10-02T15:01:23.045123456Z`.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The dimensions that this quota preference applies to. The key of the map entry is the name of a dimension, such as "region", "zone", "NetworkId", and the value of the map entry is the dimension value. If a dimension is missing from the map of dimensions, the quota preference applies to all the dimension values except for those that have other quota preferences configured for the specific value.
        /// NOTE: QuotaPreferences can only be applied across all values of "user" and "resource" dimension. Do not set values for "user" or "resource" in the dimension map.
        /// Example: `{"provider": "Foo Inc"}` where "provider" is a service specific dimension.
        /// </summary>
        [Output("dimensions")]
        public Output<ImmutableDictionary<string, string>> Dimensions { get; private set; } = null!;

        /// <summary>
        /// The current etag of the quota preference. If an etag is provided on update and does not match the current server's etag of the quota preference, the request will be blocked and an ABORTED error will be returned. See https://google.aip.dev/134#etags for more details on etags.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// The list of quota safety checks to be ignored.
        /// Default value is `QUOTA_SAFETY_CHECK_UNSPECIFIED`.
        /// Possible values are: `QUOTA_SAFETY_CHECK_UNSPECIFIED`, `QUOTA_DECREASE_BELOW_USAGE`, `QUOTA_DECREASE_PERCENTAGE_TOO_HIGH`.
        /// </summary>
        [Output("ignoreSafetyChecks")]
        public Output<string?> IgnoreSafetyChecks { get; private set; } = null!;

        /// <summary>
        /// The reason / justification for this quota preference.
        /// </summary>
        [Output("justification")]
        public Output<string?> Justification { get; private set; } = null!;

        /// <summary>
        /// The resource name of the quota preference. Required except in the CREATE requests.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The parent of the quota preference. Allowed parents are "projects/[project-id / number]" or "folders/[folder-id / number]" or "organizations/[org-id / number]".
        /// </summary>
        [Output("parent")]
        public Output<string> Parent { get; private set; } = null!;

        /// <summary>
        /// The preferred quota configuration.
        /// Structure is documented below.
        /// </summary>
        [Output("quotaConfig")]
        public Output<Outputs.SQuotaPreferenceQuotaConfig> QuotaConfig { get; private set; } = null!;

        /// <summary>
        /// The id of the quota to which the quota preference is applied. A quota id is unique in the service.
        /// Example: `CPUS-per-project-region`.
        /// </summary>
        [Output("quotaId")]
        public Output<string> QuotaId { get; private set; } = null!;

        /// <summary>
        /// Is the quota preference pending Google Cloud approval and fulfillment.
        /// </summary>
        [Output("reconciling")]
        public Output<bool> Reconciling { get; private set; } = null!;

        /// <summary>
        /// The name of the service to which the quota preference is applied.
        /// </summary>
        [Output("service")]
        public Output<string> Service { get; private set; } = null!;

        /// <summary>
        /// Update time stamp.
        /// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: `2014-10-02T15:01:23Z` and `2014-10-02T15:01:23.045123456Z`.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a SQuotaPreference resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SQuotaPreference(string name, SQuotaPreferenceArgs args, CustomResourceOptions? options = null)
            : base("gcp:cloudquota/sQuotaPreference:SQuotaPreference", name, args ?? new SQuotaPreferenceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SQuotaPreference(string name, Input<string> id, SQuotaPreferenceState? state = null, CustomResourceOptions? options = null)
            : base("gcp:cloudquota/sQuotaPreference:SQuotaPreference", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SQuotaPreference resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SQuotaPreference Get(string name, Input<string> id, SQuotaPreferenceState? state = null, CustomResourceOptions? options = null)
        {
            return new SQuotaPreference(name, id, state, options);
        }
    }

    public sealed class SQuotaPreferenceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// An email address that can be used for quota related communication between the Google Cloud and the user in case the Google Cloud needs further information to make a decision on whether the user preferred quota can be granted.
        /// The Google account for the email address must have quota update permission for the project, folder or organization this quota preference is for.
        /// </summary>
        [Input("contactEmail")]
        public Input<string>? ContactEmail { get; set; }

        [Input("dimensions")]
        private InputMap<string>? _dimensions;

        /// <summary>
        /// The dimensions that this quota preference applies to. The key of the map entry is the name of a dimension, such as "region", "zone", "NetworkId", and the value of the map entry is the dimension value. If a dimension is missing from the map of dimensions, the quota preference applies to all the dimension values except for those that have other quota preferences configured for the specific value.
        /// NOTE: QuotaPreferences can only be applied across all values of "user" and "resource" dimension. Do not set values for "user" or "resource" in the dimension map.
        /// Example: `{"provider": "Foo Inc"}` where "provider" is a service specific dimension.
        /// </summary>
        public InputMap<string> Dimensions
        {
            get => _dimensions ?? (_dimensions = new InputMap<string>());
            set => _dimensions = value;
        }

        /// <summary>
        /// The list of quota safety checks to be ignored.
        /// Default value is `QUOTA_SAFETY_CHECK_UNSPECIFIED`.
        /// Possible values are: `QUOTA_SAFETY_CHECK_UNSPECIFIED`, `QUOTA_DECREASE_BELOW_USAGE`, `QUOTA_DECREASE_PERCENTAGE_TOO_HIGH`.
        /// </summary>
        [Input("ignoreSafetyChecks")]
        public Input<string>? IgnoreSafetyChecks { get; set; }

        /// <summary>
        /// The reason / justification for this quota preference.
        /// </summary>
        [Input("justification")]
        public Input<string>? Justification { get; set; }

        /// <summary>
        /// The resource name of the quota preference. Required except in the CREATE requests.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The parent of the quota preference. Allowed parents are "projects/[project-id / number]" or "folders/[folder-id / number]" or "organizations/[org-id / number]".
        /// </summary>
        [Input("parent")]
        public Input<string>? Parent { get; set; }

        /// <summary>
        /// The preferred quota configuration.
        /// Structure is documented below.
        /// </summary>
        [Input("quotaConfig", required: true)]
        public Input<Inputs.SQuotaPreferenceQuotaConfigArgs> QuotaConfig { get; set; } = null!;

        /// <summary>
        /// The id of the quota to which the quota preference is applied. A quota id is unique in the service.
        /// Example: `CPUS-per-project-region`.
        /// </summary>
        [Input("quotaId")]
        public Input<string>? QuotaId { get; set; }

        /// <summary>
        /// The name of the service to which the quota preference is applied.
        /// </summary>
        [Input("service")]
        public Input<string>? Service { get; set; }

        public SQuotaPreferenceArgs()
        {
        }
        public static new SQuotaPreferenceArgs Empty => new SQuotaPreferenceArgs();
    }

    public sealed class SQuotaPreferenceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// An email address that can be used for quota related communication between the Google Cloud and the user in case the Google Cloud needs further information to make a decision on whether the user preferred quota can be granted.
        /// The Google account for the email address must have quota update permission for the project, folder or organization this quota preference is for.
        /// </summary>
        [Input("contactEmail")]
        public Input<string>? ContactEmail { get; set; }

        /// <summary>
        /// Create time stamp.
        /// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: `2014-10-02T15:01:23Z` and `2014-10-02T15:01:23.045123456Z`.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        [Input("dimensions")]
        private InputMap<string>? _dimensions;

        /// <summary>
        /// The dimensions that this quota preference applies to. The key of the map entry is the name of a dimension, such as "region", "zone", "NetworkId", and the value of the map entry is the dimension value. If a dimension is missing from the map of dimensions, the quota preference applies to all the dimension values except for those that have other quota preferences configured for the specific value.
        /// NOTE: QuotaPreferences can only be applied across all values of "user" and "resource" dimension. Do not set values for "user" or "resource" in the dimension map.
        /// Example: `{"provider": "Foo Inc"}` where "provider" is a service specific dimension.
        /// </summary>
        public InputMap<string> Dimensions
        {
            get => _dimensions ?? (_dimensions = new InputMap<string>());
            set => _dimensions = value;
        }

        /// <summary>
        /// The current etag of the quota preference. If an etag is provided on update and does not match the current server's etag of the quota preference, the request will be blocked and an ABORTED error will be returned. See https://google.aip.dev/134#etags for more details on etags.
        /// </summary>
        [Input("etag")]
        public Input<string>? Etag { get; set; }

        /// <summary>
        /// The list of quota safety checks to be ignored.
        /// Default value is `QUOTA_SAFETY_CHECK_UNSPECIFIED`.
        /// Possible values are: `QUOTA_SAFETY_CHECK_UNSPECIFIED`, `QUOTA_DECREASE_BELOW_USAGE`, `QUOTA_DECREASE_PERCENTAGE_TOO_HIGH`.
        /// </summary>
        [Input("ignoreSafetyChecks")]
        public Input<string>? IgnoreSafetyChecks { get; set; }

        /// <summary>
        /// The reason / justification for this quota preference.
        /// </summary>
        [Input("justification")]
        public Input<string>? Justification { get; set; }

        /// <summary>
        /// The resource name of the quota preference. Required except in the CREATE requests.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The parent of the quota preference. Allowed parents are "projects/[project-id / number]" or "folders/[folder-id / number]" or "organizations/[org-id / number]".
        /// </summary>
        [Input("parent")]
        public Input<string>? Parent { get; set; }

        /// <summary>
        /// The preferred quota configuration.
        /// Structure is documented below.
        /// </summary>
        [Input("quotaConfig")]
        public Input<Inputs.SQuotaPreferenceQuotaConfigGetArgs>? QuotaConfig { get; set; }

        /// <summary>
        /// The id of the quota to which the quota preference is applied. A quota id is unique in the service.
        /// Example: `CPUS-per-project-region`.
        /// </summary>
        [Input("quotaId")]
        public Input<string>? QuotaId { get; set; }

        /// <summary>
        /// Is the quota preference pending Google Cloud approval and fulfillment.
        /// </summary>
        [Input("reconciling")]
        public Input<bool>? Reconciling { get; set; }

        /// <summary>
        /// The name of the service to which the quota preference is applied.
        /// </summary>
        [Input("service")]
        public Input<string>? Service { get; set; }

        /// <summary>
        /// Update time stamp.
        /// A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits. Examples: `2014-10-02T15:01:23Z` and `2014-10-02T15:01:23.045123456Z`.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public SQuotaPreferenceState()
        {
        }
        public static new SQuotaPreferenceState Empty => new SQuotaPreferenceState();
    }
}
