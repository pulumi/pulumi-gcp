// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.CloudQuota
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ### Cloudquotas Quota Adjuster Settings Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var adjusterSettings = new Gcp.CloudQuota.SQuotaAdjusterSettings("adjuster_settings", new()
    ///     {
    ///         Parent = "projects/104740170505",
    ///         Enablement = "ENABLED",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// QuotaAdjusterSettings can be imported using any of these accepted formats:
    /// 
    /// * `{{parent}}/locations/global/quotaAdjusterSettings`
    /// 
    /// When using the `pulumi import` command, QuotaAdjusterSettings can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:cloudquota/sQuotaAdjusterSettings:SQuotaAdjusterSettings default {{parent}}/locations/global/quotaAdjusterSettings
    /// ```
    /// </summary>
    [GcpResourceType("gcp:cloudquota/sQuotaAdjusterSettings:SQuotaAdjusterSettings")]
    public partial class SQuotaAdjusterSettings : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Fields to capture the hierarchy enablement.
        /// The container (org/folder/project) that determines if the quota adjuster is set for this project/folder/org. We use the nearest-ancestor to determine the effective container.
        /// The nearest ancestor (including this container) with `enabled` set (either true or false) will be returned.
        /// </summary>
        [Output("effectiveContainer")]
        public Output<string> EffectiveContainer { get; private set; } = null!;

        /// <summary>
        /// Based on the effective container`s setting above, determines Whether this container has the quota adjuster enabled.
        /// </summary>
        [Output("effectiveEnablement")]
        public Output<string> EffectiveEnablement { get; private set; } = null!;

        /// <summary>
        /// Required. The configured value of the enablement at the given resource.
        /// Possible values are: `ENABLED`, `DISABLED`.
        /// </summary>
        [Output("enablement")]
        public Output<string> Enablement { get; private set; } = null!;

        /// <summary>
        /// The parent of the quota preference. Allowed parents are "projects/[project-id / number]" or "folders/[folder-id / number]" or "organizations/[org-id / number]".
        /// 
        /// 
        /// - - -
        /// </summary>
        [Output("parent")]
        public Output<string> Parent { get; private set; } = null!;


        /// <summary>
        /// Create a SQuotaAdjusterSettings resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SQuotaAdjusterSettings(string name, SQuotaAdjusterSettingsArgs args, CustomResourceOptions? options = null)
            : base("gcp:cloudquota/sQuotaAdjusterSettings:SQuotaAdjusterSettings", name, args ?? new SQuotaAdjusterSettingsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SQuotaAdjusterSettings(string name, Input<string> id, SQuotaAdjusterSettingsState? state = null, CustomResourceOptions? options = null)
            : base("gcp:cloudquota/sQuotaAdjusterSettings:SQuotaAdjusterSettings", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SQuotaAdjusterSettings resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SQuotaAdjusterSettings Get(string name, Input<string> id, SQuotaAdjusterSettingsState? state = null, CustomResourceOptions? options = null)
        {
            return new SQuotaAdjusterSettings(name, id, state, options);
        }
    }

    public sealed class SQuotaAdjusterSettingsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Required. The configured value of the enablement at the given resource.
        /// Possible values are: `ENABLED`, `DISABLED`.
        /// </summary>
        [Input("enablement", required: true)]
        public Input<string> Enablement { get; set; } = null!;

        /// <summary>
        /// The parent of the quota preference. Allowed parents are "projects/[project-id / number]" or "folders/[folder-id / number]" or "organizations/[org-id / number]".
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("parent")]
        public Input<string>? Parent { get; set; }

        public SQuotaAdjusterSettingsArgs()
        {
        }
        public static new SQuotaAdjusterSettingsArgs Empty => new SQuotaAdjusterSettingsArgs();
    }

    public sealed class SQuotaAdjusterSettingsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Fields to capture the hierarchy enablement.
        /// The container (org/folder/project) that determines if the quota adjuster is set for this project/folder/org. We use the nearest-ancestor to determine the effective container.
        /// The nearest ancestor (including this container) with `enabled` set (either true or false) will be returned.
        /// </summary>
        [Input("effectiveContainer")]
        public Input<string>? EffectiveContainer { get; set; }

        /// <summary>
        /// Based on the effective container`s setting above, determines Whether this container has the quota adjuster enabled.
        /// </summary>
        [Input("effectiveEnablement")]
        public Input<string>? EffectiveEnablement { get; set; }

        /// <summary>
        /// Required. The configured value of the enablement at the given resource.
        /// Possible values are: `ENABLED`, `DISABLED`.
        /// </summary>
        [Input("enablement")]
        public Input<string>? Enablement { get; set; }

        /// <summary>
        /// The parent of the quota preference. Allowed parents are "projects/[project-id / number]" or "folders/[folder-id / number]" or "organizations/[org-id / number]".
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("parent")]
        public Input<string>? Parent { get; set; }

        public SQuotaAdjusterSettingsState()
        {
        }
        public static new SQuotaAdjusterSettingsState Empty => new SQuotaAdjusterSettingsState();
    }
}
