// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.RuntimeConfig
{
    public static class GetConfigIamPolicy
    {
        public static Task<GetConfigIamPolicyResult> InvokeAsync(GetConfigIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConfigIamPolicyResult>("gcp:runtimeconfig/getConfigIamPolicy:getConfigIamPolicy", args ?? new GetConfigIamPolicyArgs(), options.WithDefaults());

        public static Output<GetConfigIamPolicyResult> Invoke(GetConfigIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConfigIamPolicyResult>("gcp:runtimeconfig/getConfigIamPolicy:getConfigIamPolicy", args ?? new GetConfigIamPolicyInvokeArgs(), options.WithDefaults());

        public static Output<GetConfigIamPolicyResult> Invoke(GetConfigIamPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetConfigIamPolicyResult>("gcp:runtimeconfig/getConfigIamPolicy:getConfigIamPolicy", args ?? new GetConfigIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConfigIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("config", required: true)]
        public string Config { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        public GetConfigIamPolicyArgs()
        {
        }
        public static new GetConfigIamPolicyArgs Empty => new GetConfigIamPolicyArgs();
    }

    public sealed class GetConfigIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("config", required: true)]
        public Input<string> Config { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetConfigIamPolicyInvokeArgs()
        {
        }
        public static new GetConfigIamPolicyInvokeArgs Empty => new GetConfigIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetConfigIamPolicyResult
    {
        public readonly string Config;
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (Required only by `gcp.runtimeconfig.ConfigIamPolicy`) The policy data generated by
        /// a `gcp.organizations.getIAMPolicy` data source.
        /// </summary>
        public readonly string PolicyData;
        public readonly string Project;

        [OutputConstructor]
        private GetConfigIamPolicyResult(
            string config,

            string etag,

            string id,

            string policyData,

            string project)
        {
            Config = config;
            Etag = etag;
            Id = id;
            PolicyData = policyData;
            Project = project;
        }
    }
}
