// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.RuntimeConfig
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// Example creating a RuntimeConfig variable.
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var my_runtime_config = new Gcp.RuntimeConfig.Config("my-runtime-config", new()
    ///     {
    ///         Description = "Runtime configuration values for my service",
    ///     });
    /// 
    ///     var environment = new Gcp.RuntimeConfig.Variable("environment", new()
    ///     {
    ///         Parent = my_runtime_config.Name,
    ///         Text = "example.com",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// You can also encode binary content using the `value` argument instead. The
    /// value must be base64 encoded.
    /// 
    /// Example of using the `value` argument.
    /// 
    /// ```csharp
    /// using System;
    /// using System.Collections.Generic;
    /// using System.IO;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// 	private static string ReadFileBase64(string path) {
    /// 		return Convert.ToBase64String(Encoding.UTF8.GetBytes(File.ReadAllText(path)))
    /// 	}
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var my_runtime_config = new Gcp.RuntimeConfig.Config("my-runtime-config", new()
    ///     {
    ///         Description = "Runtime configuration values for my service",
    ///     });
    /// 
    ///     var my_secret = new Gcp.RuntimeConfig.Variable("my-secret", new()
    ///     {
    ///         Parent = my_runtime_config.Name,
    ///         Value = ReadFileBase64("my-encrypted-secret.dat"),
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Runtime Config Variables can be imported using the `name` or full variable name, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import gcp:runtimeconfig/variable:Variable myvariable myconfig/myvariable
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:runtimeconfig/variable:Variable myvariable projects/my-gcp-project/configs/myconfig/variables/myvariable
    /// ```
    /// 
    ///  When importing using only the name, the provider project must be set.
    /// </summary>
    [GcpResourceType("gcp:runtimeconfig/variable:Variable")]
    public partial class Variable : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the variable to manage. Note that variable
        /// names can be hierarchical using slashes (e.g. "prod-variables/hostname").
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The name of the RuntimeConfig resource containing this
        /// variable.
        /// </summary>
        [Output("parent")]
        public Output<string> Parent { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// or `value` - (Required) The content to associate with the variable.
        /// Exactly one of `text` or `variable` must be specified. If `text` is specified,
        /// it must be a valid UTF-8 string and less than 4096 bytes in length. If `value`
        /// is specified, it must be base64 encoded and less than 4096 bytes in length.
        /// </summary>
        [Output("text")]
        public Output<string?> Text { get; private set; } = null!;

        /// <summary>
        /// (Computed) The timestamp in RFC3339 UTC "Zulu" format,
        /// accurate to nanoseconds, representing when the variable was last updated.
        /// Example: "2016-10-09T12:33:37.578138407Z".
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;

        [Output("value")]
        public Output<string?> Value { get; private set; } = null!;


        /// <summary>
        /// Create a Variable resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Variable(string name, VariableArgs args, CustomResourceOptions? options = null)
            : base("gcp:runtimeconfig/variable:Variable", name, args ?? new VariableArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Variable(string name, Input<string> id, VariableState? state = null, CustomResourceOptions? options = null)
            : base("gcp:runtimeconfig/variable:Variable", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Variable resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Variable Get(string name, Input<string> id, VariableState? state = null, CustomResourceOptions? options = null)
        {
            return new Variable(name, id, state, options);
        }
    }

    public sealed class VariableArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the variable to manage. Note that variable
        /// names can be hierarchical using slashes (e.g. "prod-variables/hostname").
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the RuntimeConfig resource containing this
        /// variable.
        /// </summary>
        [Input("parent", required: true)]
        public Input<string> Parent { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// or `value` - (Required) The content to associate with the variable.
        /// Exactly one of `text` or `variable` must be specified. If `text` is specified,
        /// it must be a valid UTF-8 string and less than 4096 bytes in length. If `value`
        /// is specified, it must be base64 encoded and less than 4096 bytes in length.
        /// </summary>
        [Input("text")]
        public Input<string>? Text { get; set; }

        [Input("value")]
        public Input<string>? Value { get; set; }

        public VariableArgs()
        {
        }
        public static new VariableArgs Empty => new VariableArgs();
    }

    public sealed class VariableState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the variable to manage. Note that variable
        /// names can be hierarchical using slashes (e.g. "prod-variables/hostname").
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The name of the RuntimeConfig resource containing this
        /// variable.
        /// </summary>
        [Input("parent")]
        public Input<string>? Parent { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// or `value` - (Required) The content to associate with the variable.
        /// Exactly one of `text` or `variable` must be specified. If `text` is specified,
        /// it must be a valid UTF-8 string and less than 4096 bytes in length. If `value`
        /// is specified, it must be base64 encoded and less than 4096 bytes in length.
        /// </summary>
        [Input("text")]
        public Input<string>? Text { get; set; }

        /// <summary>
        /// (Computed) The timestamp in RFC3339 UTC "Zulu" format,
        /// accurate to nanoseconds, representing when the variable was last updated.
        /// Example: "2016-10-09T12:33:37.578138407Z".
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        [Input("value")]
        public Input<string>? Value { get; set; }

        public VariableState()
        {
        }
        public static new VariableState Empty => new VariableState();
    }
}
