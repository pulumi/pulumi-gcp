// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.SiteVerification
{
    /// <summary>
    /// A web resource is a website or domain with verified ownership. Once your
    /// ownership is verified you will be able to manage your website in the
    /// [Google Search Console](https://www.google.com/webmasters/tools/).
    /// 
    /// &gt; **Note:** The verification data (DNS `TXT` record, HTML file, `meta` tag, etc.)
    /// must already exist before the web resource is created, and must be deleted before
    /// the web resource is destroyed. The Google Site Verification API checks that the
    /// verification data exists at creation time and does not exist at destruction time
    /// and will fail if the required condition is not met.
    /// 
    /// To get more information about WebResource, see:
    /// 
    /// * [API documentation](https://developers.google.com/site-verification/v1)
    /// * How-to Guides
    ///     * [Getting Started](https://developers.google.com/site-verification/v1/getting_started)
    /// 
    /// ## Example Usage
    /// 
    /// ### Site Verification Domain Record
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var token = Gcp.SiteVerification.GetToken.Invoke(new()
    ///     {
    ///         Type = "INET_DOMAIN",
    ///         Identifier = "www.example.com",
    ///         VerificationMethod = "DNS_TXT",
    ///     });
    /// 
    ///     var example = new Gcp.Dns.RecordSet("example", new()
    ///     {
    ///         ManagedZone = "example.com",
    ///         Name = "www.example.com.",
    ///         Type = "TXT",
    ///         Rrdatas = new[]
    ///         {
    ///             token.Apply(getTokenResult =&gt; getTokenResult.Token),
    ///         },
    ///         Ttl = 86400,
    ///     });
    /// 
    ///     var exampleWebResource = new Gcp.SiteVerification.WebResource("example", new()
    ///     {
    ///         Site = new Gcp.SiteVerification.Inputs.WebResourceSiteArgs
    ///         {
    ///             Type = token.Apply(getTokenResult =&gt; getTokenResult.Type),
    ///             Identifier = token.Apply(getTokenResult =&gt; getTokenResult.Identifier),
    ///         },
    ///         VerificationMethod = token.Apply(getTokenResult =&gt; getTokenResult.VerificationMethod),
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             example,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// WebResource can be imported using any of these accepted formats:
    /// 
    /// * `webResource/{{web_resource_id}}`
    /// 
    /// * `{{web_resource_id}}`
    /// 
    /// When using the `pulumi import` command, WebResource can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:siteverification/webResource:WebResource default webResource/{{web_resource_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:siteverification/webResource:WebResource default {{web_resource_id}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:siteverification/webResource:WebResource")]
    public partial class WebResource : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The email addresses of all direct, verified owners of this exact property. Indirect owners —
        /// for example verified owners of the containing domain—are not included in this list.
        /// </summary>
        [Output("owners")]
        public Output<ImmutableArray<string>> Owners { get; private set; } = null!;

        /// <summary>
        /// Container for the address and type of a site for which a verification token will be verified.
        /// Structure is documented below.
        /// </summary>
        [Output("site")]
        public Output<Outputs.WebResourceSite> Site { get; private set; } = null!;

        /// <summary>
        /// The verification method for the Site Verification system to use to verify
        /// this site or domain.
        /// Possible values are: `ANALYTICS`, `DNS_CNAME`, `DNS_TXT`, `FILE`, `META`, `TAG_MANAGER`.
        /// </summary>
        [Output("verificationMethod")]
        public Output<string> VerificationMethod { get; private set; } = null!;

        /// <summary>
        /// The string used to identify this web resource.
        /// </summary>
        [Output("webResourceId")]
        public Output<string> WebResourceId { get; private set; } = null!;


        /// <summary>
        /// Create a WebResource resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WebResource(string name, WebResourceArgs args, CustomResourceOptions? options = null)
            : base("gcp:siteverification/webResource:WebResource", name, args ?? new WebResourceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WebResource(string name, Input<string> id, WebResourceState? state = null, CustomResourceOptions? options = null)
            : base("gcp:siteverification/webResource:WebResource", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WebResource resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WebResource Get(string name, Input<string> id, WebResourceState? state = null, CustomResourceOptions? options = null)
        {
            return new WebResource(name, id, state, options);
        }
    }

    public sealed class WebResourceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Container for the address and type of a site for which a verification token will be verified.
        /// Structure is documented below.
        /// </summary>
        [Input("site", required: true)]
        public Input<Inputs.WebResourceSiteArgs> Site { get; set; } = null!;

        /// <summary>
        /// The verification method for the Site Verification system to use to verify
        /// this site or domain.
        /// Possible values are: `ANALYTICS`, `DNS_CNAME`, `DNS_TXT`, `FILE`, `META`, `TAG_MANAGER`.
        /// </summary>
        [Input("verificationMethod", required: true)]
        public Input<string> VerificationMethod { get; set; } = null!;

        public WebResourceArgs()
        {
        }
        public static new WebResourceArgs Empty => new WebResourceArgs();
    }

    public sealed class WebResourceState : global::Pulumi.ResourceArgs
    {
        [Input("owners")]
        private InputList<string>? _owners;

        /// <summary>
        /// The email addresses of all direct, verified owners of this exact property. Indirect owners —
        /// for example verified owners of the containing domain—are not included in this list.
        /// </summary>
        public InputList<string> Owners
        {
            get => _owners ?? (_owners = new InputList<string>());
            set => _owners = value;
        }

        /// <summary>
        /// Container for the address and type of a site for which a verification token will be verified.
        /// Structure is documented below.
        /// </summary>
        [Input("site")]
        public Input<Inputs.WebResourceSiteGetArgs>? Site { get; set; }

        /// <summary>
        /// The verification method for the Site Verification system to use to verify
        /// this site or domain.
        /// Possible values are: `ANALYTICS`, `DNS_CNAME`, `DNS_TXT`, `FILE`, `META`, `TAG_MANAGER`.
        /// </summary>
        [Input("verificationMethod")]
        public Input<string>? VerificationMethod { get; set; }

        /// <summary>
        /// The string used to identify this web resource.
        /// </summary>
        [Input("webResourceId")]
        public Input<string>? WebResourceId { get; set; }

        public WebResourceState()
        {
        }
        public static new WebResourceState Empty => new WebResourceState();
    }
}
