// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.IdentityPlatform
{
    /// <summary>
    /// There is no persistent data associated with this resource.
    /// 
    /// &gt; **Warning:** If you are using User ADCs (Application Default Credentials) with this resource,
    /// you must specify a `billing_project` and set `user_project_override` to true
    /// in the provider configuration. Otherwise the ACM API will return a 403 error.
    /// Your account must have the `serviceusage.services.use` permission on the
    /// `billing_project` you defined.
    /// 
    /// ## Example Usage
    /// ### Identity Platform Project Default Config
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @default = new Gcp.IdentityPlatform.ProjectDefaultConfig("default", new()
    ///     {
    ///         SignIn = new Gcp.IdentityPlatform.Inputs.ProjectDefaultConfigSignInArgs
    ///         {
    ///             AllowDuplicateEmails = true,
    ///             Anonymous = new Gcp.IdentityPlatform.Inputs.ProjectDefaultConfigSignInAnonymousArgs
    ///             {
    ///                 Enabled = true,
    ///             },
    ///             Email = new Gcp.IdentityPlatform.Inputs.ProjectDefaultConfigSignInEmailArgs
    ///             {
    ///                 Enabled = true,
    ///                 PasswordRequired = false,
    ///             },
    ///             PhoneNumber = new Gcp.IdentityPlatform.Inputs.ProjectDefaultConfigSignInPhoneNumberArgs
    ///             {
    ///                 Enabled = true,
    ///                 TestPhoneNumbers = 
    ///                 {
    ///                     { "+11231231234", "000000" },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ProjectDefaultConfig can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import gcp:identityplatform/projectDefaultConfig:ProjectDefaultConfig default projects/{{project}}/config/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:identityplatform/projectDefaultConfig:ProjectDefaultConfig default {{project}}/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:identityplatform/projectDefaultConfig:ProjectDefaultConfig default {{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:identityplatform/projectDefaultConfig:ProjectDefaultConfig")]
    public partial class ProjectDefaultConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the Config resource. Example: "projects/my-awesome-project/config"
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Configuration related to local sign in methods.
        /// Structure is documented below.
        /// </summary>
        [Output("signIn")]
        public Output<Outputs.ProjectDefaultConfigSignIn?> SignIn { get; private set; } = null!;


        /// <summary>
        /// Create a ProjectDefaultConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ProjectDefaultConfig(string name, ProjectDefaultConfigArgs? args = null, CustomResourceOptions? options = null)
            : base("gcp:identityplatform/projectDefaultConfig:ProjectDefaultConfig", name, args ?? new ProjectDefaultConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ProjectDefaultConfig(string name, Input<string> id, ProjectDefaultConfigState? state = null, CustomResourceOptions? options = null)
            : base("gcp:identityplatform/projectDefaultConfig:ProjectDefaultConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ProjectDefaultConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ProjectDefaultConfig Get(string name, Input<string> id, ProjectDefaultConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new ProjectDefaultConfig(name, id, state, options);
        }
    }

    public sealed class ProjectDefaultConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Configuration related to local sign in methods.
        /// Structure is documented below.
        /// </summary>
        [Input("signIn")]
        public Input<Inputs.ProjectDefaultConfigSignInArgs>? SignIn { get; set; }

        public ProjectDefaultConfigArgs()
        {
        }
        public static new ProjectDefaultConfigArgs Empty => new ProjectDefaultConfigArgs();
    }

    public sealed class ProjectDefaultConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Config resource. Example: "projects/my-awesome-project/config"
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Configuration related to local sign in methods.
        /// Structure is documented below.
        /// </summary>
        [Input("signIn")]
        public Input<Inputs.ProjectDefaultConfigSignInGetArgs>? SignIn { get; set; }

        public ProjectDefaultConfigState()
        {
        }
        public static new ProjectDefaultConfigState Empty => new ProjectDefaultConfigState();
    }
}
