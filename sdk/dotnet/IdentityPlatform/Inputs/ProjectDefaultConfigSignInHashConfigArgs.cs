// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.IdentityPlatform.Inputs
{

    public sealed class ProjectDefaultConfigSignInHashConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// -
        /// Different password hash algorithms used in Identity Toolkit.
        /// </summary>
        [Input("algorithm")]
        public Input<string>? Algorithm { get; set; }

        /// <summary>
        /// -
        /// Memory cost for hash calculation. Used by scrypt and other similar password derivation algorithms. See https://tools.ietf.org/html/rfc7914 for explanation of field.
        /// </summary>
        [Input("memoryCost")]
        public Input<int>? MemoryCost { get; set; }

        /// <summary>
        /// -
        /// How many rounds for hash calculation. Used by scrypt and other similar password derivation algorithms.
        /// </summary>
        [Input("rounds")]
        public Input<int>? Rounds { get; set; }

        /// <summary>
        /// -
        /// Non-printable character to be inserted between the salt and plain text password in base64.
        /// </summary>
        [Input("saltSeparator")]
        public Input<string>? SaltSeparator { get; set; }

        /// <summary>
        /// -
        /// Signer key in base64.
        /// </summary>
        [Input("signerKey")]
        public Input<string>? SignerKey { get; set; }

        public ProjectDefaultConfigSignInHashConfigArgs()
        {
        }
        public static new ProjectDefaultConfigSignInHashConfigArgs Empty => new ProjectDefaultConfigSignInHashConfigArgs();
    }
}
