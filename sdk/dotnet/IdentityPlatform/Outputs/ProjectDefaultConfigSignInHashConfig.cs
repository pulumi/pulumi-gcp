// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.IdentityPlatform.Outputs
{

    [OutputType]
    public sealed class ProjectDefaultConfigSignInHashConfig
    {
        /// <summary>
        /// -
        /// Different password hash algorithms used in Identity Toolkit.
        /// </summary>
        public readonly string? Algorithm;
        /// <summary>
        /// -
        /// Memory cost for hash calculation. Used by scrypt and other similar password derivation algorithms. See https://tools.ietf.org/html/rfc7914 for explanation of field.
        /// </summary>
        public readonly int? MemoryCost;
        /// <summary>
        /// -
        /// How many rounds for hash calculation. Used by scrypt and other similar password derivation algorithms.
        /// </summary>
        public readonly int? Rounds;
        /// <summary>
        /// -
        /// Non-printable character to be inserted between the salt and plain text password in base64.
        /// </summary>
        public readonly string? SaltSeparator;
        /// <summary>
        /// -
        /// Signer key in base64.
        /// </summary>
        public readonly string? SignerKey;

        [OutputConstructor]
        private ProjectDefaultConfigSignInHashConfig(
            string? algorithm,

            int? memoryCost,

            int? rounds,

            string? saltSeparator,

            string? signerKey)
        {
            Algorithm = algorithm;
            MemoryCost = memoryCost;
            Rounds = rounds;
            SaltSeparator = saltSeparator;
            SignerKey = signerKey;
        }
    }
}
