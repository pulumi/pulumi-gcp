// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Container.Outputs
{

    [OutputType]
    public sealed class GetClusterNodeConfigResult
    {
        /// <summary>
        /// Specifies options for controlling advanced machine features.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterNodeConfigAdvancedMachineFeatureResult> AdvancedMachineFeatures;
        /// <summary>
        /// The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool.
        /// </summary>
        public readonly string BootDiskKmsKey;
        /// <summary>
        /// Configuration for the confidential nodes feature, which makes nodes run on confidential VMs. Warning: This configuration can't be changed (or added/removed) after pool creation without deleting and recreating the entire pool.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterNodeConfigConfidentialNodeResult> ConfidentialNodes;
        /// <summary>
        /// Parameters for containerd configuration.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterNodeConfigContainerdConfigResult> ContainerdConfigs;
        /// <summary>
        /// Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB.
        /// </summary>
        public readonly int DiskSizeGb;
        /// <summary>
        /// Type of the disk attached to each node. Such as pd-standard, pd-balanced or pd-ssd
        /// </summary>
        public readonly string DiskType;
        /// <summary>
        /// List of kubernetes taints applied to each node.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterNodeConfigEffectiveTaintResult> EffectiveTaints;
        /// <summary>
        /// If enabled boot disks are configured with confidential mode.
        /// </summary>
        public readonly bool EnableConfidentialStorage;
        /// <summary>
        /// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterNodeConfigEphemeralStorageConfigResult> EphemeralStorageConfigs;
        /// <summary>
        /// Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterNodeConfigEphemeralStorageLocalSsdConfigResult> EphemeralStorageLocalSsdConfigs;
        /// <summary>
        /// Enable or disable NCCL Fast Socket in the node pool.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterNodeConfigFastSocketResult> FastSockets;
        /// <summary>
        /// GCFS configuration for this node.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterNodeConfigGcfsConfigResult> GcfsConfigs;
        /// <summary>
        /// List of the type and count of accelerator cards attached to the instance.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterNodeConfigGuestAcceleratorResult> GuestAccelerators;
        /// <summary>
        /// Enable or disable gvnic in the node pool.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterNodeConfigGvnicResult> Gvnics;
        /// <summary>
        /// The maintenance policy for the hosts on which the GKE VMs run on.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterNodeConfigHostMaintenancePolicyResult> HostMaintenancePolicies;
        /// <summary>
        /// The image type to use for this node. Note that for a given image type, the latest version of it will be used.
        /// </summary>
        public readonly string ImageType;
        /// <summary>
        /// Node kubelet configs.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterNodeConfigKubeletConfigResult> KubeletConfigs;
        /// <summary>
        /// The map of Kubernetes labels (key/value pairs) to be applied to each node. These will added in addition to any default label(s) that Kubernetes may apply to the node.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Parameters that can be configured on Linux nodes.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterNodeConfigLinuxNodeConfigResult> LinuxNodeConfigs;
        /// <summary>
        /// Parameters for raw-block local NVMe SSDs.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterNodeConfigLocalNvmeSsdBlockConfigResult> LocalNvmeSsdBlockConfigs;
        /// <summary>
        /// The number of local SSD disks to be attached to the node.
        /// </summary>
        public readonly int LocalSsdCount;
        /// <summary>
        /// Type of logging agent that is used as the default value for node pools in the cluster. Valid values include DEFAULT and MAX_THROUGHPUT.
        /// </summary>
        public readonly string LoggingVariant;
        /// <summary>
        /// The name of a Google Compute Engine machine type.
        /// </summary>
        public readonly string MachineType;
        /// <summary>
        /// The metadata key/value pairs assigned to instances in the cluster.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Metadata;
        /// <summary>
        /// Minimum CPU platform to be used by this instance. The instance may be scheduled on the specified or newer CPU platform.
        /// </summary>
        public readonly string MinCpuPlatform;
        /// <summary>
        /// Setting this field will assign instances of this pool to run on the specified node group. This is useful for running workloads on sole tenant nodes.
        /// </summary>
        public readonly string NodeGroup;
        /// <summary>
        /// The set of Google API scopes to be made available on all of the node VMs.
        /// </summary>
        public readonly ImmutableArray<string> OauthScopes;
        /// <summary>
        /// Whether the nodes are created as preemptible VM instances.
        /// </summary>
        public readonly bool Preemptible;
        /// <summary>
        /// The reservation affinity configuration for the node pool.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterNodeConfigReservationAffinityResult> ReservationAffinities;
        /// <summary>
        /// The GCE resource labels (a map of key/value pairs) to be applied to the node pool.
        /// </summary>
        public readonly ImmutableDictionary<string, string> ResourceLabels;
        /// <summary>
        /// A map of resource manager tags. Resource manager tag keys and values have the same definition as resource manager tags. Keys must be in the format tagKeys/{tag_key_id}, and values are in the format tagValues/456. The field is ignored (both PUT &amp; PATCH) when empty.
        /// </summary>
        public readonly ImmutableDictionary<string, string> ResourceManagerTags;
        /// <summary>
        /// Sandbox configuration for this node.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterNodeConfigSandboxConfigResult> SandboxConfigs;
        /// <summary>
        /// Secondary boot disks for preloading data or container images.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterNodeConfigSecondaryBootDiskResult> SecondaryBootDisks;
        /// <summary>
        /// The Google Cloud Platform Service Account to be used by the node VMs.
        /// </summary>
        public readonly string ServiceAccount;
        /// <summary>
        /// Shielded Instance options.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterNodeConfigShieldedInstanceConfigResult> ShieldedInstanceConfigs;
        /// <summary>
        /// Node affinity options for sole tenant node pools.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterNodeConfigSoleTenantConfigResult> SoleTenantConfigs;
        /// <summary>
        /// Whether the nodes are created as spot VM instances.
        /// </summary>
        public readonly bool Spot;
        /// <summary>
        /// The list of instance tags applied to all nodes.
        /// </summary>
        public readonly ImmutableArray<string> Tags;
        /// <summary>
        /// List of Kubernetes taints to be applied to each node.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterNodeConfigTaintResult> Taints;
        /// <summary>
        /// The workload metadata configuration for this node.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterNodeConfigWorkloadMetadataConfigResult> WorkloadMetadataConfigs;

        [OutputConstructor]
        private GetClusterNodeConfigResult(
            ImmutableArray<Outputs.GetClusterNodeConfigAdvancedMachineFeatureResult> advancedMachineFeatures,

            string bootDiskKmsKey,

            ImmutableArray<Outputs.GetClusterNodeConfigConfidentialNodeResult> confidentialNodes,

            ImmutableArray<Outputs.GetClusterNodeConfigContainerdConfigResult> containerdConfigs,

            int diskSizeGb,

            string diskType,

            ImmutableArray<Outputs.GetClusterNodeConfigEffectiveTaintResult> effectiveTaints,

            bool enableConfidentialStorage,

            ImmutableArray<Outputs.GetClusterNodeConfigEphemeralStorageConfigResult> ephemeralStorageConfigs,

            ImmutableArray<Outputs.GetClusterNodeConfigEphemeralStorageLocalSsdConfigResult> ephemeralStorageLocalSsdConfigs,

            ImmutableArray<Outputs.GetClusterNodeConfigFastSocketResult> fastSockets,

            ImmutableArray<Outputs.GetClusterNodeConfigGcfsConfigResult> gcfsConfigs,

            ImmutableArray<Outputs.GetClusterNodeConfigGuestAcceleratorResult> guestAccelerators,

            ImmutableArray<Outputs.GetClusterNodeConfigGvnicResult> gvnics,

            ImmutableArray<Outputs.GetClusterNodeConfigHostMaintenancePolicyResult> hostMaintenancePolicies,

            string imageType,

            ImmutableArray<Outputs.GetClusterNodeConfigKubeletConfigResult> kubeletConfigs,

            ImmutableDictionary<string, string> labels,

            ImmutableArray<Outputs.GetClusterNodeConfigLinuxNodeConfigResult> linuxNodeConfigs,

            ImmutableArray<Outputs.GetClusterNodeConfigLocalNvmeSsdBlockConfigResult> localNvmeSsdBlockConfigs,

            int localSsdCount,

            string loggingVariant,

            string machineType,

            ImmutableDictionary<string, string> metadata,

            string minCpuPlatform,

            string nodeGroup,

            ImmutableArray<string> oauthScopes,

            bool preemptible,

            ImmutableArray<Outputs.GetClusterNodeConfigReservationAffinityResult> reservationAffinities,

            ImmutableDictionary<string, string> resourceLabels,

            ImmutableDictionary<string, string> resourceManagerTags,

            ImmutableArray<Outputs.GetClusterNodeConfigSandboxConfigResult> sandboxConfigs,

            ImmutableArray<Outputs.GetClusterNodeConfigSecondaryBootDiskResult> secondaryBootDisks,

            string serviceAccount,

            ImmutableArray<Outputs.GetClusterNodeConfigShieldedInstanceConfigResult> shieldedInstanceConfigs,

            ImmutableArray<Outputs.GetClusterNodeConfigSoleTenantConfigResult> soleTenantConfigs,

            bool spot,

            ImmutableArray<string> tags,

            ImmutableArray<Outputs.GetClusterNodeConfigTaintResult> taints,

            ImmutableArray<Outputs.GetClusterNodeConfigWorkloadMetadataConfigResult> workloadMetadataConfigs)
        {
            AdvancedMachineFeatures = advancedMachineFeatures;
            BootDiskKmsKey = bootDiskKmsKey;
            ConfidentialNodes = confidentialNodes;
            ContainerdConfigs = containerdConfigs;
            DiskSizeGb = diskSizeGb;
            DiskType = diskType;
            EffectiveTaints = effectiveTaints;
            EnableConfidentialStorage = enableConfidentialStorage;
            EphemeralStorageConfigs = ephemeralStorageConfigs;
            EphemeralStorageLocalSsdConfigs = ephemeralStorageLocalSsdConfigs;
            FastSockets = fastSockets;
            GcfsConfigs = gcfsConfigs;
            GuestAccelerators = guestAccelerators;
            Gvnics = gvnics;
            HostMaintenancePolicies = hostMaintenancePolicies;
            ImageType = imageType;
            KubeletConfigs = kubeletConfigs;
            Labels = labels;
            LinuxNodeConfigs = linuxNodeConfigs;
            LocalNvmeSsdBlockConfigs = localNvmeSsdBlockConfigs;
            LocalSsdCount = localSsdCount;
            LoggingVariant = loggingVariant;
            MachineType = machineType;
            Metadata = metadata;
            MinCpuPlatform = minCpuPlatform;
            NodeGroup = nodeGroup;
            OauthScopes = oauthScopes;
            Preemptible = preemptible;
            ReservationAffinities = reservationAffinities;
            ResourceLabels = resourceLabels;
            ResourceManagerTags = resourceManagerTags;
            SandboxConfigs = sandboxConfigs;
            SecondaryBootDisks = secondaryBootDisks;
            ServiceAccount = serviceAccount;
            ShieldedInstanceConfigs = shieldedInstanceConfigs;
            SoleTenantConfigs = soleTenantConfigs;
            Spot = spot;
            Tags = tags;
            Taints = taints;
            WorkloadMetadataConfigs = workloadMetadataConfigs;
        }
    }
}
