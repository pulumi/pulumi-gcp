// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Container.Outputs
{

    [OutputType]
    public sealed class NodePoolNodeConfigGuestAccelerator
    {
        /// <summary>
        /// The number of the accelerator cards exposed to an instance.
        /// </summary>
        public readonly int Count;
        /// <summary>
        /// Configuration for auto installation of GPU driver.
        /// </summary>
        public readonly Outputs.NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig? GpuDriverInstallationConfig;
        /// <summary>
        /// Size of partitions to create on the GPU. Valid values are described in the NVIDIA mig user guide (https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning)
        /// </summary>
        public readonly string? GpuPartitionSize;
        /// <summary>
        /// Configuration for GPU sharing.
        /// </summary>
        public readonly Outputs.NodePoolNodeConfigGuestAcceleratorGpuSharingConfig? GpuSharingConfig;
        /// <summary>
        /// The accelerator type resource name.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private NodePoolNodeConfigGuestAccelerator(
            int count,

            Outputs.NodePoolNodeConfigGuestAcceleratorGpuDriverInstallationConfig? gpuDriverInstallationConfig,

            string? gpuPartitionSize,

            Outputs.NodePoolNodeConfigGuestAcceleratorGpuSharingConfig? gpuSharingConfig,

            string type)
        {
            Count = count;
            GpuDriverInstallationConfig = gpuDriverInstallationConfig;
            GpuPartitionSize = gpuPartitionSize;
            GpuSharingConfig = gpuSharingConfig;
            Type = type;
        }
    }
}
