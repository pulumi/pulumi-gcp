// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Container.Outputs
{

    [OutputType]
    public sealed class ClusterIpAllocationPolicy
    {
        /// <summary>
        /// The configuration for individual additional subnetworks attached to the cluster.
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.ClusterIpAllocationPolicyAdditionalIpRangesConfig> AdditionalIpRangesConfigs;
        /// <summary>
        /// The configuration for additional pod secondary ranges at
        /// the cluster level. Used for Autopilot clusters and Standard clusters with which control of the
        /// secondary Pod IP address assignment to node pools isn't needed. Structure is documented below.
        /// </summary>
        public readonly Outputs.ClusterIpAllocationPolicyAdditionalPodRangesConfig? AdditionalPodRangesConfig;
        /// <summary>
        /// All the information related to Auto IPAM. Structure is documented below
        /// 
        /// &lt;a name="nested_auto_ipam_config"&gt;&lt;/a&gt;The auto ipam config supports:
        /// </summary>
        public readonly Outputs.ClusterIpAllocationPolicyAutoIpamConfig? AutoIpamConfig;
        /// <summary>
        /// The IP address range for the cluster pod IPs.
        /// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
        /// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
        /// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
        /// pick a specific range to use.
        /// </summary>
        public readonly string? ClusterIpv4CidrBlock;
        /// <summary>
        /// The name of the existing secondary
        /// range in the cluster's subnetwork to use for pod IP addresses. Alternatively,
        /// `cluster_ipv4_cidr_block` can be used to automatically create a GKE-managed one.
        /// </summary>
        public readonly string? ClusterSecondaryRangeName;
        /// <summary>
        /// Configuration for cluster level pod cidr overprovision. Default is disabled=false.
        /// </summary>
        public readonly Outputs.ClusterIpAllocationPolicyPodCidrOverprovisionConfig? PodCidrOverprovisionConfig;
        /// <summary>
        /// The IP address range of the services IPs in this cluster.
        /// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
        /// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
        /// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
        /// pick a specific range to use.
        /// </summary>
        public readonly string? ServicesIpv4CidrBlock;
        /// <summary>
        /// The name of the existing
        /// secondary range in the cluster's subnetwork to use for service `ClusterIP`s.
        /// Alternatively, `services_ipv4_cidr_block` can be used to automatically create a
        /// GKE-managed one.
        /// </summary>
        public readonly string? ServicesSecondaryRangeName;
        /// <summary>
        /// The IP Stack Type of the cluster.
        /// Default value is `IPV4`.
        /// Possible values are `IPV4` and `IPV4_IPV6`.
        /// </summary>
        public readonly string? StackType;

        [OutputConstructor]
        private ClusterIpAllocationPolicy(
            ImmutableArray<Outputs.ClusterIpAllocationPolicyAdditionalIpRangesConfig> additionalIpRangesConfigs,

            Outputs.ClusterIpAllocationPolicyAdditionalPodRangesConfig? additionalPodRangesConfig,

            Outputs.ClusterIpAllocationPolicyAutoIpamConfig? autoIpamConfig,

            string? clusterIpv4CidrBlock,

            string? clusterSecondaryRangeName,

            Outputs.ClusterIpAllocationPolicyPodCidrOverprovisionConfig? podCidrOverprovisionConfig,

            string? servicesIpv4CidrBlock,

            string? servicesSecondaryRangeName,

            string? stackType)
        {
            AdditionalIpRangesConfigs = additionalIpRangesConfigs;
            AdditionalPodRangesConfig = additionalPodRangesConfig;
            AutoIpamConfig = autoIpamConfig;
            ClusterIpv4CidrBlock = clusterIpv4CidrBlock;
            ClusterSecondaryRangeName = clusterSecondaryRangeName;
            PodCidrOverprovisionConfig = podCidrOverprovisionConfig;
            ServicesIpv4CidrBlock = servicesIpv4CidrBlock;
            ServicesSecondaryRangeName = servicesSecondaryRangeName;
            StackType = stackType;
        }
    }
}
