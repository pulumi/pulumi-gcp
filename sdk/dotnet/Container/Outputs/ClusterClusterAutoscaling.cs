// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Container.Outputs
{

    [OutputType]
    public sealed class ClusterClusterAutoscaling
    {
        /// <summary>
        /// Contains defaults for a node pool created by NAP. A subset of fields also apply to
        /// GKE Autopilot clusters.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.ClusterClusterAutoscalingAutoProvisioningDefaults? AutoProvisioningDefaults;
        /// <summary>
        /// ) Configuration
        /// options for the [Autoscaling profile](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-autoscaler#autoscaling_profiles)
        /// feature, which lets you choose whether the cluster autoscaler should optimize for resource utilization or resource availability
        /// when deciding to remove nodes from a cluster. Can be `BALANCED` or `OPTIMIZE_UTILIZATION`. Defaults to `BALANCED`.
        /// </summary>
        public readonly string? AutoscalingProfile;
        /// <summary>
        /// Whether node auto-provisioning is enabled. Must be supplied for GKE Standard clusters, `true` is implied
        /// for autopilot clusters. Resource limits for `cpu` and `memory` must be defined to enable node auto-provisioning for GKE Standard.
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// Global constraints for machine resources in the
        /// cluster. Configuring the `cpu` and `memory` types is required if node
        /// auto-provisioning is enabled. These limits will apply to node pool autoscaling
        /// in addition to node auto-provisioning. Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.ClusterClusterAutoscalingResourceLimit> ResourceLimits;

        [OutputConstructor]
        private ClusterClusterAutoscaling(
            Outputs.ClusterClusterAutoscalingAutoProvisioningDefaults? autoProvisioningDefaults,

            string? autoscalingProfile,

            bool? enabled,

            ImmutableArray<Outputs.ClusterClusterAutoscalingResourceLimit> resourceLimits)
        {
            AutoProvisioningDefaults = autoProvisioningDefaults;
            AutoscalingProfile = autoscalingProfile;
            Enabled = enabled;
            ResourceLimits = resourceLimits;
        }
    }
}
