// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Container.Outputs
{

    [OutputType]
    public sealed class ClusterNodePoolNetworkConfig
    {
        /// <summary>
        /// We specify the additional node networks for this node pool using this list. Each node network corresponds to an additional interface
        /// </summary>
        public readonly ImmutableArray<Outputs.ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfig> AdditionalNodeNetworkConfigs;
        /// <summary>
        /// We specify the additional pod networks for this node pool using this list. Each pod network corresponds to an additional alias IP range for the node
        /// </summary>
        public readonly ImmutableArray<Outputs.ClusterNodePoolNetworkConfigAdditionalPodNetworkConfig> AdditionalPodNetworkConfigs;
        /// <summary>
        /// Whether to create a new range for pod IPs in this node pool. Defaults are provided for PodRange and PodIpv4CidrBlock if they are not specified.
        /// </summary>
        public readonly bool? CreatePodRange;
        /// <summary>
        /// Whether nodes have internal IP addresses only.
        /// </summary>
        public readonly bool? EnablePrivateNodes;
        /// <summary>
        /// Network bandwidth tier configuration.
        /// </summary>
        public readonly Outputs.ClusterNodePoolNetworkConfigNetworkPerformanceConfig? NetworkPerformanceConfig;
        /// <summary>
        /// Configuration for node-pool level pod cidr overprovision. If not set, the cluster level setting will be inherited
        /// </summary>
        public readonly Outputs.ClusterNodePoolNetworkConfigPodCidrOverprovisionConfig? PodCidrOverprovisionConfig;
        /// <summary>
        /// The IP address range for pod IPs in this node pool. Only applicable if CreatePodRange is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14) to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14) to pick a specific range to use.
        /// </summary>
        public readonly string? PodIpv4CidrBlock;
        /// <summary>
        /// The ID of the secondary range for pod IPs. If CreatePodRange is true, this ID is used for the new range. If CreatePodRange is false, uses an existing secondary range with this ID.
        /// </summary>
        public readonly string? PodRange;
        /// <summary>
        /// The name or SelfLink of the Google Compute Engine
        /// subnetwork in which the cluster's instances are launched.
        /// </summary>
        public readonly string? Subnetwork;

        [OutputConstructor]
        private ClusterNodePoolNetworkConfig(
            ImmutableArray<Outputs.ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfig> additionalNodeNetworkConfigs,

            ImmutableArray<Outputs.ClusterNodePoolNetworkConfigAdditionalPodNetworkConfig> additionalPodNetworkConfigs,

            bool? createPodRange,

            bool? enablePrivateNodes,

            Outputs.ClusterNodePoolNetworkConfigNetworkPerformanceConfig? networkPerformanceConfig,

            Outputs.ClusterNodePoolNetworkConfigPodCidrOverprovisionConfig? podCidrOverprovisionConfig,

            string? podIpv4CidrBlock,

            string? podRange,

            string? subnetwork)
        {
            AdditionalNodeNetworkConfigs = additionalNodeNetworkConfigs;
            AdditionalPodNetworkConfigs = additionalPodNetworkConfigs;
            CreatePodRange = createPodRange;
            EnablePrivateNodes = enablePrivateNodes;
            NetworkPerformanceConfig = networkPerformanceConfig;
            PodCidrOverprovisionConfig = podCidrOverprovisionConfig;
            PodIpv4CidrBlock = podIpv4CidrBlock;
            PodRange = podRange;
            Subnetwork = subnetwork;
        }
    }
}
