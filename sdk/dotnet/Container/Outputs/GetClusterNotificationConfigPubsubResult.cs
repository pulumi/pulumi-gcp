// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Container.Outputs
{

    [OutputType]
    public sealed class GetClusterNotificationConfigPubsubResult
    {
        /// <summary>
        /// Whether or not the notification config is enabled
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// Allows filtering to one or more specific event types. If event types are present, those and only those event types will be transmitted to the cluster. Other types will be skipped. If no filter is specified, or no event types are present, all event types will be sent
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterNotificationConfigPubsubFilterResult> Filters;
        /// <summary>
        /// The pubsub topic to push upgrade notifications to. Must be in the same project as the cluster. Must be in the format: projects/{project}/topics/{topic}.
        /// </summary>
        public readonly string Topic;

        [OutputConstructor]
        private GetClusterNotificationConfigPubsubResult(
            bool enabled,

            ImmutableArray<Outputs.GetClusterNotificationConfigPubsubFilterResult> filters,

            string topic)
        {
            Enabled = enabled;
            Filters = filters;
            Topic = topic;
        }
    }
}
