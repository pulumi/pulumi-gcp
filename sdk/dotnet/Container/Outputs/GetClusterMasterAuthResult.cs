// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Container.Outputs
{

    [OutputType]
    public sealed class GetClusterMasterAuthResult
    {
        /// <summary>
        /// Base64 encoded public certificate used by clients to authenticate to the cluster endpoint.
        /// </summary>
        public readonly string ClientCertificate;
        /// <summary>
        /// Whether client certificate authorization is enabled for this cluster.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterMasterAuthClientCertificateConfigResult> ClientCertificateConfigs;
        /// <summary>
        /// Base64 encoded private key used by clients to authenticate to the cluster endpoint.
        /// </summary>
        public readonly string ClientKey;
        /// <summary>
        /// Base64 encoded public certificate that is the root of trust for the cluster.
        /// </summary>
        public readonly string ClusterCaCertificate;

        [OutputConstructor]
        private GetClusterMasterAuthResult(
            string clientCertificate,

            ImmutableArray<Outputs.GetClusterMasterAuthClientCertificateConfigResult> clientCertificateConfigs,

            string clientKey,

            string clusterCaCertificate)
        {
            ClientCertificate = clientCertificate;
            ClientCertificateConfigs = clientCertificateConfigs;
            ClientKey = clientKey;
            ClusterCaCertificate = clusterCaCertificate;
        }
    }
}
