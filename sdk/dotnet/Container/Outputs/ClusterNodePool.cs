// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Container.Outputs
{

    [OutputType]
    public sealed class ClusterNodePool
    {
        /// <summary>
        /// Configuration required by cluster autoscaler to adjust the size of the node pool to the current cluster usage.
        /// </summary>
        public readonly Outputs.ClusterNodePoolAutoscaling? Autoscaling;
        /// <summary>
        /// The number of nodes to create in this
        /// cluster's default node pool. In regional or multi-zonal clusters, this is the
        /// number of nodes per zone. Must be set if `node_pool` is not set. If you're using
        /// `gcp.container.NodePool` objects with no default node pool, you'll need to
        /// set this to a value of at least `1`, alongside setting
        /// `remove_default_node_pool` to `true`.
        /// </summary>
        public readonly int? InitialNodeCount;
        /// <summary>
        /// The resource URLs of the managed instance groups associated with this node pool.
        /// </summary>
        public readonly ImmutableArray<string> InstanceGroupUrls;
        /// <summary>
        /// List of instance group URLs which have been assigned to this node pool.
        /// </summary>
        public readonly ImmutableArray<string> ManagedInstanceGroupUrls;
        /// <summary>
        /// Node management configuration, wherein auto-repair and auto-upgrade is configured.
        /// </summary>
        public readonly Outputs.ClusterNodePoolManagement? Management;
        /// <summary>
        /// The maximum number of pods per node in this node pool. Note that this does not work on node pools which are "route-based" - that is, node pools belonging to clusters that do not have IP Aliasing enabled.
        /// </summary>
        public readonly int? MaxPodsPerNode;
        /// <summary>
        /// The name of the cluster, unique within the project and
        /// location.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Creates a unique name for the node pool beginning with the specified prefix. Conflicts with name.
        /// </summary>
        public readonly string? NamePrefix;
        /// <summary>
        /// Configuration for
        /// [Adding Pod IP address ranges](https://cloud.google.com/kubernetes-engine/docs/how-to/multi-pod-cidr)) to the node pool. Structure is documented below
        /// </summary>
        public readonly Outputs.ClusterNodePoolNetworkConfig? NetworkConfig;
        /// <summary>
        /// Parameters used in creating the default node pool.
        /// Generally, this field should not be used at the same time as a
        /// `gcp.container.NodePool` or a `node_pool` block; this configuration
        /// manages the default node pool, which isn't recommended to be used.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.ClusterNodePoolNodeConfig? NodeConfig;
        /// <summary>
        /// The number of nodes per instance group. This field can be used to update the number of nodes per instance group but should not be used alongside autoscaling.
        /// </summary>
        public readonly int? NodeCount;
        /// <summary>
        /// The list of zones in which the cluster's nodes
        /// are located. Nodes must be in the region of their regional cluster or in the
        /// same region as their cluster's zone for zonal clusters. If this is specified for
        /// a zonal cluster, omit the cluster's zone.
        /// 
        /// &gt; A "multi-zonal" cluster is a zonal cluster with at least one additional zone
        /// defined; in a multi-zonal cluster, the cluster master is only present in a
        /// single zone while nodes are present in each of the primary zone and the node
        /// locations. In contrast, in a regional cluster, cluster master nodes are present
        /// in multiple zones in the region. For that reason, regional clusters should be
        /// preferred.
        /// </summary>
        public readonly ImmutableArray<string> NodeLocations;
        /// <summary>
        /// Specifies the node placement policy
        /// </summary>
        public readonly Outputs.ClusterNodePoolPlacementPolicy? PlacementPolicy;
        /// <summary>
        /// Specifies the configuration of queued provisioning
        /// </summary>
        public readonly Outputs.ClusterNodePoolQueuedProvisioning? QueuedProvisioning;
        /// <summary>
        /// Specify node upgrade settings to change how many nodes GKE attempts to upgrade at once. The number of nodes upgraded simultaneously is the sum of max_surge and max_unavailable. The maximum number of nodes upgraded simultaneously is limited to 20.
        /// </summary>
        public readonly Outputs.ClusterNodePoolUpgradeSettings? UpgradeSettings;
        public readonly string? Version;

        [OutputConstructor]
        private ClusterNodePool(
            Outputs.ClusterNodePoolAutoscaling? autoscaling,

            int? initialNodeCount,

            ImmutableArray<string> instanceGroupUrls,

            ImmutableArray<string> managedInstanceGroupUrls,

            Outputs.ClusterNodePoolManagement? management,

            int? maxPodsPerNode,

            string? name,

            string? namePrefix,

            Outputs.ClusterNodePoolNetworkConfig? networkConfig,

            Outputs.ClusterNodePoolNodeConfig? nodeConfig,

            int? nodeCount,

            ImmutableArray<string> nodeLocations,

            Outputs.ClusterNodePoolPlacementPolicy? placementPolicy,

            Outputs.ClusterNodePoolQueuedProvisioning? queuedProvisioning,

            Outputs.ClusterNodePoolUpgradeSettings? upgradeSettings,

            string? version)
        {
            Autoscaling = autoscaling;
            InitialNodeCount = initialNodeCount;
            InstanceGroupUrls = instanceGroupUrls;
            ManagedInstanceGroupUrls = managedInstanceGroupUrls;
            Management = management;
            MaxPodsPerNode = maxPodsPerNode;
            Name = name;
            NamePrefix = namePrefix;
            NetworkConfig = networkConfig;
            NodeConfig = nodeConfig;
            NodeCount = nodeCount;
            NodeLocations = nodeLocations;
            PlacementPolicy = placementPolicy;
            QueuedProvisioning = queuedProvisioning;
            UpgradeSettings = upgradeSettings;
            Version = version;
        }
    }
}
