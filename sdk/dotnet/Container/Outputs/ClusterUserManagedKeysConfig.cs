// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Container.Outputs
{

    [OutputType]
    public sealed class ClusterUserManagedKeysConfig
    {
        /// <summary>
        /// The Certificate Authority Service caPool to use for the aggreation CA in this cluster.
        /// </summary>
        public readonly string? AggregationCa;
        /// <summary>
        /// The Certificate Authority Service caPool to use for the cluster CA in this cluster.
        /// </summary>
        public readonly string? ClusterCa;
        /// <summary>
        /// The Cloud KMS cryptoKey to use for Confidential Hyperdisk on the control plane nodes.
        /// </summary>
        public readonly string? ControlPlaneDiskEncryptionKey;
        /// <summary>
        /// The Certificate Authority Service caPool to use for the etcd API CA in this cluster.
        /// </summary>
        public readonly string? EtcdApiCa;
        /// <summary>
        /// The Certificate Authority Service caPool to use for the etcd peer CA in this cluster.
        /// </summary>
        public readonly string? EtcdPeerCa;
        /// <summary>
        /// Resource path of the Cloud KMS cryptoKey to use for encryption of internal etcd backups.
        /// </summary>
        public readonly string? GkeopsEtcdBackupEncryptionKey;
        /// <summary>
        /// The Cloud KMS cryptoKeyVersions to use for signing service account JWTs issued by this cluster.
        /// </summary>
        public readonly ImmutableArray<string> ServiceAccountSigningKeys;
        /// <summary>
        /// The Cloud KMS cryptoKeyVersions to use for verifying service account JWTs issued by this cluster.
        /// </summary>
        public readonly ImmutableArray<string> ServiceAccountVerificationKeys;

        [OutputConstructor]
        private ClusterUserManagedKeysConfig(
            string? aggregationCa,

            string? clusterCa,

            string? controlPlaneDiskEncryptionKey,

            string? etcdApiCa,

            string? etcdPeerCa,

            string? gkeopsEtcdBackupEncryptionKey,

            ImmutableArray<string> serviceAccountSigningKeys,

            ImmutableArray<string> serviceAccountVerificationKeys)
        {
            AggregationCa = aggregationCa;
            ClusterCa = clusterCa;
            ControlPlaneDiskEncryptionKey = controlPlaneDiskEncryptionKey;
            EtcdApiCa = etcdApiCa;
            EtcdPeerCa = etcdPeerCa;
            GkeopsEtcdBackupEncryptionKey = gkeopsEtcdBackupEncryptionKey;
            ServiceAccountSigningKeys = serviceAccountSigningKeys;
            ServiceAccountVerificationKeys = serviceAccountVerificationKeys;
        }
    }
}
