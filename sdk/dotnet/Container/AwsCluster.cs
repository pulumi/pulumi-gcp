// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Container
{
    /// <summary>
    /// An Anthos cluster running on AWS.
    /// 
    /// For more information, see:
    /// * [Multicloud overview](https://cloud.google.com/anthos/clusters/docs/multi-cloud)
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// Cluster can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import gcp:container/awsCluster:AwsCluster default projects/{{project}}/locations/{{location}}/awsClusters/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:container/awsCluster:AwsCluster default {{project}}/{{location}}/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:container/awsCluster:AwsCluster default {{location}}/{{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:container/awsCluster:AwsCluster")]
    public partial class AwsCluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Optional. Annotations on the cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
        /// </summary>
        [Output("annotations")]
        public Output<ImmutableDictionary<string, string>?> Annotations { get; private set; } = null!;

        /// <summary>
        /// Configuration related to the cluster RBAC settings.
        /// </summary>
        [Output("authorization")]
        public Output<Outputs.AwsClusterAuthorization> Authorization { get; private set; } = null!;

        /// <summary>
        /// The AWS region where the cluster runs. Each Google Cloud region supports a subset of nearby AWS regions. You can call to list all supported AWS regions within a given Google Cloud region.
        /// </summary>
        [Output("awsRegion")]
        public Output<string> AwsRegion { get; private set; } = null!;

        /// <summary>
        /// Configuration related to the cluster control plane.
        /// </summary>
        [Output("controlPlane")]
        public Output<Outputs.AwsClusterControlPlane> ControlPlane { get; private set; } = null!;

        /// <summary>
        /// Output only. The time at which this cluster was created.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Optional. A human readable description of this cluster. Cannot be longer than 255 UTF-8 encoded bytes.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Output only. The endpoint of the cluster's API server.
        /// </summary>
        [Output("endpoint")]
        public Output<string> Endpoint { get; private set; } = null!;

        /// <summary>
        /// Allows clients to perform consistent read-modify-writes through optimistic concurrency control. May be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// Fleet configuration.
        /// </summary>
        [Output("fleet")]
        public Output<Outputs.AwsClusterFleet> Fleet { get; private set; } = null!;

        /// <summary>
        /// The location for the resource
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// (Beta only) Logging configuration.
        /// </summary>
        [Output("loggingConfig")]
        public Output<Outputs.AwsClusterLoggingConfig> LoggingConfig { get; private set; } = null!;

        /// <summary>
        /// The name of this resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Cluster-wide networking configuration.
        /// </summary>
        [Output("networking")]
        public Output<Outputs.AwsClusterNetworking> Networking { get; private set; } = null!;

        /// <summary>
        /// The number of the Fleet host project where this cluster will be registered.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Output only. If set, there are currently changes in flight to the cluster.
        /// </summary>
        [Output("reconciling")]
        public Output<bool> Reconciling { get; private set; } = null!;

        /// <summary>
        /// Output only. The current state of the cluster. Possible values: STATE_UNSPECIFIED, PROVISIONING, RUNNING, RECONCILING, STOPPING, ERROR, DEGRADED
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Output only. A globally unique identifier for the cluster.
        /// </summary>
        [Output("uid")]
        public Output<string> Uid { get; private set; } = null!;

        /// <summary>
        /// Output only. The time at which this cluster was last updated.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;

        /// <summary>
        /// Output only. Workload Identity settings.
        /// </summary>
        [Output("workloadIdentityConfigs")]
        public Output<ImmutableArray<Outputs.AwsClusterWorkloadIdentityConfig>> WorkloadIdentityConfigs { get; private set; } = null!;


        /// <summary>
        /// Create a AwsCluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AwsCluster(string name, AwsClusterArgs args, CustomResourceOptions? options = null)
            : base("gcp:container/awsCluster:AwsCluster", name, args ?? new AwsClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AwsCluster(string name, Input<string> id, AwsClusterState? state = null, CustomResourceOptions? options = null)
            : base("gcp:container/awsCluster:AwsCluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AwsCluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AwsCluster Get(string name, Input<string> id, AwsClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new AwsCluster(name, id, state, options);
        }
    }

    public sealed class AwsClusterArgs : global::Pulumi.ResourceArgs
    {
        [Input("annotations")]
        private InputMap<string>? _annotations;

        /// <summary>
        /// Optional. Annotations on the cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
        /// </summary>
        public InputMap<string> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<string>());
            set => _annotations = value;
        }

        /// <summary>
        /// Configuration related to the cluster RBAC settings.
        /// </summary>
        [Input("authorization", required: true)]
        public Input<Inputs.AwsClusterAuthorizationArgs> Authorization { get; set; } = null!;

        /// <summary>
        /// The AWS region where the cluster runs. Each Google Cloud region supports a subset of nearby AWS regions. You can call to list all supported AWS regions within a given Google Cloud region.
        /// </summary>
        [Input("awsRegion", required: true)]
        public Input<string> AwsRegion { get; set; } = null!;

        /// <summary>
        /// Configuration related to the cluster control plane.
        /// </summary>
        [Input("controlPlane", required: true)]
        public Input<Inputs.AwsClusterControlPlaneArgs> ControlPlane { get; set; } = null!;

        /// <summary>
        /// Optional. A human readable description of this cluster. Cannot be longer than 255 UTF-8 encoded bytes.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Fleet configuration.
        /// </summary>
        [Input("fleet", required: true)]
        public Input<Inputs.AwsClusterFleetArgs> Fleet { get; set; } = null!;

        /// <summary>
        /// The location for the resource
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// (Beta only) Logging configuration.
        /// </summary>
        [Input("loggingConfig")]
        public Input<Inputs.AwsClusterLoggingConfigArgs>? LoggingConfig { get; set; }

        /// <summary>
        /// The name of this resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Cluster-wide networking configuration.
        /// </summary>
        [Input("networking", required: true)]
        public Input<Inputs.AwsClusterNetworkingArgs> Networking { get; set; } = null!;

        /// <summary>
        /// The number of the Fleet host project where this cluster will be registered.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public AwsClusterArgs()
        {
        }
        public static new AwsClusterArgs Empty => new AwsClusterArgs();
    }

    public sealed class AwsClusterState : global::Pulumi.ResourceArgs
    {
        [Input("annotations")]
        private InputMap<string>? _annotations;

        /// <summary>
        /// Optional. Annotations on the cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
        /// </summary>
        public InputMap<string> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<string>());
            set => _annotations = value;
        }

        /// <summary>
        /// Configuration related to the cluster RBAC settings.
        /// </summary>
        [Input("authorization")]
        public Input<Inputs.AwsClusterAuthorizationGetArgs>? Authorization { get; set; }

        /// <summary>
        /// The AWS region where the cluster runs. Each Google Cloud region supports a subset of nearby AWS regions. You can call to list all supported AWS regions within a given Google Cloud region.
        /// </summary>
        [Input("awsRegion")]
        public Input<string>? AwsRegion { get; set; }

        /// <summary>
        /// Configuration related to the cluster control plane.
        /// </summary>
        [Input("controlPlane")]
        public Input<Inputs.AwsClusterControlPlaneGetArgs>? ControlPlane { get; set; }

        /// <summary>
        /// Output only. The time at which this cluster was created.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Optional. A human readable description of this cluster. Cannot be longer than 255 UTF-8 encoded bytes.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Output only. The endpoint of the cluster's API server.
        /// </summary>
        [Input("endpoint")]
        public Input<string>? Endpoint { get; set; }

        /// <summary>
        /// Allows clients to perform consistent read-modify-writes through optimistic concurrency control. May be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
        /// </summary>
        [Input("etag")]
        public Input<string>? Etag { get; set; }

        /// <summary>
        /// Fleet configuration.
        /// </summary>
        [Input("fleet")]
        public Input<Inputs.AwsClusterFleetGetArgs>? Fleet { get; set; }

        /// <summary>
        /// The location for the resource
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// (Beta only) Logging configuration.
        /// </summary>
        [Input("loggingConfig")]
        public Input<Inputs.AwsClusterLoggingConfigGetArgs>? LoggingConfig { get; set; }

        /// <summary>
        /// The name of this resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Cluster-wide networking configuration.
        /// </summary>
        [Input("networking")]
        public Input<Inputs.AwsClusterNetworkingGetArgs>? Networking { get; set; }

        /// <summary>
        /// The number of the Fleet host project where this cluster will be registered.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Output only. If set, there are currently changes in flight to the cluster.
        /// </summary>
        [Input("reconciling")]
        public Input<bool>? Reconciling { get; set; }

        /// <summary>
        /// Output only. The current state of the cluster. Possible values: STATE_UNSPECIFIED, PROVISIONING, RUNNING, RECONCILING, STOPPING, ERROR, DEGRADED
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// Output only. A globally unique identifier for the cluster.
        /// </summary>
        [Input("uid")]
        public Input<string>? Uid { get; set; }

        /// <summary>
        /// Output only. The time at which this cluster was last updated.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        [Input("workloadIdentityConfigs")]
        private InputList<Inputs.AwsClusterWorkloadIdentityConfigGetArgs>? _workloadIdentityConfigs;

        /// <summary>
        /// Output only. Workload Identity settings.
        /// </summary>
        public InputList<Inputs.AwsClusterWorkloadIdentityConfigGetArgs> WorkloadIdentityConfigs
        {
            get => _workloadIdentityConfigs ?? (_workloadIdentityConfigs = new InputList<Inputs.AwsClusterWorkloadIdentityConfigGetArgs>());
            set => _workloadIdentityConfigs = value;
        }

        public AwsClusterState()
        {
        }
        public static new AwsClusterState Empty => new AwsClusterState();
    }
}
