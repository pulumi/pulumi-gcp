// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Container
{
    /// <summary>
    /// An Anthos cluster running on Azure.
    /// 
    /// For more information, see:
    /// * [Multicloud overview](https://cloud.google.com/anthos/clusters/docs/multi-cloud)
    /// ## Example Usage
    /// ### Basic_azure_cluster
    /// A basic example of a containerazure azure cluster
    /// ```csharp
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var versions = Output.Create(Gcp.Container.GetAzureVersions.InvokeAsync(new Gcp.Container.GetAzureVersionsArgs
    ///         {
    ///             Location = "us-west1",
    ///             Project = "my-project-name",
    ///         }));
    ///         var basic = new Gcp.Container.AzureClient("basic", new Gcp.Container.AzureClientArgs
    ///         {
    ///             ApplicationId = "12345678-1234-1234-1234-123456789111",
    ///             Location = "us-west1",
    ///             Project = "my-project-name",
    ///             TenantId = "12345678-1234-1234-1234-123456789111",
    ///         });
    ///         var primary = new Gcp.Container.AzureCluster("primary", new Gcp.Container.AzureClusterArgs
    ///         {
    ///             Authorization = new Gcp.Container.Inputs.AzureClusterAuthorizationArgs
    ///             {
    ///                 AdminUsers = 
    ///                 {
    ///                     new Gcp.Container.Inputs.AzureClusterAuthorizationAdminUserArgs
    ///                     {
    ///                         Username = "mmv2@google.com",
    ///                     },
    ///                 },
    ///             },
    ///             AzureRegion = "westus2",
    ///             Client = basic.Name.Apply(name =&gt; $"projects/my-project-number/locations/us-west1/azureClients/{name}"),
    ///             ControlPlane = new Gcp.Container.Inputs.AzureClusterControlPlaneArgs
    ///             {
    ///                 SshConfig = new Gcp.Container.Inputs.AzureClusterControlPlaneSshConfigArgs
    ///                 {
    ///                     AuthorizedKey = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC8yaayO6lnb2v+SedxUMa2c8vtIEzCzBjM3EJJsv8Vm9zUDWR7dXWKoNGARUb2mNGXASvI6mFIDXTIlkQ0poDEPpMaXR0g2cb5xT8jAAJq7fqXL3+0rcJhY/uigQ+MrT6s+ub0BFVbsmGHNrMQttXX9gtmwkeAEvj3mra9e5pkNf90qlKnZz6U0SVArxVsLx07vHPHDIYrl0OPG4zUREF52igbBPiNrHJFDQJT/4YlDMJmo/QT/A1D6n9ocemvZSzhRx15/Arjowhr+VVKSbaxzPtEfY0oIg2SrqJnnr/l3Du5qIefwh5VmCZe4xopPUaDDoOIEFriZ88sB+3zz8ib8sk8zJJQCgeP78tQvXCgS+4e5W3TUg9mxjB6KjXTyHIVhDZqhqde0OI3Fy1UuVzRUwnBaLjBnAwP5EoFQGRmDYk/rEYe7HTmovLeEBUDQocBQKT4Ripm/xJkkWY7B07K/tfo56dGUCkvyIVXKBInCh+dLK7gZapnd4UWkY0xBYcwo1geMLRq58iFTLA2j/JmpmHXp7m0l7jJii7d44uD3tTIFYThn7NlOnvhLim/YcBK07GMGIN7XwrrKZKmxXaspw6KBWVhzuw1UPxctxshYEaMLfFg/bwOw8HvMPr9VtrElpSB7oiOh91PDIPdPBgHCi7N2QgQ5l/ZDBHieSpNrQ== thomasrodgers",
    ///                 },
    ///                 SubnetId = "/subscriptions/12345678-1234-1234-1234-123456789111/resourceGroups/my--dev-byo/providers/Microsoft.Network/virtualNetworks/my--dev-vnet/subnets/default",
    ///                 Version = versions.Apply(versions =&gt; versions.ValidVersions?[0]),
    ///             },
    ///             Fleet = new Gcp.Container.Inputs.AzureClusterFleetArgs
    ///             {
    ///                 Project = "my-project-number",
    ///             },
    ///             Location = "us-west1",
    ///             Networking = new Gcp.Container.Inputs.AzureClusterNetworkingArgs
    ///             {
    ///                 PodAddressCidrBlocks = 
    ///                 {
    ///                     "10.200.0.0/16",
    ///                 },
    ///                 ServiceAddressCidrBlocks = 
    ///                 {
    ///                     "10.32.0.0/24",
    ///                 },
    ///                 VirtualNetworkId = "/subscriptions/12345678-1234-1234-1234-123456789111/resourceGroups/my--dev-byo/providers/Microsoft.Network/virtualNetworks/my--dev-vnet",
    ///             },
    ///             Project = "my-project-name",
    ///             ResourceGroupId = "/subscriptions/12345678-1234-1234-1234-123456789111/resourceGroups/my--dev-cluster",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Cluster can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import gcp:container/azureCluster:AzureCluster default projects/{{project}}/locations/{{location}}/azureClusters/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:container/azureCluster:AzureCluster default {{project}}/{{location}}/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:container/azureCluster:AzureCluster default {{location}}/{{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:container/azureCluster:AzureCluster")]
    public partial class AzureCluster : Pulumi.CustomResource
    {
        /// <summary>
        /// Optional. Annotations on the cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Keys can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
        /// </summary>
        [Output("annotations")]
        public Output<ImmutableDictionary<string, string>?> Annotations { get; private set; } = null!;

        /// <summary>
        /// Required. Configuration related to the cluster RBAC settings.
        /// </summary>
        [Output("authorization")]
        public Output<Outputs.AzureClusterAuthorization> Authorization { get; private set; } = null!;

        /// <summary>
        /// Required. The Azure region where the cluster runs. Each Google Cloud region supports a subset of nearby Azure regions. You can call to list all supported Azure regions within a given Google Cloud region.
        /// </summary>
        [Output("azureRegion")]
        public Output<string> AzureRegion { get; private set; } = null!;

        /// <summary>
        /// Required. Name of the AzureClient. The `AzureClient` resource must reside on the same GCP project and region as the `AzureCluster`. `AzureClient` names are formatted as `projects/&lt;project-number&gt;/locations/&lt;region&gt;/azureClients/&lt;client-id&gt;`. See Resource Names (https:cloud.google.com/apis/design/resource_names) for more details on Google Cloud resource names.
        /// </summary>
        [Output("client")]
        public Output<string> Client { get; private set; } = null!;

        /// <summary>
        /// Required. Configuration related to the cluster control plane.
        /// </summary>
        [Output("controlPlane")]
        public Output<Outputs.AzureClusterControlPlane> ControlPlane { get; private set; } = null!;

        /// <summary>
        /// Output only. The time at which this cluster was created.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Optional. A human readable description of this cluster. Cannot be longer than 255 UTF-8 encoded bytes.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Output only. The endpoint of the cluster's API server.
        /// </summary>
        [Output("endpoint")]
        public Output<string> Endpoint { get; private set; } = null!;

        /// <summary>
        /// Allows clients to perform consistent read-modify-writes through optimistic concurrency control. May be sent on update
        /// and delete requests to ensure the client has an up-to-date value before proceeding.
        /// </summary>
        [Output("etag")]
        public Output<string> Etag { get; private set; } = null!;

        /// <summary>
        /// Fleet configuration.
        /// </summary>
        [Output("fleet")]
        public Output<Outputs.AzureClusterFleet> Fleet { get; private set; } = null!;

        /// <summary>
        /// The location for the resource
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of this resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Required. Cluster-wide networking configuration.
        /// </summary>
        [Output("networking")]
        public Output<Outputs.AzureClusterNetworking> Networking { get; private set; } = null!;

        /// <summary>
        /// The project for the resource
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Output only. If set, there are currently changes in flight to the cluster.
        /// </summary>
        [Output("reconciling")]
        public Output<bool> Reconciling { get; private set; } = null!;

        /// <summary>
        /// The ARM ID the of the resource group containing proxy keyvault. Resource group ids are formatted as `/subscriptions/&lt;subscription-id&gt;/resourceGroups/&lt;resource-group-name&gt;`
        /// </summary>
        [Output("resourceGroupId")]
        public Output<string> ResourceGroupId { get; private set; } = null!;

        /// <summary>
        /// Output only. The current state of the cluster. Possible values: STATE_UNSPECIFIED, PROVISIONING, RUNNING, RECONCILING,
        /// STOPPING, ERROR, DEGRADED
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Output only. A globally unique identifier for the cluster.
        /// </summary>
        [Output("uid")]
        public Output<string> Uid { get; private set; } = null!;

        /// <summary>
        /// Output only. The time at which this cluster was last updated.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;

        /// <summary>
        /// Output only. Workload Identity settings.
        /// </summary>
        [Output("workloadIdentityConfigs")]
        public Output<ImmutableArray<Outputs.AzureClusterWorkloadIdentityConfig>> WorkloadIdentityConfigs { get; private set; } = null!;


        /// <summary>
        /// Create a AzureCluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AzureCluster(string name, AzureClusterArgs args, CustomResourceOptions? options = null)
            : base("gcp:container/azureCluster:AzureCluster", name, args ?? new AzureClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AzureCluster(string name, Input<string> id, AzureClusterState? state = null, CustomResourceOptions? options = null)
            : base("gcp:container/azureCluster:AzureCluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AzureCluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AzureCluster Get(string name, Input<string> id, AzureClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new AzureCluster(name, id, state, options);
        }
    }

    public sealed class AzureClusterArgs : Pulumi.ResourceArgs
    {
        [Input("annotations")]
        private InputMap<string>? _annotations;

        /// <summary>
        /// Optional. Annotations on the cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Keys can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
        /// </summary>
        public InputMap<string> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<string>());
            set => _annotations = value;
        }

        /// <summary>
        /// Required. Configuration related to the cluster RBAC settings.
        /// </summary>
        [Input("authorization", required: true)]
        public Input<Inputs.AzureClusterAuthorizationArgs> Authorization { get; set; } = null!;

        /// <summary>
        /// Required. The Azure region where the cluster runs. Each Google Cloud region supports a subset of nearby Azure regions. You can call to list all supported Azure regions within a given Google Cloud region.
        /// </summary>
        [Input("azureRegion", required: true)]
        public Input<string> AzureRegion { get; set; } = null!;

        /// <summary>
        /// Required. Name of the AzureClient. The `AzureClient` resource must reside on the same GCP project and region as the `AzureCluster`. `AzureClient` names are formatted as `projects/&lt;project-number&gt;/locations/&lt;region&gt;/azureClients/&lt;client-id&gt;`. See Resource Names (https:cloud.google.com/apis/design/resource_names) for more details on Google Cloud resource names.
        /// </summary>
        [Input("client", required: true)]
        public Input<string> Client { get; set; } = null!;

        /// <summary>
        /// Required. Configuration related to the cluster control plane.
        /// </summary>
        [Input("controlPlane", required: true)]
        public Input<Inputs.AzureClusterControlPlaneArgs> ControlPlane { get; set; } = null!;

        /// <summary>
        /// Optional. A human readable description of this cluster. Cannot be longer than 255 UTF-8 encoded bytes.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Fleet configuration.
        /// </summary>
        [Input("fleet", required: true)]
        public Input<Inputs.AzureClusterFleetArgs> Fleet { get; set; } = null!;

        /// <summary>
        /// The location for the resource
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The name of this resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Required. Cluster-wide networking configuration.
        /// </summary>
        [Input("networking", required: true)]
        public Input<Inputs.AzureClusterNetworkingArgs> Networking { get; set; } = null!;

        /// <summary>
        /// The project for the resource
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The ARM ID the of the resource group containing proxy keyvault. Resource group ids are formatted as `/subscriptions/&lt;subscription-id&gt;/resourceGroups/&lt;resource-group-name&gt;`
        /// </summary>
        [Input("resourceGroupId", required: true)]
        public Input<string> ResourceGroupId { get; set; } = null!;

        public AzureClusterArgs()
        {
        }
    }

    public sealed class AzureClusterState : Pulumi.ResourceArgs
    {
        [Input("annotations")]
        private InputMap<string>? _annotations;

        /// <summary>
        /// Optional. Annotations on the cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Keys can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
        /// </summary>
        public InputMap<string> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<string>());
            set => _annotations = value;
        }

        /// <summary>
        /// Required. Configuration related to the cluster RBAC settings.
        /// </summary>
        [Input("authorization")]
        public Input<Inputs.AzureClusterAuthorizationGetArgs>? Authorization { get; set; }

        /// <summary>
        /// Required. The Azure region where the cluster runs. Each Google Cloud region supports a subset of nearby Azure regions. You can call to list all supported Azure regions within a given Google Cloud region.
        /// </summary>
        [Input("azureRegion")]
        public Input<string>? AzureRegion { get; set; }

        /// <summary>
        /// Required. Name of the AzureClient. The `AzureClient` resource must reside on the same GCP project and region as the `AzureCluster`. `AzureClient` names are formatted as `projects/&lt;project-number&gt;/locations/&lt;region&gt;/azureClients/&lt;client-id&gt;`. See Resource Names (https:cloud.google.com/apis/design/resource_names) for more details on Google Cloud resource names.
        /// </summary>
        [Input("client")]
        public Input<string>? Client { get; set; }

        /// <summary>
        /// Required. Configuration related to the cluster control plane.
        /// </summary>
        [Input("controlPlane")]
        public Input<Inputs.AzureClusterControlPlaneGetArgs>? ControlPlane { get; set; }

        /// <summary>
        /// Output only. The time at which this cluster was created.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Optional. A human readable description of this cluster. Cannot be longer than 255 UTF-8 encoded bytes.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Output only. The endpoint of the cluster's API server.
        /// </summary>
        [Input("endpoint")]
        public Input<string>? Endpoint { get; set; }

        /// <summary>
        /// Allows clients to perform consistent read-modify-writes through optimistic concurrency control. May be sent on update
        /// and delete requests to ensure the client has an up-to-date value before proceeding.
        /// </summary>
        [Input("etag")]
        public Input<string>? Etag { get; set; }

        /// <summary>
        /// Fleet configuration.
        /// </summary>
        [Input("fleet")]
        public Input<Inputs.AzureClusterFleetGetArgs>? Fleet { get; set; }

        /// <summary>
        /// The location for the resource
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of this resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Required. Cluster-wide networking configuration.
        /// </summary>
        [Input("networking")]
        public Input<Inputs.AzureClusterNetworkingGetArgs>? Networking { get; set; }

        /// <summary>
        /// The project for the resource
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Output only. If set, there are currently changes in flight to the cluster.
        /// </summary>
        [Input("reconciling")]
        public Input<bool>? Reconciling { get; set; }

        /// <summary>
        /// The ARM ID the of the resource group containing proxy keyvault. Resource group ids are formatted as `/subscriptions/&lt;subscription-id&gt;/resourceGroups/&lt;resource-group-name&gt;`
        /// </summary>
        [Input("resourceGroupId")]
        public Input<string>? ResourceGroupId { get; set; }

        /// <summary>
        /// Output only. The current state of the cluster. Possible values: STATE_UNSPECIFIED, PROVISIONING, RUNNING, RECONCILING,
        /// STOPPING, ERROR, DEGRADED
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// Output only. A globally unique identifier for the cluster.
        /// </summary>
        [Input("uid")]
        public Input<string>? Uid { get; set; }

        /// <summary>
        /// Output only. The time at which this cluster was last updated.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        [Input("workloadIdentityConfigs")]
        private InputList<Inputs.AzureClusterWorkloadIdentityConfigGetArgs>? _workloadIdentityConfigs;

        /// <summary>
        /// Output only. Workload Identity settings.
        /// </summary>
        public InputList<Inputs.AzureClusterWorkloadIdentityConfigGetArgs> WorkloadIdentityConfigs
        {
            get => _workloadIdentityConfigs ?? (_workloadIdentityConfigs = new InputList<Inputs.AzureClusterWorkloadIdentityConfigGetArgs>());
            set => _workloadIdentityConfigs = value;
        }

        public AzureClusterState()
        {
        }
    }
}
