// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Container
{
    public static class GetRegistryRepository
    {
        /// <summary>
        /// This data source fetches the project name, and provides the appropriate URLs to use for container registry for this project.
        /// 
        /// The URLs are computed entirely offline - as long as the project exists, they will be valid, but this data source does not contact Google Container Registry (GCR) at any point.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Gcp.Container.GetRegistryRepository.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["gcrLocation"] = foo.Apply(getRegistryRepositoryResult =&gt; getRegistryRepositoryResult.RepositoryUrl),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetRegistryRepositoryResult> InvokeAsync(GetRegistryRepositoryArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRegistryRepositoryResult>("gcp:container/getRegistryRepository:getRegistryRepository", args ?? new GetRegistryRepositoryArgs(), options.WithDefaults());

        /// <summary>
        /// This data source fetches the project name, and provides the appropriate URLs to use for container registry for this project.
        /// 
        /// The URLs are computed entirely offline - as long as the project exists, they will be valid, but this data source does not contact Google Container Registry (GCR) at any point.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Gcp.Container.GetRegistryRepository.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["gcrLocation"] = foo.Apply(getRegistryRepositoryResult =&gt; getRegistryRepositoryResult.RepositoryUrl),
        ///     };
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetRegistryRepositoryResult> Invoke(GetRegistryRepositoryInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRegistryRepositoryResult>("gcp:container/getRegistryRepository:getRegistryRepository", args ?? new GetRegistryRepositoryInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRegistryRepositoryArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The project ID that this repository is attached to.  If not provided, provider project will be used instead.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        /// <summary>
        /// The GCR region to use.  As of this writing, one of `asia`, `eu`, and `us`.  See [the documentation](https://cloud.google.com/container-registry/docs/pushing-and-pulling) for additional information.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        public GetRegistryRepositoryArgs()
        {
        }
        public static new GetRegistryRepositoryArgs Empty => new GetRegistryRepositoryArgs();
    }

    public sealed class GetRegistryRepositoryInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The project ID that this repository is attached to.  If not provided, provider project will be used instead.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The GCR region to use.  As of this writing, one of `asia`, `eu`, and `us`.  See [the documentation](https://cloud.google.com/container-registry/docs/pushing-and-pulling) for additional information.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public GetRegistryRepositoryInvokeArgs()
        {
        }
        public static new GetRegistryRepositoryInvokeArgs Empty => new GetRegistryRepositoryInvokeArgs();
    }


    [OutputType]
    public sealed class GetRegistryRepositoryResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Project;
        public readonly string? Region;
        /// <summary>
        /// The URL at which the repository can be accessed.
        /// </summary>
        public readonly string RepositoryUrl;

        [OutputConstructor]
        private GetRegistryRepositoryResult(
            string id,

            string project,

            string? region,

            string repositoryUrl)
        {
            Id = id;
            Project = project;
            Region = region;
            RepositoryUrl = repositoryUrl;
        }
    }
}
