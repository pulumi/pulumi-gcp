// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Container
{
    public static class GetRegistryRepository
    {
        /// <summary>
        /// This data source fetches the project name, and provides the appropriate URLs to use for container registry for this project.
        /// 
        /// The URLs are computed entirely offline - as long as the project exists, they will be valid, but this data source does not contact Google Container Registry (GCR) at any point.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var foo = Output.Create(Gcp.Container.GetRegistryRepository.InvokeAsync());
        ///         this.GcrLocation = foo.Apply(foo =&gt; foo.RepositoryUrl);
        ///     }
        /// 
        ///     [Output("gcrLocation")]
        ///     public Output&lt;string&gt; GcrLocation { get; set; }
        /// }
        /// ```
        /// 
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetRegistryRepositoryResult> InvokeAsync(GetRegistryRepositoryArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRegistryRepositoryResult>("gcp:container/getRegistryRepository:getRegistryRepository", args ?? new GetRegistryRepositoryArgs(), options.WithVersion());
    }


    public sealed class GetRegistryRepositoryArgs : Pulumi.InvokeArgs
    {
        [Input("project")]
        public string? Project { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        public GetRegistryRepositoryArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetRegistryRepositoryResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Project;
        public readonly string? Region;
        public readonly string RepositoryUrl;

        [OutputConstructor]
        private GetRegistryRepositoryResult(
            string id,

            string project,

            string? region,

            string repositoryUrl)
        {
            Id = id;
            Project = project;
            Region = region;
            RepositoryUrl = repositoryUrl;
        }
    }
}
