// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Container.Inputs
{

    public sealed class ClusterNodePoolNetworkConfigArgs : global::Pulumi.ResourceArgs
    {
        [Input("additionalNodeNetworkConfigs")]
        private InputList<Inputs.ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArgs>? _additionalNodeNetworkConfigs;

        /// <summary>
        /// We specify the additional node networks for this node pool using this list. Each node network corresponds to an additional interface
        /// </summary>
        public InputList<Inputs.ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArgs> AdditionalNodeNetworkConfigs
        {
            get => _additionalNodeNetworkConfigs ?? (_additionalNodeNetworkConfigs = new InputList<Inputs.ClusterNodePoolNetworkConfigAdditionalNodeNetworkConfigArgs>());
            set => _additionalNodeNetworkConfigs = value;
        }

        [Input("additionalPodNetworkConfigs")]
        private InputList<Inputs.ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArgs>? _additionalPodNetworkConfigs;

        /// <summary>
        /// We specify the additional pod networks for this node pool using this list. Each pod network corresponds to an additional alias IP range for the node
        /// </summary>
        public InputList<Inputs.ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArgs> AdditionalPodNetworkConfigs
        {
            get => _additionalPodNetworkConfigs ?? (_additionalPodNetworkConfigs = new InputList<Inputs.ClusterNodePoolNetworkConfigAdditionalPodNetworkConfigArgs>());
            set => _additionalPodNetworkConfigs = value;
        }

        /// <summary>
        /// Whether to create a new range for pod IPs in this node pool. Defaults are provided for `pod_range` and `pod_ipv4_cidr_block` if they are not specified.
        /// </summary>
        [Input("createPodRange")]
        public Input<bool>? CreatePodRange { get; set; }

        /// <summary>
        /// Whether nodes have internal IP addresses only.
        /// </summary>
        [Input("enablePrivateNodes")]
        public Input<bool>? EnablePrivateNodes { get; set; }

        /// <summary>
        /// Network bandwidth tier configuration.
        /// </summary>
        [Input("networkPerformanceConfig")]
        public Input<Inputs.ClusterNodePoolNetworkConfigNetworkPerformanceConfigArgs>? NetworkPerformanceConfig { get; set; }

        /// <summary>
        /// Configuration for node-pool level pod cidr overprovision. If not set, the cluster level setting will be inherited
        /// </summary>
        [Input("podCidrOverprovisionConfig")]
        public Input<Inputs.ClusterNodePoolNetworkConfigPodCidrOverprovisionConfigArgs>? PodCidrOverprovisionConfig { get; set; }

        /// <summary>
        /// The IP address range for pod IPs in this node pool. Only applicable if createPodRange is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14) to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14) to pick a specific range to use.
        /// </summary>
        [Input("podIpv4CidrBlock")]
        public Input<string>? PodIpv4CidrBlock { get; set; }

        /// <summary>
        /// The ID of the secondary range for pod IPs. If `create_pod_range` is true, this ID is used for the new range. If `create_pod_range` is false, uses an existing secondary range with this ID.
        /// </summary>
        [Input("podRange")]
        public Input<string>? PodRange { get; set; }

        public ClusterNodePoolNetworkConfigArgs()
        {
        }
        public static new ClusterNodePoolNetworkConfigArgs Empty => new ClusterNodePoolNetworkConfigArgs();
    }
}
