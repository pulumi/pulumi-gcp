// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Container.Inputs
{

    public sealed class ClusterIpAllocationPolicyGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("additionalIpRangesConfigs")]
        private InputList<Inputs.ClusterIpAllocationPolicyAdditionalIpRangesConfigGetArgs>? _additionalIpRangesConfigs;

        /// <summary>
        /// The configuration for individual additional subnetworks attached to the cluster.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.ClusterIpAllocationPolicyAdditionalIpRangesConfigGetArgs> AdditionalIpRangesConfigs
        {
            get => _additionalIpRangesConfigs ?? (_additionalIpRangesConfigs = new InputList<Inputs.ClusterIpAllocationPolicyAdditionalIpRangesConfigGetArgs>());
            set => _additionalIpRangesConfigs = value;
        }

        /// <summary>
        /// The configuration for additional pod secondary ranges at
        /// the cluster level. Used for Autopilot clusters and Standard clusters with which control of the
        /// secondary Pod IP address assignment to node pools isn't needed. Structure is documented below.
        /// </summary>
        [Input("additionalPodRangesConfig")]
        public Input<Inputs.ClusterIpAllocationPolicyAdditionalPodRangesConfigGetArgs>? AdditionalPodRangesConfig { get; set; }

        /// <summary>
        /// All the information related to Auto IPAM. Structure is documented below
        /// 
        /// &lt;a name="nested_auto_ipam_config"&gt;&lt;/a&gt;The auto ipam config supports:
        /// </summary>
        [Input("autoIpamConfig")]
        public Input<Inputs.ClusterIpAllocationPolicyAutoIpamConfigGetArgs>? AutoIpamConfig { get; set; }

        /// <summary>
        /// The IP address range for the cluster pod IPs.
        /// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
        /// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
        /// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
        /// pick a specific range to use.
        /// </summary>
        [Input("clusterIpv4CidrBlock")]
        public Input<string>? ClusterIpv4CidrBlock { get; set; }

        /// <summary>
        /// The name of the existing secondary
        /// range in the cluster's subnetwork to use for pod IP addresses. Alternatively,
        /// `cluster_ipv4_cidr_block` can be used to automatically create a GKE-managed one.
        /// </summary>
        [Input("clusterSecondaryRangeName")]
        public Input<string>? ClusterSecondaryRangeName { get; set; }

        /// <summary>
        /// Configuration for cluster level pod cidr overprovision. Default is disabled=false.
        /// </summary>
        [Input("podCidrOverprovisionConfig")]
        public Input<Inputs.ClusterIpAllocationPolicyPodCidrOverprovisionConfigGetArgs>? PodCidrOverprovisionConfig { get; set; }

        /// <summary>
        /// The IP address range of the services IPs in this cluster.
        /// Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14)
        /// to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14)
        /// from the RFC-1918 private networks (e.g. 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16) to
        /// pick a specific range to use.
        /// </summary>
        [Input("servicesIpv4CidrBlock")]
        public Input<string>? ServicesIpv4CidrBlock { get; set; }

        /// <summary>
        /// The name of the existing
        /// secondary range in the cluster's subnetwork to use for service `ClusterIP`s.
        /// Alternatively, `services_ipv4_cidr_block` can be used to automatically create a
        /// GKE-managed one.
        /// </summary>
        [Input("servicesSecondaryRangeName")]
        public Input<string>? ServicesSecondaryRangeName { get; set; }

        /// <summary>
        /// The IP Stack Type of the cluster.
        /// Default value is `IPV4`.
        /// Possible values are `IPV4` and `IPV4_IPV6`.
        /// </summary>
        [Input("stackType")]
        public Input<string>? StackType { get; set; }

        public ClusterIpAllocationPolicyGetArgs()
        {
        }
        public static new ClusterIpAllocationPolicyGetArgs Empty => new ClusterIpAllocationPolicyGetArgs();
    }
}
