// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Container.Inputs
{

    public sealed class NodePoolNodeConfigKubeletConfigEvictionSoftGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Defines percentage of soft eviction threshold for imagefs.available.
        /// </summary>
        [Input("imagefsAvailable")]
        public Input<string>? ImagefsAvailable { get; set; }

        /// <summary>
        /// Defines percentage of soft eviction threshold for imagefs.inodesFree.
        /// </summary>
        [Input("imagefsInodesFree")]
        public Input<string>? ImagefsInodesFree { get; set; }

        /// <summary>
        /// Defines quantity of soft eviction threshold for memory.available.
        /// </summary>
        [Input("memoryAvailable")]
        public Input<string>? MemoryAvailable { get; set; }

        /// <summary>
        /// Defines percentage of soft eviction threshold for nodefs.available.
        /// </summary>
        [Input("nodefsAvailable")]
        public Input<string>? NodefsAvailable { get; set; }

        /// <summary>
        /// Defines percentage of soft eviction threshold for nodefs.inodesFree.
        /// </summary>
        [Input("nodefsInodesFree")]
        public Input<string>? NodefsInodesFree { get; set; }

        /// <summary>
        /// Defines percentage of soft eviction threshold for pid.available.
        /// </summary>
        [Input("pidAvailable")]
        public Input<string>? PidAvailable { get; set; }

        public NodePoolNodeConfigKubeletConfigEvictionSoftGetArgs()
        {
        }
        public static new NodePoolNodeConfigKubeletConfigEvictionSoftGetArgs Empty => new NodePoolNodeConfigKubeletConfigEvictionSoftGetArgs();
    }
}
