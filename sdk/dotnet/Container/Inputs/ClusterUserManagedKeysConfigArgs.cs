// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Container.Inputs
{

    public sealed class ClusterUserManagedKeysConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Certificate Authority Service caPool to use for the aggreation CA in this cluster.
        /// </summary>
        [Input("aggregationCa")]
        public Input<string>? AggregationCa { get; set; }

        /// <summary>
        /// The Certificate Authority Service caPool to use for the cluster CA in this cluster.
        /// </summary>
        [Input("clusterCa")]
        public Input<string>? ClusterCa { get; set; }

        /// <summary>
        /// The Cloud KMS cryptoKey to use for Confidential Hyperdisk on the control plane nodes.
        /// </summary>
        [Input("controlPlaneDiskEncryptionKey")]
        public Input<string>? ControlPlaneDiskEncryptionKey { get; set; }

        /// <summary>
        /// The Certificate Authority Service caPool to use for the etcd API CA in this cluster.
        /// </summary>
        [Input("etcdApiCa")]
        public Input<string>? EtcdApiCa { get; set; }

        /// <summary>
        /// The Certificate Authority Service caPool to use for the etcd peer CA in this cluster.
        /// </summary>
        [Input("etcdPeerCa")]
        public Input<string>? EtcdPeerCa { get; set; }

        /// <summary>
        /// Resource path of the Cloud KMS cryptoKey to use for encryption of internal etcd backups.
        /// </summary>
        [Input("gkeopsEtcdBackupEncryptionKey")]
        public Input<string>? GkeopsEtcdBackupEncryptionKey { get; set; }

        [Input("serviceAccountSigningKeys")]
        private InputList<string>? _serviceAccountSigningKeys;

        /// <summary>
        /// The Cloud KMS cryptoKeyVersions to use for signing service account JWTs issued by this cluster.
        /// </summary>
        public InputList<string> ServiceAccountSigningKeys
        {
            get => _serviceAccountSigningKeys ?? (_serviceAccountSigningKeys = new InputList<string>());
            set => _serviceAccountSigningKeys = value;
        }

        [Input("serviceAccountVerificationKeys")]
        private InputList<string>? _serviceAccountVerificationKeys;

        /// <summary>
        /// The Cloud KMS cryptoKeyVersions to use for verifying service account JWTs issued by this cluster.
        /// </summary>
        public InputList<string> ServiceAccountVerificationKeys
        {
            get => _serviceAccountVerificationKeys ?? (_serviceAccountVerificationKeys = new InputList<string>());
            set => _serviceAccountVerificationKeys = value;
        }

        public ClusterUserManagedKeysConfigArgs()
        {
        }
        public static new ClusterUserManagedKeysConfigArgs Empty => new ClusterUserManagedKeysConfigArgs();
    }
}
