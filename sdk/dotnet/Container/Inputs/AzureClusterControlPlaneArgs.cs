// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Container.Inputs
{

    public sealed class AzureClusterControlPlaneArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional. Configuration related to application-layer secrets encryption.
        /// </summary>
        [Input("databaseEncryption")]
        public Input<Inputs.AzureClusterControlPlaneDatabaseEncryptionArgs>? DatabaseEncryption { get; set; }

        /// <summary>
        /// Optional. Configuration related to the main volume provisioned for each control plane replica. The main volume is in charge of storing all of the cluster's etcd state. When unspecified, it defaults to a 8-GiB Azure Disk.
        /// </summary>
        [Input("mainVolume")]
        public Input<Inputs.AzureClusterControlPlaneMainVolumeArgs>? MainVolume { get; set; }

        /// <summary>
        /// Proxy configuration for outbound HTTP(S) traffic.
        /// </summary>
        [Input("proxyConfig")]
        public Input<Inputs.AzureClusterControlPlaneProxyConfigArgs>? ProxyConfig { get; set; }

        [Input("replicaPlacements")]
        private InputList<Inputs.AzureClusterControlPlaneReplicaPlacementArgs>? _replicaPlacements;

        /// <summary>
        /// Configuration for where to place the control plane replicas. Up to three replica placement instances can be specified. If replica_placements is set, the replica placement instances will be applied to the three control plane replicas as evenly as possible.
        /// </summary>
        public InputList<Inputs.AzureClusterControlPlaneReplicaPlacementArgs> ReplicaPlacements
        {
            get => _replicaPlacements ?? (_replicaPlacements = new InputList<Inputs.AzureClusterControlPlaneReplicaPlacementArgs>());
            set => _replicaPlacements = value;
        }

        /// <summary>
        /// Optional. Configuration related to the root volume provisioned for each control plane replica. When unspecified, it defaults to 32-GiB Azure Disk.
        /// </summary>
        [Input("rootVolume")]
        public Input<Inputs.AzureClusterControlPlaneRootVolumeArgs>? RootVolume { get; set; }

        /// <summary>
        /// SSH configuration for how to access the underlying control plane machines.
        /// </summary>
        [Input("sshConfig", required: true)]
        public Input<Inputs.AzureClusterControlPlaneSshConfigArgs> SshConfig { get; set; } = null!;

        /// <summary>
        /// For a given replica, the ARM ID of the subnet where the control plane VM is deployed. Make sure it's a subnet under the virtual network in the cluster configuration.
        /// </summary>
        [Input("subnetId", required: true)]
        public Input<string> SubnetId { get; set; } = null!;

        [Input("tags")]
        private InputMap<string>? _tags;

        /// <summary>
        /// Optional. A set of tags to apply to all underlying control plane Azure resources.
        /// </summary>
        public InputMap<string> Tags
        {
            get => _tags ?? (_tags = new InputMap<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The Kubernetes version to run on control plane replicas (e.g. `1.19.10-gke.1000`). You can list all supported versions on a given Google Cloud region by calling GetAzureServerConfig.
        /// </summary>
        [Input("version", required: true)]
        public Input<string> Version { get; set; } = null!;

        /// <summary>
        /// Optional. The Azure VM size name. Example: `Standard_DS2_v2`. For available VM sizes, see https://docs.microsoft.com/en-us/azure/virtual-machines/vm-naming-conventions. When unspecified, it defaults to `Standard_DS2_v2`.
        /// </summary>
        [Input("vmSize")]
        public Input<string>? VmSize { get; set; }

        public AzureClusterControlPlaneArgs()
        {
        }
    }
}
