// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Container.Inputs
{

    public sealed class ClusterAddonsConfigGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// . Structure is documented below.
        /// </summary>
        [Input("cloudrunConfig")]
        public Input<Inputs.ClusterAddonsConfigCloudrunConfigGetArgs>? CloudrunConfig { get; set; }

        /// <summary>
        /// .
        /// The status of the ConfigConnector addon. It is disabled by default; Set `enabled = true` to enable.
        /// </summary>
        [Input("configConnectorConfig")]
        public Input<Inputs.ClusterAddonsConfigConfigConnectorConfigGetArgs>? ConfigConnectorConfig { get; set; }

        /// <summary>
        /// .
        /// The status of the NodeLocal DNSCache addon. It is disabled by default.
        /// Set `enabled = true` to enable.
        /// 
        /// **Enabling/Disabling NodeLocal DNSCache in an existing cluster is a disruptive operation.
        /// All cluster nodes running GKE 1.15 and higher are recreated.**
        /// </summary>
        [Input("dnsCacheConfig")]
        public Input<Inputs.ClusterAddonsConfigDnsCacheConfigGetArgs>? DnsCacheConfig { get; set; }

        /// <summary>
        /// .
        /// Whether this cluster should enable the Google Compute Engine Persistent Disk Container Storage Interface (CSI) Driver. Set `enabled = true` to enable.
        /// 
        /// **Note:** The Compute Engine persistent disk CSI Driver is enabled by default on newly created clusters for the following versions: Linux clusters: GKE version 1.18.10-gke.2100 or later, or 1.19.3-gke.2100 or later.
        /// </summary>
        [Input("gcePersistentDiskCsiDriverConfig")]
        public Input<Inputs.ClusterAddonsConfigGcePersistentDiskCsiDriverConfigGetArgs>? GcePersistentDiskCsiDriverConfig { get; set; }

        /// <summary>
        /// The status of the Filestore CSI driver addon,
        /// which allows the usage of filestore instance as volumes.
        /// It is disabled by default; set `enabled = true` to enable.
        /// </summary>
        [Input("gcpFilestoreCsiDriverConfig")]
        public Input<Inputs.ClusterAddonsConfigGcpFilestoreCsiDriverConfigGetArgs>? GcpFilestoreCsiDriverConfig { get; set; }

        /// <summary>
        /// The status of the GCSFuse CSI driver addon,
        /// which allows the usage of a gcs bucket as volumes.
        /// It is disabled by default for Standard clusters; set `enabled = true` to enable.
        /// It is enabled by default for Autopilot clusters with version 1.24 or later; set `enabled = true` to enable it explicitly.
        /// See [Enable the Cloud Storage FUSE CSI driver](https://cloud.google.com/kubernetes-engine/docs/how-to/persistent-volumes/cloud-storage-fuse-csi-driver#enable) for more information.
        /// </summary>
        [Input("gcsFuseCsiDriverConfig")]
        public Input<Inputs.ClusterAddonsConfigGcsFuseCsiDriverConfigGetArgs>? GcsFuseCsiDriverConfig { get; set; }

        /// <summary>
        /// .
        /// The status of the Backup for GKE agent addon. It is disabled by default; Set `enabled = true` to enable.
        /// </summary>
        [Input("gkeBackupAgentConfig")]
        public Input<Inputs.ClusterAddonsConfigGkeBackupAgentConfigGetArgs>? GkeBackupAgentConfig { get; set; }

        /// <summary>
        /// The status of the Horizontal Pod Autoscaling
        /// addon, which increases or decreases the number of replica pods a replication controller
        /// has based on the resource usage of the existing pods.
        /// It is enabled by default;
        /// set `disabled = true` to disable.
        /// </summary>
        [Input("horizontalPodAutoscaling")]
        public Input<Inputs.ClusterAddonsConfigHorizontalPodAutoscalingGetArgs>? HorizontalPodAutoscaling { get; set; }

        /// <summary>
        /// The status of the HTTP (L7) load balancing
        /// controller addon, which makes it easy to set up HTTP load balancers for services in a
        /// cluster. It is enabled by default; set `disabled = true` to disable.
        /// </summary>
        [Input("httpLoadBalancing")]
        public Input<Inputs.ClusterAddonsConfigHttpLoadBalancingGetArgs>? HttpLoadBalancing { get; set; }

        /// <summary>
        /// .
        /// Structure is documented below.
        /// </summary>
        [Input("istioConfig")]
        public Input<Inputs.ClusterAddonsConfigIstioConfigGetArgs>? IstioConfig { get; set; }

        /// <summary>
        /// .
        /// Configuration for the KALM addon, which manages the lifecycle of k8s. It is disabled by default; Set `enabled = true` to enable.
        /// </summary>
        [Input("kalmConfig")]
        public Input<Inputs.ClusterAddonsConfigKalmConfigGetArgs>? KalmConfig { get; set; }

        /// <summary>
        /// Whether we should enable the network policy addon
        /// for the master.  This must be enabled in order to enable network policy for the nodes.
        /// To enable this, you must also define a `network_policy` block,
        /// otherwise nothing will happen.
        /// It can only be disabled if the nodes already do not have network policies enabled.
        /// Defaults to disabled; set `disabled = false` to enable.
        /// </summary>
        [Input("networkPolicyConfig")]
        public Input<Inputs.ClusterAddonsConfigNetworkPolicyConfigGetArgs>? NetworkPolicyConfig { get; set; }

        [Input("rayOperatorConfigs")]
        private InputList<Inputs.ClusterAddonsConfigRayOperatorConfigGetArgs>? _rayOperatorConfigs;

        /// <summary>
        /// . The status of the [Ray Operator
        /// addon](https://cloud.google.com/kubernetes-engine/docs/add-on/ray-on-gke/concepts/overview).
        /// It is disabled by default. Set `enabled = true` to enable. The minimum
        /// cluster version to enable Ray is 1.30.0-gke.1747000.
        /// 
        /// Ray Operator config has optional subfields
        /// `ray_cluster_logging_config.enabled` and
        /// `ray_cluster_monitoring_config.enabled` which control Ray Cluster logging
        /// and monitoring respectively. See [Collect and view logs and metrics for Ray
        /// clusters on
        /// GKE](https://cloud.google.com/kubernetes-engine/docs/add-on/ray-on-gke/how-to/collect-view-logs-metrics)
        /// for more information.
        /// 
        /// This example `addons_config` disables two addons:
        /// </summary>
        public InputList<Inputs.ClusterAddonsConfigRayOperatorConfigGetArgs> RayOperatorConfigs
        {
            get => _rayOperatorConfigs ?? (_rayOperatorConfigs = new InputList<Inputs.ClusterAddonsConfigRayOperatorConfigGetArgs>());
            set => _rayOperatorConfigs = value;
        }

        /// <summary>
        /// .
        /// The status of the Stateful HA addon, which provides automatic configurable failover for stateful applications.
        /// It is disabled by default for Standard clusters. Set `enabled = true` to enable.
        /// </summary>
        [Input("statefulHaConfig")]
        public Input<Inputs.ClusterAddonsConfigStatefulHaConfigGetArgs>? StatefulHaConfig { get; set; }

        public ClusterAddonsConfigGetArgs()
        {
        }
        public static new ClusterAddonsConfigGetArgs Empty => new ClusterAddonsConfigGetArgs();
    }
}
