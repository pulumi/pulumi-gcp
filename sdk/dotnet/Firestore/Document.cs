// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Firestore
{
    /// <summary>
    /// In Cloud Firestore, the unit of storage is the document. A document is a lightweight record
    /// that contains fields, which map to values. Each document is identified by a name.
    /// 
    /// To get more information about Document, see:
    /// 
    /// * [API documentation](https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents)
    /// * How-to Guides
    ///     * [Official Documentation](https://cloud.google.com/firestore/docs/manage-data/add-data)
    /// 
    /// &gt; **Warning:** This resource creates a Firestore Document on a project that already has
    /// Firestore enabled. If you haven't already enabled it, you can create a
    /// `gcp.appengine.Application` resource with `database_type` set to
    /// `"CLOUD_FIRESTORE"` to do so. Your Firestore location will be the same as
    /// the App Engine location specified.
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// Document can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import gcp:firestore/document:Document default {{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:firestore/document:Document")]
    public partial class Document : Pulumi.CustomResource
    {
        /// <summary>
        /// The collection ID, relative to database. For example: chatrooms or chatrooms/my-document/private-messages.
        /// </summary>
        [Output("collection")]
        public Output<string> Collection { get; private set; } = null!;

        /// <summary>
        /// Creation timestamp in RFC3339 format.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The Firestore database id. Defaults to `"(default)"`.
        /// </summary>
        [Output("database")]
        public Output<string?> Database { get; private set; } = null!;

        /// <summary>
        /// The client-assigned document ID to use for this document during creation.
        /// </summary>
        [Output("documentId")]
        public Output<string> DocumentId { get; private set; } = null!;

        /// <summary>
        /// The document's [fields](https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents) formated as a json string.
        /// </summary>
        [Output("fields")]
        public Output<string> Fields { get; private set; } = null!;

        /// <summary>
        /// A server defined name for this index. Format:
        /// 'projects/{{project_id}}/databases/{{database_id}}/documents/{{path}}/{{document_id}}'
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A relative path to the collection this document exists within
        /// </summary>
        [Output("path")]
        public Output<string> Path { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Last update timestamp in RFC3339 format.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a Document resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Document(string name, DocumentArgs args, CustomResourceOptions? options = null)
            : base("gcp:firestore/document:Document", name, args ?? new DocumentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Document(string name, Input<string> id, DocumentState? state = null, CustomResourceOptions? options = null)
            : base("gcp:firestore/document:Document", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Document resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Document Get(string name, Input<string> id, DocumentState? state = null, CustomResourceOptions? options = null)
        {
            return new Document(name, id, state, options);
        }
    }

    public sealed class DocumentArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The collection ID, relative to database. For example: chatrooms or chatrooms/my-document/private-messages.
        /// </summary>
        [Input("collection", required: true)]
        public Input<string> Collection { get; set; } = null!;

        /// <summary>
        /// The Firestore database id. Defaults to `"(default)"`.
        /// </summary>
        [Input("database")]
        public Input<string>? Database { get; set; }

        /// <summary>
        /// The client-assigned document ID to use for this document during creation.
        /// </summary>
        [Input("documentId", required: true)]
        public Input<string> DocumentId { get; set; } = null!;

        /// <summary>
        /// The document's [fields](https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents) formated as a json string.
        /// </summary>
        [Input("fields", required: true)]
        public Input<string> Fields { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public DocumentArgs()
        {
        }
    }

    public sealed class DocumentState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The collection ID, relative to database. For example: chatrooms or chatrooms/my-document/private-messages.
        /// </summary>
        [Input("collection")]
        public Input<string>? Collection { get; set; }

        /// <summary>
        /// Creation timestamp in RFC3339 format.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The Firestore database id. Defaults to `"(default)"`.
        /// </summary>
        [Input("database")]
        public Input<string>? Database { get; set; }

        /// <summary>
        /// The client-assigned document ID to use for this document during creation.
        /// </summary>
        [Input("documentId")]
        public Input<string>? DocumentId { get; set; }

        /// <summary>
        /// The document's [fields](https://cloud.google.com/firestore/docs/reference/rest/v1/projects.databases.documents) formated as a json string.
        /// </summary>
        [Input("fields")]
        public Input<string>? Fields { get; set; }

        /// <summary>
        /// A server defined name for this index. Format:
        /// 'projects/{{project_id}}/databases/{{database_id}}/documents/{{path}}/{{document_id}}'
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A relative path to the collection this document exists within
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Last update timestamp in RFC3339 format.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public DocumentState()
        {
        }
    }
}
