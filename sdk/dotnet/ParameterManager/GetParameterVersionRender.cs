// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.ParameterManager
{
    public static class GetParameterVersionRender
    {
        /// <summary>
        /// Get the value and metadata from a Parameter Manager Parameter version with render payload data. For this datasource to work as expected, the principal of the parameter must be provided with the [Secret Manager Secret Accessor](https://cloud.google.com/secret-manager/docs/access-control#secretmanager.secretAccessor) role. For more information see the [official documentation](https://cloud.google.com/secret-manager/parameter-manager/docs/overview)  and [API](https://cloud.google.com/secret-manager/parameter-manager/docs/reference/rest/v1/projects.locations.parameters.versions/render).
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var basic = Gcp.ParameterManager.GetParameterVersionRender.Invoke(new()
        ///     {
        ///         Parameter = "test-parameter",
        ///         ParameterVersionId = "test-parameter-version",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetParameterVersionRenderResult> InvokeAsync(GetParameterVersionRenderArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetParameterVersionRenderResult>("gcp:parametermanager/getParameterVersionRender:getParameterVersionRender", args ?? new GetParameterVersionRenderArgs(), options.WithDefaults());

        /// <summary>
        /// Get the value and metadata from a Parameter Manager Parameter version with render payload data. For this datasource to work as expected, the principal of the parameter must be provided with the [Secret Manager Secret Accessor](https://cloud.google.com/secret-manager/docs/access-control#secretmanager.secretAccessor) role. For more information see the [official documentation](https://cloud.google.com/secret-manager/parameter-manager/docs/overview)  and [API](https://cloud.google.com/secret-manager/parameter-manager/docs/reference/rest/v1/projects.locations.parameters.versions/render).
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var basic = Gcp.ParameterManager.GetParameterVersionRender.Invoke(new()
        ///     {
        ///         Parameter = "test-parameter",
        ///         ParameterVersionId = "test-parameter-version",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetParameterVersionRenderResult> Invoke(GetParameterVersionRenderInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetParameterVersionRenderResult>("gcp:parametermanager/getParameterVersionRender:getParameterVersionRender", args ?? new GetParameterVersionRenderInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get the value and metadata from a Parameter Manager Parameter version with render payload data. For this datasource to work as expected, the principal of the parameter must be provided with the [Secret Manager Secret Accessor](https://cloud.google.com/secret-manager/docs/access-control#secretmanager.secretAccessor) role. For more information see the [official documentation](https://cloud.google.com/secret-manager/parameter-manager/docs/overview)  and [API](https://cloud.google.com/secret-manager/parameter-manager/docs/reference/rest/v1/projects.locations.parameters.versions/render).
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var basic = Gcp.ParameterManager.GetParameterVersionRender.Invoke(new()
        ///     {
        ///         Parameter = "test-parameter",
        ///         ParameterVersionId = "test-parameter-version",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetParameterVersionRenderResult> Invoke(GetParameterVersionRenderInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetParameterVersionRenderResult>("gcp:parametermanager/getParameterVersionRender:getParameterVersionRender", args ?? new GetParameterVersionRenderInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetParameterVersionRenderArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Parameter for obtaining the Parameter Version.
        /// This can be either the reference of the parameter as in `projects/{{project}}/locations/global/parameters/{{parameter_id}}` or only the name of the parameter as in `{{parameter_id}}`.
        /// </summary>
        [Input("parameter", required: true)]
        public string Parameter { get; set; } = null!;

        /// <summary>
        /// The version of the parameter to get.
        /// </summary>
        [Input("parameterVersionId", required: true)]
        public string ParameterVersionId { get; set; } = null!;

        /// <summary>
        /// The project for retrieving the Parameter Version. If it's not specified, 
        /// the provider project will be used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        public GetParameterVersionRenderArgs()
        {
        }
        public static new GetParameterVersionRenderArgs Empty => new GetParameterVersionRenderArgs();
    }

    public sealed class GetParameterVersionRenderInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Parameter for obtaining the Parameter Version.
        /// This can be either the reference of the parameter as in `projects/{{project}}/locations/global/parameters/{{parameter_id}}` or only the name of the parameter as in `{{parameter_id}}`.
        /// </summary>
        [Input("parameter", required: true)]
        public Input<string> Parameter { get; set; } = null!;

        /// <summary>
        /// The version of the parameter to get.
        /// </summary>
        [Input("parameterVersionId", required: true)]
        public Input<string> ParameterVersionId { get; set; } = null!;

        /// <summary>
        /// The project for retrieving the Parameter Version. If it's not specified, 
        /// the provider project will be used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetParameterVersionRenderInvokeArgs()
        {
        }
        public static new GetParameterVersionRenderInvokeArgs Empty => new GetParameterVersionRenderInvokeArgs();
    }


    [OutputType]
    public sealed class GetParameterVersionRenderResult
    {
        /// <summary>
        /// The current state of the Parameter Version.
        /// </summary>
        public readonly bool Disabled;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The resource name of the ParameterVersion. Format:
        /// `projects/{{project}}/locations/global/parameters/{{parameter_id}}/versions/{{parameter_version_id}}`
        /// </summary>
        public readonly string Name;
        public readonly string Parameter;
        /// <summary>
        /// The Parameter data.
        /// </summary>
        public readonly string ParameterData;
        public readonly string ParameterVersionId;
        public readonly string Project;
        /// <summary>
        /// The Rendered Parameter Data specifies that if you use `__REF__()` to reference a secret and the format is JSON or YAML, the placeholder `__REF__()` will be replaced with the actual secret value. However, if the format is UNFORMATTED, it will stay the same as the original `ParameterData`.
        /// </summary>
        public readonly string RenderedParameterData;

        [OutputConstructor]
        private GetParameterVersionRenderResult(
            bool disabled,

            string id,

            string name,

            string parameter,

            string parameterData,

            string parameterVersionId,

            string project,

            string renderedParameterData)
        {
            Disabled = disabled;
            Id = id;
            Name = name;
            Parameter = parameter;
            ParameterData = parameterData;
            ParameterVersionId = parameterVersionId;
            Project = project;
            RenderedParameterData = renderedParameterData;
        }
    }
}
