// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.ParameterManager
{
    public static class GetRegionalParameterVersion
    {
        /// <summary>
        /// Get the value and metadata from a Parameter Manager Regional Parameter version. For more information see the [official documentation](https://cloud.google.com/secret-manager/parameter-manager/docs/overview) and [API](https://cloud.google.com/secret-manager/parameter-manager/docs/reference/rest/v1/projects.locations.parameters.versions).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var basic = Gcp.ParameterManager.GetRegionalParameterVersion.Invoke(new()
        ///     {
        ///         Parameter = "test-regional-parameter",
        ///         ParameterVersionId = "test-regional-parameter-version",
        ///         Location = "us-central1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetRegionalParameterVersionResult> InvokeAsync(GetRegionalParameterVersionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRegionalParameterVersionResult>("gcp:parametermanager/getRegionalParameterVersion:getRegionalParameterVersion", args ?? new GetRegionalParameterVersionArgs(), options.WithDefaults());

        /// <summary>
        /// Get the value and metadata from a Parameter Manager Regional Parameter version. For more information see the [official documentation](https://cloud.google.com/secret-manager/parameter-manager/docs/overview) and [API](https://cloud.google.com/secret-manager/parameter-manager/docs/reference/rest/v1/projects.locations.parameters.versions).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var basic = Gcp.ParameterManager.GetRegionalParameterVersion.Invoke(new()
        ///     {
        ///         Parameter = "test-regional-parameter",
        ///         ParameterVersionId = "test-regional-parameter-version",
        ///         Location = "us-central1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRegionalParameterVersionResult> Invoke(GetRegionalParameterVersionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRegionalParameterVersionResult>("gcp:parametermanager/getRegionalParameterVersion:getRegionalParameterVersion", args ?? new GetRegionalParameterVersionInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get the value and metadata from a Parameter Manager Regional Parameter version. For more information see the [official documentation](https://cloud.google.com/secret-manager/parameter-manager/docs/overview) and [API](https://cloud.google.com/secret-manager/parameter-manager/docs/reference/rest/v1/projects.locations.parameters.versions).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var basic = Gcp.ParameterManager.GetRegionalParameterVersion.Invoke(new()
        ///     {
        ///         Parameter = "test-regional-parameter",
        ///         ParameterVersionId = "test-regional-parameter-version",
        ///         Location = "us-central1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRegionalParameterVersionResult> Invoke(GetRegionalParameterVersionInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRegionalParameterVersionResult>("gcp:parametermanager/getRegionalParameterVersion:getRegionalParameterVersion", args ?? new GetRegionalParameterVersionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRegionalParameterVersionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The location of regional parameter.
        /// </summary>
        [Input("location")]
        public string? Location { get; set; }

        /// <summary>
        /// The parameter for obtaining the Regional Parameter Version.
        /// This can be either the reference of the regional parameter as in `projects/{{project}}/locations/{{location}}/parameters/{{parameter_id}}` or only the name of the regional parameter as in `{{parameter_id}}`.
        /// </summary>
        [Input("parameter", required: true)]
        public string Parameter { get; set; } = null!;

        /// <summary>
        /// The version of the regional parameter to get.
        /// </summary>
        [Input("parameterVersionId", required: true)]
        public string ParameterVersionId { get; set; } = null!;

        /// <summary>
        /// The project for retrieving the Regional Parameter Version. If it's not specified, 
        /// the provider project will be used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        public GetRegionalParameterVersionArgs()
        {
        }
        public static new GetRegionalParameterVersionArgs Empty => new GetRegionalParameterVersionArgs();
    }

    public sealed class GetRegionalParameterVersionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The location of regional parameter.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The parameter for obtaining the Regional Parameter Version.
        /// This can be either the reference of the regional parameter as in `projects/{{project}}/locations/{{location}}/parameters/{{parameter_id}}` or only the name of the regional parameter as in `{{parameter_id}}`.
        /// </summary>
        [Input("parameter", required: true)]
        public Input<string> Parameter { get; set; } = null!;

        /// <summary>
        /// The version of the regional parameter to get.
        /// </summary>
        [Input("parameterVersionId", required: true)]
        public Input<string> ParameterVersionId { get; set; } = null!;

        /// <summary>
        /// The project for retrieving the Regional Parameter Version. If it's not specified, 
        /// the provider project will be used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetRegionalParameterVersionInvokeArgs()
        {
        }
        public static new GetRegionalParameterVersionInvokeArgs Empty => new GetRegionalParameterVersionInvokeArgs();
    }


    [OutputType]
    public sealed class GetRegionalParameterVersionResult
    {
        /// <summary>
        /// The time at which the Regional Parameter Version was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The current state of the Regional Parameter Version.
        /// </summary>
        public readonly bool Disabled;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The resource name of the Cloud KMS CryptoKeyVersion used to decrypt regional parameter version payload. Format `projects/{{project}}/locations/{{location}}/keyRings/{{key_ring}}/cryptoKeys/{{crypto_key}}/cryptoKeyVersions/{{crypto_key_version}}`
        /// </summary>
        public readonly string KmsKeyVersion;
        public readonly string Location;
        /// <summary>
        /// The resource name of the Regional Parameter Version. Format:
        /// `projects/{{project}}/locations/{{location}}/parameters/{{parameter_id}}/versions/{{parameter_version_id}}`
        /// </summary>
        public readonly string Name;
        public readonly string Parameter;
        /// <summary>
        /// The regional parameter data.
        /// </summary>
        public readonly string ParameterData;
        public readonly string ParameterVersionId;
        public readonly string Project;
        /// <summary>
        /// The time at which the Regional Parameter Version was last updated.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetRegionalParameterVersionResult(
            string createTime,

            bool disabled,

            string id,

            string kmsKeyVersion,

            string location,

            string name,

            string parameter,

            string parameterData,

            string parameterVersionId,

            string project,

            string updateTime)
        {
            CreateTime = createTime;
            Disabled = disabled;
            Id = id;
            KmsKeyVersion = kmsKeyVersion;
            Location = location;
            Name = name;
            Parameter = parameter;
            ParameterData = parameterData;
            ParameterVersionId = parameterVersionId;
            Project = project;
            UpdateTime = updateTime;
        }
    }
}
