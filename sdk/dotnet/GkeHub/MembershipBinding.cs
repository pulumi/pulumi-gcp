// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.GkeHub
{
    /// <summary>
    /// MembershipBinding is a subresource of a Membership, representing what Fleet Scopes (or other, future Fleet resources) a Membership is bound to.
    /// 
    /// To get more information about MembershipBinding, see:
    /// 
    /// * [API documentation](https://cloud.google.com/anthos/fleet-management/docs/reference/rest/v1/projects.locations.memberships.bindings)
    /// * How-to Guides
    ///     * [Registering a Cluster](https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster#register_cluster)
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// MembershipBinding can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import gcp:gkehub/membershipBinding:MembershipBinding default projects/{{project}}/locations/{{location}}/memberships/{{membership_id}}/bindings/{{membership_binding_id}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:gkehub/membershipBinding:MembershipBinding default {{project}}/{{location}}/{{membership_id}}/{{membership_binding_id}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:gkehub/membershipBinding:MembershipBinding default {{location}}/{{membership_id}}/{{membership_binding_id}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:gkehub/membershipBinding:MembershipBinding")]
    public partial class MembershipBinding : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Time the MembershipBinding was created in UTC.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Time the MembershipBinding was deleted in UTC.
        /// </summary>
        [Output("deleteTime")]
        public Output<string> DeleteTime { get; private set; } = null!;

        /// <summary>
        /// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other
        /// clients and services.
        /// </summary>
        [Output("effectiveLabels")]
        public Output<ImmutableDictionary<string, string>> EffectiveLabels { get; private set; } = null!;

        /// <summary>
        /// Labels for this Membership binding.
        /// 
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `effective_labels` for all of the labels present on the resource.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// Location of the membership
        /// 
        /// 
        /// - - -
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The client-provided identifier of the membership binding.
        /// </summary>
        [Output("membershipBindingId")]
        public Output<string> MembershipBindingId { get; private set; } = null!;

        /// <summary>
        /// Id of the membership
        /// </summary>
        [Output("membershipId")]
        public Output<string> MembershipId { get; private set; } = null!;

        /// <summary>
        /// The resource name for the membershipbinding itself
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The combination of labels configured directly on the resource
        /// and default labels configured on the provider.
        /// </summary>
        [Output("pulumiLabels")]
        public Output<ImmutableDictionary<string, string>> PulumiLabels { get; private set; } = null!;

        /// <summary>
        /// A Workspace resource name in the format
        /// `projects/*/locations/*/scopes/*`.
        /// </summary>
        [Output("scope")]
        public Output<string> Scope { get; private set; } = null!;

        /// <summary>
        /// State of the membership binding resource.
        /// Structure is documented below.
        /// </summary>
        [Output("states")]
        public Output<ImmutableArray<Outputs.MembershipBindingState>> States { get; private set; } = null!;

        /// <summary>
        /// Google-generated UUID for this resource.
        /// </summary>
        [Output("uid")]
        public Output<string> Uid { get; private set; } = null!;

        /// <summary>
        /// Time the MembershipBinding was updated in UTC.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a MembershipBinding resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MembershipBinding(string name, MembershipBindingArgs args, CustomResourceOptions? options = null)
            : base("gcp:gkehub/membershipBinding:MembershipBinding", name, args ?? new MembershipBindingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MembershipBinding(string name, Input<string> id, MembershipBindingState? state = null, CustomResourceOptions? options = null)
            : base("gcp:gkehub/membershipBinding:MembershipBinding", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MembershipBinding resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MembershipBinding Get(string name, Input<string> id, MembershipBindingState? state = null, CustomResourceOptions? options = null)
        {
            return new MembershipBinding(name, id, state, options);
        }
    }

    public sealed class MembershipBindingArgs : global::Pulumi.ResourceArgs
    {
        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Labels for this Membership binding.
        /// 
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `effective_labels` for all of the labels present on the resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Location of the membership
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The client-provided identifier of the membership binding.
        /// </summary>
        [Input("membershipBindingId", required: true)]
        public Input<string> MembershipBindingId { get; set; } = null!;

        /// <summary>
        /// Id of the membership
        /// </summary>
        [Input("membershipId", required: true)]
        public Input<string> MembershipId { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// A Workspace resource name in the format
        /// `projects/*/locations/*/scopes/*`.
        /// </summary>
        [Input("scope", required: true)]
        public Input<string> Scope { get; set; } = null!;

        public MembershipBindingArgs()
        {
        }
        public static new MembershipBindingArgs Empty => new MembershipBindingArgs();
    }

    public sealed class MembershipBindingState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Time the MembershipBinding was created in UTC.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Time the MembershipBinding was deleted in UTC.
        /// </summary>
        [Input("deleteTime")]
        public Input<string>? DeleteTime { get; set; }

        [Input("effectiveLabels")]
        private InputMap<string>? _effectiveLabels;

        /// <summary>
        /// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Terraform, other
        /// clients and services.
        /// </summary>
        public InputMap<string> EffectiveLabels
        {
            get => _effectiveLabels ?? (_effectiveLabels = new InputMap<string>());
            set => _effectiveLabels = value;
        }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Labels for this Membership binding.
        /// 
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `effective_labels` for all of the labels present on the resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Location of the membership
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The client-provided identifier of the membership binding.
        /// </summary>
        [Input("membershipBindingId")]
        public Input<string>? MembershipBindingId { get; set; }

        /// <summary>
        /// Id of the membership
        /// </summary>
        [Input("membershipId")]
        public Input<string>? MembershipId { get; set; }

        /// <summary>
        /// The resource name for the membershipbinding itself
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("pulumiLabels")]
        private InputMap<string>? _pulumiLabels;

        /// <summary>
        /// The combination of labels configured directly on the resource
        /// and default labels configured on the provider.
        /// </summary>
        public InputMap<string> PulumiLabels
        {
            get => _pulumiLabels ?? (_pulumiLabels = new InputMap<string>());
            set => _pulumiLabels = value;
        }

        /// <summary>
        /// A Workspace resource name in the format
        /// `projects/*/locations/*/scopes/*`.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        [Input("states")]
        private InputList<Inputs.MembershipBindingStateGetArgs>? _states;

        /// <summary>
        /// State of the membership binding resource.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.MembershipBindingStateGetArgs> States
        {
            get => _states ?? (_states = new InputList<Inputs.MembershipBindingStateGetArgs>());
            set => _states = value;
        }

        /// <summary>
        /// Google-generated UUID for this resource.
        /// </summary>
        [Input("uid")]
        public Input<string>? Uid { get; set; }

        /// <summary>
        /// Time the MembershipBinding was updated in UTC.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public MembershipBindingState()
        {
        }
        public static new MembershipBindingState Empty => new MembershipBindingState();
    }
}
