// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.GkeHub
{
    /// <summary>
    /// Membership contains information about a member cluster.
    /// 
    /// To get more information about Membership, see:
    /// 
    /// * [API documentation](https://cloud.google.com/anthos/multicluster-management/reference/rest/v1/projects.locations.memberships)
    /// * How-to Guides
    ///     * [Registering a Cluster](https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster#register_cluster)
    /// 
    /// ## Example Usage
    /// ### Gkehub Membership Basic
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var primary = new Gcp.Container.Cluster("primary", new Gcp.Container.ClusterArgs
    ///         {
    ///             InitialNodeCount = 1,
    ///             Location = "us-central1-a",
    ///         });
    ///         var membership = new Gcp.GkeHub.Membership("membership", new Gcp.GkeHub.MembershipArgs
    ///         {
    ///             Endpoint = new Gcp.GkeHub.Inputs.MembershipEndpointArgs
    ///             {
    ///                 GkeCluster = new Gcp.GkeHub.Inputs.MembershipEndpointGkeClusterArgs
    ///                 {
    ///                     ResourceLink = primary.Id.Apply(id =&gt; $"//container.googleapis.com/{id}"),
    ///                 },
    ///             },
    ///             MembershipId = "basic",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// ### Gkehub Membership Issuer
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var primary = new Gcp.Container.Cluster("primary", new Gcp.Container.ClusterArgs
    ///         {
    ///             InitialNodeCount = 1,
    ///             Location = "us-central1-a",
    ///             WorkloadIdentityConfig = new Gcp.Container.Inputs.ClusterWorkloadIdentityConfigArgs
    ///             {
    ///                 IdentityNamespace = "my-project-name.svc.id.goog",
    ///             },
    ///         });
    ///         var membership = new Gcp.GkeHub.Membership("membership", new Gcp.GkeHub.MembershipArgs
    ///         {
    ///             Authority = new Gcp.GkeHub.Inputs.MembershipAuthorityArgs
    ///             {
    ///                 Issuer = primary.Id.Apply(id =&gt; $"https://container.googleapis.com/v1/{id}"),
    ///             },
    ///             Endpoint = new Gcp.GkeHub.Inputs.MembershipEndpointArgs
    ///             {
    ///                 GkeCluster = new Gcp.GkeHub.Inputs.MembershipEndpointGkeClusterArgs
    ///                 {
    ///                     ResourceLink = primary.Id.Apply(id =&gt; $"//container.googleapis.com/{id}"),
    ///                 },
    ///             },
    ///             MembershipId = "basic",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Membership can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import gcp:gkehub/membership:Membership default {{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:gkehub/membership:Membership")]
    public partial class Membership : Pulumi.CustomResource
    {
        /// <summary>
        /// Authority encodes how Google will recognize identities from this Membership.
        /// See the workload identity documentation for more details:
        /// https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
        /// Structure is documented below.
        /// </summary>
        [Output("authority")]
        public Output<Outputs.MembershipAuthority?> Authority { get; private set; } = null!;

        /// <summary>
        /// The name of this entity type to be displayed on the console. This field is unavailable in v1 of the API.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// If this Membership is a Kubernetes API server hosted on GKE, this is a self link to its GCP resource.
        /// Structure is documented below.
        /// </summary>
        [Output("endpoint")]
        public Output<Outputs.MembershipEndpoint?> Endpoint { get; private set; } = null!;

        /// <summary>
        /// Labels to apply to this membership.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// The client-provided identifier of the membership.
        /// </summary>
        [Output("membershipId")]
        public Output<string> MembershipId { get; private set; } = null!;

        /// <summary>
        /// The unique identifier of the membership.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;


        /// <summary>
        /// Create a Membership resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Membership(string name, MembershipArgs args, CustomResourceOptions? options = null)
            : base("gcp:gkehub/membership:Membership", name, args ?? new MembershipArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Membership(string name, Input<string> id, MembershipState? state = null, CustomResourceOptions? options = null)
            : base("gcp:gkehub/membership:Membership", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Membership resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Membership Get(string name, Input<string> id, MembershipState? state = null, CustomResourceOptions? options = null)
        {
            return new Membership(name, id, state, options);
        }
    }

    public sealed class MembershipArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Authority encodes how Google will recognize identities from this Membership.
        /// See the workload identity documentation for more details:
        /// https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
        /// Structure is documented below.
        /// </summary>
        [Input("authority")]
        public Input<Inputs.MembershipAuthorityArgs>? Authority { get; set; }

        /// <summary>
        /// The name of this entity type to be displayed on the console. This field is unavailable in v1 of the API.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// If this Membership is a Kubernetes API server hosted on GKE, this is a self link to its GCP resource.
        /// Structure is documented below.
        /// </summary>
        [Input("endpoint")]
        public Input<Inputs.MembershipEndpointArgs>? Endpoint { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Labels to apply to this membership.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The client-provided identifier of the membership.
        /// </summary>
        [Input("membershipId", required: true)]
        public Input<string> MembershipId { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public MembershipArgs()
        {
        }
    }

    public sealed class MembershipState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Authority encodes how Google will recognize identities from this Membership.
        /// See the workload identity documentation for more details:
        /// https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
        /// Structure is documented below.
        /// </summary>
        [Input("authority")]
        public Input<Inputs.MembershipAuthorityGetArgs>? Authority { get; set; }

        /// <summary>
        /// The name of this entity type to be displayed on the console. This field is unavailable in v1 of the API.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// If this Membership is a Kubernetes API server hosted on GKE, this is a self link to its GCP resource.
        /// Structure is documented below.
        /// </summary>
        [Input("endpoint")]
        public Input<Inputs.MembershipEndpointGetArgs>? Endpoint { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Labels to apply to this membership.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The client-provided identifier of the membership.
        /// </summary>
        [Input("membershipId")]
        public Input<string>? MembershipId { get; set; }

        /// <summary>
        /// The unique identifier of the membership.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public MembershipState()
        {
        }
    }
}
