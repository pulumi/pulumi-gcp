// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.GkeHub
{
    /// <summary>
    /// Fleet contains information about a group of clusters.
    /// 
    /// To get more information about Fleet, see:
    /// 
    /// * [API documentation](https://cloud.google.com/anthos/multicluster-management/reference/rest/v1/projects.locations.fleets)
    /// * How-to Guides
    ///     * [Registering a Cluster to a Fleet](https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster#register_cluster)
    /// 
    /// ## Example Usage
    /// ### Gkehub Fleet Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @default = new Gcp.GkeHub.Fleet("default", new()
    ///     {
    ///         DefaultClusterConfig = new Gcp.GkeHub.Inputs.FleetDefaultClusterConfigArgs
    ///         {
    ///             SecurityPostureConfig = new Gcp.GkeHub.Inputs.FleetDefaultClusterConfigSecurityPostureConfigArgs
    ///             {
    ///                 Mode = "DISABLED",
    ///                 VulnerabilityMode = "VULNERABILITY_DISABLED",
    ///             },
    ///         },
    ///         DisplayName = "my production fleet",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Fleet can be imported using any of these accepted formats* `projects/{{project}}/locations/global/fleets/default` * `{{project}}` In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Fleet using one of the formats above. For exampletf import {
    /// 
    ///  id = "projects/{{project}}/locations/global/fleets/default"
    /// 
    ///  to = google_gke_hub_fleet.default }
    /// 
    /// ```sh
    ///  $ pulumi import gcp:gkehub/fleet:Fleet When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), Fleet can be imported using one of the formats above. For example
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:gkehub/fleet:Fleet default projects/{{project}}/locations/global/fleets/default
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:gkehub/fleet:Fleet default {{project}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:gkehub/fleet:Fleet")]
    public partial class Fleet : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The time the fleet was created, in RFC3339 text format.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The default cluster configurations to apply across the fleet.
        /// Structure is documented below.
        /// </summary>
        [Output("defaultClusterConfig")]
        public Output<Outputs.FleetDefaultClusterConfig?> DefaultClusterConfig { get; private set; } = null!;

        /// <summary>
        /// The time the fleet was deleted, in RFC3339 text format.
        /// </summary>
        [Output("deleteTime")]
        public Output<string> DeleteTime { get; private set; } = null!;

        /// <summary>
        /// A user-assigned display name of the Fleet. When present, it must be between 4 to 30 characters.
        /// Allowed characters are: lowercase and uppercase letters, numbers, hyphen, single-quote, double-quote, space, and exclamation point.
        /// </summary>
        [Output("displayName")]
        public Output<string?> DisplayName { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The state of the fleet resource.
        /// Structure is documented below.
        /// </summary>
        [Output("states")]
        public Output<ImmutableArray<Outputs.FleetState>> States { get; private set; } = null!;

        /// <summary>
        /// Google-generated UUID for this resource. This is unique across all
        /// Fleet resources. If a Fleet resource is deleted and another
        /// resource with the same name is created, it gets a different uid.
        /// </summary>
        [Output("uid")]
        public Output<string> Uid { get; private set; } = null!;

        /// <summary>
        /// The time the fleet was last updated, in RFC3339 text format.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a Fleet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Fleet(string name, FleetArgs? args = null, CustomResourceOptions? options = null)
            : base("gcp:gkehub/fleet:Fleet", name, args ?? new FleetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Fleet(string name, Input<string> id, FleetState? state = null, CustomResourceOptions? options = null)
            : base("gcp:gkehub/fleet:Fleet", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Fleet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Fleet Get(string name, Input<string> id, FleetState? state = null, CustomResourceOptions? options = null)
        {
            return new Fleet(name, id, state, options);
        }
    }

    public sealed class FleetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The default cluster configurations to apply across the fleet.
        /// Structure is documented below.
        /// </summary>
        [Input("defaultClusterConfig")]
        public Input<Inputs.FleetDefaultClusterConfigArgs>? DefaultClusterConfig { get; set; }

        /// <summary>
        /// A user-assigned display name of the Fleet. When present, it must be between 4 to 30 characters.
        /// Allowed characters are: lowercase and uppercase letters, numbers, hyphen, single-quote, double-quote, space, and exclamation point.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public FleetArgs()
        {
        }
        public static new FleetArgs Empty => new FleetArgs();
    }

    public sealed class FleetState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The time the fleet was created, in RFC3339 text format.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The default cluster configurations to apply across the fleet.
        /// Structure is documented below.
        /// </summary>
        [Input("defaultClusterConfig")]
        public Input<Inputs.FleetDefaultClusterConfigGetArgs>? DefaultClusterConfig { get; set; }

        /// <summary>
        /// The time the fleet was deleted, in RFC3339 text format.
        /// </summary>
        [Input("deleteTime")]
        public Input<string>? DeleteTime { get; set; }

        /// <summary>
        /// A user-assigned display name of the Fleet. When present, it must be between 4 to 30 characters.
        /// Allowed characters are: lowercase and uppercase letters, numbers, hyphen, single-quote, double-quote, space, and exclamation point.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("states")]
        private InputList<Inputs.FleetStateGetArgs>? _states;

        /// <summary>
        /// The state of the fleet resource.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.FleetStateGetArgs> States
        {
            get => _states ?? (_states = new InputList<Inputs.FleetStateGetArgs>());
            set => _states = value;
        }

        /// <summary>
        /// Google-generated UUID for this resource. This is unique across all
        /// Fleet resources. If a Fleet resource is deleted and another
        /// resource with the same name is created, it gets a different uid.
        /// </summary>
        [Input("uid")]
        public Input<string>? Uid { get; set; }

        /// <summary>
        /// The time the fleet was last updated, in RFC3339 text format.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public FleetState()
        {
        }
        public static new FleetState Empty => new FleetState();
    }
}
