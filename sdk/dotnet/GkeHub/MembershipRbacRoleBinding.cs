// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.GkeHub
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ### Gkehub Membership Rbac Role Binding Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var primary = new Gcp.Container.Cluster("primary", new()
    ///     {
    ///         Name = "basic-cluster",
    ///         Location = "us-central1-a",
    ///         InitialNodeCount = 1,
    ///         DeletionProtection = true,
    ///         Network = "default",
    ///         Subnetwork = "default",
    ///     });
    /// 
    ///     var membership = new Gcp.GkeHub.Membership("membership", new()
    ///     {
    ///         MembershipId = "tf-test-membership_16511",
    ///         Endpoint = new Gcp.GkeHub.Inputs.MembershipEndpointArgs
    ///         {
    ///             GkeCluster = new Gcp.GkeHub.Inputs.MembershipEndpointGkeClusterArgs
    ///             {
    ///                 ResourceLink = primary.Id.Apply(id =&gt; $"//container.googleapis.com/{id}"),
    ///             },
    ///         },
    ///     });
    /// 
    ///     var project = Gcp.Organizations.GetProject.Invoke();
    /// 
    ///     var membershipRbacRoleBinding = new Gcp.GkeHub.MembershipRbacRoleBinding("membership_rbac_role_binding", new()
    ///     {
    ///         MembershipRbacRoleBindingId = "tf-test-membership-rbac-role-binding_8493",
    ///         MembershipId = membership.MembershipId,
    ///         User = $"service-{project.Apply(getProjectResult =&gt; getProjectResult.Number)}@gcp-sa-anthossupport.iam.gserviceaccount.com",
    ///         Role = new Gcp.GkeHub.Inputs.MembershipRbacRoleBindingRoleArgs
    ///         {
    ///             PredefinedRole = "ANTHOS_SUPPORT",
    ///         },
    ///         Location = "global",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// MembershipRBACRoleBinding can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/locations/{{location}}/memberships/{{membership_id}}/rbacrolebindings/{{membership_rbac_role_binding_id}}`
    /// 
    /// * `{{project}}/{{location}}/{{membership_id}}/{{membership_rbac_role_binding_id}}`
    /// 
    /// * `{{location}}/{{membership_id}}/{{membership_rbac_role_binding_id}}`
    /// 
    /// When using the `pulumi import` command, MembershipRBACRoleBinding can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:gkehub/membershipRbacRoleBinding:MembershipRbacRoleBinding default projects/{{project}}/locations/{{location}}/memberships/{{membership_id}}/rbacrolebindings/{{membership_rbac_role_binding_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:gkehub/membershipRbacRoleBinding:MembershipRbacRoleBinding default {{project}}/{{location}}/{{membership_id}}/{{membership_rbac_role_binding_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:gkehub/membershipRbacRoleBinding:MembershipRbacRoleBinding default {{location}}/{{membership_id}}/{{membership_rbac_role_binding_id}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:gkehub/membershipRbacRoleBinding:MembershipRbacRoleBinding")]
    public partial class MembershipRbacRoleBinding : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Time the RBAC Role Binding was created in UTC.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Time the RBAC Role Binding was deleted in UTC.
        /// </summary>
        [Output("deleteTime")]
        public Output<string> DeleteTime { get; private set; } = null!;

        /// <summary>
        /// Location of the Membership
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Id of the membership
        /// </summary>
        [Output("membershipId")]
        public Output<string> MembershipId { get; private set; } = null!;

        /// <summary>
        /// The client-provided identifier of the RBAC Role Binding.
        /// </summary>
        [Output("membershipRbacRoleBindingId")]
        public Output<string> MembershipRbacRoleBindingId { get; private set; } = null!;

        /// <summary>
        /// The resource name for the RBAC Role Binding
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Role to bind to the principal.
        /// Structure is documented below.
        /// </summary>
        [Output("role")]
        public Output<Outputs.MembershipRbacRoleBindingRole> Role { get; private set; } = null!;

        /// <summary>
        /// State of the RBAC Role Binding resource.
        /// Structure is documented below.
        /// </summary>
        [Output("states")]
        public Output<ImmutableArray<Outputs.MembershipRbacRoleBindingState>> States { get; private set; } = null!;

        /// <summary>
        /// Google-generated UUID for this resource.
        /// </summary>
        [Output("uid")]
        public Output<string> Uid { get; private set; } = null!;

        /// <summary>
        /// Time the RBAC Role Binding was updated in UTC.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;

        /// <summary>
        /// Principal that is be authorized in the cluster (at least of one the oneof
        /// is required). Updating one will unset the other automatically.
        /// user is the name of the user as seen by the kubernetes cluster, example
        /// "alice" or "alice@domain.tld"
        /// </summary>
        [Output("user")]
        public Output<string> User { get; private set; } = null!;


        /// <summary>
        /// Create a MembershipRbacRoleBinding resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MembershipRbacRoleBinding(string name, MembershipRbacRoleBindingArgs args, CustomResourceOptions? options = null)
            : base("gcp:gkehub/membershipRbacRoleBinding:MembershipRbacRoleBinding", name, args ?? new MembershipRbacRoleBindingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MembershipRbacRoleBinding(string name, Input<string> id, MembershipRbacRoleBindingState? state = null, CustomResourceOptions? options = null)
            : base("gcp:gkehub/membershipRbacRoleBinding:MembershipRbacRoleBinding", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MembershipRbacRoleBinding resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MembershipRbacRoleBinding Get(string name, Input<string> id, MembershipRbacRoleBindingState? state = null, CustomResourceOptions? options = null)
        {
            return new MembershipRbacRoleBinding(name, id, state, options);
        }
    }

    public sealed class MembershipRbacRoleBindingArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Location of the Membership
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// Id of the membership
        /// </summary>
        [Input("membershipId", required: true)]
        public Input<string> MembershipId { get; set; } = null!;

        /// <summary>
        /// The client-provided identifier of the RBAC Role Binding.
        /// </summary>
        [Input("membershipRbacRoleBindingId", required: true)]
        public Input<string> MembershipRbacRoleBindingId { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Role to bind to the principal.
        /// Structure is documented below.
        /// </summary>
        [Input("role", required: true)]
        public Input<Inputs.MembershipRbacRoleBindingRoleArgs> Role { get; set; } = null!;

        /// <summary>
        /// Principal that is be authorized in the cluster (at least of one the oneof
        /// is required). Updating one will unset the other automatically.
        /// user is the name of the user as seen by the kubernetes cluster, example
        /// "alice" or "alice@domain.tld"
        /// </summary>
        [Input("user", required: true)]
        public Input<string> User { get; set; } = null!;

        public MembershipRbacRoleBindingArgs()
        {
        }
        public static new MembershipRbacRoleBindingArgs Empty => new MembershipRbacRoleBindingArgs();
    }

    public sealed class MembershipRbacRoleBindingState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Time the RBAC Role Binding was created in UTC.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Time the RBAC Role Binding was deleted in UTC.
        /// </summary>
        [Input("deleteTime")]
        public Input<string>? DeleteTime { get; set; }

        /// <summary>
        /// Location of the Membership
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Id of the membership
        /// </summary>
        [Input("membershipId")]
        public Input<string>? MembershipId { get; set; }

        /// <summary>
        /// The client-provided identifier of the RBAC Role Binding.
        /// </summary>
        [Input("membershipRbacRoleBindingId")]
        public Input<string>? MembershipRbacRoleBindingId { get; set; }

        /// <summary>
        /// The resource name for the RBAC Role Binding
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Role to bind to the principal.
        /// Structure is documented below.
        /// </summary>
        [Input("role")]
        public Input<Inputs.MembershipRbacRoleBindingRoleGetArgs>? Role { get; set; }

        [Input("states")]
        private InputList<Inputs.MembershipRbacRoleBindingStateGetArgs>? _states;

        /// <summary>
        /// State of the RBAC Role Binding resource.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.MembershipRbacRoleBindingStateGetArgs> States
        {
            get => _states ?? (_states = new InputList<Inputs.MembershipRbacRoleBindingStateGetArgs>());
            set => _states = value;
        }

        /// <summary>
        /// Google-generated UUID for this resource.
        /// </summary>
        [Input("uid")]
        public Input<string>? Uid { get; set; }

        /// <summary>
        /// Time the RBAC Role Binding was updated in UTC.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        /// <summary>
        /// Principal that is be authorized in the cluster (at least of one the oneof
        /// is required). Updating one will unset the other automatically.
        /// user is the name of the user as seen by the kubernetes cluster, example
        /// "alice" or "alice@domain.tld"
        /// </summary>
        [Input("user")]
        public Input<string>? User { get; set; }

        public MembershipRbacRoleBindingState()
        {
        }
        public static new MembershipRbacRoleBindingState Empty => new MembershipRbacRoleBindingState();
    }
}
