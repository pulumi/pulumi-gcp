// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.GkeHub
{
    public static class GetMembershipBinding
    {
        public static Task<GetMembershipBindingResult> InvokeAsync(GetMembershipBindingArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMembershipBindingResult>("gcp:gkehub/getMembershipBinding:getMembershipBinding", args ?? new GetMembershipBindingArgs(), options.WithDefaults());

        public static Output<GetMembershipBindingResult> Invoke(GetMembershipBindingInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMembershipBindingResult>("gcp:gkehub/getMembershipBinding:getMembershipBinding", args ?? new GetMembershipBindingInvokeArgs(), options.WithDefaults());

        public static Output<GetMembershipBindingResult> Invoke(GetMembershipBindingInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMembershipBindingResult>("gcp:gkehub/getMembershipBinding:getMembershipBinding", args ?? new GetMembershipBindingInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMembershipBindingArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("membershipBindingId", required: true)]
        public string MembershipBindingId { get; set; } = null!;

        [Input("membershipId", required: true)]
        public string MembershipId { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetMembershipBindingArgs()
        {
        }
        public static new GetMembershipBindingArgs Empty => new GetMembershipBindingArgs();
    }

    public sealed class GetMembershipBindingInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("membershipBindingId", required: true)]
        public Input<string> MembershipBindingId { get; set; } = null!;

        [Input("membershipId", required: true)]
        public Input<string> MembershipId { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetMembershipBindingInvokeArgs()
        {
        }
        public static new GetMembershipBindingInvokeArgs Empty => new GetMembershipBindingInvokeArgs();
    }


    [OutputType]
    public sealed class GetMembershipBindingResult
    {
        public readonly string CreateTime;
        public readonly string DeleteTime;
        public readonly ImmutableDictionary<string, string> EffectiveLabels;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableDictionary<string, string> Labels;
        public readonly string Location;
        public readonly string MembershipBindingId;
        public readonly string MembershipId;
        public readonly string Name;
        public readonly string? Project;
        public readonly ImmutableDictionary<string, string> PulumiLabels;
        public readonly string Scope;
        public readonly ImmutableArray<Outputs.GetMembershipBindingStateResult> States;
        public readonly string Uid;
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetMembershipBindingResult(
            string createTime,

            string deleteTime,

            ImmutableDictionary<string, string> effectiveLabels,

            string id,

            ImmutableDictionary<string, string> labels,

            string location,

            string membershipBindingId,

            string membershipId,

            string name,

            string? project,

            ImmutableDictionary<string, string> pulumiLabels,

            string scope,

            ImmutableArray<Outputs.GetMembershipBindingStateResult> states,

            string uid,

            string updateTime)
        {
            CreateTime = createTime;
            DeleteTime = deleteTime;
            EffectiveLabels = effectiveLabels;
            Id = id;
            Labels = labels;
            Location = location;
            MembershipBindingId = membershipBindingId;
            MembershipId = membershipId;
            Name = name;
            Project = project;
            PulumiLabels = pulumiLabels;
            Scope = scope;
            States = states;
            Uid = uid;
            UpdateTime = updateTime;
        }
    }
}
