// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.ArtifactRegistry.Inputs
{

    public sealed class RepositoryCleanupPolicyConditionGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Match versions newer than a duration.
        /// </summary>
        [Input("newerThan")]
        public Input<string>? NewerThan { get; set; }

        /// <summary>
        /// Match versions older than a duration.
        /// </summary>
        [Input("olderThan")]
        public Input<string>? OlderThan { get; set; }

        [Input("packageNamePrefixes")]
        private InputList<string>? _packageNamePrefixes;

        /// <summary>
        /// Match versions by package prefix. Applied on any prefix match.
        /// </summary>
        public InputList<string> PackageNamePrefixes
        {
            get => _packageNamePrefixes ?? (_packageNamePrefixes = new InputList<string>());
            set => _packageNamePrefixes = value;
        }

        [Input("tagPrefixes")]
        private InputList<string>? _tagPrefixes;

        /// <summary>
        /// Match versions by tag prefix. Applied on any prefix match.
        /// </summary>
        public InputList<string> TagPrefixes
        {
            get => _tagPrefixes ?? (_tagPrefixes = new InputList<string>());
            set => _tagPrefixes = value;
        }

        /// <summary>
        /// Match versions by tag status.
        /// Default value is `ANY`.
        /// Possible values are: `TAGGED`, `UNTAGGED`, `ANY`.
        /// </summary>
        [Input("tagState")]
        public Input<string>? TagState { get; set; }

        [Input("versionNamePrefixes")]
        private InputList<string>? _versionNamePrefixes;

        /// <summary>
        /// Match versions by version name prefix. Applied on any prefix match.
        /// </summary>
        public InputList<string> VersionNamePrefixes
        {
            get => _versionNamePrefixes ?? (_versionNamePrefixes = new InputList<string>());
            set => _versionNamePrefixes = value;
        }

        public RepositoryCleanupPolicyConditionGetArgs()
        {
        }
        public static new RepositoryCleanupPolicyConditionGetArgs Empty => new RepositoryCleanupPolicyConditionGetArgs();
    }
}
