// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.ArtifactRegistry
{
    public static class GetPackage
    {
        /// <summary>
        /// This data source fetches information of a package from a provided Artifact Registry repository.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Google = Pulumi.Google;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myPackage = new Google.Index.ArtifactRegistryPackage("my_package", new()
        ///     {
        ///         Location = "us-west1",
        ///         RepositoryId = "my-repository",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetPackageResult> InvokeAsync(GetPackageArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPackageResult>("gcp:artifactregistry/getPackage:getPackage", args ?? new GetPackageArgs(), options.WithDefaults());

        /// <summary>
        /// This data source fetches information of a package from a provided Artifact Registry repository.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Google = Pulumi.Google;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myPackage = new Google.Index.ArtifactRegistryPackage("my_package", new()
        ///     {
        ///         Location = "us-west1",
        ///         RepositoryId = "my-repository",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPackageResult> Invoke(GetPackageInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPackageResult>("gcp:artifactregistry/getPackage:getPackage", args ?? new GetPackageInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// This data source fetches information of a package from a provided Artifact Registry repository.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Google = Pulumi.Google;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myPackage = new Google.Index.ArtifactRegistryPackage("my_package", new()
        ///     {
        ///         Location = "us-west1",
        ///         RepositoryId = "my-repository",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPackageResult> Invoke(GetPackageInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPackageResult>("gcp:artifactregistry/getPackage:getPackage", args ?? new GetPackageInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPackageArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The location of the artifact registry.
        /// </summary>
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        /// <summary>
        /// The name of the package.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The project ID in which the resource belongs. If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        /// <summary>
        /// The last part of the repository name to fetch from.
        /// </summary>
        [Input("repositoryId", required: true)]
        public string RepositoryId { get; set; } = null!;

        public GetPackageArgs()
        {
        }
        public static new GetPackageArgs Empty => new GetPackageArgs();
    }

    public sealed class GetPackageInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The location of the artifact registry.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The name of the package.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The project ID in which the resource belongs. If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The last part of the repository name to fetch from.
        /// </summary>
        [Input("repositoryId", required: true)]
        public Input<string> RepositoryId { get; set; } = null!;

        public GetPackageInvokeArgs()
        {
        }
        public static new GetPackageInvokeArgs Empty => new GetPackageInvokeArgs();
    }


    [OutputType]
    public sealed class GetPackageResult
    {
        /// <summary>
        /// Client specified annotations.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Annotations;
        /// <summary>
        /// The time, as a RFC 3339 string, this package was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The display name of the package.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Location;
        public readonly string Name;
        public readonly string? Project;
        public readonly string RepositoryId;
        /// <summary>
        /// The time, as a RFC 3339 string, this package was last updated. This includes publishing a new version of the package.
        /// </summary>
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetPackageResult(
            ImmutableDictionary<string, string> annotations,

            string createTime,

            string displayName,

            string id,

            string location,

            string name,

            string? project,

            string repositoryId,

            string updateTime)
        {
            Annotations = annotations;
            CreateTime = createTime;
            DisplayName = displayName;
            Id = id;
            Location = location;
            Name = name;
            Project = project;
            RepositoryId = repositoryId;
            UpdateTime = updateTime;
        }
    }
}
