// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.ArtifactRegistry.Outputs
{

    [OutputType]
    public sealed class RepositoryCleanupPolicyCondition
    {
        /// <summary>
        /// Match versions newer than a duration.
        /// </summary>
        public readonly string? NewerThan;
        /// <summary>
        /// Match versions older than a duration.
        /// </summary>
        public readonly string? OlderThan;
        /// <summary>
        /// Match versions by package prefix. Applied on any prefix match.
        /// </summary>
        public readonly ImmutableArray<string> PackageNamePrefixes;
        /// <summary>
        /// Match versions by tag prefix. Applied on any prefix match.
        /// </summary>
        public readonly ImmutableArray<string> TagPrefixes;
        /// <summary>
        /// Match versions by tag status.
        /// Default value is `ANY`.
        /// Possible values are: `TAGGED`, `UNTAGGED`, `ANY`.
        /// </summary>
        public readonly string? TagState;
        /// <summary>
        /// Match versions by version name prefix. Applied on any prefix match.
        /// </summary>
        public readonly ImmutableArray<string> VersionNamePrefixes;

        [OutputConstructor]
        private RepositoryCleanupPolicyCondition(
            string? newerThan,

            string? olderThan,

            ImmutableArray<string> packageNamePrefixes,

            ImmutableArray<string> tagPrefixes,

            string? tagState,

            ImmutableArray<string> versionNamePrefixes)
        {
            NewerThan = newerThan;
            OlderThan = olderThan;
            PackageNamePrefixes = packageNamePrefixes;
            TagPrefixes = tagPrefixes;
            TagState = tagState;
            VersionNamePrefixes = versionNamePrefixes;
        }
    }
}
