// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.ArtifactRegistry.Outputs
{

    [OutputType]
    public sealed class GetNpmPackagesNpmPackageResult
    {
        /// <summary>
        /// The time, as a RFC 3339 string, this package was created.
        /// </summary>
        public readonly string CreateTime;
        /// <summary>
        /// The fully qualified name of the fetched package.  This name has the form: `projects/{{project}}/locations/{{location}}/repository/{{repository_id}}/npmPackages/{{npmPackage}}`. For example, `projects/example-project/locations/us-central1/repository/example-repo/npmPackages/my-test-package:0.0.1`
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Extracted short name of the package (last part of `name`, without version). For example, from `.../my-test-package:0.0.1` â†’ `my-test-package`.
        /// </summary>
        public readonly string PackageName;
        /// <summary>
        /// The tags associated with the Npm package.
        /// </summary>
        public readonly ImmutableArray<string> Tags;
        /// <summary>
        /// The time, as a RFC 3339 string, this package was updated.
        /// </summary>
        public readonly string UpdateTime;
        /// <summary>
        /// Version of this package.
        /// </summary>
        public readonly string Version;

        [OutputConstructor]
        private GetNpmPackagesNpmPackageResult(
            string createTime,

            string name,

            string packageName,

            ImmutableArray<string> tags,

            string updateTime,

            string version)
        {
            CreateTime = createTime;
            Name = name;
            PackageName = packageName;
            Tags = tags;
            UpdateTime = updateTime;
            Version = version;
        }
    }
}
