// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.ArtifactRegistry
{
    public static class GetTags
    {
        /// <summary>
        /// Get information about Artifact Registry tags.
        /// See [the official documentation](https://cloud.google.com/artifact-registry/docs/overview)
        /// and [API](https://cloud.google.com/artifact-registry/docs/reference/rest/v1/projects.locations.repositories.packages.tags/list).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myTags = Gcp.ArtifactRegistry.GetTags.Invoke(new()
        ///     {
        ///         Location = "us-central1",
        ///         RepositoryId = "example-repo",
        ///         PackageName = "example-package",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetTagsResult> InvokeAsync(GetTagsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTagsResult>("gcp:artifactregistry/getTags:getTags", args ?? new GetTagsArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about Artifact Registry tags.
        /// See [the official documentation](https://cloud.google.com/artifact-registry/docs/overview)
        /// and [API](https://cloud.google.com/artifact-registry/docs/reference/rest/v1/projects.locations.repositories.packages.tags/list).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myTags = Gcp.ArtifactRegistry.GetTags.Invoke(new()
        ///     {
        ///         Location = "us-central1",
        ///         RepositoryId = "example-repo",
        ///         PackageName = "example-package",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTagsResult> Invoke(GetTagsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTagsResult>("gcp:artifactregistry/getTags:getTags", args ?? new GetTagsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about Artifact Registry tags.
        /// See [the official documentation](https://cloud.google.com/artifact-registry/docs/overview)
        /// and [API](https://cloud.google.com/artifact-registry/docs/reference/rest/v1/projects.locations.repositories.packages.tags/list).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myTags = Gcp.ArtifactRegistry.GetTags.Invoke(new()
        ///     {
        ///         Location = "us-central1",
        ///         RepositoryId = "example-repo",
        ///         PackageName = "example-package",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetTagsResult> Invoke(GetTagsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetTagsResult>("gcp:artifactregistry/getTags:getTags", args ?? new GetTagsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTagsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// An expression for filtering the results of the request. Filter rules are case insensitive. The fields eligible for filtering are `Name` and `Version`. Further information can be found in the [REST API](https://cloud.google.com/artifact-registry/docs/reference/rest/v1/projects.locations.repositories.packages.tags/list#query-parameters).
        /// </summary>
        [Input("filter")]
        public string? Filter { get; set; }

        /// <summary>
        /// The location of the Artifact Registry repository.
        /// </summary>
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        /// <summary>
        /// The name of the package.
        /// </summary>
        [Input("packageName", required: true)]
        public string PackageName { get; set; } = null!;

        /// <summary>
        /// The project ID in which the resource belongs. If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        /// <summary>
        /// The last part of the repository name to fetch from.
        /// </summary>
        [Input("repositoryId", required: true)]
        public string RepositoryId { get; set; } = null!;

        public GetTagsArgs()
        {
        }
        public static new GetTagsArgs Empty => new GetTagsArgs();
    }

    public sealed class GetTagsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// An expression for filtering the results of the request. Filter rules are case insensitive. The fields eligible for filtering are `Name` and `Version`. Further information can be found in the [REST API](https://cloud.google.com/artifact-registry/docs/reference/rest/v1/projects.locations.repositories.packages.tags/list#query-parameters).
        /// </summary>
        [Input("filter")]
        public Input<string>? Filter { get; set; }

        /// <summary>
        /// The location of the Artifact Registry repository.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The name of the package.
        /// </summary>
        [Input("packageName", required: true)]
        public Input<string> PackageName { get; set; } = null!;

        /// <summary>
        /// The project ID in which the resource belongs. If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The last part of the repository name to fetch from.
        /// </summary>
        [Input("repositoryId", required: true)]
        public Input<string> RepositoryId { get; set; } = null!;

        public GetTagsInvokeArgs()
        {
        }
        public static new GetTagsInvokeArgs Empty => new GetTagsInvokeArgs();
    }


    [OutputType]
    public sealed class GetTagsResult
    {
        public readonly string? Filter;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Location;
        public readonly string PackageName;
        public readonly string? Project;
        public readonly string RepositoryId;
        /// <summary>
        /// A list of all retrieved Artifact Registry tags. Structure is defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetTagsTagResult> Tags;

        [OutputConstructor]
        private GetTagsResult(
            string? filter,

            string id,

            string location,

            string packageName,

            string? project,

            string repositoryId,

            ImmutableArray<Outputs.GetTagsTagResult> tags)
        {
            Filter = filter;
            Id = id;
            Location = location;
            PackageName = packageName;
            Project = project;
            RepositoryId = repositoryId;
            Tags = tags;
        }
    }
}
