// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.ArtifactRegistry
{
    public static class GetDockerImages
    {
        /// <summary>
        /// Get information about Artifact Registry Docker images.
        /// See [the official documentation](https://cloud.google.com/artifact-registry/docs/docker)
        /// and [API](https://cloud.google.com/artifact-registry/docs/reference/rest/v1/projects.locations.repositories.dockerImages/list).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myImages = Gcp.ArtifactRegistry.GetDockerImages.Invoke(new()
        ///     {
        ///         Location = "us-central1",
        ///         RepositoryId = "example-repo",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDockerImagesResult> InvokeAsync(GetDockerImagesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDockerImagesResult>("gcp:artifactregistry/getDockerImages:getDockerImages", args ?? new GetDockerImagesArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about Artifact Registry Docker images.
        /// See [the official documentation](https://cloud.google.com/artifact-registry/docs/docker)
        /// and [API](https://cloud.google.com/artifact-registry/docs/reference/rest/v1/projects.locations.repositories.dockerImages/list).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myImages = Gcp.ArtifactRegistry.GetDockerImages.Invoke(new()
        ///     {
        ///         Location = "us-central1",
        ///         RepositoryId = "example-repo",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDockerImagesResult> Invoke(GetDockerImagesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDockerImagesResult>("gcp:artifactregistry/getDockerImages:getDockerImages", args ?? new GetDockerImagesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about Artifact Registry Docker images.
        /// See [the official documentation](https://cloud.google.com/artifact-registry/docs/docker)
        /// and [API](https://cloud.google.com/artifact-registry/docs/reference/rest/v1/projects.locations.repositories.dockerImages/list).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var myImages = Gcp.ArtifactRegistry.GetDockerImages.Invoke(new()
        ///     {
        ///         Location = "us-central1",
        ///         RepositoryId = "example-repo",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDockerImagesResult> Invoke(GetDockerImagesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDockerImagesResult>("gcp:artifactregistry/getDockerImages:getDockerImages", args ?? new GetDockerImagesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDockerImagesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The location of the Artifact Registry repository.
        /// </summary>
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        /// <summary>
        /// The project ID in which the resource belongs. If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        /// <summary>
        /// The last part of the repository name to fetch from.
        /// </summary>
        [Input("repositoryId", required: true)]
        public string RepositoryId { get; set; } = null!;

        public GetDockerImagesArgs()
        {
        }
        public static new GetDockerImagesArgs Empty => new GetDockerImagesArgs();
    }

    public sealed class GetDockerImagesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The location of the Artifact Registry repository.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The project ID in which the resource belongs. If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The last part of the repository name to fetch from.
        /// </summary>
        [Input("repositoryId", required: true)]
        public Input<string> RepositoryId { get; set; } = null!;

        public GetDockerImagesInvokeArgs()
        {
        }
        public static new GetDockerImagesInvokeArgs Empty => new GetDockerImagesInvokeArgs();
    }


    [OutputType]
    public sealed class GetDockerImagesResult
    {
        /// <summary>
        /// A list of all retrieved Artifact Registry Docker images. Structure is defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetDockerImagesDockerImageResult> DockerImages;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Location;
        public readonly string? Project;
        public readonly string RepositoryId;

        [OutputConstructor]
        private GetDockerImagesResult(
            ImmutableArray<Outputs.GetDockerImagesDockerImageResult> dockerImages,

            string id,

            string location,

            string? project,

            string repositoryId)
        {
            DockerImages = dockerImages;
            Id = id;
            Location = location;
            Project = project;
            RepositoryId = repositoryId;
        }
    }
}
