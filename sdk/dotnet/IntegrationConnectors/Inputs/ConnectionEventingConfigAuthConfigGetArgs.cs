// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.IntegrationConnectors.Inputs
{

    public sealed class ConnectionEventingConfigAuthConfigGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("additionalVariables")]
        private InputList<Inputs.ConnectionEventingConfigAuthConfigAdditionalVariableGetArgs>? _additionalVariables;

        /// <summary>
        /// List containing additional auth configs.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.ConnectionEventingConfigAuthConfigAdditionalVariableGetArgs> AdditionalVariables
        {
            get => _additionalVariables ?? (_additionalVariables = new InputList<Inputs.ConnectionEventingConfigAuthConfigAdditionalVariableGetArgs>());
            set => _additionalVariables = value;
        }

        /// <summary>
        /// The type of authentication configured.
        /// </summary>
        [Input("authKey")]
        public Input<string>? AuthKey { get; set; }

        /// <summary>
        /// authType of the Connection
        /// Possible values are: `USER_PASSWORD`.
        /// </summary>
        [Input("authType", required: true)]
        public Input<string> AuthType { get; set; } = null!;

        /// <summary>
        /// User password for Authentication.
        /// Structure is documented below.
        /// </summary>
        [Input("userPassword", required: true)]
        public Input<Inputs.ConnectionEventingConfigAuthConfigUserPasswordGetArgs> UserPassword { get; set; } = null!;

        public ConnectionEventingConfigAuthConfigGetArgs()
        {
        }
        public static new ConnectionEventingConfigAuthConfigGetArgs Empty => new ConnectionEventingConfigAuthConfigGetArgs();
    }
}
