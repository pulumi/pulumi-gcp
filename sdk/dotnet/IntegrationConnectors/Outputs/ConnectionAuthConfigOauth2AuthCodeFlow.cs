// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.IntegrationConnectors.Outputs
{

    [OutputType]
    public sealed class ConnectionAuthConfigOauth2AuthCodeFlow
    {
        /// <summary>
        /// Auth URL for Authorization Code Flow.
        /// </summary>
        public readonly string? AuthUri;
        /// <summary>
        /// Client ID for user-provided OAuth app.
        /// </summary>
        public readonly string? ClientId;
        /// <summary>
        /// Client secret for user-provided OAuth app.
        /// </summary>
        public readonly Outputs.ConnectionAuthConfigOauth2AuthCodeFlowClientSecret? ClientSecret;
        /// <summary>
        /// Whether to enable PKCE when the user performs the auth code flow.
        /// </summary>
        public readonly bool? EnablePkce;
        /// <summary>
        /// Scopes the connection will request when the user performs the auth code flow.
        /// </summary>
        public readonly ImmutableArray<string> Scopes;

        [OutputConstructor]
        private ConnectionAuthConfigOauth2AuthCodeFlow(
            string? authUri,

            string? clientId,

            Outputs.ConnectionAuthConfigOauth2AuthCodeFlowClientSecret? clientSecret,

            bool? enablePkce,

            ImmutableArray<string> scopes)
        {
            AuthUri = authUri;
            ClientId = clientId;
            ClientSecret = clientSecret;
            EnablePkce = enablePkce;
            Scopes = scopes;
        }
    }
}
