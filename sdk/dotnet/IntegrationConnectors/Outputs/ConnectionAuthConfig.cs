// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.IntegrationConnectors.Outputs
{

    [OutputType]
    public sealed class ConnectionAuthConfig
    {
        /// <summary>
        /// List containing additional auth configs.
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.ConnectionAuthConfigAdditionalVariable> AdditionalVariables;
        /// <summary>
        /// The type of authentication configured.
        /// </summary>
        public readonly string? AuthKey;
        /// <summary>
        /// authType of the Connection
        /// Possible values are: `USER_PASSWORD`.
        /// </summary>
        public readonly string AuthType;
        /// <summary>
        /// Parameters to support Oauth 2.0 Auth Code Grant Authentication.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.ConnectionAuthConfigOauth2AuthCodeFlow? Oauth2AuthCodeFlow;
        /// <summary>
        /// OAuth3 Client Credentials for Authentication.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.ConnectionAuthConfigOauth2ClientCredentials? Oauth2ClientCredentials;
        /// <summary>
        /// OAuth2 JWT Bearer for Authentication.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.ConnectionAuthConfigOauth2JwtBearer? Oauth2JwtBearer;
        /// <summary>
        /// SSH Public Key for Authentication.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.ConnectionAuthConfigSshPublicKey? SshPublicKey;
        /// <summary>
        /// User password for Authentication.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.ConnectionAuthConfigUserPassword? UserPassword;

        [OutputConstructor]
        private ConnectionAuthConfig(
            ImmutableArray<Outputs.ConnectionAuthConfigAdditionalVariable> additionalVariables,

            string? authKey,

            string authType,

            Outputs.ConnectionAuthConfigOauth2AuthCodeFlow? oauth2AuthCodeFlow,

            Outputs.ConnectionAuthConfigOauth2ClientCredentials? oauth2ClientCredentials,

            Outputs.ConnectionAuthConfigOauth2JwtBearer? oauth2JwtBearer,

            Outputs.ConnectionAuthConfigSshPublicKey? sshPublicKey,

            Outputs.ConnectionAuthConfigUserPassword? userPassword)
        {
            AdditionalVariables = additionalVariables;
            AuthKey = authKey;
            AuthType = authType;
            Oauth2AuthCodeFlow = oauth2AuthCodeFlow;
            Oauth2ClientCredentials = oauth2ClientCredentials;
            Oauth2JwtBearer = oauth2JwtBearer;
            SshPublicKey = sshPublicKey;
            UserPassword = userPassword;
        }
    }
}
