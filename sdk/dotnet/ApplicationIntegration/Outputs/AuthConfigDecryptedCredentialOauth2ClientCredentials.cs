// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.ApplicationIntegration.Outputs
{

    [OutputType]
    public sealed class AuthConfigDecryptedCredentialOauth2ClientCredentials
    {
        /// <summary>
        /// The client's ID.
        /// </summary>
        public readonly string? ClientId;
        /// <summary>
        /// The client's secret.
        /// </summary>
        public readonly string? ClientSecret;
        /// <summary>
        /// Represent how to pass parameters to fetch access token Possible values: ["REQUEST_TYPE_UNSPECIFIED", "REQUEST_BODY", "QUERY_PARAMETERS", "ENCODED_HEADER"]
        /// </summary>
        public readonly string? RequestType;
        /// <summary>
        /// A space-delimited list of requested scope permissions.
        /// </summary>
        public readonly string? Scope;
        /// <summary>
        /// The token endpoint is used by the client to obtain an access token by presenting its authorization grant or refresh token.
        /// </summary>
        public readonly string? TokenEndpoint;
        /// <summary>
        /// Token parameters for the auth request.
        /// </summary>
        public readonly Outputs.AuthConfigDecryptedCredentialOauth2ClientCredentialsTokenParams? TokenParams;

        [OutputConstructor]
        private AuthConfigDecryptedCredentialOauth2ClientCredentials(
            string? clientId,

            string? clientSecret,

            string? requestType,

            string? scope,

            string? tokenEndpoint,

            Outputs.AuthConfigDecryptedCredentialOauth2ClientCredentialsTokenParams? tokenParams)
        {
            ClientId = clientId;
            ClientSecret = clientSecret;
            RequestType = requestType;
            Scope = scope;
            TokenEndpoint = tokenEndpoint;
            TokenParams = tokenParams;
        }
    }
}
