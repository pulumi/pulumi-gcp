// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.ApplicationIntegration.Outputs
{

    [OutputType]
    public sealed class ClientCloudKmsConfig
    {
        /// <summary>
        /// A Cloud KMS key is a named object containing one or more key versions, along
        /// with metadata for the key. A key exists on exactly one key ring tied to a
        /// specific location.
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// Each version of a key contains key material used for encryption or signing.
        /// A key's version is represented by an integer, starting at 1. To decrypt data
        /// or verify a signature, you must use the same key version that was used to
        /// encrypt or sign the data.
        /// </summary>
        public readonly string? KeyVersion;
        /// <summary>
        /// Location name of the key ring, e.g. "us-west1".
        /// </summary>
        public readonly string KmsLocation;
        /// <summary>
        /// The Google Cloud project id of the project where the kms key stored. If empty,
        /// the kms key is stored at the same project as customer's project and ecrypted
        /// with CMEK, otherwise, the kms key is stored in the tenant project and
        /// encrypted with GMEK.
        /// </summary>
        public readonly string? KmsProjectId;
        /// <summary>
        /// A key ring organizes keys in a specific Google Cloud location and allows you to
        /// manage access control on groups of keys. A key ring's name does not need to be
        /// unique across a Google Cloud project, but must be unique within a given location.
        /// </summary>
        public readonly string KmsRing;

        [OutputConstructor]
        private ClientCloudKmsConfig(
            string key,

            string? keyVersion,

            string kmsLocation,

            string? kmsProjectId,

            string kmsRing)
        {
            Key = key;
            KeyVersion = keyVersion;
            KmsLocation = kmsLocation;
            KmsProjectId = kmsProjectId;
            KmsRing = kmsRing;
        }
    }
}
