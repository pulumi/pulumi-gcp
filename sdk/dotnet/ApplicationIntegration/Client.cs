// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.ApplicationIntegration
{
    /// <summary>
    /// Application Integration Client.
    /// 
    /// To get more information about Client, see:
    /// 
    /// * [API documentation](https://cloud.google.com/application-integration/docs/reference/rest/v1/projects.locations.clients)
    /// * How-to Guides
    ///     * [Official Documentation](https://cloud.google.com/application-integration/docs/overview)
    ///     * [Set up Application Integration](https://cloud.google.com/application-integration/docs/setup-application-integration)
    /// 
    /// ## Example Usage
    /// 
    /// ### Integrations Client Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Gcp.ApplicationIntegration.Client("example", new()
    ///     {
    ///         Location = "us-central1",
    ///     });
    /// 
    /// });
    /// ```
    /// ### Integrations Client Full
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// using Std = Pulumi.Std;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testProject = Gcp.Organizations.GetProject.Invoke();
    /// 
    ///     var keyring = new Gcp.Kms.KeyRing("keyring", new()
    ///     {
    ///         Name = "my-keyring",
    ///         Location = "us-east1",
    ///     });
    /// 
    ///     var cryptokey = new Gcp.Kms.CryptoKey("cryptokey", new()
    ///     {
    ///         Name = "crypto-key-example",
    ///         KeyRing = keyring.Id,
    ///         RotationPeriod = "7776000s",
    ///     });
    /// 
    ///     var testKey = new Gcp.Kms.CryptoKeyVersion("test_key", new()
    ///     {
    ///         CryptoKey = cryptokey.Id,
    ///     });
    /// 
    ///     var serviceAccount = new Gcp.ServiceAccount.Account("service_account", new()
    ///     {
    ///         AccountId = "service-acc",
    ///         DisplayName = "Service Account",
    ///     });
    /// 
    ///     var example = new Gcp.ApplicationIntegration.Client("example", new()
    ///     {
    ///         Location = "us-east1",
    ///         CreateSampleIntegrations = true,
    ///         RunAsServiceAccount = serviceAccount.Email,
    ///         CloudKmsConfig = new Gcp.ApplicationIntegration.Inputs.ClientCloudKmsConfigArgs
    ///         {
    ///             KmsLocation = "us-east1",
    ///             KmsRing = Std.Basename.Invoke(new()
    ///             {
    ///                 Input = keyring.Id,
    ///             }).Apply(invoke =&gt; invoke.Result),
    ///             Key = Std.Basename.Invoke(new()
    ///             {
    ///                 Input = cryptokey.Id,
    ///             }).Apply(invoke =&gt; invoke.Result),
    ///             KeyVersion = Std.Basename.Invoke(new()
    ///             {
    ///                 Input = testKey.Id,
    ///             }).Apply(invoke =&gt; invoke.Result),
    ///             KmsProjectId = testProject.Apply(getProjectResult =&gt; getProjectResult.ProjectId),
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Client can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/locations/{{location}}/clients`
    /// 
    /// * `{{project}}/{{location}}`
    /// 
    /// * `{{location}}`
    /// 
    /// When using the `pulumi import` command, Client can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:applicationintegration/client:Client default projects/{{project}}/locations/{{location}}/clients
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:applicationintegration/client:Client default {{project}}/{{location}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:applicationintegration/client:Client default {{location}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:applicationintegration/client:Client")]
    public partial class Client : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Cloud KMS config for AuthModule to encrypt/decrypt credentials.
        /// Structure is documented below.
        /// </summary>
        [Output("cloudKmsConfig")]
        public Output<Outputs.ClientCloudKmsConfig?> CloudKmsConfig { get; private set; } = null!;

        /// <summary>
        /// Indicates if sample integrations should be created along with provisioning.
        /// </summary>
        [Output("createSampleIntegrations")]
        public Output<bool?> CreateSampleIntegrations { get; private set; } = null!;

        /// <summary>
        /// Location in which client needs to be provisioned.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// User input run-as service account, if empty, will bring up a new default service account.
        /// </summary>
        [Output("runAsServiceAccount")]
        public Output<string?> RunAsServiceAccount { get; private set; } = null!;


        /// <summary>
        /// Create a Client resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Client(string name, ClientArgs args, CustomResourceOptions? options = null)
            : base("gcp:applicationintegration/client:Client", name, args ?? new ClientArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Client(string name, Input<string> id, ClientState? state = null, CustomResourceOptions? options = null)
            : base("gcp:applicationintegration/client:Client", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Client resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Client Get(string name, Input<string> id, ClientState? state = null, CustomResourceOptions? options = null)
        {
            return new Client(name, id, state, options);
        }
    }

    public sealed class ClientArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Cloud KMS config for AuthModule to encrypt/decrypt credentials.
        /// Structure is documented below.
        /// </summary>
        [Input("cloudKmsConfig")]
        public Input<Inputs.ClientCloudKmsConfigArgs>? CloudKmsConfig { get; set; }

        /// <summary>
        /// Indicates if sample integrations should be created along with provisioning.
        /// </summary>
        [Input("createSampleIntegrations")]
        public Input<bool>? CreateSampleIntegrations { get; set; }

        /// <summary>
        /// Location in which client needs to be provisioned.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// User input run-as service account, if empty, will bring up a new default service account.
        /// </summary>
        [Input("runAsServiceAccount")]
        public Input<string>? RunAsServiceAccount { get; set; }

        public ClientArgs()
        {
        }
        public static new ClientArgs Empty => new ClientArgs();
    }

    public sealed class ClientState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Cloud KMS config for AuthModule to encrypt/decrypt credentials.
        /// Structure is documented below.
        /// </summary>
        [Input("cloudKmsConfig")]
        public Input<Inputs.ClientCloudKmsConfigGetArgs>? CloudKmsConfig { get; set; }

        /// <summary>
        /// Indicates if sample integrations should be created along with provisioning.
        /// </summary>
        [Input("createSampleIntegrations")]
        public Input<bool>? CreateSampleIntegrations { get; set; }

        /// <summary>
        /// Location in which client needs to be provisioned.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// User input run-as service account, if empty, will bring up a new default service account.
        /// </summary>
        [Input("runAsServiceAccount")]
        public Input<string>? RunAsServiceAccount { get; set; }

        public ClientState()
        {
        }
        public static new ClientState Empty => new ClientState();
    }
}
