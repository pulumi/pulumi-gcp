// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.CloudIdentity.Outputs
{

    [OutputType]
    public sealed class GetGroupsGroupResult
    {
        public readonly string CreateTime;
        /// <summary>
        /// An extended description to help users determine the purpose of a Group.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The display name of the Group.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// EntityKey of the Group.  Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetGroupsGroupGroupKeyResult> GroupKeys;
        public readonly string InitialGroupConfig;
        /// <summary>
        /// The labels that apply to the Group.
        /// Contains 'cloudidentity.googleapis.com/groups.discussion_forum': '' if the Group is a Google Group or
        /// 'system/groups/external': '' if the Group is an external-identity-mapped group.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// Resource name of the Group in the format: groups/{group_id}, where `group_id` is the unique ID assigned to the Group.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The parent resource under which to list all Groups. Must be of the form identitysources/{identity_source_id} for external- identity-mapped groups or customers/{customer_id} for Google Groups.
        /// </summary>
        public readonly string Parent;
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetGroupsGroupResult(
            string createTime,

            string description,

            string displayName,

            ImmutableArray<Outputs.GetGroupsGroupGroupKeyResult> groupKeys,

            string initialGroupConfig,

            ImmutableDictionary<string, string> labels,

            string name,

            string parent,

            string updateTime)
        {
            CreateTime = createTime;
            Description = description;
            DisplayName = displayName;
            GroupKeys = groupKeys;
            InitialGroupConfig = initialGroupConfig;
            Labels = labels;
            Name = name;
            Parent = parent;
            UpdateTime = updateTime;
        }
    }
}
