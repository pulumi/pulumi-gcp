// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.NetworkServices.Inputs
{

    public sealed class HttpRouteRuleMatchHeaderGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The value of the header should match exactly the content of exactMatch.
        /// </summary>
        [Input("exactMatch")]
        public Input<string>? ExactMatch { get; set; }

        /// <summary>
        /// The name of the HTTP header to match against.
        /// </summary>
        [Input("header")]
        public Input<string>? Header { get; set; }

        /// <summary>
        /// If specified, the match result will be inverted before checking. Default value is set to false.
        /// </summary>
        [Input("invertMatch")]
        public Input<bool>? InvertMatch { get; set; }

        /// <summary>
        /// The value of the header must start with the contents of prefixMatch.
        /// </summary>
        [Input("prefixMatch")]
        public Input<string>? PrefixMatch { get; set; }

        /// <summary>
        /// A header with headerName must exist. The match takes place whether or not the header has a value.
        /// </summary>
        [Input("presentMatch")]
        public Input<bool>? PresentMatch { get; set; }

        /// <summary>
        /// If specified, the rule will match if the request header value is within the range.
        /// Structure is documented below.
        /// </summary>
        [Input("rangeMatch")]
        public Input<Inputs.HttpRouteRuleMatchHeaderRangeMatchGetArgs>? RangeMatch { get; set; }

        /// <summary>
        /// The value of the header must match the regular expression specified in regexMatch.
        /// </summary>
        [Input("regexMatch")]
        public Input<string>? RegexMatch { get; set; }

        /// <summary>
        /// The value of the header must end with the contents of suffixMatch.
        /// </summary>
        [Input("suffixMatch")]
        public Input<string>? SuffixMatch { get; set; }

        public HttpRouteRuleMatchHeaderGetArgs()
        {
        }
        public static new HttpRouteRuleMatchHeaderGetArgs Empty => new HttpRouteRuleMatchHeaderGetArgs();
    }
}
