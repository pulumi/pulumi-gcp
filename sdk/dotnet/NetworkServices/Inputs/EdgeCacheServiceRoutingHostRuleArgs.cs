// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.NetworkServices.Inputs
{

    public sealed class EdgeCacheServiceRoutingHostRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A human-readable description of the hostRule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("hosts", required: true)]
        private InputList<string>? _hosts;

        /// <summary>
        /// The list of host patterns to match.
        /// Host patterns must be valid hostnames. Ports are not allowed. Wildcard hosts are supported in the suffix or prefix form. * matches any string of ([a-z0-9-.]*). It does not match the empty string.
        /// When multiple hosts are specified, hosts are matched in the following priority:
        /// 1. Exact domain names: ``www.foo.com``.
        /// 2. Suffix domain wildcards: ``*.foo.com`` or ``*-bar.foo.com``.
        /// 3. Prefix domain wildcards: ``foo.*`` or ``foo-*``.
        /// 4. Special wildcard ``*`` matching any domain.
        /// Notes:
        /// The wildcard will not match the empty string. e.g. ``*-bar.foo.com`` will match ``baz-bar.foo.com`` but not ``-bar.foo.com``. The longest wildcards match first. Only a single host in the entire service can match on ``*``. A domain must be unique across all configured hosts within a service.
        /// Hosts are matched against the HTTP Host header, or for HTTP/2 and HTTP/3, the ":authority" header, from the incoming request.
        /// You may specify up to 10 hosts.
        /// </summary>
        public InputList<string> Hosts
        {
            get => _hosts ?? (_hosts = new InputList<string>());
            set => _hosts = value;
        }

        /// <summary>
        /// The name of the pathMatcher associated with this hostRule.
        /// </summary>
        [Input("pathMatcher", required: true)]
        public Input<string> PathMatcher { get; set; } = null!;

        public EdgeCacheServiceRoutingHostRuleArgs()
        {
        }
        public static new EdgeCacheServiceRoutingHostRuleArgs Empty => new EdgeCacheServiceRoutingHostRuleArgs();
    }
}
