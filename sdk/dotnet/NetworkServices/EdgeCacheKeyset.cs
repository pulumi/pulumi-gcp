// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.NetworkServices
{
    /// <summary>
    /// ## Example Usage
    /// ### Network Services Edge Cache Keyset Basic
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var @default = new Gcp.NetworkServices.EdgeCacheKeyset("default", new Gcp.NetworkServices.EdgeCacheKeysetArgs
    ///         {
    ///             Description = "The default keyset",
    ///             PublicKeys = 
    ///             {
    ///                 new Gcp.NetworkServices.Inputs.EdgeCacheKeysetPublicKeyArgs
    ///                 {
    ///                     Id = "my-public-key",
    ///                     Value = "FHsTyFHNmvNpw4o7-rp-M1yqMyBF8vXSBRkZtkQ0RKY",
    ///                 },
    ///                 new Gcp.NetworkServices.Inputs.EdgeCacheKeysetPublicKeyArgs
    ///                 {
    ///                     Id = "my-public-key-2",
    ///                     Value = "hzd03llxB1u5FOLKFkZ6_wCJqC7jtN0bg7xlBqS6WVM",
    ///                 },
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// EdgeCacheKeyset can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import gcp:networkservices/edgeCacheKeyset:EdgeCacheKeyset default projects/{{project}}/locations/global/edgeCacheKeysets/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:networkservices/edgeCacheKeyset:EdgeCacheKeyset default {{project}}/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:networkservices/edgeCacheKeyset:EdgeCacheKeyset default {{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:networkservices/edgeCacheKeyset:EdgeCacheKeyset")]
    public partial class EdgeCacheKeyset : Pulumi.CustomResource
    {
        /// <summary>
        /// A human-readable description of the resource.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Set of label tags associated with the EdgeCache resource.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// Name of the resource; provided by the client when the resource is created.
        /// The name must be 1-64 characters long, and match the regular expression [a-zA-Z][a-zA-Z0-9_-]* which means the first character must be a letter,
        /// and all following characters must be a dash, underscore, letter or digit.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// An ordered list of Ed25519 public keys to use for validating signed requests.
        /// You must specify at least one (1) key, and may have up to three (3) keys.
        /// Ed25519 public keys are not secret, and only allow Google to validate a request was signed by your corresponding private key.
        /// You should ensure that the private key is kept secret, and that only authorized users can add public keys to a keyset.
        /// Structure is documented below.
        /// </summary>
        [Output("publicKeys")]
        public Output<ImmutableArray<Outputs.EdgeCacheKeysetPublicKey>> PublicKeys { get; private set; } = null!;


        /// <summary>
        /// Create a EdgeCacheKeyset resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EdgeCacheKeyset(string name, EdgeCacheKeysetArgs args, CustomResourceOptions? options = null)
            : base("gcp:networkservices/edgeCacheKeyset:EdgeCacheKeyset", name, args ?? new EdgeCacheKeysetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EdgeCacheKeyset(string name, Input<string> id, EdgeCacheKeysetState? state = null, CustomResourceOptions? options = null)
            : base("gcp:networkservices/edgeCacheKeyset:EdgeCacheKeyset", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EdgeCacheKeyset resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EdgeCacheKeyset Get(string name, Input<string> id, EdgeCacheKeysetState? state = null, CustomResourceOptions? options = null)
        {
            return new EdgeCacheKeyset(name, id, state, options);
        }
    }

    public sealed class EdgeCacheKeysetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A human-readable description of the resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Set of label tags associated with the EdgeCache resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Name of the resource; provided by the client when the resource is created.
        /// The name must be 1-64 characters long, and match the regular expression [a-zA-Z][a-zA-Z0-9_-]* which means the first character must be a letter,
        /// and all following characters must be a dash, underscore, letter or digit.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("publicKeys", required: true)]
        private InputList<Inputs.EdgeCacheKeysetPublicKeyArgs>? _publicKeys;

        /// <summary>
        /// An ordered list of Ed25519 public keys to use for validating signed requests.
        /// You must specify at least one (1) key, and may have up to three (3) keys.
        /// Ed25519 public keys are not secret, and only allow Google to validate a request was signed by your corresponding private key.
        /// You should ensure that the private key is kept secret, and that only authorized users can add public keys to a keyset.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.EdgeCacheKeysetPublicKeyArgs> PublicKeys
        {
            get => _publicKeys ?? (_publicKeys = new InputList<Inputs.EdgeCacheKeysetPublicKeyArgs>());
            set => _publicKeys = value;
        }

        public EdgeCacheKeysetArgs()
        {
        }
    }

    public sealed class EdgeCacheKeysetState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// A human-readable description of the resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Set of label tags associated with the EdgeCache resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Name of the resource; provided by the client when the resource is created.
        /// The name must be 1-64 characters long, and match the regular expression [a-zA-Z][a-zA-Z0-9_-]* which means the first character must be a letter,
        /// and all following characters must be a dash, underscore, letter or digit.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("publicKeys")]
        private InputList<Inputs.EdgeCacheKeysetPublicKeyGetArgs>? _publicKeys;

        /// <summary>
        /// An ordered list of Ed25519 public keys to use for validating signed requests.
        /// You must specify at least one (1) key, and may have up to three (3) keys.
        /// Ed25519 public keys are not secret, and only allow Google to validate a request was signed by your corresponding private key.
        /// You should ensure that the private key is kept secret, and that only authorized users can add public keys to a keyset.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.EdgeCacheKeysetPublicKeyGetArgs> PublicKeys
        {
            get => _publicKeys ?? (_publicKeys = new InputList<Inputs.EdgeCacheKeysetPublicKeyGetArgs>());
            set => _publicKeys = value;
        }

        public EdgeCacheKeysetState()
        {
        }
    }
}
