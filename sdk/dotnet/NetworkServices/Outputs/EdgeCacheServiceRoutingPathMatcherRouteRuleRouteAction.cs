// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.NetworkServices.Outputs
{

    [OutputType]
    public sealed class EdgeCacheServiceRoutingPathMatcherRouteRuleRouteAction
    {
        /// <summary>
        /// The policy to use for defining caching and signed request behaviour for requests that match this route.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.EdgeCacheServiceRoutingPathMatcherRouteRuleRouteActionCdnPolicy? CdnPolicy;
        /// <summary>
        /// Setting the compression mode to automatic enables dynamic compression for every eligible response.
        /// When dynamic compression is enabled, it is recommended to also set a cache policy to maximize efficiency.
        /// Possible values are: `DISABLED`, `AUTOMATIC`.
        /// </summary>
        public readonly string? CompressionMode;
        /// <summary>
        /// CORSPolicy defines Cross-Origin-Resource-Sharing configuration, including which CORS response headers will be set.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.EdgeCacheServiceRoutingPathMatcherRouteRuleRouteActionCorsPolicy? CorsPolicy;
        /// <summary>
        /// The URL rewrite configuration for requests that match this route.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.EdgeCacheServiceRoutingPathMatcherRouteRuleRouteActionUrlRewrite? UrlRewrite;

        [OutputConstructor]
        private EdgeCacheServiceRoutingPathMatcherRouteRuleRouteAction(
            Outputs.EdgeCacheServiceRoutingPathMatcherRouteRuleRouteActionCdnPolicy? cdnPolicy,

            string? compressionMode,

            Outputs.EdgeCacheServiceRoutingPathMatcherRouteRuleRouteActionCorsPolicy? corsPolicy,

            Outputs.EdgeCacheServiceRoutingPathMatcherRouteRuleRouteActionUrlRewrite? urlRewrite)
        {
            CdnPolicy = cdnPolicy;
            CompressionMode = compressionMode;
            CorsPolicy = corsPolicy;
            UrlRewrite = urlRewrite;
        }
    }
}
