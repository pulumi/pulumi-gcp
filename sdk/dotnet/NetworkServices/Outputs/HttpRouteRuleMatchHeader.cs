// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.NetworkServices.Outputs
{

    [OutputType]
    public sealed class HttpRouteRuleMatchHeader
    {
        /// <summary>
        /// The value of the header should match exactly the content of exactMatch.
        /// </summary>
        public readonly string? ExactMatch;
        /// <summary>
        /// The name of the HTTP header to match against.
        /// </summary>
        public readonly string? Header;
        /// <summary>
        /// If specified, the match result will be inverted before checking. Default value is set to false.
        /// </summary>
        public readonly bool? InvertMatch;
        /// <summary>
        /// The value of the header must start with the contents of prefixMatch.
        /// </summary>
        public readonly string? PrefixMatch;
        /// <summary>
        /// A header with headerName must exist. The match takes place whether or not the header has a value.
        /// </summary>
        public readonly bool? PresentMatch;
        /// <summary>
        /// If specified, the rule will match if the request header value is within the range.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.HttpRouteRuleMatchHeaderRangeMatch? RangeMatch;
        /// <summary>
        /// The value of the header must match the regular expression specified in regexMatch.
        /// </summary>
        public readonly string? RegexMatch;
        /// <summary>
        /// The value of the header must end with the contents of suffixMatch.
        /// </summary>
        public readonly string? SuffixMatch;

        [OutputConstructor]
        private HttpRouteRuleMatchHeader(
            string? exactMatch,

            string? header,

            bool? invertMatch,

            string? prefixMatch,

            bool? presentMatch,

            Outputs.HttpRouteRuleMatchHeaderRangeMatch? rangeMatch,

            string? regexMatch,

            string? suffixMatch)
        {
            ExactMatch = exactMatch;
            Header = header;
            InvertMatch = invertMatch;
            PrefixMatch = prefixMatch;
            PresentMatch = presentMatch;
            RangeMatch = rangeMatch;
            RegexMatch = regexMatch;
            SuffixMatch = suffixMatch;
        }
    }
}
