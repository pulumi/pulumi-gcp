// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.NetworkServices.Outputs
{

    [OutputType]
    public sealed class HttpRouteRuleMatch
    {
        /// <summary>
        /// The HTTP request path value should exactly match this value.
        /// </summary>
        public readonly string? FullPathMatch;
        /// <summary>
        /// Specifies a list of HTTP request headers to match against.
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.HttpRouteRuleMatchHeader> Headers;
        /// <summary>
        /// Specifies if prefixMatch and fullPathMatch matches are case sensitive. The default value is false.
        /// </summary>
        public readonly bool? IgnoreCase;
        /// <summary>
        /// The HTTP request path value must begin with specified prefixMatch. prefixMatch must begin with a /.
        /// </summary>
        public readonly string? PrefixMatch;
        /// <summary>
        /// Specifies a list of query parameters to match against.
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.HttpRouteRuleMatchQueryParameter> QueryParameters;
        /// <summary>
        /// The HTTP request path value must satisfy the regular expression specified by regexMatch after removing any query parameters and anchor supplied with the original URL. For regular expression grammar, please see https://github.com/google/re2/wiki/Syntax
        /// </summary>
        public readonly string? RegexMatch;

        [OutputConstructor]
        private HttpRouteRuleMatch(
            string? fullPathMatch,

            ImmutableArray<Outputs.HttpRouteRuleMatchHeader> headers,

            bool? ignoreCase,

            string? prefixMatch,

            ImmutableArray<Outputs.HttpRouteRuleMatchQueryParameter> queryParameters,

            string? regexMatch)
        {
            FullPathMatch = fullPathMatch;
            Headers = headers;
            IgnoreCase = ignoreCase;
            PrefixMatch = prefixMatch;
            QueryParameters = queryParameters;
            RegexMatch = regexMatch;
        }
    }
}
