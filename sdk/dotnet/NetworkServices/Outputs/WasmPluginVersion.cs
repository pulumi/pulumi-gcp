// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.NetworkServices.Outputs
{

    [OutputType]
    public sealed class WasmPluginVersion
    {
        /// <summary>
        /// (Output)
        /// Output only. The timestamp when the resource was created.
        /// </summary>
        public readonly string? CreateTime;
        /// <summary>
        /// Optional. A human-readable description of the resource.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// (Output)
        /// Output only. The resolved digest for the image specified in the image field. The digest is resolved during the creation of WasmPluginVersion resource.
        /// This field holds the digest value, regardless of whether a tag or digest was originally specified in the image field.
        /// </summary>
        public readonly string? ImageDigest;
        /// <summary>
        /// Optional. URI of the container image containing the plugin, stored in the Artifact Registry. When a new WasmPluginVersion resource is created, the digest of the container image is saved in the imageDigest field.
        /// When downloading an image, the digest value is used instead of an image tag.
        /// </summary>
        public readonly string? ImageUri;
        /// <summary>
        /// Optional. Set of labels associated with the WasmPlugin resource.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Labels;
        /// <summary>
        /// A base64-encoded string containing the configuration for the plugin. The configuration is provided to the plugin at runtime through the ON_CONFIGURE callback.
        /// When a new WasmPluginVersion resource is created, the digest of the contents is saved in the pluginConfigDigest field.
        /// Conflics with pluginConfigUri.
        /// </summary>
        public readonly string? PluginConfigData;
        /// <summary>
        /// (Output)
        /// Output only. This field holds the digest (usually checksum) value for the plugin configuration.
        /// The value is calculated based on the contents of pluginConfigData or the container image defined by the pluginConfigUri field.
        /// </summary>
        public readonly string? PluginConfigDigest;
        /// <summary>
        /// URI of the plugin configuration stored in the Artifact Registry. The configuration is provided to the plugin at runtime through the ON_CONFIGURE callback.
        /// The container image must contain only a single file with the name plugin.config.
        /// When a new WasmPluginVersion resource is created, the digest of the container image is saved in the pluginConfigDigest field.
        /// Conflics with pluginConfigData.
        /// </summary>
        public readonly string? PluginConfigUri;
        /// <summary>
        /// (Output)
        /// Output only. The timestamp when the resource was updated.
        /// </summary>
        public readonly string? UpdateTime;
        /// <summary>
        /// The identifier for this object. Format specified above.
        /// </summary>
        public readonly string VersionName;

        [OutputConstructor]
        private WasmPluginVersion(
            string? createTime,

            string? description,

            string? imageDigest,

            string? imageUri,

            ImmutableDictionary<string, string>? labels,

            string? pluginConfigData,

            string? pluginConfigDigest,

            string? pluginConfigUri,

            string? updateTime,

            string versionName)
        {
            CreateTime = createTime;
            Description = description;
            ImageDigest = imageDigest;
            ImageUri = imageUri;
            Labels = labels;
            PluginConfigData = pluginConfigData;
            PluginConfigDigest = pluginConfigDigest;
            PluginConfigUri = pluginConfigUri;
            UpdateTime = updateTime;
            VersionName = versionName;
        }
    }
}
