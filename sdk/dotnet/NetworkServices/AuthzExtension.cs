// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.NetworkServices
{
    /// <summary>
    /// AuthzExtension is a resource that allows traffic forwarding to a callout backend service to make an authorization decision.
    /// 
    /// To get more information about AuthzExtension, see:
    /// 
    /// * [API documentation](https://cloud.google.com/service-extensions/docs/reference/rest/v1beta1/projects.locations.authzExtensions)
    /// 
    /// ## Example Usage
    /// 
    /// ### Network Services Authz Extension Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @default = new Gcp.Compute.RegionBackendService("default", new()
    ///     {
    ///         Name = "authz-service",
    ///         Project = "my-project-name",
    ///         Region = "us-west1",
    ///         Protocol = "HTTP2",
    ///         LoadBalancingScheme = "INTERNAL_MANAGED",
    ///         PortName = "grpc",
    ///     });
    /// 
    ///     var defaultAuthzExtension = new Gcp.NetworkServices.AuthzExtension("default", new()
    ///     {
    ///         Name = "my-authz-ext",
    ///         Project = "my-project-name",
    ///         Location = "us-west1",
    ///         Description = "my description",
    ///         LoadBalancingScheme = "INTERNAL_MANAGED",
    ///         Authority = "ext11.com",
    ///         Service = @default.SelfLink,
    ///         Timeout = "0.1s",
    ///         FailOpen = false,
    ///         ForwardHeaders = new[]
    ///         {
    ///             "Authorization",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// AuthzExtension can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/locations/{{location}}/authzExtensions/{{name}}`
    /// 
    /// * `{{project}}/{{location}}/{{name}}`
    /// 
    /// * `{{location}}/{{name}}`
    /// 
    /// * `{{name}}`
    /// 
    /// When using the `pulumi import` command, AuthzExtension can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:networkservices/authzExtension:AuthzExtension default projects/{{project}}/locations/{{location}}/authzExtensions/{{name}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:networkservices/authzExtension:AuthzExtension default {{project}}/{{location}}/{{name}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:networkservices/authzExtension:AuthzExtension default {{location}}/{{name}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:networkservices/authzExtension:AuthzExtension default {{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:networkservices/authzExtension:AuthzExtension")]
    public partial class AuthzExtension : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The :authority header in the gRPC request sent from Envoy to the extension service.
        /// </summary>
        [Output("authority")]
        public Output<string> Authority { get; private set; } = null!;

        /// <summary>
        /// The timestamp when the resource was created.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// A human-readable description of the resource.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
        /// </summary>
        [Output("effectiveLabels")]
        public Output<ImmutableDictionary<string, string>> EffectiveLabels { get; private set; } = null!;

        /// <summary>
        /// Determines how the proxy behaves if the call to the extension fails or times out.
        /// When set to TRUE, request or response processing continues without error. Any subsequent extensions in the extension chain are also executed. When set to FALSE or the default setting of FALSE is used, one of the following happens:
        /// * If response headers have not been delivered to the downstream client, a generic 500 error is returned to the client. The error response can be tailored by configuring a custom error response in the load balancer.
        /// * If response headers have been delivered, then the HTTP stream to the downstream client is reset.
        /// </summary>
        [Output("failOpen")]
        public Output<bool> FailOpen { get; private set; } = null!;

        /// <summary>
        /// List of the HTTP headers to forward to the extension (from the client). If omitted, all headers are sent. Each element is a string indicating the header name.
        /// </summary>
        [Output("forwardHeaders")]
        public Output<ImmutableArray<string>> ForwardHeaders { get; private set; } = null!;

        /// <summary>
        /// Set of labels associated with the AuthzExtension resource.
        /// 
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `EffectiveLabels` for all of the labels present on the resource.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// All backend services and forwarding rules referenced by this extension must share the same load balancing scheme.
        /// For more information, refer to [Backend services overview](https://cloud.google.com/load-balancing/docs/backend-service).
        /// Possible values are: `INTERNAL_MANAGED`, `EXTERNAL_MANAGED`.
        /// </summary>
        [Output("loadBalancingScheme")]
        public Output<string> LoadBalancingScheme { get; private set; } = null!;

        /// <summary>
        /// The location of the resource.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The metadata provided here is included as part of the MetadataContext (of type google.protobuf.Struct) in the ProcessingRequest message sent to the extension server. The metadata is available under the namespace com.google.authz_extension.&lt;resourceName&gt;. The following variables are supported in the metadata Struct:
        /// {forwarding_rule_id} - substituted with the forwarding rule's fully qualified resource name.
        /// </summary>
        [Output("metadata")]
        public Output<ImmutableDictionary<string, string>?> Metadata { get; private set; } = null!;

        /// <summary>
        /// Identifier. Name of the AuthzExtension resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The combination of labels configured directly on the resource
        /// and default labels configured on the provider.
        /// </summary>
        [Output("pulumiLabels")]
        public Output<ImmutableDictionary<string, string>> PulumiLabels { get; private set; } = null!;

        /// <summary>
        /// The reference to the service that runs the extension.
        /// To configure a callout extension, service must be a fully-qualified reference to a [backend service](https://cloud.google.com/compute/docs/reference/rest/v1/backendServices) in the format:
        /// https://www.googleapis.com/compute/v1/projects/{project}/regions/{region}/backendServices/{backendService} or https://www.googleapis.com/compute/v1/projects/{project}/global/backendServices/{backendService}.
        /// </summary>
        [Output("service")]
        public Output<string> Service { get; private set; } = null!;

        /// <summary>
        /// Specifies the timeout for each individual message on the stream. The timeout must be between 10-10000 milliseconds.
        /// </summary>
        [Output("timeout")]
        public Output<string> Timeout { get; private set; } = null!;

        /// <summary>
        /// The timestamp when the resource was updated.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;

        /// <summary>
        /// The format of communication supported by the callout extension. Will be set to EXT_PROC_GRPC by the backend if no value is set.
        /// Possible values are: `WIRE_FORMAT_UNSPECIFIED`, `EXT_PROC_GRPC`.
        /// </summary>
        [Output("wireFormat")]
        public Output<string> WireFormat { get; private set; } = null!;


        /// <summary>
        /// Create a AuthzExtension resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AuthzExtension(string name, AuthzExtensionArgs args, CustomResourceOptions? options = null)
            : base("gcp:networkservices/authzExtension:AuthzExtension", name, args ?? new AuthzExtensionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AuthzExtension(string name, Input<string> id, AuthzExtensionState? state = null, CustomResourceOptions? options = null)
            : base("gcp:networkservices/authzExtension:AuthzExtension", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "effectiveLabels",
                    "pulumiLabels",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AuthzExtension resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AuthzExtension Get(string name, Input<string> id, AuthzExtensionState? state = null, CustomResourceOptions? options = null)
        {
            return new AuthzExtension(name, id, state, options);
        }
    }

    public sealed class AuthzExtensionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The :authority header in the gRPC request sent from Envoy to the extension service.
        /// </summary>
        [Input("authority", required: true)]
        public Input<string> Authority { get; set; } = null!;

        /// <summary>
        /// A human-readable description of the resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Determines how the proxy behaves if the call to the extension fails or times out.
        /// When set to TRUE, request or response processing continues without error. Any subsequent extensions in the extension chain are also executed. When set to FALSE or the default setting of FALSE is used, one of the following happens:
        /// * If response headers have not been delivered to the downstream client, a generic 500 error is returned to the client. The error response can be tailored by configuring a custom error response in the load balancer.
        /// * If response headers have been delivered, then the HTTP stream to the downstream client is reset.
        /// </summary>
        [Input("failOpen")]
        public Input<bool>? FailOpen { get; set; }

        [Input("forwardHeaders")]
        private InputList<string>? _forwardHeaders;

        /// <summary>
        /// List of the HTTP headers to forward to the extension (from the client). If omitted, all headers are sent. Each element is a string indicating the header name.
        /// </summary>
        public InputList<string> ForwardHeaders
        {
            get => _forwardHeaders ?? (_forwardHeaders = new InputList<string>());
            set => _forwardHeaders = value;
        }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Set of labels associated with the AuthzExtension resource.
        /// 
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `EffectiveLabels` for all of the labels present on the resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// All backend services and forwarding rules referenced by this extension must share the same load balancing scheme.
        /// For more information, refer to [Backend services overview](https://cloud.google.com/load-balancing/docs/backend-service).
        /// Possible values are: `INTERNAL_MANAGED`, `EXTERNAL_MANAGED`.
        /// </summary>
        [Input("loadBalancingScheme", required: true)]
        public Input<string> LoadBalancingScheme { get; set; } = null!;

        /// <summary>
        /// The location of the resource.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("metadata")]
        private InputMap<string>? _metadata;

        /// <summary>
        /// The metadata provided here is included as part of the MetadataContext (of type google.protobuf.Struct) in the ProcessingRequest message sent to the extension server. The metadata is available under the namespace com.google.authz_extension.&lt;resourceName&gt;. The following variables are supported in the metadata Struct:
        /// {forwarding_rule_id} - substituted with the forwarding rule's fully qualified resource name.
        /// </summary>
        public InputMap<string> Metadata
        {
            get => _metadata ?? (_metadata = new InputMap<string>());
            set => _metadata = value;
        }

        /// <summary>
        /// Identifier. Name of the AuthzExtension resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The reference to the service that runs the extension.
        /// To configure a callout extension, service must be a fully-qualified reference to a [backend service](https://cloud.google.com/compute/docs/reference/rest/v1/backendServices) in the format:
        /// https://www.googleapis.com/compute/v1/projects/{project}/regions/{region}/backendServices/{backendService} or https://www.googleapis.com/compute/v1/projects/{project}/global/backendServices/{backendService}.
        /// </summary>
        [Input("service", required: true)]
        public Input<string> Service { get; set; } = null!;

        /// <summary>
        /// Specifies the timeout for each individual message on the stream. The timeout must be between 10-10000 milliseconds.
        /// </summary>
        [Input("timeout", required: true)]
        public Input<string> Timeout { get; set; } = null!;

        /// <summary>
        /// The format of communication supported by the callout extension. Will be set to EXT_PROC_GRPC by the backend if no value is set.
        /// Possible values are: `WIRE_FORMAT_UNSPECIFIED`, `EXT_PROC_GRPC`.
        /// </summary>
        [Input("wireFormat")]
        public Input<string>? WireFormat { get; set; }

        public AuthzExtensionArgs()
        {
        }
        public static new AuthzExtensionArgs Empty => new AuthzExtensionArgs();
    }

    public sealed class AuthzExtensionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The :authority header in the gRPC request sent from Envoy to the extension service.
        /// </summary>
        [Input("authority")]
        public Input<string>? Authority { get; set; }

        /// <summary>
        /// The timestamp when the resource was created.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// A human-readable description of the resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("effectiveLabels")]
        private InputMap<string>? _effectiveLabels;

        /// <summary>
        /// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
        /// </summary>
        public InputMap<string> EffectiveLabels
        {
            get => _effectiveLabels ?? (_effectiveLabels = new InputMap<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableDictionary.Create<string, string>());
                _effectiveLabels = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        /// <summary>
        /// Determines how the proxy behaves if the call to the extension fails or times out.
        /// When set to TRUE, request or response processing continues without error. Any subsequent extensions in the extension chain are also executed. When set to FALSE or the default setting of FALSE is used, one of the following happens:
        /// * If response headers have not been delivered to the downstream client, a generic 500 error is returned to the client. The error response can be tailored by configuring a custom error response in the load balancer.
        /// * If response headers have been delivered, then the HTTP stream to the downstream client is reset.
        /// </summary>
        [Input("failOpen")]
        public Input<bool>? FailOpen { get; set; }

        [Input("forwardHeaders")]
        private InputList<string>? _forwardHeaders;

        /// <summary>
        /// List of the HTTP headers to forward to the extension (from the client). If omitted, all headers are sent. Each element is a string indicating the header name.
        /// </summary>
        public InputList<string> ForwardHeaders
        {
            get => _forwardHeaders ?? (_forwardHeaders = new InputList<string>());
            set => _forwardHeaders = value;
        }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Set of labels associated with the AuthzExtension resource.
        /// 
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `EffectiveLabels` for all of the labels present on the resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// All backend services and forwarding rules referenced by this extension must share the same load balancing scheme.
        /// For more information, refer to [Backend services overview](https://cloud.google.com/load-balancing/docs/backend-service).
        /// Possible values are: `INTERNAL_MANAGED`, `EXTERNAL_MANAGED`.
        /// </summary>
        [Input("loadBalancingScheme")]
        public Input<string>? LoadBalancingScheme { get; set; }

        /// <summary>
        /// The location of the resource.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        [Input("metadata")]
        private InputMap<string>? _metadata;

        /// <summary>
        /// The metadata provided here is included as part of the MetadataContext (of type google.protobuf.Struct) in the ProcessingRequest message sent to the extension server. The metadata is available under the namespace com.google.authz_extension.&lt;resourceName&gt;. The following variables are supported in the metadata Struct:
        /// {forwarding_rule_id} - substituted with the forwarding rule's fully qualified resource name.
        /// </summary>
        public InputMap<string> Metadata
        {
            get => _metadata ?? (_metadata = new InputMap<string>());
            set => _metadata = value;
        }

        /// <summary>
        /// Identifier. Name of the AuthzExtension resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("pulumiLabels")]
        private InputMap<string>? _pulumiLabels;

        /// <summary>
        /// The combination of labels configured directly on the resource
        /// and default labels configured on the provider.
        /// </summary>
        public InputMap<string> PulumiLabels
        {
            get => _pulumiLabels ?? (_pulumiLabels = new InputMap<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableDictionary.Create<string, string>());
                _pulumiLabels = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        /// <summary>
        /// The reference to the service that runs the extension.
        /// To configure a callout extension, service must be a fully-qualified reference to a [backend service](https://cloud.google.com/compute/docs/reference/rest/v1/backendServices) in the format:
        /// https://www.googleapis.com/compute/v1/projects/{project}/regions/{region}/backendServices/{backendService} or https://www.googleapis.com/compute/v1/projects/{project}/global/backendServices/{backendService}.
        /// </summary>
        [Input("service")]
        public Input<string>? Service { get; set; }

        /// <summary>
        /// Specifies the timeout for each individual message on the stream. The timeout must be between 10-10000 milliseconds.
        /// </summary>
        [Input("timeout")]
        public Input<string>? Timeout { get; set; }

        /// <summary>
        /// The timestamp when the resource was updated.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        /// <summary>
        /// The format of communication supported by the callout extension. Will be set to EXT_PROC_GRPC by the backend if no value is set.
        /// Possible values are: `WIRE_FORMAT_UNSPECIFIED`, `EXT_PROC_GRPC`.
        /// </summary>
        [Input("wireFormat")]
        public Input<string>? WireFormat { get; set; }

        public AuthzExtensionState()
        {
        }
        public static new AuthzExtensionState Empty => new AuthzExtensionState();
    }
}
