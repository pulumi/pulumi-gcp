// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.CloudDomains.Inputs
{

    public sealed class RegistrationDnsSettingsCustomDnsArgs : global::Pulumi.ResourceArgs
    {
        [Input("dsRecords")]
        private InputList<Inputs.RegistrationDnsSettingsCustomDnsDsRecordArgs>? _dsRecords;

        /// <summary>
        /// The list of DS records for this domain, which are used to enable DNSSEC. The domain's DNS provider can provide
        /// the values to set here. If this field is empty, DNSSEC is disabled.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.RegistrationDnsSettingsCustomDnsDsRecordArgs> DsRecords
        {
            get => _dsRecords ?? (_dsRecords = new InputList<Inputs.RegistrationDnsSettingsCustomDnsDsRecordArgs>());
            set => _dsRecords = value;
        }

        [Input("nameServers", required: true)]
        private InputList<string>? _nameServers;

        /// <summary>
        /// Required. A list of name servers that store the DNS zone for this domain. Each name server is a domain
        /// name, with Unicode domain names expressed in Punycode format.
        /// </summary>
        public InputList<string> NameServers
        {
            get => _nameServers ?? (_nameServers = new InputList<string>());
            set => _nameServers = value;
        }

        public RegistrationDnsSettingsCustomDnsArgs()
        {
        }
        public static new RegistrationDnsSettingsCustomDnsArgs Empty => new RegistrationDnsSettingsCustomDnsArgs();
    }
}
