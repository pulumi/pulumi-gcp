// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Filestore.Inputs
{

    public sealed class InstanceFileSharesNfsExportOptionGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Either READ_ONLY, for allowing only read requests on the exported directory,
        /// or READ_WRITE, for allowing both read and write requests. The default is READ_WRITE.
        /// Default value is `READ_WRITE`.
        /// Possible values are `READ_ONLY` and `READ_WRITE`.
        /// </summary>
        [Input("accessMode")]
        public Input<string>? AccessMode { get; set; }

        /// <summary>
        /// An integer representing the anonymous group id with a default value of 65534.
        /// Anon_gid may only be set with squashMode of ROOT_SQUASH. An error will be returned
        /// if this field is specified for other squashMode settings.
        /// </summary>
        [Input("anonGid")]
        public Input<int>? AnonGid { get; set; }

        /// <summary>
        /// An integer representing the anonymous user id with a default value of 65534.
        /// Anon_uid may only be set with squashMode of ROOT_SQUASH. An error will be returned
        /// if this field is specified for other squashMode settings.
        /// </summary>
        [Input("anonUid")]
        public Input<int>? AnonUid { get; set; }

        [Input("ipRanges")]
        private InputList<string>? _ipRanges;

        /// <summary>
        /// List of either IPv4 addresses, or ranges in CIDR notation which may mount the file share.
        /// Overlapping IP ranges are not allowed, both within and across NfsExportOptions. An error will be returned.
        /// The limit is 64 IP ranges/addresses for each FileShareConfig among all NfsExportOptions.
        /// </summary>
        public InputList<string> IpRanges
        {
            get => _ipRanges ?? (_ipRanges = new InputList<string>());
            set => _ipRanges = value;
        }

        /// <summary>
        /// Either NO_ROOT_SQUASH, for allowing root access on the exported directory, or ROOT_SQUASH,
        /// for not allowing root access. The default is NO_ROOT_SQUASH.
        /// Default value is `NO_ROOT_SQUASH`.
        /// Possible values are `NO_ROOT_SQUASH` and `ROOT_SQUASH`.
        /// </summary>
        [Input("squashMode")]
        public Input<string>? SquashMode { get; set; }

        public InstanceFileSharesNfsExportOptionGetArgs()
        {
        }
        public static new InstanceFileSharesNfsExportOptionGetArgs Empty => new InstanceFileSharesNfsExportOptionGetArgs();
    }
}
