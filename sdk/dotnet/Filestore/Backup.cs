// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Filestore
{
    /// <summary>
    /// A Google Cloud Filestore backup.
    /// 
    /// To get more information about Backup, see:
    /// 
    /// * [API documentation](https://cloud.google.com/filestore/docs/reference/rest/v1/projects.locations.instances.backups)
    /// * How-to Guides
    ///     * [Official Documentation](https://cloud.google.com/filestore/docs/backups)
    ///     * [Creating Backups](https://cloud.google.com/filestore/docs/create-backups)
    /// 
    /// ## Example Usage
    /// ### Filestore Backup Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var instance = new Gcp.Filestore.Instance("instance", new()
    ///     {
    ///         Location = "us-central1-b",
    ///         Tier = "BASIC_SSD",
    ///         FileShares = new Gcp.Filestore.Inputs.InstanceFileSharesArgs
    ///         {
    ///             CapacityGb = 2560,
    ///             Name = "share1",
    ///         },
    ///         Networks = new[]
    ///         {
    ///             new Gcp.Filestore.Inputs.InstanceNetworkArgs
    ///             {
    ///                 Network = "default",
    ///                 Modes = new[]
    ///                 {
    ///                     "MODE_IPV4",
    ///                 },
    ///                 ConnectMode = "DIRECT_PEERING",
    ///             },
    ///         },
    ///     });
    /// 
    ///     var backup = new Gcp.Filestore.Backup("backup", new()
    ///     {
    ///         Location = "us-central1",
    ///         SourceInstance = instance.Id,
    ///         SourceFileShare = "share1",
    ///         Description = "This is a filestore backup for the test instance",
    ///         Labels = 
    ///         {
    ///             { "files", "label1" },
    ///             { "other-label", "label2" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Backup can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import gcp:filestore/backup:Backup default projects/{{project}}/locations/{{location}}/backups/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:filestore/backup:Backup default {{project}}/{{location}}/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:filestore/backup:Backup default {{location}}/{{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:filestore/backup:Backup")]
    public partial class Backup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The amount of bytes needed to allocate a full copy of the snapshot content.
        /// </summary>
        [Output("capacityGb")]
        public Output<string> CapacityGb { get; private set; } = null!;

        /// <summary>
        /// The time when the snapshot was created in RFC3339 text format.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// A description of the backup with 2048 characters or less. Requests with longer descriptions will be rejected.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Amount of bytes that will be downloaded if the backup is restored.
        /// </summary>
        [Output("downloadBytes")]
        public Output<string> DownloadBytes { get; private set; } = null!;

        /// <summary>
        /// KMS key name used for data encryption.
        /// </summary>
        [Output("kmsKeyName")]
        public Output<string> KmsKeyName { get; private set; } = null!;

        /// <summary>
        /// Resource labels to represent user-provided metadata.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// The name of the location of the instance. This can be a region for ENTERPRISE tier instances.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The resource name of the backup. The name must be unique within the specified instance.
        /// The name must be 1-63 characters long, and comply with
        /// RFC1035. Specifically, the name must be 1-63 characters long and match
        /// the regular expression `a-z?` which means the
        /// first character must be a lowercase letter, and all following
        /// characters must be a dash, lowercase letter, or digit, except the last
        /// character, which cannot be a dash.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Name of the file share in the source Cloud Filestore instance that the backup is created from.
        /// </summary>
        [Output("sourceFileShare")]
        public Output<string> SourceFileShare { get; private set; } = null!;

        /// <summary>
        /// The resource name of the source Cloud Filestore instance, in the format projects/{projectId}/locations/{locationId}/instances/{instanceId}, used to create this backup.
        /// </summary>
        [Output("sourceInstance")]
        public Output<string> SourceInstance { get; private set; } = null!;

        /// <summary>
        /// The service tier of the source Cloud Filestore instance that this backup is created from.
        /// </summary>
        [Output("sourceInstanceTier")]
        public Output<string> SourceInstanceTier { get; private set; } = null!;

        /// <summary>
        /// The backup state.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The size of the storage used by the backup. As backups share storage, this number is expected to change with backup
        /// creation/deletion.
        /// </summary>
        [Output("storageBytes")]
        public Output<string> StorageBytes { get; private set; } = null!;


        /// <summary>
        /// Create a Backup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Backup(string name, BackupArgs args, CustomResourceOptions? options = null)
            : base("gcp:filestore/backup:Backup", name, args ?? new BackupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Backup(string name, Input<string> id, BackupState? state = null, CustomResourceOptions? options = null)
            : base("gcp:filestore/backup:Backup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Backup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Backup Get(string name, Input<string> id, BackupState? state = null, CustomResourceOptions? options = null)
        {
            return new Backup(name, id, state, options);
        }
    }

    public sealed class BackupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A description of the backup with 2048 characters or less. Requests with longer descriptions will be rejected.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Resource labels to represent user-provided metadata.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The name of the location of the instance. This can be a region for ENTERPRISE tier instances.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The resource name of the backup. The name must be unique within the specified instance.
        /// The name must be 1-63 characters long, and comply with
        /// RFC1035. Specifically, the name must be 1-63 characters long and match
        /// the regular expression `a-z?` which means the
        /// first character must be a lowercase letter, and all following
        /// characters must be a dash, lowercase letter, or digit, except the last
        /// character, which cannot be a dash.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Name of the file share in the source Cloud Filestore instance that the backup is created from.
        /// </summary>
        [Input("sourceFileShare", required: true)]
        public Input<string> SourceFileShare { get; set; } = null!;

        /// <summary>
        /// The resource name of the source Cloud Filestore instance, in the format projects/{projectId}/locations/{locationId}/instances/{instanceId}, used to create this backup.
        /// </summary>
        [Input("sourceInstance", required: true)]
        public Input<string> SourceInstance { get; set; } = null!;

        public BackupArgs()
        {
        }
        public static new BackupArgs Empty => new BackupArgs();
    }

    public sealed class BackupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The amount of bytes needed to allocate a full copy of the snapshot content.
        /// </summary>
        [Input("capacityGb")]
        public Input<string>? CapacityGb { get; set; }

        /// <summary>
        /// The time when the snapshot was created in RFC3339 text format.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// A description of the backup with 2048 characters or less. Requests with longer descriptions will be rejected.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Amount of bytes that will be downloaded if the backup is restored.
        /// </summary>
        [Input("downloadBytes")]
        public Input<string>? DownloadBytes { get; set; }

        /// <summary>
        /// KMS key name used for data encryption.
        /// </summary>
        [Input("kmsKeyName")]
        public Input<string>? KmsKeyName { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Resource labels to represent user-provided metadata.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The name of the location of the instance. This can be a region for ENTERPRISE tier instances.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The resource name of the backup. The name must be unique within the specified instance.
        /// The name must be 1-63 characters long, and comply with
        /// RFC1035. Specifically, the name must be 1-63 characters long and match
        /// the regular expression `a-z?` which means the
        /// first character must be a lowercase letter, and all following
        /// characters must be a dash, lowercase letter, or digit, except the last
        /// character, which cannot be a dash.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Name of the file share in the source Cloud Filestore instance that the backup is created from.
        /// </summary>
        [Input("sourceFileShare")]
        public Input<string>? SourceFileShare { get; set; }

        /// <summary>
        /// The resource name of the source Cloud Filestore instance, in the format projects/{projectId}/locations/{locationId}/instances/{instanceId}, used to create this backup.
        /// </summary>
        [Input("sourceInstance")]
        public Input<string>? SourceInstance { get; set; }

        /// <summary>
        /// The service tier of the source Cloud Filestore instance that this backup is created from.
        /// </summary>
        [Input("sourceInstanceTier")]
        public Input<string>? SourceInstanceTier { get; set; }

        /// <summary>
        /// The backup state.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The size of the storage used by the backup. As backups share storage, this number is expected to change with backup
        /// creation/deletion.
        /// </summary>
        [Input("storageBytes")]
        public Input<string>? StorageBytes { get; set; }

        public BackupState()
        {
        }
        public static new BackupState Empty => new BackupState();
    }
}
