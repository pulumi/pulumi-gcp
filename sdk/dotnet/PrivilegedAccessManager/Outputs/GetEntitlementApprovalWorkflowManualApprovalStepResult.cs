// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.PrivilegedAccessManager.Outputs
{

    [OutputType]
    public sealed class GetEntitlementApprovalWorkflowManualApprovalStepResult
    {
        /// <summary>
        /// How many users from the above list need to approve.
        /// If there are not enough distinct users in the list above then the workflow
        /// will indefinitely block. Should always be greater than 0. Currently 1 is the only
        /// supported value.
        /// </summary>
        public readonly int ApprovalsNeeded;
        /// <summary>
        /// Optional. Additional email addresses to be notified when a grant is pending approval.
        /// </summary>
        public readonly ImmutableArray<string> ApproverEmailRecipients;
        /// <summary>
        /// The potential set of approvers in this step. This list should contain at only one entry.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetEntitlementApprovalWorkflowManualApprovalStepApproverResult> Approvers;
        /// <summary>
        /// Output Only. The ID of the approval step.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetEntitlementApprovalWorkflowManualApprovalStepResult(
            int approvalsNeeded,

            ImmutableArray<string> approverEmailRecipients,

            ImmutableArray<Outputs.GetEntitlementApprovalWorkflowManualApprovalStepApproverResult> approvers,

            string id)
        {
            ApprovalsNeeded = approvalsNeeded;
            ApproverEmailRecipients = approverEmailRecipients;
            Approvers = approvers;
            Id = id;
        }
    }
}
