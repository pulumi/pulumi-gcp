// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.PrivilegedAccessManager
{
    public static class GetEntitlement
    {
        /// <summary>
        /// Use this data source to get information about a Google Cloud Privileged Access Manager Entitlement.
        /// 
        /// To get more information about Privileged Access Manager, see:
        /// 
        /// * [API Documentation](https://cloud.google.com/iam/docs/reference/pam/rest)
        /// * How-to guides
        ///   * [Official documentation](https://cloud.google.com/iam/docs/pam-overview)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var my_entitlement = Gcp.PrivilegedAccessManager.GetEntitlement.Invoke(new()
        ///     {
        ///         Parent = "projects/my-project",
        ///         Location = "global",
        ///         EntitlementId = "my-entitlement",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetEntitlementResult> InvokeAsync(GetEntitlementArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEntitlementResult>("gcp:privilegedaccessmanager/getEntitlement:getEntitlement", args ?? new GetEntitlementArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get information about a Google Cloud Privileged Access Manager Entitlement.
        /// 
        /// To get more information about Privileged Access Manager, see:
        /// 
        /// * [API Documentation](https://cloud.google.com/iam/docs/reference/pam/rest)
        /// * How-to guides
        ///   * [Official documentation](https://cloud.google.com/iam/docs/pam-overview)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var my_entitlement = Gcp.PrivilegedAccessManager.GetEntitlement.Invoke(new()
        ///     {
        ///         Parent = "projects/my-project",
        ///         Location = "global",
        ///         EntitlementId = "my-entitlement",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetEntitlementResult> Invoke(GetEntitlementInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEntitlementResult>("gcp:privilegedaccessmanager/getEntitlement:getEntitlement", args ?? new GetEntitlementInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEntitlementArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the Entitlement resource. This is the last part of the Entitlement's full name which is of the format `{parent}/locations/{location}/entitlements/{entitlement_id}`.
        /// </summary>
        [Input("entitlementId")]
        public string? EntitlementId { get; set; }

        /// <summary>
        /// The region of the Entitlement resource.
        /// </summary>
        [Input("location")]
        public string? Location { get; set; }

        /// <summary>
        /// The project or folder or organization that contains the resource. Format: projects/{project-id|project-number} or folders/{folder-number}  or organizations/{organization-number}
        /// </summary>
        [Input("parent")]
        public string? Parent { get; set; }

        public GetEntitlementArgs()
        {
        }
        public static new GetEntitlementArgs Empty => new GetEntitlementArgs();
    }

    public sealed class GetEntitlementInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the Entitlement resource. This is the last part of the Entitlement's full name which is of the format `{parent}/locations/{location}/entitlements/{entitlement_id}`.
        /// </summary>
        [Input("entitlementId")]
        public Input<string>? EntitlementId { get; set; }

        /// <summary>
        /// The region of the Entitlement resource.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The project or folder or organization that contains the resource. Format: projects/{project-id|project-number} or folders/{folder-number}  or organizations/{organization-number}
        /// </summary>
        [Input("parent")]
        public Input<string>? Parent { get; set; }

        public GetEntitlementInvokeArgs()
        {
        }
        public static new GetEntitlementInvokeArgs Empty => new GetEntitlementInvokeArgs();
    }


    [OutputType]
    public sealed class GetEntitlementResult
    {
        public readonly ImmutableArray<Outputs.GetEntitlementAdditionalNotificationTargetResult> AdditionalNotificationTargets;
        public readonly ImmutableArray<Outputs.GetEntitlementApprovalWorkflowResult> ApprovalWorkflows;
        public readonly string CreateTime;
        public readonly ImmutableArray<Outputs.GetEntitlementEligibleUserResult> EligibleUsers;
        public readonly string? EntitlementId;
        public readonly string Etag;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? Location;
        public readonly string MaxRequestDuration;
        public readonly string Name;
        public readonly string? Parent;
        public readonly ImmutableArray<Outputs.GetEntitlementPrivilegedAccessResult> PrivilegedAccesses;
        public readonly ImmutableArray<Outputs.GetEntitlementRequesterJustificationConfigResult> RequesterJustificationConfigs;
        public readonly string State;
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetEntitlementResult(
            ImmutableArray<Outputs.GetEntitlementAdditionalNotificationTargetResult> additionalNotificationTargets,

            ImmutableArray<Outputs.GetEntitlementApprovalWorkflowResult> approvalWorkflows,

            string createTime,

            ImmutableArray<Outputs.GetEntitlementEligibleUserResult> eligibleUsers,

            string? entitlementId,

            string etag,

            string id,

            string? location,

            string maxRequestDuration,

            string name,

            string? parent,

            ImmutableArray<Outputs.GetEntitlementPrivilegedAccessResult> privilegedAccesses,

            ImmutableArray<Outputs.GetEntitlementRequesterJustificationConfigResult> requesterJustificationConfigs,

            string state,

            string updateTime)
        {
            AdditionalNotificationTargets = additionalNotificationTargets;
            ApprovalWorkflows = approvalWorkflows;
            CreateTime = createTime;
            EligibleUsers = eligibleUsers;
            EntitlementId = entitlementId;
            Etag = etag;
            Id = id;
            Location = location;
            MaxRequestDuration = maxRequestDuration;
            Name = name;
            Parent = parent;
            PrivilegedAccesses = privilegedAccesses;
            RequesterJustificationConfigs = requesterJustificationConfigs;
            State = state;
            UpdateTime = updateTime;
        }
    }
}
