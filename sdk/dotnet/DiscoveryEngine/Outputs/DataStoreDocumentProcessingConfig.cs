// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.DiscoveryEngine.Outputs
{

    [OutputType]
    public sealed class DataStoreDocumentProcessingConfig
    {
        /// <summary>
        /// Whether chunking mode is enabled.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.DataStoreDocumentProcessingConfigChunkingConfig? ChunkingConfig;
        /// <summary>
        /// Configurations for default Document parser. If not specified, this resource
        /// will be configured to use a default DigitalParsingConfig, and the default parsing
        /// config will be applied to all file types for Document parsing.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.DataStoreDocumentProcessingConfigDefaultParsingConfig? DefaultParsingConfig;
        /// <summary>
        /// (Output)
        /// The full resource name of the Document Processing Config. Format:
        /// `projects/{project}/locations/{location}/collections/{collection_id}/dataStores/{data_store_id}/documentProcessingConfig`.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Map from file type to override the default parsing configuration based on the file type. Supported keys:
        /// </summary>
        public readonly ImmutableArray<Outputs.DataStoreDocumentProcessingConfigParsingConfigOverride> ParsingConfigOverrides;

        [OutputConstructor]
        private DataStoreDocumentProcessingConfig(
            Outputs.DataStoreDocumentProcessingConfigChunkingConfig? chunkingConfig,

            Outputs.DataStoreDocumentProcessingConfigDefaultParsingConfig? defaultParsingConfig,

            string? name,

            ImmutableArray<Outputs.DataStoreDocumentProcessingConfigParsingConfigOverride> parsingConfigOverrides)
        {
            ChunkingConfig = chunkingConfig;
            DefaultParsingConfig = defaultParsingConfig;
            Name = name;
            ParsingConfigOverrides = parsingConfigOverrides;
        }
    }
}
