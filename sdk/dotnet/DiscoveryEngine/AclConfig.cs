// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.DiscoveryEngine
{
    /// <summary>
    /// Access Control Configuration.
    /// 
    /// To get more information about AclConfig, see:
    /// 
    /// * [API documentation](https://cloud.google.com/generative-ai-app-builder/docs/reference/rpc/google.cloud.discoveryengine.v1alpha#aclconfigservice)
    /// 
    /// ## Example Usage
    /// 
    /// ### Discoveryengine Aclconfig Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var basic = new Gcp.DiscoveryEngine.AclConfig("basic", new()
    ///     {
    ///         Location = "global",
    ///         IdpConfig = new Gcp.DiscoveryEngine.Inputs.AclConfigIdpConfigArgs
    ///         {
    ///             IdpType = "THIRD_PARTY",
    ///             ExternalIdpConfig = new Gcp.DiscoveryEngine.Inputs.AclConfigIdpConfigExternalIdpConfigArgs
    ///             {
    ///                 WorkforcePoolName = "locations/global/workforcePools/cloud-console-pool-manual",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// AclConfig can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/locations/{{location}}/aclConfig`
    /// 
    /// * `{{project}}/{{location}}`
    /// 
    /// * `{{location}}`
    /// 
    /// When using the `pulumi import` command, AclConfig can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:discoveryengine/aclConfig:AclConfig default projects/{{project}}/locations/{{location}}/aclConfig
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:discoveryengine/aclConfig:AclConfig default {{project}}/{{location}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:discoveryengine/aclConfig:AclConfig default {{location}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:discoveryengine/aclConfig:AclConfig")]
    public partial class AclConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Identity provider config.
        /// Structure is documented below.
        /// </summary>
        [Output("idpConfig")]
        public Output<Outputs.AclConfigIdpConfig?> IdpConfig { get; private set; } = null!;

        /// <summary>
        /// The geographic location where the data store should reside. The value can
        /// only be one of "global", "us" and "eu".
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The unique full resource name of the aclConfig. Values are of the format
        /// `projects/{project}/locations/{location}/aclConfig`.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;


        /// <summary>
        /// Create a AclConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AclConfig(string name, AclConfigArgs args, CustomResourceOptions? options = null)
            : base("gcp:discoveryengine/aclConfig:AclConfig", name, args ?? new AclConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AclConfig(string name, Input<string> id, AclConfigState? state = null, CustomResourceOptions? options = null)
            : base("gcp:discoveryengine/aclConfig:AclConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AclConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AclConfig Get(string name, Input<string> id, AclConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new AclConfig(name, id, state, options);
        }
    }

    public sealed class AclConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Identity provider config.
        /// Structure is documented below.
        /// </summary>
        [Input("idpConfig")]
        public Input<Inputs.AclConfigIdpConfigArgs>? IdpConfig { get; set; }

        /// <summary>
        /// The geographic location where the data store should reside. The value can
        /// only be one of "global", "us" and "eu".
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public AclConfigArgs()
        {
        }
        public static new AclConfigArgs Empty => new AclConfigArgs();
    }

    public sealed class AclConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Identity provider config.
        /// Structure is documented below.
        /// </summary>
        [Input("idpConfig")]
        public Input<Inputs.AclConfigIdpConfigGetArgs>? IdpConfig { get; set; }

        /// <summary>
        /// The geographic location where the data store should reside. The value can
        /// only be one of "global", "us" and "eu".
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The unique full resource name of the aclConfig. Values are of the format
        /// `projects/{project}/locations/{location}/aclConfig`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public AclConfigState()
        {
        }
        public static new AclConfigState Empty => new AclConfigState();
    }
}
