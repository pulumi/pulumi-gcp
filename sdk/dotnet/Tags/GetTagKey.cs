// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Tags
{
    public static class GetTagKey
    {
        /// <summary>
        /// Get a tag key within a GCP org by `parent` and `short_name`.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var environmentTagKey = Output.Create(Gcp.Tags.GetTagKey.InvokeAsync(new Gcp.Tags.GetTagKeyArgs
        ///         {
        ///             Parent = "organizations/12345",
        ///             ShortName = "environment",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetTagKeyResult> InvokeAsync(GetTagKeyArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetTagKeyResult>("gcp:tags/getTagKey:getTagKey", args ?? new GetTagKeyArgs(), options.WithDefaults());

        /// <summary>
        /// Get a tag key within a GCP org by `parent` and `short_name`.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var environmentTagKey = Output.Create(Gcp.Tags.GetTagKey.InvokeAsync(new Gcp.Tags.GetTagKeyArgs
        ///         {
        ///             Parent = "organizations/12345",
        ///             ShortName = "environment",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetTagKeyResult> Invoke(GetTagKeyInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetTagKeyResult>("gcp:tags/getTagKey:getTagKey", args ?? new GetTagKeyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTagKeyArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The resource name of the parent organization in format `organizations/{org_id}`.
        /// </summary>
        [Input("parent", required: true)]
        public string Parent { get; set; } = null!;

        /// <summary>
        /// The tag key's short_name.
        /// </summary>
        [Input("shortName", required: true)]
        public string ShortName { get; set; } = null!;

        public GetTagKeyArgs()
        {
        }
    }

    public sealed class GetTagKeyInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The resource name of the parent organization in format `organizations/{org_id}`.
        /// </summary>
        [Input("parent", required: true)]
        public Input<string> Parent { get; set; } = null!;

        /// <summary>
        /// The tag key's short_name.
        /// </summary>
        [Input("shortName", required: true)]
        public Input<string> ShortName { get; set; } = null!;

        public GetTagKeyInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetTagKeyResult
    {
        public readonly string CreateTime;
        public readonly string Description;
        /// <summary>
        /// an identifier for the resource with format `tagKeys/{{name}}`
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string NamespacedName;
        public readonly string Parent;
        public readonly string ShortName;
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetTagKeyResult(
            string createTime,

            string description,

            string id,

            string name,

            string namespacedName,

            string parent,

            string shortName,

            string updateTime)
        {
            CreateTime = createTime;
            Description = description;
            Id = id;
            Name = name;
            NamespacedName = namespacedName;
            Parent = parent;
            ShortName = shortName;
            UpdateTime = updateTime;
        }
    }
}
