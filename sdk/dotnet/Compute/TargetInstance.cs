// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute
{
    /// <summary>
    /// Represents a TargetInstance resource which defines an endpoint instance
    /// that terminates traffic of certain protocols. In particular, they are used
    /// in Protocol Forwarding, where forwarding rules can send packets to a
    /// non-NAT'ed target instance. Each target instance contains a single
    /// virtual machine instance that receives and handles traffic from the
    /// corresponding forwarding rules.
    /// 
    /// To get more information about TargetInstance, see:
    /// 
    /// * [API documentation](https://cloud.google.com/compute/docs/reference/v1/targetInstances)
    /// * How-to Guides
    ///     * [Using Protocol Forwarding](https://cloud.google.com/compute/docs/protocol-forwarding)
    /// 
    /// ## Example Usage
    /// 
    /// ### Target Instance Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var vmimage = Gcp.Compute.GetImage.Invoke(new()
    ///     {
    ///         Family = "debian-11",
    ///         Project = "debian-cloud",
    ///     });
    /// 
    ///     var target_vm = new Gcp.Compute.Instance("target-vm", new()
    ///     {
    ///         Name = "target-vm",
    ///         MachineType = "e2-medium",
    ///         Zone = "us-central1-a",
    ///         BootDisk = new Gcp.Compute.Inputs.InstanceBootDiskArgs
    ///         {
    ///             InitializeParams = new Gcp.Compute.Inputs.InstanceBootDiskInitializeParamsArgs
    ///             {
    ///                 Image = vmimage.Apply(getImageResult =&gt; getImageResult.SelfLink),
    ///             },
    ///         },
    ///         NetworkInterfaces = new[]
    ///         {
    ///             new Gcp.Compute.Inputs.InstanceNetworkInterfaceArgs
    ///             {
    ///                 Network = "default",
    ///             },
    ///         },
    ///     });
    /// 
    ///     var @default = new Gcp.Compute.TargetInstance("default", new()
    ///     {
    ///         Name = "target",
    ///         Instance = target_vm.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// ### Target Instance Custom Network
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var target_vm = Gcp.Compute.GetNetwork.Invoke(new()
    ///     {
    ///         Name = "default",
    ///     });
    /// 
    ///     var vmimage = Gcp.Compute.GetImage.Invoke(new()
    ///     {
    ///         Family = "debian-12",
    ///         Project = "debian-cloud",
    ///     });
    /// 
    ///     var target_vmInstance = new Gcp.Compute.Instance("target-vm", new()
    ///     {
    ///         Name = "custom-network-target-vm",
    ///         MachineType = "e2-medium",
    ///         Zone = "us-central1-a",
    ///         BootDisk = new Gcp.Compute.Inputs.InstanceBootDiskArgs
    ///         {
    ///             InitializeParams = new Gcp.Compute.Inputs.InstanceBootDiskInitializeParamsArgs
    ///             {
    ///                 Image = vmimage.Apply(getImageResult =&gt; getImageResult.SelfLink),
    ///             },
    ///         },
    ///         NetworkInterfaces = new[]
    ///         {
    ///             new Gcp.Compute.Inputs.InstanceNetworkInterfaceArgs
    ///             {
    ///                 Network = "default",
    ///             },
    ///         },
    ///     });
    /// 
    ///     var customNetwork = new Gcp.Compute.TargetInstance("custom_network", new()
    ///     {
    ///         Name = "custom-network",
    ///         Instance = target_vmInstance.Id,
    ///         Network = target_vm.Apply(target_vm =&gt; target_vm.Apply(getNetworkResult =&gt; getNetworkResult.SelfLink)),
    ///     });
    /// 
    /// });
    /// ```
    /// ### Target Instance With Security Policy
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @default = new Gcp.Compute.Network("default", new()
    ///     {
    ///         Name = "custom-default-network",
    ///         AutoCreateSubnetworks = false,
    ///         RoutingMode = "REGIONAL",
    ///     });
    /// 
    ///     var defaultSubnetwork = new Gcp.Compute.Subnetwork("default", new()
    ///     {
    ///         Name = "custom-default-subnet",
    ///         IpCidrRange = "10.1.2.0/24",
    ///         Network = @default.Id,
    ///         PrivateIpv6GoogleAccess = "DISABLE_GOOGLE_ACCESS",
    ///         Purpose = "PRIVATE",
    ///         Region = "southamerica-west1",
    ///         StackType = "IPV4_ONLY",
    ///     });
    /// 
    ///     var vmimage = Gcp.Compute.GetImage.Invoke(new()
    ///     {
    ///         Family = "debian-11",
    ///         Project = "debian-cloud",
    ///     });
    /// 
    ///     var target_vm = new Gcp.Compute.Instance("target-vm", new()
    ///     {
    ///         NetworkInterfaces = new[]
    ///         {
    ///             new Gcp.Compute.Inputs.InstanceNetworkInterfaceArgs
    ///             {
    ///                 AccessConfigs = new[]
    ///                 {
    ///                     null,
    ///                 },
    ///                 Network = @default.SelfLink,
    ///                 Subnetwork = defaultSubnetwork.SelfLink,
    ///             },
    ///         },
    ///         Name = "target-vm",
    ///         MachineType = "e2-medium",
    ///         Zone = "southamerica-west1-a",
    ///         BootDisk = new Gcp.Compute.Inputs.InstanceBootDiskArgs
    ///         {
    ///             InitializeParams = new Gcp.Compute.Inputs.InstanceBootDiskInitializeParamsArgs
    ///             {
    ///                 Image = vmimage.Apply(getImageResult =&gt; getImageResult.SelfLink),
    ///             },
    ///         },
    ///     });
    /// 
    ///     var policyddosprotection = new Gcp.Compute.RegionSecurityPolicy("policyddosprotection", new()
    ///     {
    ///         Region = "southamerica-west1",
    ///         Name = "tf-test-policyddos_21197",
    ///         Description = "ddos protection security policy to set target instance",
    ///         Type = "CLOUD_ARMOR_NETWORK",
    ///         DdosProtectionConfig = new Gcp.Compute.Inputs.RegionSecurityPolicyDdosProtectionConfigArgs
    ///         {
    ///             DdosProtection = "ADVANCED_PREVIEW",
    ///         },
    ///     });
    /// 
    ///     var edgeSecService = new Gcp.Compute.NetworkEdgeSecurityService("edge_sec_service", new()
    ///     {
    ///         Region = "southamerica-west1",
    ///         Name = "tf-test-edgesec_52865",
    ///         SecurityPolicy = policyddosprotection.SelfLink,
    ///     });
    /// 
    ///     var regionsecuritypolicy = new Gcp.Compute.RegionSecurityPolicy("regionsecuritypolicy", new()
    ///     {
    ///         Name = "region-secpolicy",
    ///         Region = "southamerica-west1",
    ///         Description = "basic security policy for target instance",
    ///         Type = "CLOUD_ARMOR_NETWORK",
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             edgeSecService,
    ///         },
    ///     });
    /// 
    ///     var defaultTargetInstance = new Gcp.Compute.TargetInstance("default", new()
    ///     {
    ///         Name = "target-instance",
    ///         Zone = "southamerica-west1-a",
    ///         Instance = target_vm.Id,
    ///         SecurityPolicy = regionsecuritypolicy.SelfLink,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// TargetInstance can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/zones/{{zone}}/targetInstances/{{name}}`
    /// 
    /// * `{{project}}/{{zone}}/{{name}}`
    /// 
    /// * `{{zone}}/{{name}}`
    /// 
    /// * `{{name}}`
    /// 
    /// When using the `pulumi import` command, TargetInstance can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:compute/targetInstance:TargetInstance default projects/{{project}}/zones/{{zone}}/targetInstances/{{name}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:compute/targetInstance:TargetInstance default {{project}}/{{zone}}/{{name}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:compute/targetInstance:TargetInstance default {{zone}}/{{name}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:compute/targetInstance:TargetInstance default {{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:compute/targetInstance:TargetInstance")]
    public partial class TargetInstance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Creation timestamp in RFC3339 text format.
        /// </summary>
        [Output("creationTimestamp")]
        public Output<string> CreationTimestamp { get; private set; } = null!;

        /// <summary>
        /// An optional description of this resource.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The Compute instance VM handling traffic for this target instance.
        /// Accepts the instance self-link, relative path
        /// (e.g. `projects/project/zones/zone/instances/instance`) or name. If
        /// name is given, the zone will default to the given zone or
        /// the provider-default zone and the project will default to the
        /// provider-level project.
        /// </summary>
        [Output("instance")]
        public Output<string> Instance { get; private set; } = null!;

        /// <summary>
        /// Name of the resource. Provided by the client when the resource is
        /// created. The name must be 1-63 characters long, and comply with
        /// RFC1035. Specifically, the name must be 1-63 characters long and match
        /// the regular expression `a-z?` which means the
        /// first character must be a lowercase letter, and all following
        /// characters must be a dash, lowercase letter, or digit, except the last
        /// character, which cannot be a dash.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// NAT option controlling how IPs are NAT'ed to the instance.
        /// Currently only NO_NAT (default value) is supported.
        /// Default value is `NO_NAT`.
        /// Possible values are: `NO_NAT`.
        /// </summary>
        [Output("natPolicy")]
        public Output<string?> NatPolicy { get; private set; } = null!;

        /// <summary>
        /// The URL of the network this target instance uses to forward traffic. If not specified, the traffic will be forwarded to the network that the default network interface belongs to.
        /// </summary>
        [Output("network")]
        public Output<string?> Network { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The resource URL for the security policy associated with this target instance.
        /// </summary>
        [Output("securityPolicy")]
        public Output<string?> SecurityPolicy { get; private set; } = null!;

        /// <summary>
        /// The URI of the created resource.
        /// </summary>
        [Output("selfLink")]
        public Output<string> SelfLink { get; private set; } = null!;

        /// <summary>
        /// URL of the zone where the target instance resides.
        /// </summary>
        [Output("zone")]
        public Output<string> Zone { get; private set; } = null!;


        /// <summary>
        /// Create a TargetInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TargetInstance(string name, TargetInstanceArgs args, CustomResourceOptions? options = null)
            : base("gcp:compute/targetInstance:TargetInstance", name, args ?? new TargetInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TargetInstance(string name, Input<string> id, TargetInstanceState? state = null, CustomResourceOptions? options = null)
            : base("gcp:compute/targetInstance:TargetInstance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TargetInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TargetInstance Get(string name, Input<string> id, TargetInstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new TargetInstance(name, id, state, options);
        }
    }

    public sealed class TargetInstanceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// An optional description of this resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The Compute instance VM handling traffic for this target instance.
        /// Accepts the instance self-link, relative path
        /// (e.g. `projects/project/zones/zone/instances/instance`) or name. If
        /// name is given, the zone will default to the given zone or
        /// the provider-default zone and the project will default to the
        /// provider-level project.
        /// </summary>
        [Input("instance", required: true)]
        public Input<string> Instance { get; set; } = null!;

        /// <summary>
        /// Name of the resource. Provided by the client when the resource is
        /// created. The name must be 1-63 characters long, and comply with
        /// RFC1035. Specifically, the name must be 1-63 characters long and match
        /// the regular expression `a-z?` which means the
        /// first character must be a lowercase letter, and all following
        /// characters must be a dash, lowercase letter, or digit, except the last
        /// character, which cannot be a dash.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// NAT option controlling how IPs are NAT'ed to the instance.
        /// Currently only NO_NAT (default value) is supported.
        /// Default value is `NO_NAT`.
        /// Possible values are: `NO_NAT`.
        /// </summary>
        [Input("natPolicy")]
        public Input<string>? NatPolicy { get; set; }

        /// <summary>
        /// The URL of the network this target instance uses to forward traffic. If not specified, the traffic will be forwarded to the network that the default network interface belongs to.
        /// </summary>
        [Input("network")]
        public Input<string>? Network { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The resource URL for the security policy associated with this target instance.
        /// </summary>
        [Input("securityPolicy")]
        public Input<string>? SecurityPolicy { get; set; }

        /// <summary>
        /// URL of the zone where the target instance resides.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public TargetInstanceArgs()
        {
        }
        public static new TargetInstanceArgs Empty => new TargetInstanceArgs();
    }

    public sealed class TargetInstanceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Creation timestamp in RFC3339 text format.
        /// </summary>
        [Input("creationTimestamp")]
        public Input<string>? CreationTimestamp { get; set; }

        /// <summary>
        /// An optional description of this resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The Compute instance VM handling traffic for this target instance.
        /// Accepts the instance self-link, relative path
        /// (e.g. `projects/project/zones/zone/instances/instance`) or name. If
        /// name is given, the zone will default to the given zone or
        /// the provider-default zone and the project will default to the
        /// provider-level project.
        /// </summary>
        [Input("instance")]
        public Input<string>? Instance { get; set; }

        /// <summary>
        /// Name of the resource. Provided by the client when the resource is
        /// created. The name must be 1-63 characters long, and comply with
        /// RFC1035. Specifically, the name must be 1-63 characters long and match
        /// the regular expression `a-z?` which means the
        /// first character must be a lowercase letter, and all following
        /// characters must be a dash, lowercase letter, or digit, except the last
        /// character, which cannot be a dash.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// NAT option controlling how IPs are NAT'ed to the instance.
        /// Currently only NO_NAT (default value) is supported.
        /// Default value is `NO_NAT`.
        /// Possible values are: `NO_NAT`.
        /// </summary>
        [Input("natPolicy")]
        public Input<string>? NatPolicy { get; set; }

        /// <summary>
        /// The URL of the network this target instance uses to forward traffic. If not specified, the traffic will be forwarded to the network that the default network interface belongs to.
        /// </summary>
        [Input("network")]
        public Input<string>? Network { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The resource URL for the security policy associated with this target instance.
        /// </summary>
        [Input("securityPolicy")]
        public Input<string>? SecurityPolicy { get; set; }

        /// <summary>
        /// The URI of the created resource.
        /// </summary>
        [Input("selfLink")]
        public Input<string>? SelfLink { get; set; }

        /// <summary>
        /// URL of the zone where the target instance resides.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public TargetInstanceState()
        {
        }
        public static new TargetInstanceState Empty => new TargetInstanceState();
    }
}
