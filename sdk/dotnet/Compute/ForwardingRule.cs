// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute
{
    /// <summary>
    /// A ForwardingRule resource. A ForwardingRule resource specifies which pool
    /// of target virtual machines to forward a packet to if it matches the given
    /// [IPAddress, IPProtocol, portRange] tuple.
    /// 
    /// To get more information about ForwardingRule, see:
    /// 
    /// * [API documentation](https://cloud.google.com/compute/docs/reference/v1/forwardingRules)
    /// * How-to Guides
    ///     * [Official Documentation](https://cloud.google.com/compute/docs/load-balancing/network/forwarding-rules)
    /// 
    /// ## Example Usage
    /// ### Forwarding Rule Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var defaultTargetPool = new Gcp.Compute.TargetPool("defaultTargetPool");
    /// 
    ///     var defaultForwardingRule = new Gcp.Compute.ForwardingRule("defaultForwardingRule", new()
    ///     {
    ///         Target = defaultTargetPool.Id,
    ///         PortRange = "80",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ForwardingRule can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import gcp:compute/forwardingRule:ForwardingRule default projects/{{project}}/regions/{{region}}/forwardingRules/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:compute/forwardingRule:ForwardingRule default {{project}}/{{region}}/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:compute/forwardingRule:ForwardingRule default {{region}}/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:compute/forwardingRule:ForwardingRule default {{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:compute/forwardingRule:ForwardingRule")]
    public partial class ForwardingRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// This field can be used with internal load balancer or network load balancer
        /// when the forwarding rule references a backend service, or with the target
        /// field when it references a TargetInstance. Set this to true to
        /// allow packets addressed to any ports to be forwarded to the backends configured
        /// with this forwarding rule. This can be used when the protocol is TCP/UDP, and it
        /// must be set to true when the protocol is set to L3_DEFAULT.
        /// Cannot be set if port or portRange are set.
        /// </summary>
        [Output("allPorts")]
        public Output<bool?> AllPorts { get; private set; } = null!;

        /// <summary>
        /// If true, clients can access ILB from all regions.
        /// Otherwise only allows from the local region the ILB is located at.
        /// </summary>
        [Output("allowGlobalAccess")]
        public Output<bool?> AllowGlobalAccess { get; private set; } = null!;

        /// <summary>
        /// A BackendService to receive the matched traffic. This is used only
        /// for INTERNAL load balancing.
        /// </summary>
        [Output("backendService")]
        public Output<string?> BackendService { get; private set; } = null!;

        /// <summary>
        /// [Output Only] Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
        /// </summary>
        [Output("creationTimestamp")]
        public Output<string> CreationTimestamp { get; private set; } = null!;

        /// <summary>
        /// An optional description of this resource. Provide this property when
        /// you create the resource.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The IP address that this forwarding rule serves. When a client sends
        /// traffic to this IP address, the forwarding rule directs the traffic to
        /// the target that you specify in the forwarding rule. The
        /// loadBalancingScheme and the forwarding rule's target determine the
        /// type of IP address that you can use. For detailed information, refer
        /// to [IP address specifications](https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts#ip_address_specifications).
        /// An address can be specified either by a literal IP address or a
        /// reference to an existing Address resource. If you don't specify a
        /// reserved IP address, an ephemeral IP address is assigned.
        /// The value must be set to 0.0.0.0 when the target is a targetGrpcProxy
        /// that has validateForProxyless field set to true.
        /// For Private Service Connect forwarding rules that forward traffic to
        /// Google APIs, IP address must be provided.
        /// </summary>
        [Output("ipAddress")]
        public Output<string> IpAddress { get; private set; } = null!;

        /// <summary>
        /// The IP protocol to which this rule applies.
        /// When the load balancing scheme is INTERNAL, only TCP and UDP are
        /// valid.
        /// Possible values are `TCP`, `UDP`, `ESP`, `AH`, `SCTP`, `ICMP`, and `L3_DEFAULT`.
        /// </summary>
        [Output("ipProtocol")]
        public Output<string> IpProtocol { get; private set; } = null!;

        /// <summary>
        /// Indicates whether or not this load balancer can be used
        /// as a collector for packet mirroring. To prevent mirroring loops,
        /// instances behind this load balancer will not have their traffic
        /// mirrored even if a PacketMirroring rule applies to them. This
        /// can only be set to true for load balancers that have their
        /// loadBalancingScheme set to INTERNAL.
        /// </summary>
        [Output("isMirroringCollector")]
        public Output<bool?> IsMirroringCollector { get; private set; } = null!;

        /// <summary>
        /// Used internally during label updates.
        /// </summary>
        [Output("labelFingerprint")]
        public Output<string> LabelFingerprint { get; private set; } = null!;

        /// <summary>
        /// Labels to apply to this forwarding rule.  A list of key-&gt;value pairs.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// Specifies the forwarding rule type. * `EXTERNAL` is used for: * Classic Cloud VPN gateways * Protocol forwarding to VMs
        /// from an external IP address * The following load balancers: HTTP(S), SSL Proxy, TCP Proxy, and Network TCP/UDP *
        /// `INTERNAL` is used for: * Protocol forwarding to VMs from an internal IP address * Internal TCP/UDP load balancers *
        /// `INTERNAL_MANAGED` is used for: * Internal HTTP(S) load balancers * `INTERNAL_SELF_MANAGED` is used for: * Traffic
        /// Director * `EXTERNAL_MANAGED` is used for: * Global external HTTP(S) load balancers For more information about
        /// forwarding rules, refer to [Forwarding rule concepts](/load-balancing/docs/forwarding-rule-concepts). Possible values:
        /// INVALID, INTERNAL, INTERNAL_MANAGED, INTERNAL_SELF_MANAGED, EXTERNAL, EXTERNAL_MANAGED
        /// </summary>
        [Output("loadBalancingScheme")]
        public Output<string?> LoadBalancingScheme { get; private set; } = null!;

        /// <summary>
        /// Name of the resource; provided by the client when the resource is
        /// created. The name must be 1-63 characters long, and comply with
        /// RFC1035. Specifically, the name must be 1-63 characters long and match
        /// the regular expression `a-z?` which means the
        /// first character must be a lowercase letter, and all following
        /// characters must be a dash, lowercase letter, or digit, except the last
        /// character, which cannot be a dash.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// For internal load balancing, this field identifies the network that
        /// the load balanced IP should belong to for this Forwarding Rule. If
        /// this field is not specified, the default network will be used.
        /// This field is only used for INTERNAL load balancing.
        /// </summary>
        [Output("network")]
        public Output<string> Network { get; private set; } = null!;

        /// <summary>
        /// The networking tier used for configuring this address. If this field is not
        /// specified, it is assumed to be PREMIUM.
        /// Possible values are `PREMIUM` and `STANDARD`.
        /// </summary>
        [Output("networkTier")]
        public Output<string> NetworkTier { get; private set; } = null!;

        /// <summary>
        /// This field is used along with the target field for TargetHttpProxy,
        /// TargetHttpsProxy, TargetSslProxy, TargetTcpProxy, TargetVpnGateway,
        /// TargetPool, TargetInstance.
        /// Applicable only when IPProtocol is TCP, UDP, or SCTP, only packets
        /// addressed to ports in the specified range will be forwarded to target.
        /// Forwarding rules with the same [IPAddress, IPProtocol] pair must have
        /// disjoint port ranges.
        /// Some types of forwarding target have constraints on the acceptable
        /// ports:
        /// * TargetHttpProxy: 80, 8080
        /// * TargetHttpsProxy: 443
        /// * TargetTcpProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995,
        /// 1883, 5222
        /// * TargetSslProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995,
        /// 1883, 5222
        /// * TargetVpnGateway: 500, 4500
        /// </summary>
        [Output("portRange")]
        public Output<string?> PortRange { get; private set; } = null!;

        /// <summary>
        /// This field is used along with internal load balancing and network
        /// load balancer when the forwarding rule references a backend service
        /// and when protocol is not L3_DEFAULT.
        /// A single port or a comma separated list of ports can be configured.
        /// Only packets addressed to these ports will be forwarded to the backends
        /// configured with this forwarding rule.
        /// You can only use one of ports and portRange, or allPorts.
        /// The three are mutually exclusive.
        /// You may specify a maximum of up to 5 ports, which can be non-contiguous.
        /// </summary>
        [Output("ports")]
        public Output<ImmutableArray<string>> Ports { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The PSC connection id of the PSC Forwarding Rule.
        /// </summary>
        [Output("pscConnectionId")]
        public Output<string> PscConnectionId { get; private set; } = null!;

        /// <summary>
        /// The PSC connection status of the PSC Forwarding Rule. Possible values: STATUS_UNSPECIFIED, PENDING, ACCEPTED, REJECTED,
        /// CLOSED
        /// </summary>
        [Output("pscConnectionStatus")]
        public Output<string> PscConnectionStatus { get; private set; } = null!;

        /// <summary>
        /// A reference to the region where the regional forwarding rule resides.
        /// This field is not applicable to global forwarding rules.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// The URI of the created resource.
        /// </summary>
        [Output("selfLink")]
        public Output<string> SelfLink { get; private set; } = null!;

        /// <summary>
        /// Service Directory resources to register this forwarding rule with. Currently,
        /// only supports a single Service Directory resource.
        /// Structure is documented below.
        /// </summary>
        [Output("serviceDirectoryRegistrations")]
        public Output<ImmutableArray<Outputs.ForwardingRuleServiceDirectoryRegistration>> ServiceDirectoryRegistrations { get; private set; } = null!;

        /// <summary>
        /// An optional prefix to the service name for this Forwarding Rule.
        /// If specified, will be the first label of the fully qualified service
        /// name.
        /// The label must be 1-63 characters long, and comply with RFC1035.
        /// Specifically, the label must be 1-63 characters long and match the
        /// regular expression `a-z?` which means the first
        /// character must be a lowercase letter, and all following characters
        /// must be a dash, lowercase letter, or digit, except the last
        /// character, which cannot be a dash.
        /// This field is only used for INTERNAL load balancing.
        /// </summary>
        [Output("serviceLabel")]
        public Output<string?> ServiceLabel { get; private set; } = null!;

        /// <summary>
        /// [Output Only] The internal fully qualified service name for this Forwarding Rule. This field is only used for internal
        /// load balancing.
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        /// <summary>
        /// The subnetwork that the load balanced IP should belong to for this
        /// Forwarding Rule.  This field is only used for INTERNAL load balancing.
        /// If the network specified is in auto subnet mode, this field is
        /// optional. However, if the network is in custom subnet mode, a
        /// subnetwork must be specified.
        /// </summary>
        [Output("subnetwork")]
        public Output<string> Subnetwork { get; private set; } = null!;

        /// <summary>
        /// The URL of the target resource to receive the matched traffic.
        /// The target must live in the same region as the forwarding rule.
        /// The forwarded traffic must be of a type appropriate to the target
        /// object.
        /// </summary>
        [Output("target")]
        public Output<string?> Target { get; private set; } = null!;


        /// <summary>
        /// Create a ForwardingRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ForwardingRule(string name, ForwardingRuleArgs? args = null, CustomResourceOptions? options = null)
            : base("gcp:compute/forwardingRule:ForwardingRule", name, args ?? new ForwardingRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ForwardingRule(string name, Input<string> id, ForwardingRuleState? state = null, CustomResourceOptions? options = null)
            : base("gcp:compute/forwardingRule:ForwardingRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ForwardingRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ForwardingRule Get(string name, Input<string> id, ForwardingRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new ForwardingRule(name, id, state, options);
        }
    }

    public sealed class ForwardingRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// This field can be used with internal load balancer or network load balancer
        /// when the forwarding rule references a backend service, or with the target
        /// field when it references a TargetInstance. Set this to true to
        /// allow packets addressed to any ports to be forwarded to the backends configured
        /// with this forwarding rule. This can be used when the protocol is TCP/UDP, and it
        /// must be set to true when the protocol is set to L3_DEFAULT.
        /// Cannot be set if port or portRange are set.
        /// </summary>
        [Input("allPorts")]
        public Input<bool>? AllPorts { get; set; }

        /// <summary>
        /// If true, clients can access ILB from all regions.
        /// Otherwise only allows from the local region the ILB is located at.
        /// </summary>
        [Input("allowGlobalAccess")]
        public Input<bool>? AllowGlobalAccess { get; set; }

        /// <summary>
        /// A BackendService to receive the matched traffic. This is used only
        /// for INTERNAL load balancing.
        /// </summary>
        [Input("backendService")]
        public Input<string>? BackendService { get; set; }

        /// <summary>
        /// An optional description of this resource. Provide this property when
        /// you create the resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The IP address that this forwarding rule serves. When a client sends
        /// traffic to this IP address, the forwarding rule directs the traffic to
        /// the target that you specify in the forwarding rule. The
        /// loadBalancingScheme and the forwarding rule's target determine the
        /// type of IP address that you can use. For detailed information, refer
        /// to [IP address specifications](https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts#ip_address_specifications).
        /// An address can be specified either by a literal IP address or a
        /// reference to an existing Address resource. If you don't specify a
        /// reserved IP address, an ephemeral IP address is assigned.
        /// The value must be set to 0.0.0.0 when the target is a targetGrpcProxy
        /// that has validateForProxyless field set to true.
        /// For Private Service Connect forwarding rules that forward traffic to
        /// Google APIs, IP address must be provided.
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        /// <summary>
        /// The IP protocol to which this rule applies.
        /// When the load balancing scheme is INTERNAL, only TCP and UDP are
        /// valid.
        /// Possible values are `TCP`, `UDP`, `ESP`, `AH`, `SCTP`, `ICMP`, and `L3_DEFAULT`.
        /// </summary>
        [Input("ipProtocol")]
        public Input<string>? IpProtocol { get; set; }

        /// <summary>
        /// Indicates whether or not this load balancer can be used
        /// as a collector for packet mirroring. To prevent mirroring loops,
        /// instances behind this load balancer will not have their traffic
        /// mirrored even if a PacketMirroring rule applies to them. This
        /// can only be set to true for load balancers that have their
        /// loadBalancingScheme set to INTERNAL.
        /// </summary>
        [Input("isMirroringCollector")]
        public Input<bool>? IsMirroringCollector { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Labels to apply to this forwarding rule.  A list of key-&gt;value pairs.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Specifies the forwarding rule type. * `EXTERNAL` is used for: * Classic Cloud VPN gateways * Protocol forwarding to VMs
        /// from an external IP address * The following load balancers: HTTP(S), SSL Proxy, TCP Proxy, and Network TCP/UDP *
        /// `INTERNAL` is used for: * Protocol forwarding to VMs from an internal IP address * Internal TCP/UDP load balancers *
        /// `INTERNAL_MANAGED` is used for: * Internal HTTP(S) load balancers * `INTERNAL_SELF_MANAGED` is used for: * Traffic
        /// Director * `EXTERNAL_MANAGED` is used for: * Global external HTTP(S) load balancers For more information about
        /// forwarding rules, refer to [Forwarding rule concepts](/load-balancing/docs/forwarding-rule-concepts). Possible values:
        /// INVALID, INTERNAL, INTERNAL_MANAGED, INTERNAL_SELF_MANAGED, EXTERNAL, EXTERNAL_MANAGED
        /// </summary>
        [Input("loadBalancingScheme")]
        public Input<string>? LoadBalancingScheme { get; set; }

        /// <summary>
        /// Name of the resource; provided by the client when the resource is
        /// created. The name must be 1-63 characters long, and comply with
        /// RFC1035. Specifically, the name must be 1-63 characters long and match
        /// the regular expression `a-z?` which means the
        /// first character must be a lowercase letter, and all following
        /// characters must be a dash, lowercase letter, or digit, except the last
        /// character, which cannot be a dash.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// For internal load balancing, this field identifies the network that
        /// the load balanced IP should belong to for this Forwarding Rule. If
        /// this field is not specified, the default network will be used.
        /// This field is only used for INTERNAL load balancing.
        /// </summary>
        [Input("network")]
        public Input<string>? Network { get; set; }

        /// <summary>
        /// The networking tier used for configuring this address. If this field is not
        /// specified, it is assumed to be PREMIUM.
        /// Possible values are `PREMIUM` and `STANDARD`.
        /// </summary>
        [Input("networkTier")]
        public Input<string>? NetworkTier { get; set; }

        /// <summary>
        /// This field is used along with the target field for TargetHttpProxy,
        /// TargetHttpsProxy, TargetSslProxy, TargetTcpProxy, TargetVpnGateway,
        /// TargetPool, TargetInstance.
        /// Applicable only when IPProtocol is TCP, UDP, or SCTP, only packets
        /// addressed to ports in the specified range will be forwarded to target.
        /// Forwarding rules with the same [IPAddress, IPProtocol] pair must have
        /// disjoint port ranges.
        /// Some types of forwarding target have constraints on the acceptable
        /// ports:
        /// * TargetHttpProxy: 80, 8080
        /// * TargetHttpsProxy: 443
        /// * TargetTcpProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995,
        /// 1883, 5222
        /// * TargetSslProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995,
        /// 1883, 5222
        /// * TargetVpnGateway: 500, 4500
        /// </summary>
        [Input("portRange")]
        public Input<string>? PortRange { get; set; }

        [Input("ports")]
        private InputList<string>? _ports;

        /// <summary>
        /// This field is used along with internal load balancing and network
        /// load balancer when the forwarding rule references a backend service
        /// and when protocol is not L3_DEFAULT.
        /// A single port or a comma separated list of ports can be configured.
        /// Only packets addressed to these ports will be forwarded to the backends
        /// configured with this forwarding rule.
        /// You can only use one of ports and portRange, or allPorts.
        /// The three are mutually exclusive.
        /// You may specify a maximum of up to 5 ports, which can be non-contiguous.
        /// </summary>
        public InputList<string> Ports
        {
            get => _ports ?? (_ports = new InputList<string>());
            set => _ports = value;
        }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// A reference to the region where the regional forwarding rule resides.
        /// This field is not applicable to global forwarding rules.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("serviceDirectoryRegistrations")]
        private InputList<Inputs.ForwardingRuleServiceDirectoryRegistrationArgs>? _serviceDirectoryRegistrations;

        /// <summary>
        /// Service Directory resources to register this forwarding rule with. Currently,
        /// only supports a single Service Directory resource.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.ForwardingRuleServiceDirectoryRegistrationArgs> ServiceDirectoryRegistrations
        {
            get => _serviceDirectoryRegistrations ?? (_serviceDirectoryRegistrations = new InputList<Inputs.ForwardingRuleServiceDirectoryRegistrationArgs>());
            set => _serviceDirectoryRegistrations = value;
        }

        /// <summary>
        /// An optional prefix to the service name for this Forwarding Rule.
        /// If specified, will be the first label of the fully qualified service
        /// name.
        /// The label must be 1-63 characters long, and comply with RFC1035.
        /// Specifically, the label must be 1-63 characters long and match the
        /// regular expression `a-z?` which means the first
        /// character must be a lowercase letter, and all following characters
        /// must be a dash, lowercase letter, or digit, except the last
        /// character, which cannot be a dash.
        /// This field is only used for INTERNAL load balancing.
        /// </summary>
        [Input("serviceLabel")]
        public Input<string>? ServiceLabel { get; set; }

        /// <summary>
        /// The subnetwork that the load balanced IP should belong to for this
        /// Forwarding Rule.  This field is only used for INTERNAL load balancing.
        /// If the network specified is in auto subnet mode, this field is
        /// optional. However, if the network is in custom subnet mode, a
        /// subnetwork must be specified.
        /// </summary>
        [Input("subnetwork")]
        public Input<string>? Subnetwork { get; set; }

        /// <summary>
        /// The URL of the target resource to receive the matched traffic.
        /// The target must live in the same region as the forwarding rule.
        /// The forwarded traffic must be of a type appropriate to the target
        /// object.
        /// </summary>
        [Input("target")]
        public Input<string>? Target { get; set; }

        public ForwardingRuleArgs()
        {
        }
        public static new ForwardingRuleArgs Empty => new ForwardingRuleArgs();
    }

    public sealed class ForwardingRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// This field can be used with internal load balancer or network load balancer
        /// when the forwarding rule references a backend service, or with the target
        /// field when it references a TargetInstance. Set this to true to
        /// allow packets addressed to any ports to be forwarded to the backends configured
        /// with this forwarding rule. This can be used when the protocol is TCP/UDP, and it
        /// must be set to true when the protocol is set to L3_DEFAULT.
        /// Cannot be set if port or portRange are set.
        /// </summary>
        [Input("allPorts")]
        public Input<bool>? AllPorts { get; set; }

        /// <summary>
        /// If true, clients can access ILB from all regions.
        /// Otherwise only allows from the local region the ILB is located at.
        /// </summary>
        [Input("allowGlobalAccess")]
        public Input<bool>? AllowGlobalAccess { get; set; }

        /// <summary>
        /// A BackendService to receive the matched traffic. This is used only
        /// for INTERNAL load balancing.
        /// </summary>
        [Input("backendService")]
        public Input<string>? BackendService { get; set; }

        /// <summary>
        /// [Output Only] Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
        /// </summary>
        [Input("creationTimestamp")]
        public Input<string>? CreationTimestamp { get; set; }

        /// <summary>
        /// An optional description of this resource. Provide this property when
        /// you create the resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The IP address that this forwarding rule serves. When a client sends
        /// traffic to this IP address, the forwarding rule directs the traffic to
        /// the target that you specify in the forwarding rule. The
        /// loadBalancingScheme and the forwarding rule's target determine the
        /// type of IP address that you can use. For detailed information, refer
        /// to [IP address specifications](https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts#ip_address_specifications).
        /// An address can be specified either by a literal IP address or a
        /// reference to an existing Address resource. If you don't specify a
        /// reserved IP address, an ephemeral IP address is assigned.
        /// The value must be set to 0.0.0.0 when the target is a targetGrpcProxy
        /// that has validateForProxyless field set to true.
        /// For Private Service Connect forwarding rules that forward traffic to
        /// Google APIs, IP address must be provided.
        /// </summary>
        [Input("ipAddress")]
        public Input<string>? IpAddress { get; set; }

        /// <summary>
        /// The IP protocol to which this rule applies.
        /// When the load balancing scheme is INTERNAL, only TCP and UDP are
        /// valid.
        /// Possible values are `TCP`, `UDP`, `ESP`, `AH`, `SCTP`, `ICMP`, and `L3_DEFAULT`.
        /// </summary>
        [Input("ipProtocol")]
        public Input<string>? IpProtocol { get; set; }

        /// <summary>
        /// Indicates whether or not this load balancer can be used
        /// as a collector for packet mirroring. To prevent mirroring loops,
        /// instances behind this load balancer will not have their traffic
        /// mirrored even if a PacketMirroring rule applies to them. This
        /// can only be set to true for load balancers that have their
        /// loadBalancingScheme set to INTERNAL.
        /// </summary>
        [Input("isMirroringCollector")]
        public Input<bool>? IsMirroringCollector { get; set; }

        /// <summary>
        /// Used internally during label updates.
        /// </summary>
        [Input("labelFingerprint")]
        public Input<string>? LabelFingerprint { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Labels to apply to this forwarding rule.  A list of key-&gt;value pairs.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Specifies the forwarding rule type. * `EXTERNAL` is used for: * Classic Cloud VPN gateways * Protocol forwarding to VMs
        /// from an external IP address * The following load balancers: HTTP(S), SSL Proxy, TCP Proxy, and Network TCP/UDP *
        /// `INTERNAL` is used for: * Protocol forwarding to VMs from an internal IP address * Internal TCP/UDP load balancers *
        /// `INTERNAL_MANAGED` is used for: * Internal HTTP(S) load balancers * `INTERNAL_SELF_MANAGED` is used for: * Traffic
        /// Director * `EXTERNAL_MANAGED` is used for: * Global external HTTP(S) load balancers For more information about
        /// forwarding rules, refer to [Forwarding rule concepts](/load-balancing/docs/forwarding-rule-concepts). Possible values:
        /// INVALID, INTERNAL, INTERNAL_MANAGED, INTERNAL_SELF_MANAGED, EXTERNAL, EXTERNAL_MANAGED
        /// </summary>
        [Input("loadBalancingScheme")]
        public Input<string>? LoadBalancingScheme { get; set; }

        /// <summary>
        /// Name of the resource; provided by the client when the resource is
        /// created. The name must be 1-63 characters long, and comply with
        /// RFC1035. Specifically, the name must be 1-63 characters long and match
        /// the regular expression `a-z?` which means the
        /// first character must be a lowercase letter, and all following
        /// characters must be a dash, lowercase letter, or digit, except the last
        /// character, which cannot be a dash.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// For internal load balancing, this field identifies the network that
        /// the load balanced IP should belong to for this Forwarding Rule. If
        /// this field is not specified, the default network will be used.
        /// This field is only used for INTERNAL load balancing.
        /// </summary>
        [Input("network")]
        public Input<string>? Network { get; set; }

        /// <summary>
        /// The networking tier used for configuring this address. If this field is not
        /// specified, it is assumed to be PREMIUM.
        /// Possible values are `PREMIUM` and `STANDARD`.
        /// </summary>
        [Input("networkTier")]
        public Input<string>? NetworkTier { get; set; }

        /// <summary>
        /// This field is used along with the target field for TargetHttpProxy,
        /// TargetHttpsProxy, TargetSslProxy, TargetTcpProxy, TargetVpnGateway,
        /// TargetPool, TargetInstance.
        /// Applicable only when IPProtocol is TCP, UDP, or SCTP, only packets
        /// addressed to ports in the specified range will be forwarded to target.
        /// Forwarding rules with the same [IPAddress, IPProtocol] pair must have
        /// disjoint port ranges.
        /// Some types of forwarding target have constraints on the acceptable
        /// ports:
        /// * TargetHttpProxy: 80, 8080
        /// * TargetHttpsProxy: 443
        /// * TargetTcpProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995,
        /// 1883, 5222
        /// * TargetSslProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995,
        /// 1883, 5222
        /// * TargetVpnGateway: 500, 4500
        /// </summary>
        [Input("portRange")]
        public Input<string>? PortRange { get; set; }

        [Input("ports")]
        private InputList<string>? _ports;

        /// <summary>
        /// This field is used along with internal load balancing and network
        /// load balancer when the forwarding rule references a backend service
        /// and when protocol is not L3_DEFAULT.
        /// A single port or a comma separated list of ports can be configured.
        /// Only packets addressed to these ports will be forwarded to the backends
        /// configured with this forwarding rule.
        /// You can only use one of ports and portRange, or allPorts.
        /// The three are mutually exclusive.
        /// You may specify a maximum of up to 5 ports, which can be non-contiguous.
        /// </summary>
        public InputList<string> Ports
        {
            get => _ports ?? (_ports = new InputList<string>());
            set => _ports = value;
        }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The PSC connection id of the PSC Forwarding Rule.
        /// </summary>
        [Input("pscConnectionId")]
        public Input<string>? PscConnectionId { get; set; }

        /// <summary>
        /// The PSC connection status of the PSC Forwarding Rule. Possible values: STATUS_UNSPECIFIED, PENDING, ACCEPTED, REJECTED,
        /// CLOSED
        /// </summary>
        [Input("pscConnectionStatus")]
        public Input<string>? PscConnectionStatus { get; set; }

        /// <summary>
        /// A reference to the region where the regional forwarding rule resides.
        /// This field is not applicable to global forwarding rules.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The URI of the created resource.
        /// </summary>
        [Input("selfLink")]
        public Input<string>? SelfLink { get; set; }

        [Input("serviceDirectoryRegistrations")]
        private InputList<Inputs.ForwardingRuleServiceDirectoryRegistrationGetArgs>? _serviceDirectoryRegistrations;

        /// <summary>
        /// Service Directory resources to register this forwarding rule with. Currently,
        /// only supports a single Service Directory resource.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.ForwardingRuleServiceDirectoryRegistrationGetArgs> ServiceDirectoryRegistrations
        {
            get => _serviceDirectoryRegistrations ?? (_serviceDirectoryRegistrations = new InputList<Inputs.ForwardingRuleServiceDirectoryRegistrationGetArgs>());
            set => _serviceDirectoryRegistrations = value;
        }

        /// <summary>
        /// An optional prefix to the service name for this Forwarding Rule.
        /// If specified, will be the first label of the fully qualified service
        /// name.
        /// The label must be 1-63 characters long, and comply with RFC1035.
        /// Specifically, the label must be 1-63 characters long and match the
        /// regular expression `a-z?` which means the first
        /// character must be a lowercase letter, and all following characters
        /// must be a dash, lowercase letter, or digit, except the last
        /// character, which cannot be a dash.
        /// This field is only used for INTERNAL load balancing.
        /// </summary>
        [Input("serviceLabel")]
        public Input<string>? ServiceLabel { get; set; }

        /// <summary>
        /// [Output Only] The internal fully qualified service name for this Forwarding Rule. This field is only used for internal
        /// load balancing.
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        /// <summary>
        /// The subnetwork that the load balanced IP should belong to for this
        /// Forwarding Rule.  This field is only used for INTERNAL load balancing.
        /// If the network specified is in auto subnet mode, this field is
        /// optional. However, if the network is in custom subnet mode, a
        /// subnetwork must be specified.
        /// </summary>
        [Input("subnetwork")]
        public Input<string>? Subnetwork { get; set; }

        /// <summary>
        /// The URL of the target resource to receive the matched traffic.
        /// The target must live in the same region as the forwarding rule.
        /// The forwarded traffic must be of a type appropriate to the target
        /// object.
        /// </summary>
        [Input("target")]
        public Input<string>? Target { get; set; }

        public ForwardingRuleState()
        {
        }
        public static new ForwardingRuleState Empty => new ForwardingRuleState();
    }
}
