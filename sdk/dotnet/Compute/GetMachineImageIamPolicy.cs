// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute
{
    public static class GetMachineImageIamPolicy
    {
        public static Task<GetMachineImageIamPolicyResult> InvokeAsync(GetMachineImageIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMachineImageIamPolicyResult>("gcp:compute/getMachineImageIamPolicy:getMachineImageIamPolicy", args ?? new GetMachineImageIamPolicyArgs(), options.WithDefaults());

        public static Output<GetMachineImageIamPolicyResult> Invoke(GetMachineImageIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMachineImageIamPolicyResult>("gcp:compute/getMachineImageIamPolicy:getMachineImageIamPolicy", args ?? new GetMachineImageIamPolicyInvokeArgs(), options.WithDefaults());

        public static Output<GetMachineImageIamPolicyResult> Invoke(GetMachineImageIamPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMachineImageIamPolicyResult>("gcp:compute/getMachineImageIamPolicy:getMachineImageIamPolicy", args ?? new GetMachineImageIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMachineImageIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("machineImage", required: true)]
        public string MachineImage { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        public GetMachineImageIamPolicyArgs()
        {
        }
        public static new GetMachineImageIamPolicyArgs Empty => new GetMachineImageIamPolicyArgs();
    }

    public sealed class GetMachineImageIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("machineImage", required: true)]
        public Input<string> MachineImage { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetMachineImageIamPolicyInvokeArgs()
        {
        }
        public static new GetMachineImageIamPolicyInvokeArgs Empty => new GetMachineImageIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetMachineImageIamPolicyResult
    {
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string MachineImage;
        /// <summary>
        /// (Required only by `gcp.compute.MachineImageIamPolicy`) The policy data generated by
        /// a `gcp.organizations.getIAMPolicy` data source.
        /// </summary>
        public readonly string PolicyData;
        public readonly string Project;

        [OutputConstructor]
        private GetMachineImageIamPolicyResult(
            string etag,

            string id,

            string machineImage,

            string policyData,

            string project)
        {
            Etag = etag;
            Id = id;
            MachineImage = machineImage;
            PolicyData = policyData;
            Project = project;
        }
    }
}
