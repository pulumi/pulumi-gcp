// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute
{
    /// <summary>
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/compute_health_check.html.markdown.
    /// </summary>
    public partial class HealthCheck : Pulumi.CustomResource
    {
        [Output("checkIntervalSec")]
        public Output<int?> CheckIntervalSec { get; private set; } = null!;

        [Output("creationTimestamp")]
        public Output<string> CreationTimestamp { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("healthyThreshold")]
        public Output<int?> HealthyThreshold { get; private set; } = null!;

        [Output("http2HealthCheck")]
        public Output<Outputs.HealthCheckHttp2HealthCheck?> Http2HealthCheck { get; private set; } = null!;

        [Output("httpHealthCheck")]
        public Output<Outputs.HealthCheckHttpHealthCheck?> HttpHealthCheck { get; private set; } = null!;

        [Output("httpsHealthCheck")]
        public Output<Outputs.HealthCheckHttpsHealthCheck?> HttpsHealthCheck { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The URI of the created resource.
        /// </summary>
        [Output("selfLink")]
        public Output<string> SelfLink { get; private set; } = null!;

        [Output("sslHealthCheck")]
        public Output<Outputs.HealthCheckSslHealthCheck?> SslHealthCheck { get; private set; } = null!;

        [Output("tcpHealthCheck")]
        public Output<Outputs.HealthCheckTcpHealthCheck?> TcpHealthCheck { get; private set; } = null!;

        [Output("timeoutSec")]
        public Output<int?> TimeoutSec { get; private set; } = null!;

        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        [Output("unhealthyThreshold")]
        public Output<int?> UnhealthyThreshold { get; private set; } = null!;


        /// <summary>
        /// Create a HealthCheck resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public HealthCheck(string name, HealthCheckArgs? args = null, CustomResourceOptions? options = null)
            : base("gcp:compute/healthCheck:HealthCheck", name, args, MakeResourceOptions(options, ""))
        {
        }

        private HealthCheck(string name, Input<string> id, HealthCheckState? state = null, CustomResourceOptions? options = null)
            : base("gcp:compute/healthCheck:HealthCheck", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing HealthCheck resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static HealthCheck Get(string name, Input<string> id, HealthCheckState? state = null, CustomResourceOptions? options = null)
        {
            return new HealthCheck(name, id, state, options);
        }
    }

    public sealed class HealthCheckArgs : Pulumi.ResourceArgs
    {
        [Input("checkIntervalSec")]
        public Input<int>? CheckIntervalSec { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("healthyThreshold")]
        public Input<int>? HealthyThreshold { get; set; }

        [Input("http2HealthCheck")]
        public Input<Inputs.HealthCheckHttp2HealthCheckArgs>? Http2HealthCheck { get; set; }

        [Input("httpHealthCheck")]
        public Input<Inputs.HealthCheckHttpHealthCheckArgs>? HttpHealthCheck { get; set; }

        [Input("httpsHealthCheck")]
        public Input<Inputs.HealthCheckHttpsHealthCheckArgs>? HttpsHealthCheck { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("sslHealthCheck")]
        public Input<Inputs.HealthCheckSslHealthCheckArgs>? SslHealthCheck { get; set; }

        [Input("tcpHealthCheck")]
        public Input<Inputs.HealthCheckTcpHealthCheckArgs>? TcpHealthCheck { get; set; }

        [Input("timeoutSec")]
        public Input<int>? TimeoutSec { get; set; }

        [Input("unhealthyThreshold")]
        public Input<int>? UnhealthyThreshold { get; set; }

        public HealthCheckArgs()
        {
        }
    }

    public sealed class HealthCheckState : Pulumi.ResourceArgs
    {
        [Input("checkIntervalSec")]
        public Input<int>? CheckIntervalSec { get; set; }

        [Input("creationTimestamp")]
        public Input<string>? CreationTimestamp { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("healthyThreshold")]
        public Input<int>? HealthyThreshold { get; set; }

        [Input("http2HealthCheck")]
        public Input<Inputs.HealthCheckHttp2HealthCheckGetArgs>? Http2HealthCheck { get; set; }

        [Input("httpHealthCheck")]
        public Input<Inputs.HealthCheckHttpHealthCheckGetArgs>? HttpHealthCheck { get; set; }

        [Input("httpsHealthCheck")]
        public Input<Inputs.HealthCheckHttpsHealthCheckGetArgs>? HttpsHealthCheck { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The URI of the created resource.
        /// </summary>
        [Input("selfLink")]
        public Input<string>? SelfLink { get; set; }

        [Input("sslHealthCheck")]
        public Input<Inputs.HealthCheckSslHealthCheckGetArgs>? SslHealthCheck { get; set; }

        [Input("tcpHealthCheck")]
        public Input<Inputs.HealthCheckTcpHealthCheckGetArgs>? TcpHealthCheck { get; set; }

        [Input("timeoutSec")]
        public Input<int>? TimeoutSec { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("unhealthyThreshold")]
        public Input<int>? UnhealthyThreshold { get; set; }

        public HealthCheckState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class HealthCheckHttp2HealthCheckArgs : Pulumi.ResourceArgs
    {
        [Input("host")]
        public Input<string>? Host { get; set; }

        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("portName")]
        public Input<string>? PortName { get; set; }

        [Input("portSpecification")]
        public Input<string>? PortSpecification { get; set; }

        [Input("proxyHeader")]
        public Input<string>? ProxyHeader { get; set; }

        [Input("requestPath")]
        public Input<string>? RequestPath { get; set; }

        [Input("response")]
        public Input<string>? Response { get; set; }

        public HealthCheckHttp2HealthCheckArgs()
        {
        }
    }

    public sealed class HealthCheckHttp2HealthCheckGetArgs : Pulumi.ResourceArgs
    {
        [Input("host")]
        public Input<string>? Host { get; set; }

        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("portName")]
        public Input<string>? PortName { get; set; }

        [Input("portSpecification")]
        public Input<string>? PortSpecification { get; set; }

        [Input("proxyHeader")]
        public Input<string>? ProxyHeader { get; set; }

        [Input("requestPath")]
        public Input<string>? RequestPath { get; set; }

        [Input("response")]
        public Input<string>? Response { get; set; }

        public HealthCheckHttp2HealthCheckGetArgs()
        {
        }
    }

    public sealed class HealthCheckHttpHealthCheckArgs : Pulumi.ResourceArgs
    {
        [Input("host")]
        public Input<string>? Host { get; set; }

        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("portName")]
        public Input<string>? PortName { get; set; }

        [Input("portSpecification")]
        public Input<string>? PortSpecification { get; set; }

        [Input("proxyHeader")]
        public Input<string>? ProxyHeader { get; set; }

        [Input("requestPath")]
        public Input<string>? RequestPath { get; set; }

        [Input("response")]
        public Input<string>? Response { get; set; }

        public HealthCheckHttpHealthCheckArgs()
        {
        }
    }

    public sealed class HealthCheckHttpHealthCheckGetArgs : Pulumi.ResourceArgs
    {
        [Input("host")]
        public Input<string>? Host { get; set; }

        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("portName")]
        public Input<string>? PortName { get; set; }

        [Input("portSpecification")]
        public Input<string>? PortSpecification { get; set; }

        [Input("proxyHeader")]
        public Input<string>? ProxyHeader { get; set; }

        [Input("requestPath")]
        public Input<string>? RequestPath { get; set; }

        [Input("response")]
        public Input<string>? Response { get; set; }

        public HealthCheckHttpHealthCheckGetArgs()
        {
        }
    }

    public sealed class HealthCheckHttpsHealthCheckArgs : Pulumi.ResourceArgs
    {
        [Input("host")]
        public Input<string>? Host { get; set; }

        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("portName")]
        public Input<string>? PortName { get; set; }

        [Input("portSpecification")]
        public Input<string>? PortSpecification { get; set; }

        [Input("proxyHeader")]
        public Input<string>? ProxyHeader { get; set; }

        [Input("requestPath")]
        public Input<string>? RequestPath { get; set; }

        [Input("response")]
        public Input<string>? Response { get; set; }

        public HealthCheckHttpsHealthCheckArgs()
        {
        }
    }

    public sealed class HealthCheckHttpsHealthCheckGetArgs : Pulumi.ResourceArgs
    {
        [Input("host")]
        public Input<string>? Host { get; set; }

        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("portName")]
        public Input<string>? PortName { get; set; }

        [Input("portSpecification")]
        public Input<string>? PortSpecification { get; set; }

        [Input("proxyHeader")]
        public Input<string>? ProxyHeader { get; set; }

        [Input("requestPath")]
        public Input<string>? RequestPath { get; set; }

        [Input("response")]
        public Input<string>? Response { get; set; }

        public HealthCheckHttpsHealthCheckGetArgs()
        {
        }
    }

    public sealed class HealthCheckSslHealthCheckArgs : Pulumi.ResourceArgs
    {
        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("portName")]
        public Input<string>? PortName { get; set; }

        [Input("portSpecification")]
        public Input<string>? PortSpecification { get; set; }

        [Input("proxyHeader")]
        public Input<string>? ProxyHeader { get; set; }

        [Input("request")]
        public Input<string>? Request { get; set; }

        [Input("response")]
        public Input<string>? Response { get; set; }

        public HealthCheckSslHealthCheckArgs()
        {
        }
    }

    public sealed class HealthCheckSslHealthCheckGetArgs : Pulumi.ResourceArgs
    {
        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("portName")]
        public Input<string>? PortName { get; set; }

        [Input("portSpecification")]
        public Input<string>? PortSpecification { get; set; }

        [Input("proxyHeader")]
        public Input<string>? ProxyHeader { get; set; }

        [Input("request")]
        public Input<string>? Request { get; set; }

        [Input("response")]
        public Input<string>? Response { get; set; }

        public HealthCheckSslHealthCheckGetArgs()
        {
        }
    }

    public sealed class HealthCheckTcpHealthCheckArgs : Pulumi.ResourceArgs
    {
        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("portName")]
        public Input<string>? PortName { get; set; }

        [Input("portSpecification")]
        public Input<string>? PortSpecification { get; set; }

        [Input("proxyHeader")]
        public Input<string>? ProxyHeader { get; set; }

        [Input("request")]
        public Input<string>? Request { get; set; }

        [Input("response")]
        public Input<string>? Response { get; set; }

        public HealthCheckTcpHealthCheckArgs()
        {
        }
    }

    public sealed class HealthCheckTcpHealthCheckGetArgs : Pulumi.ResourceArgs
    {
        [Input("port")]
        public Input<int>? Port { get; set; }

        [Input("portName")]
        public Input<string>? PortName { get; set; }

        [Input("portSpecification")]
        public Input<string>? PortSpecification { get; set; }

        [Input("proxyHeader")]
        public Input<string>? ProxyHeader { get; set; }

        [Input("request")]
        public Input<string>? Request { get; set; }

        [Input("response")]
        public Input<string>? Response { get; set; }

        public HealthCheckTcpHealthCheckGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class HealthCheckHttp2HealthCheck
    {
        public readonly string? Host;
        public readonly int? Port;
        public readonly string? PortName;
        public readonly string? PortSpecification;
        public readonly string? ProxyHeader;
        public readonly string? RequestPath;
        public readonly string? Response;

        [OutputConstructor]
        private HealthCheckHttp2HealthCheck(
            string? host,
            int? port,
            string? portName,
            string? portSpecification,
            string? proxyHeader,
            string? requestPath,
            string? response)
        {
            Host = host;
            Port = port;
            PortName = portName;
            PortSpecification = portSpecification;
            ProxyHeader = proxyHeader;
            RequestPath = requestPath;
            Response = response;
        }
    }

    [OutputType]
    public sealed class HealthCheckHttpHealthCheck
    {
        public readonly string? Host;
        public readonly int? Port;
        public readonly string? PortName;
        public readonly string? PortSpecification;
        public readonly string? ProxyHeader;
        public readonly string? RequestPath;
        public readonly string? Response;

        [OutputConstructor]
        private HealthCheckHttpHealthCheck(
            string? host,
            int? port,
            string? portName,
            string? portSpecification,
            string? proxyHeader,
            string? requestPath,
            string? response)
        {
            Host = host;
            Port = port;
            PortName = portName;
            PortSpecification = portSpecification;
            ProxyHeader = proxyHeader;
            RequestPath = requestPath;
            Response = response;
        }
    }

    [OutputType]
    public sealed class HealthCheckHttpsHealthCheck
    {
        public readonly string? Host;
        public readonly int? Port;
        public readonly string? PortName;
        public readonly string? PortSpecification;
        public readonly string? ProxyHeader;
        public readonly string? RequestPath;
        public readonly string? Response;

        [OutputConstructor]
        private HealthCheckHttpsHealthCheck(
            string? host,
            int? port,
            string? portName,
            string? portSpecification,
            string? proxyHeader,
            string? requestPath,
            string? response)
        {
            Host = host;
            Port = port;
            PortName = portName;
            PortSpecification = portSpecification;
            ProxyHeader = proxyHeader;
            RequestPath = requestPath;
            Response = response;
        }
    }

    [OutputType]
    public sealed class HealthCheckSslHealthCheck
    {
        public readonly int? Port;
        public readonly string? PortName;
        public readonly string? PortSpecification;
        public readonly string? ProxyHeader;
        public readonly string? Request;
        public readonly string? Response;

        [OutputConstructor]
        private HealthCheckSslHealthCheck(
            int? port,
            string? portName,
            string? portSpecification,
            string? proxyHeader,
            string? request,
            string? response)
        {
            Port = port;
            PortName = portName;
            PortSpecification = portSpecification;
            ProxyHeader = proxyHeader;
            Request = request;
            Response = response;
        }
    }

    [OutputType]
    public sealed class HealthCheckTcpHealthCheck
    {
        public readonly int? Port;
        public readonly string? PortName;
        public readonly string? PortSpecification;
        public readonly string? ProxyHeader;
        public readonly string? Request;
        public readonly string? Response;

        [OutputConstructor]
        private HealthCheckTcpHealthCheck(
            int? port,
            string? portName,
            string? portSpecification,
            string? proxyHeader,
            string? request,
            string? response)
        {
            Port = port;
            PortName = portName;
            PortSpecification = portSpecification;
            ProxyHeader = proxyHeader;
            Request = request;
            Response = response;
        }
    }
    }
}
