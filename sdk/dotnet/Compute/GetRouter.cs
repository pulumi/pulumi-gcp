// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute
{
    public static class GetRouter
    {
        /// <summary>
        /// Get a router within GCE from its name and VPC.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var my_router = Output.Create(Gcp.Compute.GetRouter.InvokeAsync(new Gcp.Compute.GetRouterArgs
        ///         {
        ///             Name = "myrouter-us-east1",
        ///             Network = "my-network",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// 
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetRouterResult> InvokeAsync(GetRouterArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRouterResult>("gcp:compute/getRouter:getRouter", args ?? new GetRouterArgs(), options.WithVersion());
    }


    public sealed class GetRouterArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the router.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The VPC network on which this router lives.
        /// </summary>
        [Input("network", required: true)]
        public string Network { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource
        /// belongs. If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        /// <summary>
        /// The region this router has been created in. If
        /// unspecified, this defaults to the region configured in the provider.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        public GetRouterArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetRouterResult
    {
        public readonly ImmutableArray<Outputs.GetRouterBgpResult> Bgps;
        public readonly string CreationTimestamp;
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string Network;
        public readonly string? Project;
        public readonly string? Region;
        public readonly string SelfLink;

        [OutputConstructor]
        private GetRouterResult(
            ImmutableArray<Outputs.GetRouterBgpResult> bgps,

            string creationTimestamp,

            string description,

            string id,

            string name,

            string network,

            string? project,

            string? region,

            string selfLink)
        {
            Bgps = bgps;
            CreationTimestamp = creationTimestamp;
            Description = description;
            Id = id;
            Name = name;
            Network = network;
            Project = project;
            Region = region;
            SelfLink = selfLink;
        }
    }
}
