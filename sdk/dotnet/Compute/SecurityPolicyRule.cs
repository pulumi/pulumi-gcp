// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute
{
    /// <summary>
    /// A rule for the SecurityPolicy.
    /// 
    /// To get more information about SecurityPolicyRule, see:
    /// 
    /// * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/securityPolicies/addRule)
    /// * How-to Guides
    ///     * [Creating global security policy rules](https://cloud.google.com/armor/docs/configure-security-policies)
    /// 
    /// ## Example Usage
    /// 
    /// ### Security Policy Rule Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @default = new Gcp.Compute.SecurityPolicy("default", new()
    ///     {
    ///         Name = "policyruletest",
    ///         Description = "basic global security policy",
    ///         Type = "CLOUD_ARMOR",
    ///     });
    /// 
    ///     var policyRule = new Gcp.Compute.SecurityPolicyRule("policy_rule", new()
    ///     {
    ///         SecurityPolicy = @default.Name,
    ///         Description = "new rule",
    ///         Priority = 100,
    ///         Match = new Gcp.Compute.Inputs.SecurityPolicyRuleMatchArgs
    ///         {
    ///             VersionedExpr = "SRC_IPS_V1",
    ///             Config = new Gcp.Compute.Inputs.SecurityPolicyRuleMatchConfigArgs
    ///             {
    ///                 SrcIpRanges = new[]
    ///                 {
    ///                     "10.10.0.0/16",
    ///                 },
    ///             },
    ///         },
    ///         Action = "allow",
    ///         Preview = true,
    ///     });
    /// 
    /// });
    /// ```
    /// ### Security Policy Rule Default Rule
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @default = new Gcp.Compute.SecurityPolicy("default", new()
    ///     {
    ///         Name = "policyruletest",
    ///         Description = "basic global security policy",
    ///         Type = "CLOUD_ARMOR",
    ///     });
    /// 
    ///     // A default rule is generated when creating the security_policy resource, import is needed to patch it
    ///     // import {
    ///     //   id = "projects//global/securityPolicies/policyruletest/priority/2147483647"
    ///     //   to = google_compute_security_policy_rule.default_rule
    ///     // }
    ///     var defaultRule = new Gcp.Compute.SecurityPolicyRule("default_rule", new()
    ///     {
    ///         SecurityPolicy = @default.Name,
    ///         Description = "default rule",
    ///         Action = "allow",
    ///         Priority = 2147483647,
    ///         Match = new Gcp.Compute.Inputs.SecurityPolicyRuleMatchArgs
    ///         {
    ///             VersionedExpr = "SRC_IPS_V1",
    ///             Config = new Gcp.Compute.Inputs.SecurityPolicyRuleMatchConfigArgs
    ///             {
    ///                 SrcIpRanges = new[]
    ///                 {
    ///                     "*",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    ///     var policyRule = new Gcp.Compute.SecurityPolicyRule("policy_rule", new()
    ///     {
    ///         SecurityPolicy = @default.Name,
    ///         Description = "new rule",
    ///         Priority = 100,
    ///         Match = new Gcp.Compute.Inputs.SecurityPolicyRuleMatchArgs
    ///         {
    ///             VersionedExpr = "SRC_IPS_V1",
    ///             Config = new Gcp.Compute.Inputs.SecurityPolicyRuleMatchConfigArgs
    ///             {
    ///                 SrcIpRanges = new[]
    ///                 {
    ///                     "10.10.0.0/16",
    ///                 },
    ///             },
    ///         },
    ///         Action = "allow",
    ///         Preview = true,
    ///     });
    /// 
    /// });
    /// ```
    /// ### Security Policy Rule Multiple Rules
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @default = new Gcp.Compute.SecurityPolicy("default", new()
    ///     {
    ///         Name = "policywithmultiplerules",
    ///         Description = "basic global security policy",
    ///         Type = "CLOUD_ARMOR",
    ///     });
    /// 
    ///     var policyRuleOne = new Gcp.Compute.SecurityPolicyRule("policy_rule_one", new()
    ///     {
    ///         SecurityPolicy = @default.Name,
    ///         Description = "new rule one",
    ///         Priority = 100,
    ///         Match = new Gcp.Compute.Inputs.SecurityPolicyRuleMatchArgs
    ///         {
    ///             VersionedExpr = "SRC_IPS_V1",
    ///             Config = new Gcp.Compute.Inputs.SecurityPolicyRuleMatchConfigArgs
    ///             {
    ///                 SrcIpRanges = new[]
    ///                 {
    ///                     "10.10.0.0/16",
    ///                 },
    ///             },
    ///         },
    ///         Action = "allow",
    ///         Preview = true,
    ///     });
    /// 
    ///     var policyRuleTwo = new Gcp.Compute.SecurityPolicyRule("policy_rule_two", new()
    ///     {
    ///         SecurityPolicy = @default.Name,
    ///         Description = "new rule two",
    ///         Priority = 101,
    ///         Match = new Gcp.Compute.Inputs.SecurityPolicyRuleMatchArgs
    ///         {
    ///             VersionedExpr = "SRC_IPS_V1",
    ///             Config = new Gcp.Compute.Inputs.SecurityPolicyRuleMatchConfigArgs
    ///             {
    ///                 SrcIpRanges = new[]
    ///                 {
    ///                     "192.168.0.0/16",
    ///                     "10.0.0.0/8",
    ///                 },
    ///             },
    ///         },
    ///         Action = "allow",
    ///         Preview = true,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// SecurityPolicyRule can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/global/securityPolicies/{{security_policy}}/priority/{{priority}}`
    /// 
    /// * `{{project}}/{{security_policy}}/{{priority}}`
    /// 
    /// * `{{security_policy}}/{{priority}}`
    /// 
    /// When using the `pulumi import` command, SecurityPolicyRule can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:compute/securityPolicyRule:SecurityPolicyRule default projects/{{project}}/global/securityPolicies/{{security_policy}}/priority/{{priority}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:compute/securityPolicyRule:SecurityPolicyRule default {{project}}/{{security_policy}}/{{priority}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:compute/securityPolicyRule:SecurityPolicyRule default {{security_policy}}/{{priority}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:compute/securityPolicyRule:SecurityPolicyRule")]
    public partial class SecurityPolicyRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Action to perform when the rule is matched. The following are the valid actions:
        /// * allow: allow access to target.
        /// * deny(STATUS): deny access to target, returns the HTTP response code specified. Valid values for STATUS are 403, 404, and 502.
        /// * rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the threshold. Configure parameters for this action in RateLimitOptions. Requires rateLimitOptions to be set.
        /// * redirect: redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via a 302 response. Parameters for this action can be configured via redirectOptions. This action is only supported in Global Security Policies of type CLOUD_ARMOR.
        /// * throttle: limit client traffic to the configured threshold. Configure parameters for this action in rateLimitOptions. Requires rateLimitOptions to be set for this.
        /// </summary>
        [Output("action")]
        public Output<string> Action { get; private set; } = null!;

        /// <summary>
        /// An optional description of this resource. Provide this property when you create the resource.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// A match condition that incoming traffic is evaluated against.
        /// If it evaluates to true, the corresponding 'action' is enforced.
        /// Structure is documented below.
        /// </summary>
        [Output("match")]
        public Output<Outputs.SecurityPolicyRuleMatch?> Match { get; private set; } = null!;

        /// <summary>
        /// Preconfigured WAF configuration to be applied for the rule.
        /// If the rule does not evaluate preconfigured WAF rules, i.e., if evaluatePreconfiguredWaf() is not used, this field will have no effect.
        /// Structure is documented below.
        /// </summary>
        [Output("preconfiguredWafConfig")]
        public Output<Outputs.SecurityPolicyRulePreconfiguredWafConfig?> PreconfiguredWafConfig { get; private set; } = null!;

        /// <summary>
        /// If set to true, the specified action is not enforced.
        /// </summary>
        [Output("preview")]
        public Output<bool?> Preview { get; private set; } = null!;

        /// <summary>
        /// An integer indicating the priority of a rule in the list.
        /// The priority must be a positive value between 0 and 2147483647.
        /// Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.
        /// </summary>
        [Output("priority")]
        public Output<int> Priority { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The name of the security policy this rule belongs to.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Output("securityPolicy")]
        public Output<string> SecurityPolicy { get; private set; } = null!;


        /// <summary>
        /// Create a SecurityPolicyRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SecurityPolicyRule(string name, SecurityPolicyRuleArgs args, CustomResourceOptions? options = null)
            : base("gcp:compute/securityPolicyRule:SecurityPolicyRule", name, args ?? new SecurityPolicyRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SecurityPolicyRule(string name, Input<string> id, SecurityPolicyRuleState? state = null, CustomResourceOptions? options = null)
            : base("gcp:compute/securityPolicyRule:SecurityPolicyRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SecurityPolicyRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SecurityPolicyRule Get(string name, Input<string> id, SecurityPolicyRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new SecurityPolicyRule(name, id, state, options);
        }
    }

    public sealed class SecurityPolicyRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Action to perform when the rule is matched. The following are the valid actions:
        /// * allow: allow access to target.
        /// * deny(STATUS): deny access to target, returns the HTTP response code specified. Valid values for STATUS are 403, 404, and 502.
        /// * rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the threshold. Configure parameters for this action in RateLimitOptions. Requires rateLimitOptions to be set.
        /// * redirect: redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via a 302 response. Parameters for this action can be configured via redirectOptions. This action is only supported in Global Security Policies of type CLOUD_ARMOR.
        /// * throttle: limit client traffic to the configured threshold. Configure parameters for this action in rateLimitOptions. Requires rateLimitOptions to be set for this.
        /// </summary>
        [Input("action", required: true)]
        public Input<string> Action { get; set; } = null!;

        /// <summary>
        /// An optional description of this resource. Provide this property when you create the resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// A match condition that incoming traffic is evaluated against.
        /// If it evaluates to true, the corresponding 'action' is enforced.
        /// Structure is documented below.
        /// </summary>
        [Input("match")]
        public Input<Inputs.SecurityPolicyRuleMatchArgs>? Match { get; set; }

        /// <summary>
        /// Preconfigured WAF configuration to be applied for the rule.
        /// If the rule does not evaluate preconfigured WAF rules, i.e., if evaluatePreconfiguredWaf() is not used, this field will have no effect.
        /// Structure is documented below.
        /// </summary>
        [Input("preconfiguredWafConfig")]
        public Input<Inputs.SecurityPolicyRulePreconfiguredWafConfigArgs>? PreconfiguredWafConfig { get; set; }

        /// <summary>
        /// If set to true, the specified action is not enforced.
        /// </summary>
        [Input("preview")]
        public Input<bool>? Preview { get; set; }

        /// <summary>
        /// An integer indicating the priority of a rule in the list.
        /// The priority must be a positive value between 0 and 2147483647.
        /// Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.
        /// </summary>
        [Input("priority", required: true)]
        public Input<int> Priority { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The name of the security policy this rule belongs to.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("securityPolicy", required: true)]
        public Input<string> SecurityPolicy { get; set; } = null!;

        public SecurityPolicyRuleArgs()
        {
        }
        public static new SecurityPolicyRuleArgs Empty => new SecurityPolicyRuleArgs();
    }

    public sealed class SecurityPolicyRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Action to perform when the rule is matched. The following are the valid actions:
        /// * allow: allow access to target.
        /// * deny(STATUS): deny access to target, returns the HTTP response code specified. Valid values for STATUS are 403, 404, and 502.
        /// * rate_based_ban: limit client traffic to the configured threshold and ban the client if the traffic exceeds the threshold. Configure parameters for this action in RateLimitOptions. Requires rateLimitOptions to be set.
        /// * redirect: redirect to a different target. This can either be an internal reCAPTCHA redirect, or an external URL-based redirect via a 302 response. Parameters for this action can be configured via redirectOptions. This action is only supported in Global Security Policies of type CLOUD_ARMOR.
        /// * throttle: limit client traffic to the configured threshold. Configure parameters for this action in rateLimitOptions. Requires rateLimitOptions to be set for this.
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        /// <summary>
        /// An optional description of this resource. Provide this property when you create the resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// A match condition that incoming traffic is evaluated against.
        /// If it evaluates to true, the corresponding 'action' is enforced.
        /// Structure is documented below.
        /// </summary>
        [Input("match")]
        public Input<Inputs.SecurityPolicyRuleMatchGetArgs>? Match { get; set; }

        /// <summary>
        /// Preconfigured WAF configuration to be applied for the rule.
        /// If the rule does not evaluate preconfigured WAF rules, i.e., if evaluatePreconfiguredWaf() is not used, this field will have no effect.
        /// Structure is documented below.
        /// </summary>
        [Input("preconfiguredWafConfig")]
        public Input<Inputs.SecurityPolicyRulePreconfiguredWafConfigGetArgs>? PreconfiguredWafConfig { get; set; }

        /// <summary>
        /// If set to true, the specified action is not enforced.
        /// </summary>
        [Input("preview")]
        public Input<bool>? Preview { get; set; }

        /// <summary>
        /// An integer indicating the priority of a rule in the list.
        /// The priority must be a positive value between 0 and 2147483647.
        /// Rules are evaluated from highest to lowest priority where 0 is the highest priority and 2147483647 is the lowest priority.
        /// </summary>
        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The name of the security policy this rule belongs to.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("securityPolicy")]
        public Input<string>? SecurityPolicy { get; set; }

        public SecurityPolicyRuleState()
        {
        }
        public static new SecurityPolicyRuleState Empty => new SecurityPolicyRuleState();
    }
}
