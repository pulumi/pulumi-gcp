// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute
{
    public static class GetSubnetworkIamPolicy
    {
        /// <summary>
        /// Retrieves the current IAM policy data for subnetwork
        /// 
        /// 
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Compute.GetSubnetworkIamPolicy.Invoke(new()
        ///     {
        ///         Project = google_compute_subnetwork.Network_with_private_secondary_ip_ranges.Project,
        ///         Region = google_compute_subnetwork.Network_with_private_secondary_ip_ranges.Region,
        ///         Subnetwork = google_compute_subnetwork.Network_with_private_secondary_ip_ranges.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSubnetworkIamPolicyResult> InvokeAsync(GetSubnetworkIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSubnetworkIamPolicyResult>("gcp:compute/getSubnetworkIamPolicy:getSubnetworkIamPolicy", args ?? new GetSubnetworkIamPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the current IAM policy data for subnetwork
        /// 
        /// 
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Compute.GetSubnetworkIamPolicy.Invoke(new()
        ///     {
        ///         Project = google_compute_subnetwork.Network_with_private_secondary_ip_ranges.Project,
        ///         Region = google_compute_subnetwork.Network_with_private_secondary_ip_ranges.Region,
        ///         Subnetwork = google_compute_subnetwork.Network_with_private_secondary_ip_ranges.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSubnetworkIamPolicyResult> Invoke(GetSubnetworkIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSubnetworkIamPolicyResult>("gcp:compute/getSubnetworkIamPolicy:getSubnetworkIamPolicy", args ?? new GetSubnetworkIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSubnetworkIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        /// <summary>
        /// The GCP region for this subnetwork.
        /// Used to find the parent resource to bind the IAM policy to. If not specified,
        /// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
        /// region is specified, it is taken from the provider configuration.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("subnetwork", required: true)]
        public string Subnetwork { get; set; } = null!;

        public GetSubnetworkIamPolicyArgs()
        {
        }
        public static new GetSubnetworkIamPolicyArgs Empty => new GetSubnetworkIamPolicyArgs();
    }

    public sealed class GetSubnetworkIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The GCP region for this subnetwork.
        /// Used to find the parent resource to bind the IAM policy to. If not specified,
        /// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
        /// region is specified, it is taken from the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("subnetwork", required: true)]
        public Input<string> Subnetwork { get; set; } = null!;

        public GetSubnetworkIamPolicyInvokeArgs()
        {
        }
        public static new GetSubnetworkIamPolicyInvokeArgs Empty => new GetSubnetworkIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetSubnetworkIamPolicyResult
    {
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (Required only by `gcp.compute.SubnetworkIAMPolicy`) The policy data generated by
        /// a `gcp.organizations.getIAMPolicy` data source.
        /// </summary>
        public readonly string PolicyData;
        public readonly string Project;
        public readonly string Region;
        public readonly string Subnetwork;

        [OutputConstructor]
        private GetSubnetworkIamPolicyResult(
            string etag,

            string id,

            string policyData,

            string project,

            string region,

            string subnetwork)
        {
            Etag = etag;
            Id = id;
            PolicyData = policyData;
            Project = project;
            Region = region;
            Subnetwork = subnetwork;
        }
    }
}
