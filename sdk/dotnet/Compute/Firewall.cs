// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute
{
    /// <summary>
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/compute_firewall.html.markdown.
    /// </summary>
    public partial class Firewall : Pulumi.CustomResource
    {
        [Output("allows")]
        public Output<ImmutableArray<Outputs.FirewallAllows>> Allows { get; private set; } = null!;

        [Output("creationTimestamp")]
        public Output<string> CreationTimestamp { get; private set; } = null!;

        [Output("denies")]
        public Output<ImmutableArray<Outputs.FirewallDenies>> Denies { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("destinationRanges")]
        public Output<ImmutableArray<string>> DestinationRanges { get; private set; } = null!;

        [Output("direction")]
        public Output<string> Direction { get; private set; } = null!;

        [Output("disabled")]
        public Output<bool?> Disabled { get; private set; } = null!;

        [Output("enableLogging")]
        public Output<bool?> EnableLogging { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("network")]
        public Output<string> Network { get; private set; } = null!;

        [Output("priority")]
        public Output<int?> Priority { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The URI of the created resource.
        /// </summary>
        [Output("selfLink")]
        public Output<string> SelfLink { get; private set; } = null!;

        [Output("sourceRanges")]
        public Output<ImmutableArray<string>> SourceRanges { get; private set; } = null!;

        [Output("sourceServiceAccounts")]
        public Output<ImmutableArray<string>> SourceServiceAccounts { get; private set; } = null!;

        [Output("sourceTags")]
        public Output<ImmutableArray<string>> SourceTags { get; private set; } = null!;

        [Output("targetServiceAccounts")]
        public Output<ImmutableArray<string>> TargetServiceAccounts { get; private set; } = null!;

        [Output("targetTags")]
        public Output<ImmutableArray<string>> TargetTags { get; private set; } = null!;


        /// <summary>
        /// Create a Firewall resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Firewall(string name, FirewallArgs args, CustomResourceOptions? options = null)
            : base("gcp:compute/firewall:Firewall", name, args, MakeResourceOptions(options, ""))
        {
        }

        private Firewall(string name, Input<string> id, FirewallState? state = null, CustomResourceOptions? options = null)
            : base("gcp:compute/firewall:Firewall", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Firewall resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Firewall Get(string name, Input<string> id, FirewallState? state = null, CustomResourceOptions? options = null)
        {
            return new Firewall(name, id, state, options);
        }
    }

    public sealed class FirewallArgs : Pulumi.ResourceArgs
    {
        [Input("allows")]
        private InputList<Inputs.FirewallAllowsArgs>? _allows;
        public InputList<Inputs.FirewallAllowsArgs> Allows
        {
            get => _allows ?? (_allows = new InputList<Inputs.FirewallAllowsArgs>());
            set => _allows = value;
        }

        [Input("denies")]
        private InputList<Inputs.FirewallDeniesArgs>? _denies;
        public InputList<Inputs.FirewallDeniesArgs> Denies
        {
            get => _denies ?? (_denies = new InputList<Inputs.FirewallDeniesArgs>());
            set => _denies = value;
        }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("destinationRanges")]
        private InputList<string>? _destinationRanges;
        public InputList<string> DestinationRanges
        {
            get => _destinationRanges ?? (_destinationRanges = new InputList<string>());
            set => _destinationRanges = value;
        }

        [Input("direction")]
        public Input<string>? Direction { get; set; }

        [Input("disabled")]
        public Input<bool>? Disabled { get; set; }

        [Input("enableLogging")]
        public Input<bool>? EnableLogging { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("network", required: true)]
        public Input<string> Network { get; set; } = null!;

        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("sourceRanges")]
        private InputList<string>? _sourceRanges;
        public InputList<string> SourceRanges
        {
            get => _sourceRanges ?? (_sourceRanges = new InputList<string>());
            set => _sourceRanges = value;
        }

        [Input("sourceServiceAccounts")]
        private InputList<string>? _sourceServiceAccounts;
        public InputList<string> SourceServiceAccounts
        {
            get => _sourceServiceAccounts ?? (_sourceServiceAccounts = new InputList<string>());
            set => _sourceServiceAccounts = value;
        }

        [Input("sourceTags")]
        private InputList<string>? _sourceTags;
        public InputList<string> SourceTags
        {
            get => _sourceTags ?? (_sourceTags = new InputList<string>());
            set => _sourceTags = value;
        }

        [Input("targetServiceAccounts")]
        private InputList<string>? _targetServiceAccounts;
        public InputList<string> TargetServiceAccounts
        {
            get => _targetServiceAccounts ?? (_targetServiceAccounts = new InputList<string>());
            set => _targetServiceAccounts = value;
        }

        [Input("targetTags")]
        private InputList<string>? _targetTags;
        public InputList<string> TargetTags
        {
            get => _targetTags ?? (_targetTags = new InputList<string>());
            set => _targetTags = value;
        }

        public FirewallArgs()
        {
        }
    }

    public sealed class FirewallState : Pulumi.ResourceArgs
    {
        [Input("allows")]
        private InputList<Inputs.FirewallAllowsGetArgs>? _allows;
        public InputList<Inputs.FirewallAllowsGetArgs> Allows
        {
            get => _allows ?? (_allows = new InputList<Inputs.FirewallAllowsGetArgs>());
            set => _allows = value;
        }

        [Input("creationTimestamp")]
        public Input<string>? CreationTimestamp { get; set; }

        [Input("denies")]
        private InputList<Inputs.FirewallDeniesGetArgs>? _denies;
        public InputList<Inputs.FirewallDeniesGetArgs> Denies
        {
            get => _denies ?? (_denies = new InputList<Inputs.FirewallDeniesGetArgs>());
            set => _denies = value;
        }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("destinationRanges")]
        private InputList<string>? _destinationRanges;
        public InputList<string> DestinationRanges
        {
            get => _destinationRanges ?? (_destinationRanges = new InputList<string>());
            set => _destinationRanges = value;
        }

        [Input("direction")]
        public Input<string>? Direction { get; set; }

        [Input("disabled")]
        public Input<bool>? Disabled { get; set; }

        [Input("enableLogging")]
        public Input<bool>? EnableLogging { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("network")]
        public Input<string>? Network { get; set; }

        [Input("priority")]
        public Input<int>? Priority { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The URI of the created resource.
        /// </summary>
        [Input("selfLink")]
        public Input<string>? SelfLink { get; set; }

        [Input("sourceRanges")]
        private InputList<string>? _sourceRanges;
        public InputList<string> SourceRanges
        {
            get => _sourceRanges ?? (_sourceRanges = new InputList<string>());
            set => _sourceRanges = value;
        }

        [Input("sourceServiceAccounts")]
        private InputList<string>? _sourceServiceAccounts;
        public InputList<string> SourceServiceAccounts
        {
            get => _sourceServiceAccounts ?? (_sourceServiceAccounts = new InputList<string>());
            set => _sourceServiceAccounts = value;
        }

        [Input("sourceTags")]
        private InputList<string>? _sourceTags;
        public InputList<string> SourceTags
        {
            get => _sourceTags ?? (_sourceTags = new InputList<string>());
            set => _sourceTags = value;
        }

        [Input("targetServiceAccounts")]
        private InputList<string>? _targetServiceAccounts;
        public InputList<string> TargetServiceAccounts
        {
            get => _targetServiceAccounts ?? (_targetServiceAccounts = new InputList<string>());
            set => _targetServiceAccounts = value;
        }

        [Input("targetTags")]
        private InputList<string>? _targetTags;
        public InputList<string> TargetTags
        {
            get => _targetTags ?? (_targetTags = new InputList<string>());
            set => _targetTags = value;
        }

        public FirewallState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class FirewallAllowsArgs : Pulumi.ResourceArgs
    {
        [Input("ports")]
        private InputList<string>? _ports;
        public InputList<string> Ports
        {
            get => _ports ?? (_ports = new InputList<string>());
            set => _ports = value;
        }

        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        public FirewallAllowsArgs()
        {
        }
    }

    public sealed class FirewallAllowsGetArgs : Pulumi.ResourceArgs
    {
        [Input("ports")]
        private InputList<string>? _ports;
        public InputList<string> Ports
        {
            get => _ports ?? (_ports = new InputList<string>());
            set => _ports = value;
        }

        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        public FirewallAllowsGetArgs()
        {
        }
    }

    public sealed class FirewallDeniesArgs : Pulumi.ResourceArgs
    {
        [Input("ports")]
        private InputList<string>? _ports;
        public InputList<string> Ports
        {
            get => _ports ?? (_ports = new InputList<string>());
            set => _ports = value;
        }

        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        public FirewallDeniesArgs()
        {
        }
    }

    public sealed class FirewallDeniesGetArgs : Pulumi.ResourceArgs
    {
        [Input("ports")]
        private InputList<string>? _ports;
        public InputList<string> Ports
        {
            get => _ports ?? (_ports = new InputList<string>());
            set => _ports = value;
        }

        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        public FirewallDeniesGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class FirewallAllows
    {
        public readonly ImmutableArray<string> Ports;
        public readonly string Protocol;

        [OutputConstructor]
        private FirewallAllows(
            ImmutableArray<string> ports,
            string protocol)
        {
            Ports = ports;
            Protocol = protocol;
        }
    }

    [OutputType]
    public sealed class FirewallDenies
    {
        public readonly ImmutableArray<string> Ports;
        public readonly string Protocol;

        [OutputConstructor]
        private FirewallDenies(
            ImmutableArray<string> ports,
            string protocol)
        {
            Ports = ports;
            Protocol = protocol;
        }
    }
    }
}
