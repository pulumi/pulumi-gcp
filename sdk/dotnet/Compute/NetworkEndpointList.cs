// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute
{
    /// <summary>
    /// A set of network endpoints belonging to a network endpoint group (NEG). A
    /// single network endpoint represents a IP address and port combination that is
    /// part of a specific network endpoint group  (NEG). NEGs are zonal collections
    /// of these endpoints for GCP resources within a single subnet. **NOTE**:
    /// Network endpoints cannot be created outside of a network endpoint group.
    /// 
    /// This resource is authoritative for a single NEG. Any endpoints not specified
    /// by this resource will be deleted when the resource configuration is applied.
    /// 
    /// &gt; **NOTE** In case the Endpoint's Instance is recreated, it's needed to
    /// perform `apply` twice. To avoid situations like this, please use this resource
    /// with the lifecycle `update_triggered_by` method, with the passed Instance's ID.
    /// 
    /// To get more information about NetworkEndpoints, see:
    /// 
    /// * [API documentation](https://cloud.google.com/compute/docs/reference/rest/beta/networkEndpointGroups)
    /// * How-to Guides
    ///     * [Official Documentation](https://cloud.google.com/load-balancing/docs/negs/)
    /// 
    /// ## Example Usage
    /// 
    /// ### Network Endpoints
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var myImage = Gcp.Compute.GetImage.Invoke(new()
    ///     {
    ///         Family = "debian-11",
    ///         Project = "debian-cloud",
    ///     });
    /// 
    ///     var @default = new Gcp.Compute.Network("default", new()
    ///     {
    ///         Name = "neg-network",
    ///         AutoCreateSubnetworks = false,
    ///     });
    /// 
    ///     var defaultSubnetwork = new Gcp.Compute.Subnetwork("default", new()
    ///     {
    ///         Name = "neg-subnetwork",
    ///         IpCidrRange = "10.0.0.1/16",
    ///         Region = "us-central1",
    ///         Network = @default.Id,
    ///     });
    /// 
    ///     var endpoint_instance1 = new Gcp.Compute.Instance("endpoint-instance1", new()
    ///     {
    ///         NetworkInterfaces = new[]
    ///         {
    ///             new Gcp.Compute.Inputs.InstanceNetworkInterfaceArgs
    ///             {
    ///                 AccessConfigs = new[]
    ///                 {
    ///                     null,
    ///                 },
    ///                 Subnetwork = defaultSubnetwork.Id,
    ///             },
    ///         },
    ///         Name = "endpoint-instance1",
    ///         MachineType = "e2-medium",
    ///         BootDisk = new Gcp.Compute.Inputs.InstanceBootDiskArgs
    ///         {
    ///             InitializeParams = new Gcp.Compute.Inputs.InstanceBootDiskInitializeParamsArgs
    ///             {
    ///                 Image = myImage.Apply(getImageResult =&gt; getImageResult.SelfLink),
    ///             },
    ///         },
    ///     });
    /// 
    ///     var endpoint_instance2 = new Gcp.Compute.Instance("endpoint-instance2", new()
    ///     {
    ///         NetworkInterfaces = new[]
    ///         {
    ///             new Gcp.Compute.Inputs.InstanceNetworkInterfaceArgs
    ///             {
    ///                 AccessConfigs = new[]
    ///                 {
    ///                     null,
    ///                 },
    ///                 Subnetwork = defaultSubnetwork.Id,
    ///             },
    ///         },
    ///         Name = "endpoint-instance2",
    ///         MachineType = "e2-medium",
    ///         BootDisk = new Gcp.Compute.Inputs.InstanceBootDiskArgs
    ///         {
    ///             InitializeParams = new Gcp.Compute.Inputs.InstanceBootDiskInitializeParamsArgs
    ///             {
    ///                 Image = myImage.Apply(getImageResult =&gt; getImageResult.SelfLink),
    ///             },
    ///         },
    ///     });
    /// 
    ///     var default_endpoints = new Gcp.Compute.NetworkEndpointList("default-endpoints", new()
    ///     {
    ///         NetworkEndpointGroup = neg.Name,
    ///         NetworkEndpoints = new[]
    ///         {
    ///             new Gcp.Compute.Inputs.NetworkEndpointListNetworkEndpointArgs
    ///             {
    ///                 Instance = endpoint_instance1.Name,
    ///                 Port = neg.DefaultPort,
    ///                 IpAddress = endpoint_instance1.NetworkInterfaces.Apply(networkInterfaces =&gt; networkInterfaces[0].NetworkIp),
    ///             },
    ///             new Gcp.Compute.Inputs.NetworkEndpointListNetworkEndpointArgs
    ///             {
    ///                 Instance = endpoint_instance2.Name,
    ///                 Port = neg.DefaultPort,
    ///                 IpAddress = endpoint_instance2.NetworkInterfaces.Apply(networkInterfaces =&gt; networkInterfaces[0].NetworkIp),
    ///             },
    ///         },
    ///     });
    /// 
    ///     var @group = new Gcp.Compute.NetworkEndpointGroup("group", new()
    ///     {
    ///         Name = "my-lb-neg",
    ///         Network = @default.Id,
    ///         Subnetwork = defaultSubnetwork.Id,
    ///         DefaultPort = 90,
    ///         Zone = "us-central1-a",
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// NetworkEndpoints can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/zones/{{zone}}/networkEndpointGroups/{{network_endpoint_group}}`
    /// 
    /// * `{{project}}/{{zone}}/{{network_endpoint_group}}`
    /// 
    /// * `{{zone}}/{{network_endpoint_group}}`
    /// 
    /// * `{{network_endpoint_group}}`
    /// 
    /// When using the `pulumi import` command, NetworkEndpoints can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:compute/networkEndpointList:NetworkEndpointList default projects/{{project}}/zones/{{zone}}/networkEndpointGroups/{{network_endpoint_group}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:compute/networkEndpointList:NetworkEndpointList default {{project}}/{{zone}}/{{network_endpoint_group}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:compute/networkEndpointList:NetworkEndpointList default {{zone}}/{{network_endpoint_group}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:compute/networkEndpointList:NetworkEndpointList default {{network_endpoint_group}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:compute/networkEndpointList:NetworkEndpointList")]
    public partial class NetworkEndpointList : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The network endpoint group these endpoints are part of.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Output("networkEndpointGroup")]
        public Output<string> NetworkEndpointGroup { get; private set; } = null!;

        /// <summary>
        /// The network endpoints to be added to the enclosing network endpoint group
        /// (NEG). Each endpoint specifies an IP address and port, along with
        /// additional information depending on the NEG type.
        /// Structure is documented below.
        /// </summary>
        [Output("networkEndpoints")]
        public Output<ImmutableArray<Outputs.NetworkEndpointListNetworkEndpoint>> NetworkEndpoints { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Zone where the containing network endpoint group is located.
        /// </summary>
        [Output("zone")]
        public Output<string> Zone { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkEndpointList resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkEndpointList(string name, NetworkEndpointListArgs args, CustomResourceOptions? options = null)
            : base("gcp:compute/networkEndpointList:NetworkEndpointList", name, args ?? new NetworkEndpointListArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkEndpointList(string name, Input<string> id, NetworkEndpointListState? state = null, CustomResourceOptions? options = null)
            : base("gcp:compute/networkEndpointList:NetworkEndpointList", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkEndpointList resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkEndpointList Get(string name, Input<string> id, NetworkEndpointListState? state = null, CustomResourceOptions? options = null)
        {
            return new NetworkEndpointList(name, id, state, options);
        }
    }

    public sealed class NetworkEndpointListArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The network endpoint group these endpoints are part of.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("networkEndpointGroup", required: true)]
        public Input<string> NetworkEndpointGroup { get; set; } = null!;

        [Input("networkEndpoints")]
        private InputList<Inputs.NetworkEndpointListNetworkEndpointArgs>? _networkEndpoints;

        /// <summary>
        /// The network endpoints to be added to the enclosing network endpoint group
        /// (NEG). Each endpoint specifies an IP address and port, along with
        /// additional information depending on the NEG type.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.NetworkEndpointListNetworkEndpointArgs> NetworkEndpoints
        {
            get => _networkEndpoints ?? (_networkEndpoints = new InputList<Inputs.NetworkEndpointListNetworkEndpointArgs>());
            set => _networkEndpoints = value;
        }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Zone where the containing network endpoint group is located.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public NetworkEndpointListArgs()
        {
        }
        public static new NetworkEndpointListArgs Empty => new NetworkEndpointListArgs();
    }

    public sealed class NetworkEndpointListState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The network endpoint group these endpoints are part of.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("networkEndpointGroup")]
        public Input<string>? NetworkEndpointGroup { get; set; }

        [Input("networkEndpoints")]
        private InputList<Inputs.NetworkEndpointListNetworkEndpointGetArgs>? _networkEndpoints;

        /// <summary>
        /// The network endpoints to be added to the enclosing network endpoint group
        /// (NEG). Each endpoint specifies an IP address and port, along with
        /// additional information depending on the NEG type.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.NetworkEndpointListNetworkEndpointGetArgs> NetworkEndpoints
        {
            get => _networkEndpoints ?? (_networkEndpoints = new InputList<Inputs.NetworkEndpointListNetworkEndpointGetArgs>());
            set => _networkEndpoints = value;
        }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Zone where the containing network endpoint group is located.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public NetworkEndpointListState()
        {
        }
        public static new NetworkEndpointListState Empty => new NetworkEndpointListState();
    }
}
