// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute
{
    /// <summary>
    /// Represents a ServiceAttachment resource.
    /// 
    /// To get more information about ServiceAttachment, see:
    /// 
    /// * [API documentation](https://cloud.google.com/compute/docs/reference/beta/serviceAttachments)
    /// * How-to Guides
    ///     * [Configuring Private Service Connect to access services](https://cloud.google.com/vpc/docs/configure-private-service-connect-services)
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// ServiceAttachment can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import gcp:compute/serviceAttachment:ServiceAttachment default projects/{{project}}/regions/{{region}}/serviceAttachments/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:compute/serviceAttachment:ServiceAttachment default {{project}}/{{region}}/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:compute/serviceAttachment:ServiceAttachment default {{region}}/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:compute/serviceAttachment:ServiceAttachment default {{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:compute/serviceAttachment:ServiceAttachment")]
    public partial class ServiceAttachment : Pulumi.CustomResource
    {
        /// <summary>
        /// An array of the consumer forwarding rules connected to this service attachment.
        /// </summary>
        [Output("connectedEndpoints")]
        public Output<ImmutableArray<Outputs.ServiceAttachmentConnectedEndpoint>> ConnectedEndpoints { get; private set; } = null!;

        /// <summary>
        /// The connection preference to use for this service attachment. Valid
        /// values include "ACCEPT_AUTOMATIC", "ACCEPT_MANUAL".
        /// </summary>
        [Output("connectionPreference")]
        public Output<string> ConnectionPreference { get; private set; } = null!;

        /// <summary>
        /// An array of projects that are allowed to connect to this service
        /// attachment.
        /// Structure is documented below.
        /// </summary>
        [Output("consumerAcceptLists")]
        public Output<ImmutableArray<Outputs.ServiceAttachmentConsumerAcceptList>> ConsumerAcceptLists { get; private set; } = null!;

        /// <summary>
        /// An array of projects that are not allowed to connect to this service
        /// attachment.
        /// </summary>
        [Output("consumerRejectLists")]
        public Output<ImmutableArray<string>> ConsumerRejectLists { get; private set; } = null!;

        /// <summary>
        /// An optional description of this resource.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// If specified, the domain name will be used during the integration between
        /// the PSC connected endpoints and the Cloud DNS. For example, this is a
        /// valid domain name: "p.mycompany.com.". Current max number of domain names
        /// supported is 1.
        /// </summary>
        [Output("domainNames")]
        public Output<ImmutableArray<string>> DomainNames { get; private set; } = null!;

        /// <summary>
        /// If true, enable the proxy protocol which is for supplying client TCP/IP
        /// address data in TCP connections that traverse proxies on their way to
        /// destination servers.
        /// </summary>
        [Output("enableProxyProtocol")]
        public Output<bool> EnableProxyProtocol { get; private set; } = null!;

        /// <summary>
        /// Fingerprint of this resource. This field is used internally during updates of this resource.
        /// </summary>
        [Output("fingerprint")]
        public Output<string> Fingerprint { get; private set; } = null!;

        /// <summary>
        /// Name of the resource. The name must be 1-63 characters long, and
        /// comply with RFC1035. Specifically, the name must be 1-63 characters
        /// long and match the regular expression `a-z?`
        /// which means the first character must be a lowercase letter, and all
        /// following characters must be a dash, lowercase letter, or digit,
        /// except the last character, which cannot be a dash.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// An array of subnets that is provided for NAT in this service attachment.
        /// </summary>
        [Output("natSubnets")]
        public Output<ImmutableArray<string>> NatSubnets { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// URL of the region where the resource resides.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// The URI of the created resource.
        /// </summary>
        [Output("selfLink")]
        public Output<string> SelfLink { get; private set; } = null!;

        /// <summary>
        /// The URL of a forwarding rule that represents the service identified by
        /// this service attachment.
        /// </summary>
        [Output("targetService")]
        public Output<string> TargetService { get; private set; } = null!;


        /// <summary>
        /// Create a ServiceAttachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServiceAttachment(string name, ServiceAttachmentArgs args, CustomResourceOptions? options = null)
            : base("gcp:compute/serviceAttachment:ServiceAttachment", name, args ?? new ServiceAttachmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServiceAttachment(string name, Input<string> id, ServiceAttachmentState? state = null, CustomResourceOptions? options = null)
            : base("gcp:compute/serviceAttachment:ServiceAttachment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServiceAttachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServiceAttachment Get(string name, Input<string> id, ServiceAttachmentState? state = null, CustomResourceOptions? options = null)
        {
            return new ServiceAttachment(name, id, state, options);
        }
    }

    public sealed class ServiceAttachmentArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The connection preference to use for this service attachment. Valid
        /// values include "ACCEPT_AUTOMATIC", "ACCEPT_MANUAL".
        /// </summary>
        [Input("connectionPreference", required: true)]
        public Input<string> ConnectionPreference { get; set; } = null!;

        [Input("consumerAcceptLists")]
        private InputList<Inputs.ServiceAttachmentConsumerAcceptListArgs>? _consumerAcceptLists;

        /// <summary>
        /// An array of projects that are allowed to connect to this service
        /// attachment.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.ServiceAttachmentConsumerAcceptListArgs> ConsumerAcceptLists
        {
            get => _consumerAcceptLists ?? (_consumerAcceptLists = new InputList<Inputs.ServiceAttachmentConsumerAcceptListArgs>());
            set => _consumerAcceptLists = value;
        }

        [Input("consumerRejectLists")]
        private InputList<string>? _consumerRejectLists;

        /// <summary>
        /// An array of projects that are not allowed to connect to this service
        /// attachment.
        /// </summary>
        public InputList<string> ConsumerRejectLists
        {
            get => _consumerRejectLists ?? (_consumerRejectLists = new InputList<string>());
            set => _consumerRejectLists = value;
        }

        /// <summary>
        /// An optional description of this resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("domainNames")]
        private InputList<string>? _domainNames;

        /// <summary>
        /// If specified, the domain name will be used during the integration between
        /// the PSC connected endpoints and the Cloud DNS. For example, this is a
        /// valid domain name: "p.mycompany.com.". Current max number of domain names
        /// supported is 1.
        /// </summary>
        public InputList<string> DomainNames
        {
            get => _domainNames ?? (_domainNames = new InputList<string>());
            set => _domainNames = value;
        }

        /// <summary>
        /// If true, enable the proxy protocol which is for supplying client TCP/IP
        /// address data in TCP connections that traverse proxies on their way to
        /// destination servers.
        /// </summary>
        [Input("enableProxyProtocol", required: true)]
        public Input<bool> EnableProxyProtocol { get; set; } = null!;

        /// <summary>
        /// Name of the resource. The name must be 1-63 characters long, and
        /// comply with RFC1035. Specifically, the name must be 1-63 characters
        /// long and match the regular expression `a-z?`
        /// which means the first character must be a lowercase letter, and all
        /// following characters must be a dash, lowercase letter, or digit,
        /// except the last character, which cannot be a dash.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("natSubnets", required: true)]
        private InputList<string>? _natSubnets;

        /// <summary>
        /// An array of subnets that is provided for NAT in this service attachment.
        /// </summary>
        public InputList<string> NatSubnets
        {
            get => _natSubnets ?? (_natSubnets = new InputList<string>());
            set => _natSubnets = value;
        }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// URL of the region where the resource resides.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The URL of a forwarding rule that represents the service identified by
        /// this service attachment.
        /// </summary>
        [Input("targetService", required: true)]
        public Input<string> TargetService { get; set; } = null!;

        public ServiceAttachmentArgs()
        {
        }
    }

    public sealed class ServiceAttachmentState : Pulumi.ResourceArgs
    {
        [Input("connectedEndpoints")]
        private InputList<Inputs.ServiceAttachmentConnectedEndpointGetArgs>? _connectedEndpoints;

        /// <summary>
        /// An array of the consumer forwarding rules connected to this service attachment.
        /// </summary>
        public InputList<Inputs.ServiceAttachmentConnectedEndpointGetArgs> ConnectedEndpoints
        {
            get => _connectedEndpoints ?? (_connectedEndpoints = new InputList<Inputs.ServiceAttachmentConnectedEndpointGetArgs>());
            set => _connectedEndpoints = value;
        }

        /// <summary>
        /// The connection preference to use for this service attachment. Valid
        /// values include "ACCEPT_AUTOMATIC", "ACCEPT_MANUAL".
        /// </summary>
        [Input("connectionPreference")]
        public Input<string>? ConnectionPreference { get; set; }

        [Input("consumerAcceptLists")]
        private InputList<Inputs.ServiceAttachmentConsumerAcceptListGetArgs>? _consumerAcceptLists;

        /// <summary>
        /// An array of projects that are allowed to connect to this service
        /// attachment.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.ServiceAttachmentConsumerAcceptListGetArgs> ConsumerAcceptLists
        {
            get => _consumerAcceptLists ?? (_consumerAcceptLists = new InputList<Inputs.ServiceAttachmentConsumerAcceptListGetArgs>());
            set => _consumerAcceptLists = value;
        }

        [Input("consumerRejectLists")]
        private InputList<string>? _consumerRejectLists;

        /// <summary>
        /// An array of projects that are not allowed to connect to this service
        /// attachment.
        /// </summary>
        public InputList<string> ConsumerRejectLists
        {
            get => _consumerRejectLists ?? (_consumerRejectLists = new InputList<string>());
            set => _consumerRejectLists = value;
        }

        /// <summary>
        /// An optional description of this resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("domainNames")]
        private InputList<string>? _domainNames;

        /// <summary>
        /// If specified, the domain name will be used during the integration between
        /// the PSC connected endpoints and the Cloud DNS. For example, this is a
        /// valid domain name: "p.mycompany.com.". Current max number of domain names
        /// supported is 1.
        /// </summary>
        public InputList<string> DomainNames
        {
            get => _domainNames ?? (_domainNames = new InputList<string>());
            set => _domainNames = value;
        }

        /// <summary>
        /// If true, enable the proxy protocol which is for supplying client TCP/IP
        /// address data in TCP connections that traverse proxies on their way to
        /// destination servers.
        /// </summary>
        [Input("enableProxyProtocol")]
        public Input<bool>? EnableProxyProtocol { get; set; }

        /// <summary>
        /// Fingerprint of this resource. This field is used internally during updates of this resource.
        /// </summary>
        [Input("fingerprint")]
        public Input<string>? Fingerprint { get; set; }

        /// <summary>
        /// Name of the resource. The name must be 1-63 characters long, and
        /// comply with RFC1035. Specifically, the name must be 1-63 characters
        /// long and match the regular expression `a-z?`
        /// which means the first character must be a lowercase letter, and all
        /// following characters must be a dash, lowercase letter, or digit,
        /// except the last character, which cannot be a dash.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("natSubnets")]
        private InputList<string>? _natSubnets;

        /// <summary>
        /// An array of subnets that is provided for NAT in this service attachment.
        /// </summary>
        public InputList<string> NatSubnets
        {
            get => _natSubnets ?? (_natSubnets = new InputList<string>());
            set => _natSubnets = value;
        }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// URL of the region where the resource resides.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The URI of the created resource.
        /// </summary>
        [Input("selfLink")]
        public Input<string>? SelfLink { get; set; }

        /// <summary>
        /// The URL of a forwarding rule that represents the service identified by
        /// this service attachment.
        /// </summary>
        [Input("targetService")]
        public Input<string>? TargetService { get; set; }

        public ServiceAttachmentState()
        {
        }
    }
}
