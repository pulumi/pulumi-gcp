// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute
{
    /// <summary>
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/compute_url_map.html.markdown.
    /// </summary>
    public partial class URLMap : Pulumi.CustomResource
    {
        [Output("creationTimestamp")]
        public Output<string> CreationTimestamp { get; private set; } = null!;

        [Output("defaultService")]
        public Output<string> DefaultService { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("fingerprint")]
        public Output<string> Fingerprint { get; private set; } = null!;

        [Output("hostRules")]
        public Output<ImmutableArray<Outputs.URLMapHostRules>> HostRules { get; private set; } = null!;

        [Output("mapId")]
        public Output<int> MapId { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("pathMatchers")]
        public Output<ImmutableArray<Outputs.URLMapPathMatchers>> PathMatchers { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The URI of the created resource.
        /// </summary>
        [Output("selfLink")]
        public Output<string> SelfLink { get; private set; } = null!;

        [Output("tests")]
        public Output<ImmutableArray<Outputs.URLMapTests>> Tests { get; private set; } = null!;


        /// <summary>
        /// Create a URLMap resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public URLMap(string name, URLMapArgs args, CustomResourceOptions? options = null)
            : base("gcp:compute/uRLMap:URLMap", name, args, MakeResourceOptions(options, ""))
        {
        }

        private URLMap(string name, Input<string> id, URLMapState? state = null, CustomResourceOptions? options = null)
            : base("gcp:compute/uRLMap:URLMap", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing URLMap resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static URLMap Get(string name, Input<string> id, URLMapState? state = null, CustomResourceOptions? options = null)
        {
            return new URLMap(name, id, state, options);
        }
    }

    public sealed class URLMapArgs : Pulumi.ResourceArgs
    {
        [Input("defaultService", required: true)]
        public Input<string> DefaultService { get; set; } = null!;

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("hostRules")]
        private InputList<Inputs.URLMapHostRulesArgs>? _hostRules;
        public InputList<Inputs.URLMapHostRulesArgs> HostRules
        {
            get => _hostRules ?? (_hostRules = new InputList<Inputs.URLMapHostRulesArgs>());
            set => _hostRules = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("pathMatchers")]
        private InputList<Inputs.URLMapPathMatchersArgs>? _pathMatchers;
        public InputList<Inputs.URLMapPathMatchersArgs> PathMatchers
        {
            get => _pathMatchers ?? (_pathMatchers = new InputList<Inputs.URLMapPathMatchersArgs>());
            set => _pathMatchers = value;
        }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("tests")]
        private InputList<Inputs.URLMapTestsArgs>? _tests;
        public InputList<Inputs.URLMapTestsArgs> Tests
        {
            get => _tests ?? (_tests = new InputList<Inputs.URLMapTestsArgs>());
            set => _tests = value;
        }

        public URLMapArgs()
        {
        }
    }

    public sealed class URLMapState : Pulumi.ResourceArgs
    {
        [Input("creationTimestamp")]
        public Input<string>? CreationTimestamp { get; set; }

        [Input("defaultService")]
        public Input<string>? DefaultService { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("fingerprint")]
        public Input<string>? Fingerprint { get; set; }

        [Input("hostRules")]
        private InputList<Inputs.URLMapHostRulesGetArgs>? _hostRules;
        public InputList<Inputs.URLMapHostRulesGetArgs> HostRules
        {
            get => _hostRules ?? (_hostRules = new InputList<Inputs.URLMapHostRulesGetArgs>());
            set => _hostRules = value;
        }

        [Input("mapId")]
        public Input<int>? MapId { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("pathMatchers")]
        private InputList<Inputs.URLMapPathMatchersGetArgs>? _pathMatchers;
        public InputList<Inputs.URLMapPathMatchersGetArgs> PathMatchers
        {
            get => _pathMatchers ?? (_pathMatchers = new InputList<Inputs.URLMapPathMatchersGetArgs>());
            set => _pathMatchers = value;
        }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The URI of the created resource.
        /// </summary>
        [Input("selfLink")]
        public Input<string>? SelfLink { get; set; }

        [Input("tests")]
        private InputList<Inputs.URLMapTestsGetArgs>? _tests;
        public InputList<Inputs.URLMapTestsGetArgs> Tests
        {
            get => _tests ?? (_tests = new InputList<Inputs.URLMapTestsGetArgs>());
            set => _tests = value;
        }

        public URLMapState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class URLMapHostRulesArgs : Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("hosts", required: true)]
        private InputList<string>? _hosts;
        public InputList<string> Hosts
        {
            get => _hosts ?? (_hosts = new InputList<string>());
            set => _hosts = value;
        }

        [Input("pathMatcher", required: true)]
        public Input<string> PathMatcher { get; set; } = null!;

        public URLMapHostRulesArgs()
        {
        }
    }

    public sealed class URLMapHostRulesGetArgs : Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("hosts", required: true)]
        private InputList<string>? _hosts;
        public InputList<string> Hosts
        {
            get => _hosts ?? (_hosts = new InputList<string>());
            set => _hosts = value;
        }

        [Input("pathMatcher", required: true)]
        public Input<string> PathMatcher { get; set; } = null!;

        public URLMapHostRulesGetArgs()
        {
        }
    }

    public sealed class URLMapPathMatchersArgs : Pulumi.ResourceArgs
    {
        [Input("defaultService", required: true)]
        public Input<string> DefaultService { get; set; } = null!;

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("pathRules")]
        private InputList<URLMapPathMatchersPathRulesArgs>? _pathRules;
        public InputList<URLMapPathMatchersPathRulesArgs> PathRules
        {
            get => _pathRules ?? (_pathRules = new InputList<URLMapPathMatchersPathRulesArgs>());
            set => _pathRules = value;
        }

        public URLMapPathMatchersArgs()
        {
        }
    }

    public sealed class URLMapPathMatchersGetArgs : Pulumi.ResourceArgs
    {
        [Input("defaultService", required: true)]
        public Input<string> DefaultService { get; set; } = null!;

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("pathRules")]
        private InputList<URLMapPathMatchersPathRulesGetArgs>? _pathRules;
        public InputList<URLMapPathMatchersPathRulesGetArgs> PathRules
        {
            get => _pathRules ?? (_pathRules = new InputList<URLMapPathMatchersPathRulesGetArgs>());
            set => _pathRules = value;
        }

        public URLMapPathMatchersGetArgs()
        {
        }
    }

    public sealed class URLMapPathMatchersPathRulesArgs : Pulumi.ResourceArgs
    {
        [Input("paths", required: true)]
        private InputList<string>? _paths;
        public InputList<string> Paths
        {
            get => _paths ?? (_paths = new InputList<string>());
            set => _paths = value;
        }

        [Input("service", required: true)]
        public Input<string> Service { get; set; } = null!;

        public URLMapPathMatchersPathRulesArgs()
        {
        }
    }

    public sealed class URLMapPathMatchersPathRulesGetArgs : Pulumi.ResourceArgs
    {
        [Input("paths", required: true)]
        private InputList<string>? _paths;
        public InputList<string> Paths
        {
            get => _paths ?? (_paths = new InputList<string>());
            set => _paths = value;
        }

        [Input("service", required: true)]
        public Input<string> Service { get; set; } = null!;

        public URLMapPathMatchersPathRulesGetArgs()
        {
        }
    }

    public sealed class URLMapTestsArgs : Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("host", required: true)]
        public Input<string> Host { get; set; } = null!;

        [Input("path", required: true)]
        public Input<string> Path { get; set; } = null!;

        [Input("service", required: true)]
        public Input<string> Service { get; set; } = null!;

        public URLMapTestsArgs()
        {
        }
    }

    public sealed class URLMapTestsGetArgs : Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("host", required: true)]
        public Input<string> Host { get; set; } = null!;

        [Input("path", required: true)]
        public Input<string> Path { get; set; } = null!;

        [Input("service", required: true)]
        public Input<string> Service { get; set; } = null!;

        public URLMapTestsGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class URLMapHostRules
    {
        public readonly string? Description;
        public readonly ImmutableArray<string> Hosts;
        public readonly string PathMatcher;

        [OutputConstructor]
        private URLMapHostRules(
            string? description,
            ImmutableArray<string> hosts,
            string pathMatcher)
        {
            Description = description;
            Hosts = hosts;
            PathMatcher = pathMatcher;
        }
    }

    [OutputType]
    public sealed class URLMapPathMatchers
    {
        public readonly string DefaultService;
        public readonly string? Description;
        public readonly string Name;
        public readonly ImmutableArray<URLMapPathMatchersPathRules> PathRules;

        [OutputConstructor]
        private URLMapPathMatchers(
            string defaultService,
            string? description,
            string name,
            ImmutableArray<URLMapPathMatchersPathRules> pathRules)
        {
            DefaultService = defaultService;
            Description = description;
            Name = name;
            PathRules = pathRules;
        }
    }

    [OutputType]
    public sealed class URLMapPathMatchersPathRules
    {
        public readonly ImmutableArray<string> Paths;
        public readonly string Service;

        [OutputConstructor]
        private URLMapPathMatchersPathRules(
            ImmutableArray<string> paths,
            string service)
        {
            Paths = paths;
            Service = service;
        }
    }

    [OutputType]
    public sealed class URLMapTests
    {
        public readonly string? Description;
        public readonly string Host;
        public readonly string Path;
        public readonly string Service;

        [OutputConstructor]
        private URLMapTests(
            string? description,
            string host,
            string path,
            string service)
        {
            Description = description;
            Host = host;
            Path = path;
            Service = service;
        }
    }
    }
}
