// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute
{
    /// <summary>
    /// The Compute NetworkFirewallPolicyAssociation resource
    /// 
    /// ## Example Usage
    /// ### Global
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var networkFirewallPolicy = new Gcp.Compute.NetworkFirewallPolicy("networkFirewallPolicy", new()
    ///     {
    ///         Project = "my-project-name",
    ///         Description = "Sample global network firewall policy",
    ///     });
    /// 
    ///     var network = new Gcp.Compute.Network("network");
    /// 
    ///     var primary = new Gcp.Compute.NetworkFirewallPolicyAssociation("primary", new()
    ///     {
    ///         AttachmentTarget = network.Id,
    ///         FirewallPolicy = networkFirewallPolicy.Name,
    ///         Project = "my-project-name",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// NetworkFirewallPolicyAssociation can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import gcp:compute/networkFirewallPolicyAssociation:NetworkFirewallPolicyAssociation default projects/{{project}}/global/firewallPolicies/{{firewall_policy}}/associations/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:compute/networkFirewallPolicyAssociation:NetworkFirewallPolicyAssociation default {{project}}/{{firewall_policy}}/{{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:compute/networkFirewallPolicyAssociation:NetworkFirewallPolicyAssociation")]
    public partial class NetworkFirewallPolicyAssociation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The target that the firewall policy is attached to.
        /// </summary>
        [Output("attachmentTarget")]
        public Output<string> AttachmentTarget { get; private set; } = null!;

        /// <summary>
        /// The firewall policy ID of the association.
        /// </summary>
        [Output("firewallPolicy")]
        public Output<string> FirewallPolicy { get; private set; } = null!;

        /// <summary>
        /// The name for an association.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The project for the resource
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The short name of the firewall policy of the association.
        /// </summary>
        [Output("shortName")]
        public Output<string> ShortName { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkFirewallPolicyAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkFirewallPolicyAssociation(string name, NetworkFirewallPolicyAssociationArgs args, CustomResourceOptions? options = null)
            : base("gcp:compute/networkFirewallPolicyAssociation:NetworkFirewallPolicyAssociation", name, args ?? new NetworkFirewallPolicyAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkFirewallPolicyAssociation(string name, Input<string> id, NetworkFirewallPolicyAssociationState? state = null, CustomResourceOptions? options = null)
            : base("gcp:compute/networkFirewallPolicyAssociation:NetworkFirewallPolicyAssociation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkFirewallPolicyAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkFirewallPolicyAssociation Get(string name, Input<string> id, NetworkFirewallPolicyAssociationState? state = null, CustomResourceOptions? options = null)
        {
            return new NetworkFirewallPolicyAssociation(name, id, state, options);
        }
    }

    public sealed class NetworkFirewallPolicyAssociationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The target that the firewall policy is attached to.
        /// </summary>
        [Input("attachmentTarget", required: true)]
        public Input<string> AttachmentTarget { get; set; } = null!;

        /// <summary>
        /// The firewall policy ID of the association.
        /// </summary>
        [Input("firewallPolicy", required: true)]
        public Input<string> FirewallPolicy { get; set; } = null!;

        /// <summary>
        /// The name for an association.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The project for the resource
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public NetworkFirewallPolicyAssociationArgs()
        {
        }
        public static new NetworkFirewallPolicyAssociationArgs Empty => new NetworkFirewallPolicyAssociationArgs();
    }

    public sealed class NetworkFirewallPolicyAssociationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The target that the firewall policy is attached to.
        /// </summary>
        [Input("attachmentTarget")]
        public Input<string>? AttachmentTarget { get; set; }

        /// <summary>
        /// The firewall policy ID of the association.
        /// </summary>
        [Input("firewallPolicy")]
        public Input<string>? FirewallPolicy { get; set; }

        /// <summary>
        /// The name for an association.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The project for the resource
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The short name of the firewall policy of the association.
        /// </summary>
        [Input("shortName")]
        public Input<string>? ShortName { get; set; }

        public NetworkFirewallPolicyAssociationState()
        {
        }
        public static new NetworkFirewallPolicyAssociationState Empty => new NetworkFirewallPolicyAssociationState();
    }
}
