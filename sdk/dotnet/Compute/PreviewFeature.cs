// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute
{
    /// <summary>
    /// Represents a single Google Compute Engine preview feature such as Alpha API access, which can be enabled or disabled for a project.
    /// 
    /// To get more information about PreviewFeature, see:
    /// 
    /// * [API documentation](https://cloud.google.com/compute/docs/reference/rest/beta/PreviewFeatures)
    /// * How-to Guides
    ///     * [Use the Compute Engine alpha API](https://cloud.google.com/compute/docs/reference/rest/alpha)
    /// 
    /// ## Example Usage
    /// 
    /// ### Preview Feature Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var gcePreviewFeature = new Gcp.Compute.PreviewFeature("gce_preview_feature", new()
    ///     {
    ///         Name = "alpha-api-access",
    ///         ActivationStatus = "DISABLED",
    ///         RolloutOperation = new Gcp.Compute.Inputs.PreviewFeatureRolloutOperationArgs
    ///         {
    ///             RolloutInput = new Gcp.Compute.Inputs.PreviewFeatureRolloutOperationRolloutInputArgs
    ///             {
    ///                 PredefinedRolloutPlan = "ROLLOUT_PLAN_FAST_ROLLOUT",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// PreviewFeature can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/global/previewFeatures/{{name}}`
    /// 
    /// * `{{project}}/{{name}}`
    /// 
    /// * `{{name}}`
    /// 
    /// When using the `pulumi import` command, PreviewFeature can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:compute/previewFeature:PreviewFeature default projects/{{project}}/global/previewFeatures/{{name}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:compute/previewFeature:PreviewFeature default {{project}}/{{name}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:compute/previewFeature:PreviewFeature default {{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:compute/previewFeature:PreviewFeature")]
    public partial class PreviewFeature : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The activation status of the preview feature.
        /// Possible values are: `ENABLED`, `DISABLED`.
        /// </summary>
        [Output("activationStatus")]
        public Output<string> ActivationStatus { get; private set; } = null!;

        /// <summary>
        /// The name of the preview feature.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The rollout operation of the feature.
        /// Structure is documented below.
        /// </summary>
        [Output("rolloutOperation")]
        public Output<Outputs.PreviewFeatureRolloutOperation?> RolloutOperation { get; private set; } = null!;


        /// <summary>
        /// Create a PreviewFeature resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PreviewFeature(string name, PreviewFeatureArgs args, CustomResourceOptions? options = null)
            : base("gcp:compute/previewFeature:PreviewFeature", name, args ?? new PreviewFeatureArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PreviewFeature(string name, Input<string> id, PreviewFeatureState? state = null, CustomResourceOptions? options = null)
            : base("gcp:compute/previewFeature:PreviewFeature", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PreviewFeature resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PreviewFeature Get(string name, Input<string> id, PreviewFeatureState? state = null, CustomResourceOptions? options = null)
        {
            return new PreviewFeature(name, id, state, options);
        }
    }

    public sealed class PreviewFeatureArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The activation status of the preview feature.
        /// Possible values are: `ENABLED`, `DISABLED`.
        /// </summary>
        [Input("activationStatus", required: true)]
        public Input<string> ActivationStatus { get; set; } = null!;

        /// <summary>
        /// The name of the preview feature.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The rollout operation of the feature.
        /// Structure is documented below.
        /// </summary>
        [Input("rolloutOperation")]
        public Input<Inputs.PreviewFeatureRolloutOperationArgs>? RolloutOperation { get; set; }

        public PreviewFeatureArgs()
        {
        }
        public static new PreviewFeatureArgs Empty => new PreviewFeatureArgs();
    }

    public sealed class PreviewFeatureState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The activation status of the preview feature.
        /// Possible values are: `ENABLED`, `DISABLED`.
        /// </summary>
        [Input("activationStatus")]
        public Input<string>? ActivationStatus { get; set; }

        /// <summary>
        /// The name of the preview feature.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The rollout operation of the feature.
        /// Structure is documented below.
        /// </summary>
        [Input("rolloutOperation")]
        public Input<Inputs.PreviewFeatureRolloutOperationGetArgs>? RolloutOperation { get; set; }

        public PreviewFeatureState()
        {
        }
        public static new PreviewFeatureState Empty => new PreviewFeatureState();
    }
}
