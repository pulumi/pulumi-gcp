// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute
{
    public static partial class Invokes
    {
        public static Task<GetNetworkEndpointGroupResult> GetNetworkEndpointGroup(GetNetworkEndpointGroupArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetNetworkEndpointGroupResult>("gcp:compute/getNetworkEndpointGroup:getNetworkEndpointGroup", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetNetworkEndpointGroupArgs : Pulumi.InvokeArgs
    {
        [Input("name")]
        public string? Name { get; set; }

        [Input("selfLink")]
        public string? SelfLink { get; set; }

        [Input("zone")]
        public string? Zone { get; set; }

        public GetNetworkEndpointGroupArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetNetworkEndpointGroupResult
    {
        public readonly int DefaultPort;
        public readonly string Description;
        public readonly string? Name;
        public readonly string Network;
        public readonly string NetworkEndpointType;
        public readonly string Project;
        public readonly string? SelfLink;
        public readonly int Size;
        public readonly string Subnetwork;
        public readonly string? Zone;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetNetworkEndpointGroupResult(
            int defaultPort,
            string description,
            string? name,
            string network,
            string networkEndpointType,
            string project,
            string? selfLink,
            int size,
            string subnetwork,
            string? zone,
            string id)
        {
            DefaultPort = defaultPort;
            Description = description;
            Name = name;
            Network = network;
            NetworkEndpointType = networkEndpointType;
            Project = project;
            SelfLink = selfLink;
            Size = size;
            Subnetwork = subnetwork;
            Zone = zone;
            Id = id;
        }
    }
}
