// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute
{
    /// <summary>
    /// Represents an Interconnect resource. The Interconnect resource is a dedicated connection between
    /// Google's network and your on-premises network.
    /// 
    /// To get more information about Interconnect, see:
    /// 
    /// * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/interconnects)
    /// * How-to Guides
    ///     * [Create a Dedicated Interconnect](https://cloud.google.com/network-connectivity/docs/interconnect/concepts/dedicated-overview)
    /// 
    /// ## Example Usage
    /// 
    /// ### Compute Interconnect Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var project = Gcp.Organizations.GetProject.Invoke();
    /// 
    ///     var example_interconnect = new Gcp.Compute.Interconnect("example-interconnect", new()
    ///     {
    ///         Name = "example-interconnect",
    ///         CustomerName = "example_customer",
    ///         InterconnectType = "DEDICATED",
    ///         LinkType = "LINK_TYPE_ETHERNET_10G_LR",
    ///         Location = $"https://www.googleapis.com/compute/v1/projects/{project.Apply(getProjectResult =&gt; getProjectResult.Name)}/global/interconnectLocations/iad-zone1-1",
    ///         RequestedLinkCount = 1,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Interconnect can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/global/interconnects/{{name}}`
    /// 
    /// * `{{project}}/{{name}}`
    /// 
    /// * `{{name}}`
    /// 
    /// When using the `pulumi import` command, Interconnect can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:compute/interconnect:Interconnect default projects/{{project}}/global/interconnects/{{name}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:compute/interconnect:Interconnect default {{project}}/{{name}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:compute/interconnect:Interconnect default {{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:compute/interconnect:Interconnect")]
    public partial class Interconnect : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Administrative status of the interconnect. When this is set to true, the Interconnect is
        /// functional and can carry traffic. When set to false, no packets can be carried over the
        /// interconnect and no BGP routes are exchanged over it. By default, the status is set to true.
        /// </summary>
        [Output("adminEnabled")]
        public Output<bool?> AdminEnabled { get; private set; } = null!;

        /// <summary>
        /// interconnects.list of features available for this Interconnect connection. Can take the value:
        /// MACSEC. If present then the Interconnect connection is provisioned on MACsec capable hardware
        /// ports. If not present then the Interconnect connection is provisioned on non-MACsec capable
        /// ports and MACsec isn't supported and enabling MACsec fails).
        /// </summary>
        [Output("availableFeatures")]
        public Output<ImmutableArray<string>> AvailableFeatures { get; private set; } = null!;

        /// <summary>
        /// A list of CircuitInfo objects, that describe the individual circuits in this LAG.
        /// Structure is documented below.
        /// </summary>
        [Output("circuitInfos")]
        public Output<ImmutableArray<Outputs.InterconnectCircuitInfo>> CircuitInfos { get; private set; } = null!;

        /// <summary>
        /// Creation timestamp in RFC3339 text format.
        /// </summary>
        [Output("creationTimestamp")]
        public Output<string> CreationTimestamp { get; private set; } = null!;

        /// <summary>
        /// Customer name, to put in the Letter of Authorization as the party authorized to request a
        /// crossconnect.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Output("customerName")]
        public Output<string> CustomerName { get; private set; } = null!;

        /// <summary>
        /// An optional description of this resource. Provide this property when you create the resource.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
        /// </summary>
        [Output("effectiveLabels")]
        public Output<ImmutableDictionary<string, string>> EffectiveLabels { get; private set; } = null!;

        /// <summary>
        /// A list of outages expected for this Interconnect.
        /// Structure is documented below.
        /// </summary>
        [Output("expectedOutages")]
        public Output<ImmutableArray<Outputs.InterconnectExpectedOutage>> ExpectedOutages { get; private set; } = null!;

        /// <summary>
        /// IP address configured on the Google side of the Interconnect link.
        /// This can be used only for ping tests.
        /// </summary>
        [Output("googleIpAddress")]
        public Output<string> GoogleIpAddress { get; private set; } = null!;

        /// <summary>
        /// Google reference ID to be used when raising support tickets with Google or otherwise to debug
        /// backend connectivity issues.
        /// </summary>
        [Output("googleReferenceId")]
        public Output<string> GoogleReferenceId { get; private set; } = null!;

        /// <summary>
        /// A list of the URLs of all InterconnectAttachments configured to use this Interconnect.
        /// </summary>
        [Output("interconnectAttachments")]
        public Output<ImmutableArray<string>> InterconnectAttachments { get; private set; } = null!;

        /// <summary>
        /// Type of interconnect. Note that a value IT_PRIVATE has been deprecated in favor of DEDICATED.
        /// Can take one of the following values:
        /// - PARTNER: A partner-managed interconnection shared between customers though a partner.
        /// - DEDICATED: A dedicated physical interconnection with the customer.
        /// Possible values are: `DEDICATED`, `PARTNER`, `IT_PRIVATE`.
        /// </summary>
        [Output("interconnectType")]
        public Output<string> InterconnectType { get; private set; } = null!;

        /// <summary>
        /// A fingerprint for the labels being applied to this Interconnect, which is essentially a hash
        /// of the labels set used for optimistic locking. The fingerprint is initially generated by
        /// Compute Engine and changes after every request to modify or update labels.
        /// You must always provide an up-to-date fingerprint hash in order to update or change labels,
        /// otherwise the request will fail with error 412 conditionNotMet.
        /// </summary>
        [Output("labelFingerprint")]
        public Output<string> LabelFingerprint { get; private set; } = null!;

        /// <summary>
        /// Labels for this resource. These can only be added or modified by the setLabels
        /// method. Each label key/value pair must comply with RFC1035. Label values may be empty.
        /// 
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `effective_labels` for all of the labels present on the resource.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// Type of link requested. Note that this field indicates the speed of each of the links in the
        /// bundle, not the speed of the entire bundle. Can take one of the following values:
        /// - LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics.
        /// - LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics.
        /// Possible values are: `LINK_TYPE_ETHERNET_10G_LR`, `LINK_TYPE_ETHERNET_100G_LR`.
        /// </summary>
        [Output("linkType")]
        public Output<string> LinkType { get; private set; } = null!;

        /// <summary>
        /// URL of the InterconnectLocation object that represents where this connection is to be provisioned.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Configuration that enables Media Access Control security (MACsec) on the Cloud
        /// Interconnect connection between Google and your on-premises router.
        /// Structure is documented below.
        /// </summary>
        [Output("macsec")]
        public Output<Outputs.InterconnectMacsec?> Macsec { get; private set; } = null!;

        /// <summary>
        /// Enable or disable MACsec on this Interconnect connection.
        /// MACsec enablement fails if the MACsec object is not specified.
        /// </summary>
        [Output("macsecEnabled")]
        public Output<bool?> MacsecEnabled { get; private set; } = null!;

        /// <summary>
        /// Name of the resource. Provided by the client when the resource is created. The name must be
        /// 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters
        /// long and match the regular expression `a-z?` which means the first
        /// character must be a lowercase letter, and all following characters must be a dash,
        /// lowercase letter, or digit, except the last character, which cannot be a dash.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Email address to contact the customer NOC for operations and maintenance notifications
        /// regarding this Interconnect. If specified, this will be used for notifications in addition to
        /// all other forms described, such as Cloud Monitoring logs alerting and Cloud Notifications.
        /// This field is required for users who sign up for Cloud Interconnect using workforce identity
        /// federation.
        /// </summary>
        [Output("nocContactEmail")]
        public Output<string?> NocContactEmail { get; private set; } = null!;

        /// <summary>
        /// The current status of this Interconnect's functionality, which can take one of the following values:
        /// - OS_ACTIVE: A valid Interconnect, which is turned up and is ready to use. Attachments may
        /// be provisioned on this Interconnect.
        /// - OS_UNPROVISIONED: An Interconnect that has not completed turnup. No attachments may be
        /// provisioned on this Interconnect.
        /// - OS_UNDER_MAINTENANCE: An Interconnect that is undergoing internal maintenance. No
        /// attachments may be provisioned or updated on this Interconnect.
        /// </summary>
        [Output("operationalStatus")]
        public Output<string> OperationalStatus { get; private set; } = null!;

        /// <summary>
        /// IP address configured on the customer side of the Interconnect link.
        /// The customer should configure this IP address during turnup when prompted by Google NOC.
        /// This can be used only for ping tests.
        /// </summary>
        [Output("peerIpAddress")]
        public Output<string> PeerIpAddress { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Number of links actually provisioned in this interconnect.
        /// </summary>
        [Output("provisionedLinkCount")]
        public Output<int> ProvisionedLinkCount { get; private set; } = null!;

        /// <summary>
        /// The combination of labels configured directly on the resource
        /// and default labels configured on the provider.
        /// </summary>
        [Output("pulumiLabels")]
        public Output<ImmutableDictionary<string, string>> PulumiLabels { get; private set; } = null!;

        /// <summary>
        /// Indicates that this is a Cross-Cloud Interconnect. This field specifies the location outside
        /// of Google's network that the interconnect is connected to.
        /// </summary>
        [Output("remoteLocation")]
        public Output<string?> RemoteLocation { get; private set; } = null!;

        /// <summary>
        /// interconnects.list of features requested for this Interconnect connection. Options: MACSEC (
        /// If specified then the connection is created on MACsec capable hardware ports. If not
        /// specified, the default value is false, which allocates non-MACsec capable ports first if
        /// available).
        /// Each value may be one of: `MACSEC`.
        /// </summary>
        [Output("requestedFeatures")]
        public Output<ImmutableArray<string>> RequestedFeatures { get; private set; } = null!;

        /// <summary>
        /// Target number of physical links in the link bundle, as requested by the customer.
        /// </summary>
        [Output("requestedLinkCount")]
        public Output<int> RequestedLinkCount { get; private set; } = null!;

        /// <summary>
        /// Reserved for future use.
        /// </summary>
        [Output("satisfiesPzs")]
        public Output<bool> SatisfiesPzs { get; private set; } = null!;

        /// <summary>
        /// (Output)
        /// State of this notification. Note that the versions of this enum prefixed with "NS_" have
        /// been deprecated in favor of the unprefixed values. Can take one of the following values:
        /// - ACTIVE: This outage notification is active. The event could be in the past, present,
        /// or future. See startTime and endTime for scheduling.
        /// - CANCELLED: The outage associated with this notification was cancelled before the
        /// outage was due to start.
        /// - COMPLETED: The outage associated with this notification is complete.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;


        /// <summary>
        /// Create a Interconnect resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Interconnect(string name, InterconnectArgs args, CustomResourceOptions? options = null)
            : base("gcp:compute/interconnect:Interconnect", name, args ?? new InterconnectArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Interconnect(string name, Input<string> id, InterconnectState? state = null, CustomResourceOptions? options = null)
            : base("gcp:compute/interconnect:Interconnect", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "effectiveLabels",
                    "pulumiLabels",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Interconnect resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Interconnect Get(string name, Input<string> id, InterconnectState? state = null, CustomResourceOptions? options = null)
        {
            return new Interconnect(name, id, state, options);
        }
    }

    public sealed class InterconnectArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Administrative status of the interconnect. When this is set to true, the Interconnect is
        /// functional and can carry traffic. When set to false, no packets can be carried over the
        /// interconnect and no BGP routes are exchanged over it. By default, the status is set to true.
        /// </summary>
        [Input("adminEnabled")]
        public Input<bool>? AdminEnabled { get; set; }

        /// <summary>
        /// Customer name, to put in the Letter of Authorization as the party authorized to request a
        /// crossconnect.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("customerName", required: true)]
        public Input<string> CustomerName { get; set; } = null!;

        /// <summary>
        /// An optional description of this resource. Provide this property when you create the resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Type of interconnect. Note that a value IT_PRIVATE has been deprecated in favor of DEDICATED.
        /// Can take one of the following values:
        /// - PARTNER: A partner-managed interconnection shared between customers though a partner.
        /// - DEDICATED: A dedicated physical interconnection with the customer.
        /// Possible values are: `DEDICATED`, `PARTNER`, `IT_PRIVATE`.
        /// </summary>
        [Input("interconnectType", required: true)]
        public Input<string> InterconnectType { get; set; } = null!;

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Labels for this resource. These can only be added or modified by the setLabels
        /// method. Each label key/value pair must comply with RFC1035. Label values may be empty.
        /// 
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `effective_labels` for all of the labels present on the resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Type of link requested. Note that this field indicates the speed of each of the links in the
        /// bundle, not the speed of the entire bundle. Can take one of the following values:
        /// - LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics.
        /// - LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics.
        /// Possible values are: `LINK_TYPE_ETHERNET_10G_LR`, `LINK_TYPE_ETHERNET_100G_LR`.
        /// </summary>
        [Input("linkType", required: true)]
        public Input<string> LinkType { get; set; } = null!;

        /// <summary>
        /// URL of the InterconnectLocation object that represents where this connection is to be provisioned.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// Configuration that enables Media Access Control security (MACsec) on the Cloud
        /// Interconnect connection between Google and your on-premises router.
        /// Structure is documented below.
        /// </summary>
        [Input("macsec")]
        public Input<Inputs.InterconnectMacsecArgs>? Macsec { get; set; }

        /// <summary>
        /// Enable or disable MACsec on this Interconnect connection.
        /// MACsec enablement fails if the MACsec object is not specified.
        /// </summary>
        [Input("macsecEnabled")]
        public Input<bool>? MacsecEnabled { get; set; }

        /// <summary>
        /// Name of the resource. Provided by the client when the resource is created. The name must be
        /// 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters
        /// long and match the regular expression `a-z?` which means the first
        /// character must be a lowercase letter, and all following characters must be a dash,
        /// lowercase letter, or digit, except the last character, which cannot be a dash.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Email address to contact the customer NOC for operations and maintenance notifications
        /// regarding this Interconnect. If specified, this will be used for notifications in addition to
        /// all other forms described, such as Cloud Monitoring logs alerting and Cloud Notifications.
        /// This field is required for users who sign up for Cloud Interconnect using workforce identity
        /// federation.
        /// </summary>
        [Input("nocContactEmail")]
        public Input<string>? NocContactEmail { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Indicates that this is a Cross-Cloud Interconnect. This field specifies the location outside
        /// of Google's network that the interconnect is connected to.
        /// </summary>
        [Input("remoteLocation")]
        public Input<string>? RemoteLocation { get; set; }

        [Input("requestedFeatures")]
        private InputList<string>? _requestedFeatures;

        /// <summary>
        /// interconnects.list of features requested for this Interconnect connection. Options: MACSEC (
        /// If specified then the connection is created on MACsec capable hardware ports. If not
        /// specified, the default value is false, which allocates non-MACsec capable ports first if
        /// available).
        /// Each value may be one of: `MACSEC`.
        /// </summary>
        public InputList<string> RequestedFeatures
        {
            get => _requestedFeatures ?? (_requestedFeatures = new InputList<string>());
            set => _requestedFeatures = value;
        }

        /// <summary>
        /// Target number of physical links in the link bundle, as requested by the customer.
        /// </summary>
        [Input("requestedLinkCount", required: true)]
        public Input<int> RequestedLinkCount { get; set; } = null!;

        public InterconnectArgs()
        {
        }
        public static new InterconnectArgs Empty => new InterconnectArgs();
    }

    public sealed class InterconnectState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Administrative status of the interconnect. When this is set to true, the Interconnect is
        /// functional and can carry traffic. When set to false, no packets can be carried over the
        /// interconnect and no BGP routes are exchanged over it. By default, the status is set to true.
        /// </summary>
        [Input("adminEnabled")]
        public Input<bool>? AdminEnabled { get; set; }

        [Input("availableFeatures")]
        private InputList<string>? _availableFeatures;

        /// <summary>
        /// interconnects.list of features available for this Interconnect connection. Can take the value:
        /// MACSEC. If present then the Interconnect connection is provisioned on MACsec capable hardware
        /// ports. If not present then the Interconnect connection is provisioned on non-MACsec capable
        /// ports and MACsec isn't supported and enabling MACsec fails).
        /// </summary>
        public InputList<string> AvailableFeatures
        {
            get => _availableFeatures ?? (_availableFeatures = new InputList<string>());
            set => _availableFeatures = value;
        }

        [Input("circuitInfos")]
        private InputList<Inputs.InterconnectCircuitInfoGetArgs>? _circuitInfos;

        /// <summary>
        /// A list of CircuitInfo objects, that describe the individual circuits in this LAG.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.InterconnectCircuitInfoGetArgs> CircuitInfos
        {
            get => _circuitInfos ?? (_circuitInfos = new InputList<Inputs.InterconnectCircuitInfoGetArgs>());
            set => _circuitInfos = value;
        }

        /// <summary>
        /// Creation timestamp in RFC3339 text format.
        /// </summary>
        [Input("creationTimestamp")]
        public Input<string>? CreationTimestamp { get; set; }

        /// <summary>
        /// Customer name, to put in the Letter of Authorization as the party authorized to request a
        /// crossconnect.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("customerName")]
        public Input<string>? CustomerName { get; set; }

        /// <summary>
        /// An optional description of this resource. Provide this property when you create the resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("effectiveLabels")]
        private InputMap<string>? _effectiveLabels;

        /// <summary>
        /// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
        /// </summary>
        public InputMap<string> EffectiveLabels
        {
            get => _effectiveLabels ?? (_effectiveLabels = new InputMap<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableDictionary.Create<string, string>());
                _effectiveLabels = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        [Input("expectedOutages")]
        private InputList<Inputs.InterconnectExpectedOutageGetArgs>? _expectedOutages;

        /// <summary>
        /// A list of outages expected for this Interconnect.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.InterconnectExpectedOutageGetArgs> ExpectedOutages
        {
            get => _expectedOutages ?? (_expectedOutages = new InputList<Inputs.InterconnectExpectedOutageGetArgs>());
            set => _expectedOutages = value;
        }

        /// <summary>
        /// IP address configured on the Google side of the Interconnect link.
        /// This can be used only for ping tests.
        /// </summary>
        [Input("googleIpAddress")]
        public Input<string>? GoogleIpAddress { get; set; }

        /// <summary>
        /// Google reference ID to be used when raising support tickets with Google or otherwise to debug
        /// backend connectivity issues.
        /// </summary>
        [Input("googleReferenceId")]
        public Input<string>? GoogleReferenceId { get; set; }

        [Input("interconnectAttachments")]
        private InputList<string>? _interconnectAttachments;

        /// <summary>
        /// A list of the URLs of all InterconnectAttachments configured to use this Interconnect.
        /// </summary>
        public InputList<string> InterconnectAttachments
        {
            get => _interconnectAttachments ?? (_interconnectAttachments = new InputList<string>());
            set => _interconnectAttachments = value;
        }

        /// <summary>
        /// Type of interconnect. Note that a value IT_PRIVATE has been deprecated in favor of DEDICATED.
        /// Can take one of the following values:
        /// - PARTNER: A partner-managed interconnection shared between customers though a partner.
        /// - DEDICATED: A dedicated physical interconnection with the customer.
        /// Possible values are: `DEDICATED`, `PARTNER`, `IT_PRIVATE`.
        /// </summary>
        [Input("interconnectType")]
        public Input<string>? InterconnectType { get; set; }

        /// <summary>
        /// A fingerprint for the labels being applied to this Interconnect, which is essentially a hash
        /// of the labels set used for optimistic locking. The fingerprint is initially generated by
        /// Compute Engine and changes after every request to modify or update labels.
        /// You must always provide an up-to-date fingerprint hash in order to update or change labels,
        /// otherwise the request will fail with error 412 conditionNotMet.
        /// </summary>
        [Input("labelFingerprint")]
        public Input<string>? LabelFingerprint { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Labels for this resource. These can only be added or modified by the setLabels
        /// method. Each label key/value pair must comply with RFC1035. Label values may be empty.
        /// 
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `effective_labels` for all of the labels present on the resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Type of link requested. Note that this field indicates the speed of each of the links in the
        /// bundle, not the speed of the entire bundle. Can take one of the following values:
        /// - LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics.
        /// - LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics.
        /// Possible values are: `LINK_TYPE_ETHERNET_10G_LR`, `LINK_TYPE_ETHERNET_100G_LR`.
        /// </summary>
        [Input("linkType")]
        public Input<string>? LinkType { get; set; }

        /// <summary>
        /// URL of the InterconnectLocation object that represents where this connection is to be provisioned.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Configuration that enables Media Access Control security (MACsec) on the Cloud
        /// Interconnect connection between Google and your on-premises router.
        /// Structure is documented below.
        /// </summary>
        [Input("macsec")]
        public Input<Inputs.InterconnectMacsecGetArgs>? Macsec { get; set; }

        /// <summary>
        /// Enable or disable MACsec on this Interconnect connection.
        /// MACsec enablement fails if the MACsec object is not specified.
        /// </summary>
        [Input("macsecEnabled")]
        public Input<bool>? MacsecEnabled { get; set; }

        /// <summary>
        /// Name of the resource. Provided by the client when the resource is created. The name must be
        /// 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters
        /// long and match the regular expression `a-z?` which means the first
        /// character must be a lowercase letter, and all following characters must be a dash,
        /// lowercase letter, or digit, except the last character, which cannot be a dash.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Email address to contact the customer NOC for operations and maintenance notifications
        /// regarding this Interconnect. If specified, this will be used for notifications in addition to
        /// all other forms described, such as Cloud Monitoring logs alerting and Cloud Notifications.
        /// This field is required for users who sign up for Cloud Interconnect using workforce identity
        /// federation.
        /// </summary>
        [Input("nocContactEmail")]
        public Input<string>? NocContactEmail { get; set; }

        /// <summary>
        /// The current status of this Interconnect's functionality, which can take one of the following values:
        /// - OS_ACTIVE: A valid Interconnect, which is turned up and is ready to use. Attachments may
        /// be provisioned on this Interconnect.
        /// - OS_UNPROVISIONED: An Interconnect that has not completed turnup. No attachments may be
        /// provisioned on this Interconnect.
        /// - OS_UNDER_MAINTENANCE: An Interconnect that is undergoing internal maintenance. No
        /// attachments may be provisioned or updated on this Interconnect.
        /// </summary>
        [Input("operationalStatus")]
        public Input<string>? OperationalStatus { get; set; }

        /// <summary>
        /// IP address configured on the customer side of the Interconnect link.
        /// The customer should configure this IP address during turnup when prompted by Google NOC.
        /// This can be used only for ping tests.
        /// </summary>
        [Input("peerIpAddress")]
        public Input<string>? PeerIpAddress { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Number of links actually provisioned in this interconnect.
        /// </summary>
        [Input("provisionedLinkCount")]
        public Input<int>? ProvisionedLinkCount { get; set; }

        [Input("pulumiLabels")]
        private InputMap<string>? _pulumiLabels;

        /// <summary>
        /// The combination of labels configured directly on the resource
        /// and default labels configured on the provider.
        /// </summary>
        public InputMap<string> PulumiLabels
        {
            get => _pulumiLabels ?? (_pulumiLabels = new InputMap<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableDictionary.Create<string, string>());
                _pulumiLabels = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        /// <summary>
        /// Indicates that this is a Cross-Cloud Interconnect. This field specifies the location outside
        /// of Google's network that the interconnect is connected to.
        /// </summary>
        [Input("remoteLocation")]
        public Input<string>? RemoteLocation { get; set; }

        [Input("requestedFeatures")]
        private InputList<string>? _requestedFeatures;

        /// <summary>
        /// interconnects.list of features requested for this Interconnect connection. Options: MACSEC (
        /// If specified then the connection is created on MACsec capable hardware ports. If not
        /// specified, the default value is false, which allocates non-MACsec capable ports first if
        /// available).
        /// Each value may be one of: `MACSEC`.
        /// </summary>
        public InputList<string> RequestedFeatures
        {
            get => _requestedFeatures ?? (_requestedFeatures = new InputList<string>());
            set => _requestedFeatures = value;
        }

        /// <summary>
        /// Target number of physical links in the link bundle, as requested by the customer.
        /// </summary>
        [Input("requestedLinkCount")]
        public Input<int>? RequestedLinkCount { get; set; }

        /// <summary>
        /// Reserved for future use.
        /// </summary>
        [Input("satisfiesPzs")]
        public Input<bool>? SatisfiesPzs { get; set; }

        /// <summary>
        /// (Output)
        /// State of this notification. Note that the versions of this enum prefixed with "NS_" have
        /// been deprecated in favor of the unprefixed values. Can take one of the following values:
        /// - ACTIVE: This outage notification is active. The event could be in the past, present,
        /// or future. See startTime and endTime for scheduling.
        /// - CANCELLED: The outage associated with this notification was cancelled before the
        /// outage was due to start.
        /// - COMPLETED: The outage associated with this notification is complete.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public InterconnectState()
        {
        }
        public static new InterconnectState Empty => new InterconnectState();
    }
}
