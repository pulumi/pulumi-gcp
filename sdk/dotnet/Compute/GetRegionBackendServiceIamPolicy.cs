// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute
{
    public static class GetRegionBackendServiceIamPolicy
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Compute.GetRegionBackendServiceIamPolicy.Invoke(new()
        ///     {
        ///         Project = @default.Project,
        ///         Region = @default.Region,
        ///         Name = @default.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetRegionBackendServiceIamPolicyResult> InvokeAsync(GetRegionBackendServiceIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRegionBackendServiceIamPolicyResult>("gcp:compute/getRegionBackendServiceIamPolicy:getRegionBackendServiceIamPolicy", args ?? new GetRegionBackendServiceIamPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Compute.GetRegionBackendServiceIamPolicy.Invoke(new()
        ///     {
        ///         Project = @default.Project,
        ///         Region = @default.Region,
        ///         Name = @default.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRegionBackendServiceIamPolicyResult> Invoke(GetRegionBackendServiceIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRegionBackendServiceIamPolicyResult>("gcp:compute/getRegionBackendServiceIamPolicy:getRegionBackendServiceIamPolicy", args ?? new GetRegionBackendServiceIamPolicyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Compute.GetRegionBackendServiceIamPolicy.Invoke(new()
        ///     {
        ///         Project = @default.Project,
        ///         Region = @default.Region,
        ///         Name = @default.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRegionBackendServiceIamPolicyResult> Invoke(GetRegionBackendServiceIamPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRegionBackendServiceIamPolicyResult>("gcp:compute/getRegionBackendServiceIamPolicy:getRegionBackendServiceIamPolicy", args ?? new GetRegionBackendServiceIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRegionBackendServiceIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        /// <summary>
        /// The Region in which the created backend service should reside.
        /// If it is not provided, the provider region is used.
        /// Used to find the parent resource to bind the IAM policy to. If not specified,
        /// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
        /// region is specified, it is taken from the provider configuration.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        public GetRegionBackendServiceIamPolicyArgs()
        {
        }
        public static new GetRegionBackendServiceIamPolicyArgs Empty => new GetRegionBackendServiceIamPolicyArgs();
    }

    public sealed class GetRegionBackendServiceIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The Region in which the created backend service should reside.
        /// If it is not provided, the provider region is used.
        /// Used to find the parent resource to bind the IAM policy to. If not specified,
        /// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
        /// region is specified, it is taken from the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public GetRegionBackendServiceIamPolicyInvokeArgs()
        {
        }
        public static new GetRegionBackendServiceIamPolicyInvokeArgs Empty => new GetRegionBackendServiceIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetRegionBackendServiceIamPolicyResult
    {
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        /// <summary>
        /// (Required only by `gcp.compute.RegionBackendServiceIamPolicy`) The policy data generated by
        /// a `gcp.organizations.getIAMPolicy` data source.
        /// </summary>
        public readonly string PolicyData;
        public readonly string Project;
        public readonly string Region;

        [OutputConstructor]
        private GetRegionBackendServiceIamPolicyResult(
            string etag,

            string id,

            string name,

            string policyData,

            string project,

            string region)
        {
            Etag = etag;
            Id = id;
            Name = name;
            PolicyData = policyData;
            Project = project;
            Region = region;
        }
    }
}
