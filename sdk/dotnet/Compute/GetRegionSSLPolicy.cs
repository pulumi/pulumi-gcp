// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute
{
    public static class GetRegionSSLPolicy
    {
        public static Task<GetRegionSSLPolicyResult> InvokeAsync(GetRegionSSLPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRegionSSLPolicyResult>("gcp:compute/getRegionSSLPolicy:getRegionSSLPolicy", args ?? new GetRegionSSLPolicyArgs(), options.WithDefaults());

        public static Output<GetRegionSSLPolicyResult> Invoke(GetRegionSSLPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRegionSSLPolicyResult>("gcp:compute/getRegionSSLPolicy:getRegionSSLPolicy", args ?? new GetRegionSSLPolicyInvokeArgs(), options.WithDefaults());

        public static Output<GetRegionSSLPolicyResult> Invoke(GetRegionSSLPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRegionSSLPolicyResult>("gcp:compute/getRegionSSLPolicy:getRegionSSLPolicy", args ?? new GetRegionSSLPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRegionSSLPolicyArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        public GetRegionSSLPolicyArgs()
        {
        }
        public static new GetRegionSSLPolicyArgs Empty => new GetRegionSSLPolicyArgs();
    }

    public sealed class GetRegionSSLPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        public GetRegionSSLPolicyInvokeArgs()
        {
        }
        public static new GetRegionSSLPolicyInvokeArgs Empty => new GetRegionSSLPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetRegionSSLPolicyResult
    {
        public readonly string CreationTimestamp;
        public readonly ImmutableArray<string> CustomFeatures;
        public readonly string Description;
        public readonly ImmutableArray<string> EnabledFeatures;
        public readonly string Fingerprint;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string MinTlsVersion;
        public readonly string Name;
        public readonly string Profile;
        public readonly string? Project;
        public readonly string? Region;
        public readonly string SelfLink;

        [OutputConstructor]
        private GetRegionSSLPolicyResult(
            string creationTimestamp,

            ImmutableArray<string> customFeatures,

            string description,

            ImmutableArray<string> enabledFeatures,

            string fingerprint,

            string id,

            string minTlsVersion,

            string name,

            string profile,

            string? project,

            string? region,

            string selfLink)
        {
            CreationTimestamp = creationTimestamp;
            CustomFeatures = customFeatures;
            Description = description;
            EnabledFeatures = enabledFeatures;
            Fingerprint = fingerprint;
            Id = id;
            MinTlsVersion = minTlsVersion;
            Name = name;
            Profile = profile;
            Project = project;
            Region = region;
            SelfLink = selfLink;
        }
    }
}
