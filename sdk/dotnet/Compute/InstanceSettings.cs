// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute
{
    /// <summary>
    /// ## Example Usage
    /// ### Instance Settings Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var gceInstanceSettings = new Gcp.Compute.InstanceSettings("gceInstanceSettings", new()
    ///     {
    ///         Zone = "us-east7-b",
    ///         Metadata = new Gcp.Compute.Inputs.InstanceSettingsMetadataArgs
    ///         {
    ///             Items = 
    ///             {
    ///                 { "foo", "baz" },
    ///             },
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = google_beta,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// InstanceSettings can be imported using any of these accepted formats:
    /// 
    ///  * `projects/{{project}}/zones/{{zone}}/instanceSettings`
    /// 
    ///  * `{{project}}/{{zone}}`
    /// 
    ///  * `{{zone}}`
    /// 
    ///  When using the `pulumi import` command, InstanceSettings can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:compute/instanceSettings:InstanceSettings default projects/{{project}}/zones/{{zone}}/instanceSettings
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:compute/instanceSettings:InstanceSettings default {{project}}/{{zone}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:compute/instanceSettings:InstanceSettings default {{zone}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:compute/instanceSettings:InstanceSettings")]
    public partial class InstanceSettings : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The fingerprint used for optimistic locking of this resource.  Used
        /// internally during updates.
        /// </summary>
        [Output("fingerprint")]
        public Output<string> Fingerprint { get; private set; } = null!;

        /// <summary>
        /// The metadata key/value pairs assigned to all the instances in the corresponding scope.
        /// Structure is documented below.
        /// </summary>
        [Output("metadata")]
        public Output<Outputs.InstanceSettingsMetadata?> Metadata { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// A reference to the zone where the machine resides.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Output("zone")]
        public Output<string> Zone { get; private set; } = null!;


        /// <summary>
        /// Create a InstanceSettings resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InstanceSettings(string name, InstanceSettingsArgs args, CustomResourceOptions? options = null)
            : base("gcp:compute/instanceSettings:InstanceSettings", name, args ?? new InstanceSettingsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InstanceSettings(string name, Input<string> id, InstanceSettingsState? state = null, CustomResourceOptions? options = null)
            : base("gcp:compute/instanceSettings:InstanceSettings", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InstanceSettings resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InstanceSettings Get(string name, Input<string> id, InstanceSettingsState? state = null, CustomResourceOptions? options = null)
        {
            return new InstanceSettings(name, id, state, options);
        }
    }

    public sealed class InstanceSettingsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The metadata key/value pairs assigned to all the instances in the corresponding scope.
        /// Structure is documented below.
        /// </summary>
        [Input("metadata")]
        public Input<Inputs.InstanceSettingsMetadataArgs>? Metadata { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// A reference to the zone where the machine resides.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("zone", required: true)]
        public Input<string> Zone { get; set; } = null!;

        public InstanceSettingsArgs()
        {
        }
        public static new InstanceSettingsArgs Empty => new InstanceSettingsArgs();
    }

    public sealed class InstanceSettingsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The fingerprint used for optimistic locking of this resource.  Used
        /// internally during updates.
        /// </summary>
        [Input("fingerprint")]
        public Input<string>? Fingerprint { get; set; }

        /// <summary>
        /// The metadata key/value pairs assigned to all the instances in the corresponding scope.
        /// Structure is documented below.
        /// </summary>
        [Input("metadata")]
        public Input<Inputs.InstanceSettingsMetadataGetArgs>? Metadata { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// A reference to the zone where the machine resides.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public InstanceSettingsState()
        {
        }
        public static new InstanceSettingsState Empty => new InstanceSettingsState();
    }
}
