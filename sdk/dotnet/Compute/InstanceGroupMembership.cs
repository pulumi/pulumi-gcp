// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute
{
    /// <summary>
    /// Represents the Instance membership to the Instance Group.
    /// 
    /// &gt; **NOTE** You can use this resource instead of the `instances` field in the
    /// `gcp.compute.InstanceGroup`, however it's not recommended to use it alongside this field.
    /// It might cause inconsistencies, as they can end up competing over control.
    /// 
    /// &gt; **NOTE** This resource has been added to avoid a situation, where after
    /// Instance is recreated, it's removed from Instance Group and it's needed to
    /// perform `apply` twice. To avoid situations like this, please use this resource
    /// with the lifecycle `update_triggered_by` method, with the passed Instance's ID.
    /// 
    /// To get more information about InstanceGroupMembership, see:
    /// 
    /// * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/instanceGroups)
    /// * How-to Guides
    ///     * [Add instances](https://cloud.google.com/compute/docs/reference/rest/v1/instanceGroups/addInstances)
    ///     * [Remove instances](https://cloud.google.com/compute/docs/reference/rest/v1/instanceGroups/removeInstances)
    ///     * [List instances](https://cloud.google.com/compute/docs/reference/rest/v1/instanceGroups/listInstances)
    /// 
    /// ## Example Usage
    /// 
    /// ### Instance Group Membership
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var default_network = new Gcp.Compute.Network("default-network", new()
    ///     {
    ///         Name = "network",
    ///     });
    /// 
    ///     var default_instance = new Gcp.Compute.Instance("default-instance", new()
    ///     {
    ///         Name = "instance",
    ///         MachineType = "e2-medium",
    ///         BootDisk = new Gcp.Compute.Inputs.InstanceBootDiskArgs
    ///         {
    ///             InitializeParams = new Gcp.Compute.Inputs.InstanceBootDiskInitializeParamsArgs
    ///             {
    ///                 Image = "debian-cloud/debian-11",
    ///             },
    ///         },
    ///         NetworkInterfaces = new[]
    ///         {
    ///             new Gcp.Compute.Inputs.InstanceNetworkInterfaceArgs
    ///             {
    ///                 Network = default_network.Name,
    ///             },
    ///         },
    ///     });
    /// 
    ///     var default_instance_group = new Gcp.Compute.InstanceGroup("default-instance-group", new()
    ///     {
    ///         Name = "instance-group",
    ///     });
    /// 
    ///     var default_ig_membership = new Gcp.Compute.InstanceGroupMembership("default-ig-membership", new()
    ///     {
    ///         Instance = default_instance.SelfLink,
    ///         InstanceGroup = default_instance_group.Name,
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// 
    /// ## Import
    /// 
    /// InstanceGroupMembership can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/zones/{{zone}}/instanceGroups/{{instance_group}}/{{instance}}`
    /// 
    /// * `{{project}}/{{zone}}/{{instance_group}}/{{instance}}`
    /// 
    /// * `{{zone}}/{{instance_group}}/{{instance}}`
    /// 
    /// * `{{instance_group}}/{{instance}}`
    /// 
    /// When using the `pulumi import` command, InstanceGroupMembership can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:compute/instanceGroupMembership:InstanceGroupMembership default projects/{{project}}/zones/{{zone}}/instanceGroups/{{instance_group}}/{{instance}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:compute/instanceGroupMembership:InstanceGroupMembership default {{project}}/{{zone}}/{{instance_group}}/{{instance}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:compute/instanceGroupMembership:InstanceGroupMembership default {{zone}}/{{instance_group}}/{{instance}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:compute/instanceGroupMembership:InstanceGroupMembership default {{instance_group}}/{{instance}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:compute/instanceGroupMembership:InstanceGroupMembership")]
    public partial class InstanceGroupMembership : global::Pulumi.CustomResource
    {
        /// <summary>
        /// An instance being added to the InstanceGroup
        /// </summary>
        [Output("instance")]
        public Output<string> Instance { get; private set; } = null!;

        /// <summary>
        /// Represents an Instance Group resource name that the instance belongs to.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Output("instanceGroup")]
        public Output<string> InstanceGroup { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// A reference to the zone where the instance group resides.
        /// </summary>
        [Output("zone")]
        public Output<string?> Zone { get; private set; } = null!;


        /// <summary>
        /// Create a InstanceGroupMembership resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InstanceGroupMembership(string name, InstanceGroupMembershipArgs args, CustomResourceOptions? options = null)
            : base("gcp:compute/instanceGroupMembership:InstanceGroupMembership", name, args ?? new InstanceGroupMembershipArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InstanceGroupMembership(string name, Input<string> id, InstanceGroupMembershipState? state = null, CustomResourceOptions? options = null)
            : base("gcp:compute/instanceGroupMembership:InstanceGroupMembership", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InstanceGroupMembership resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InstanceGroupMembership Get(string name, Input<string> id, InstanceGroupMembershipState? state = null, CustomResourceOptions? options = null)
        {
            return new InstanceGroupMembership(name, id, state, options);
        }
    }

    public sealed class InstanceGroupMembershipArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// An instance being added to the InstanceGroup
        /// </summary>
        [Input("instance", required: true)]
        public Input<string> Instance { get; set; } = null!;

        /// <summary>
        /// Represents an Instance Group resource name that the instance belongs to.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("instanceGroup", required: true)]
        public Input<string> InstanceGroup { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// A reference to the zone where the instance group resides.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public InstanceGroupMembershipArgs()
        {
        }
        public static new InstanceGroupMembershipArgs Empty => new InstanceGroupMembershipArgs();
    }

    public sealed class InstanceGroupMembershipState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// An instance being added to the InstanceGroup
        /// </summary>
        [Input("instance")]
        public Input<string>? Instance { get; set; }

        /// <summary>
        /// Represents an Instance Group resource name that the instance belongs to.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("instanceGroup")]
        public Input<string>? InstanceGroup { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// A reference to the zone where the instance group resides.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public InstanceGroupMembershipState()
        {
        }
        public static new InstanceGroupMembershipState Empty => new InstanceGroupMembershipState();
    }
}
