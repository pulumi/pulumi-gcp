// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute
{
    public static class GetRegionInstanceGroup
    {
        /// <summary>
        /// Get a Compute Region Instance Group within GCE.
        /// For more information, see [the official documentation](https://cloud.google.com/compute/docs/instance-groups/distributing-instances-with-regional-instance-groups) and [API](https://cloud.google.com/compute/docs/reference/latest/regionInstanceGroups).
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var @group = Output.Create(Gcp.Compute.GetRegionInstanceGroup.InvokeAsync(new Gcp.Compute.GetRegionInstanceGroupArgs
        ///         {
        ///             Name = "instance-group-name",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// 
        /// The most common use of this datasource will be to fetch information about the instances inside regional managed instance groups, for instance:
        /// </summary>
        public static Task<GetRegionInstanceGroupResult> InvokeAsync(GetRegionInstanceGroupArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRegionInstanceGroupResult>("gcp:compute/getRegionInstanceGroup:getRegionInstanceGroup", args ?? new GetRegionInstanceGroupArgs(), options.WithVersion());
    }


    public sealed class GetRegionInstanceGroupArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the instance group.  One of `name` or `self_link` must be provided.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If `self_link` is provided, this value is ignored.  If neither `self_link`
        /// nor `project` are provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        /// <summary>
        /// The region in which the resource belongs.  If `self_link`
        /// is provided, this value is ignored.  If neither `self_link` nor `region` are
        /// provided, the provider region is used.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        /// <summary>
        /// The link to the instance group.  One of `name` or `self_link` must be provided.
        /// </summary>
        [Input("selfLink")]
        public string? SelfLink { get; set; }

        public GetRegionInstanceGroupArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetRegionInstanceGroupResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List of instances in the group, as a list of resources, each containing:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRegionInstanceGroupInstanceResult> Instances;
        /// <summary>
        /// String port name
        /// </summary>
        public readonly string Name;
        public readonly string Project;
        public readonly string Region;
        public readonly string SelfLink;
        /// <summary>
        /// The number of instances in the group.
        /// </summary>
        public readonly int Size;

        [OutputConstructor]
        private GetRegionInstanceGroupResult(
            string id,

            ImmutableArray<Outputs.GetRegionInstanceGroupInstanceResult> instances,

            string name,

            string project,

            string region,

            string selfLink,

            int size)
        {
            Id = id;
            Instances = instances;
            Name = name;
            Project = project;
            Region = region;
            SelfLink = selfLink;
            Size = size;
        }
    }
}
