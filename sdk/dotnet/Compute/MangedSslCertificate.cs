// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute
{
    public partial class MangedSslCertificate : Pulumi.CustomResource
    {
        [Output("certificateId")]
        public Output<int> CertificateId { get; private set; } = null!;

        [Output("creationTimestamp")]
        public Output<string> CreationTimestamp { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("expireTime")]
        public Output<string> ExpireTime { get; private set; } = null!;

        [Output("managed")]
        public Output<Outputs.MangedSslCertificateManaged?> Managed { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        [Output("selfLink")]
        public Output<string> SelfLink { get; private set; } = null!;

        [Output("subjectAlternativeNames")]
        public Output<ImmutableArray<string>> SubjectAlternativeNames { get; private set; } = null!;

        [Output("type")]
        public Output<string?> Type { get; private set; } = null!;


        /// <summary>
        /// Create a MangedSslCertificate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MangedSslCertificate(string name, MangedSslCertificateArgs? args = null, CustomResourceOptions? options = null)
            : base("gcp:compute/mangedSslCertificate:MangedSslCertificate", name, args, MakeResourceOptions(options, ""))
        {
        }

        private MangedSslCertificate(string name, Input<string> id, MangedSslCertificateState? state = null, CustomResourceOptions? options = null)
            : base("gcp:compute/mangedSslCertificate:MangedSslCertificate", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MangedSslCertificate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MangedSslCertificate Get(string name, Input<string> id, MangedSslCertificateState? state = null, CustomResourceOptions? options = null)
        {
            return new MangedSslCertificate(name, id, state, options);
        }
    }

    public sealed class MangedSslCertificateArgs : Pulumi.ResourceArgs
    {
        [Input("certificateId")]
        public Input<int>? CertificateId { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("managed")]
        public Input<Inputs.MangedSslCertificateManagedArgs>? Managed { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        public MangedSslCertificateArgs()
        {
        }
    }

    public sealed class MangedSslCertificateState : Pulumi.ResourceArgs
    {
        [Input("certificateId")]
        public Input<int>? CertificateId { get; set; }

        [Input("creationTimestamp")]
        public Input<string>? CreationTimestamp { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("expireTime")]
        public Input<string>? ExpireTime { get; set; }

        [Input("managed")]
        public Input<Inputs.MangedSslCertificateManagedGetArgs>? Managed { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("selfLink")]
        public Input<string>? SelfLink { get; set; }

        [Input("subjectAlternativeNames")]
        private InputList<string>? _subjectAlternativeNames;
        public InputList<string> SubjectAlternativeNames
        {
            get => _subjectAlternativeNames ?? (_subjectAlternativeNames = new InputList<string>());
            set => _subjectAlternativeNames = value;
        }

        [Input("type")]
        public Input<string>? Type { get; set; }

        public MangedSslCertificateState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class MangedSslCertificateManagedArgs : Pulumi.ResourceArgs
    {
        [Input("domains", required: true)]
        public Input<string> Domains { get; set; } = null!;

        public MangedSslCertificateManagedArgs()
        {
        }
    }

    public sealed class MangedSslCertificateManagedGetArgs : Pulumi.ResourceArgs
    {
        [Input("domains", required: true)]
        public Input<string> Domains { get; set; } = null!;

        public MangedSslCertificateManagedGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class MangedSslCertificateManaged
    {
        public readonly string Domains;

        [OutputConstructor]
        private MangedSslCertificateManaged(string domains)
        {
            Domains = domains;
        }
    }
    }
}
