// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute
{
    public static class GetInterconnectLocations
    {
        /// <summary>
        /// Get a list of interconnect locations. For more information see
        /// the official [API](https://cloud.google.com/compute/docs/reference/rest/v1/interconnectLocations/list) documentation.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = Gcp.Compute.GetInterconnectLocations.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["interconnectLocations"] = all.Apply(getInterconnectLocationsResult =&gt; getInterconnectLocationsResult.Locations),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetInterconnectLocationsResult> InvokeAsync(GetInterconnectLocationsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInterconnectLocationsResult>("gcp:compute/getInterconnectLocations:getInterconnectLocations", args ?? new GetInterconnectLocationsArgs(), options.WithDefaults());

        /// <summary>
        /// Get a list of interconnect locations. For more information see
        /// the official [API](https://cloud.google.com/compute/docs/reference/rest/v1/interconnectLocations/list) documentation.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = Gcp.Compute.GetInterconnectLocations.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["interconnectLocations"] = all.Apply(getInterconnectLocationsResult =&gt; getInterconnectLocationsResult.Locations),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetInterconnectLocationsResult> Invoke(GetInterconnectLocationsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInterconnectLocationsResult>("gcp:compute/getInterconnectLocations:getInterconnectLocations", args ?? new GetInterconnectLocationsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get a list of interconnect locations. For more information see
        /// the official [API](https://cloud.google.com/compute/docs/reference/rest/v1/interconnectLocations/list) documentation.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var all = Gcp.Compute.GetInterconnectLocations.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["interconnectLocations"] = all.Apply(getInterconnectLocationsResult =&gt; getInterconnectLocationsResult.Locations),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetInterconnectLocationsResult> Invoke(GetInterconnectLocationsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetInterconnectLocationsResult>("gcp:compute/getInterconnectLocations:getInterconnectLocations", args ?? new GetInterconnectLocationsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInterconnectLocationsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The project in which the resource belongs. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        public GetInterconnectLocationsArgs()
        {
        }
        public static new GetInterconnectLocationsArgs Empty => new GetInterconnectLocationsArgs();
    }

    public sealed class GetInterconnectLocationsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The project in which the resource belongs. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetInterconnectLocationsInvokeArgs()
        {
        }
        public static new GetInterconnectLocationsInvokeArgs Empty => new GetInterconnectLocationsInvokeArgs();
    }


    [OutputType]
    public sealed class GetInterconnectLocationsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of interconnect locations. Each location will have the following attributes:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInterconnectLocationsLocationResult> Locations;
        public readonly string Project;

        [OutputConstructor]
        private GetInterconnectLocationsResult(
            string id,

            ImmutableArray<Outputs.GetInterconnectLocationsLocationResult> locations,

            string project)
        {
            Id = id;
            Locations = locations;
            Project = project;
        }
    }
}
