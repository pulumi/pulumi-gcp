// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute
{
    public static class GetInstanceGuestAttributes
    {
        /// <summary>
        /// Get information about a VM instance resource within GCE. For more information see
        /// [the official documentation](https://cloud.google.com/compute/docs/instances)
        /// and
        /// [API](https://cloud.google.com/compute/docs/reference/latest/instances).
        /// 
        /// Get information about VM's guest attrubutes. For more information see [the official documentation](https://cloud.google.com/compute/docs/metadata/manage-guest-attributes)
        /// and
        /// [API](https://cloud.google.com/compute/docs/reference/rest/v1/instances/getGuestAttributes).
        /// 
        /// ## Example Usage
        /// 
        /// ### Get All Attributes From A Single Namespace
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var appserverGa = Gcp.Compute.GetInstanceGuestAttributes.Invoke(new()
        ///     {
        ///         Name = "primary-application-server",
        ///         Zone = "us-central1-a",
        ///         QueryPath = "variables/",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### Get A Specific Variable
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var appserverGa = Gcp.Compute.GetInstanceGuestAttributes.Invoke(new()
        ///     {
        ///         Name = "primary-application-server",
        ///         Zone = "us-central1-a",
        ///         VariableKey = "variables/key1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetInstanceGuestAttributesResult> InvokeAsync(GetInstanceGuestAttributesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInstanceGuestAttributesResult>("gcp:compute/getInstanceGuestAttributes:getInstanceGuestAttributes", args ?? new GetInstanceGuestAttributesArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a VM instance resource within GCE. For more information see
        /// [the official documentation](https://cloud.google.com/compute/docs/instances)
        /// and
        /// [API](https://cloud.google.com/compute/docs/reference/latest/instances).
        /// 
        /// Get information about VM's guest attrubutes. For more information see [the official documentation](https://cloud.google.com/compute/docs/metadata/manage-guest-attributes)
        /// and
        /// [API](https://cloud.google.com/compute/docs/reference/rest/v1/instances/getGuestAttributes).
        /// 
        /// ## Example Usage
        /// 
        /// ### Get All Attributes From A Single Namespace
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var appserverGa = Gcp.Compute.GetInstanceGuestAttributes.Invoke(new()
        ///     {
        ///         Name = "primary-application-server",
        ///         Zone = "us-central1-a",
        ///         QueryPath = "variables/",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### Get A Specific Variable
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var appserverGa = Gcp.Compute.GetInstanceGuestAttributes.Invoke(new()
        ///     {
        ///         Name = "primary-application-server",
        ///         Zone = "us-central1-a",
        ///         VariableKey = "variables/key1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetInstanceGuestAttributesResult> Invoke(GetInstanceGuestAttributesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInstanceGuestAttributesResult>("gcp:compute/getInstanceGuestAttributes:getInstanceGuestAttributes", args ?? new GetInstanceGuestAttributesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a VM instance resource within GCE. For more information see
        /// [the official documentation](https://cloud.google.com/compute/docs/instances)
        /// and
        /// [API](https://cloud.google.com/compute/docs/reference/latest/instances).
        /// 
        /// Get information about VM's guest attrubutes. For more information see [the official documentation](https://cloud.google.com/compute/docs/metadata/manage-guest-attributes)
        /// and
        /// [API](https://cloud.google.com/compute/docs/reference/rest/v1/instances/getGuestAttributes).
        /// 
        /// ## Example Usage
        /// 
        /// ### Get All Attributes From A Single Namespace
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var appserverGa = Gcp.Compute.GetInstanceGuestAttributes.Invoke(new()
        ///     {
        ///         Name = "primary-application-server",
        ///         Zone = "us-central1-a",
        ///         QueryPath = "variables/",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ### Get A Specific Variable
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var appserverGa = Gcp.Compute.GetInstanceGuestAttributes.Invoke(new()
        ///     {
        ///         Name = "primary-application-server",
        ///         Zone = "us-central1-a",
        ///         VariableKey = "variables/key1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetInstanceGuestAttributesResult> Invoke(GetInstanceGuestAttributesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetInstanceGuestAttributesResult>("gcp:compute/getInstanceGuestAttributes:getInstanceGuestAttributes", args ?? new GetInstanceGuestAttributesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInstanceGuestAttributesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name or SelfLink of the instance.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If `SelfLink` is provided, this value is ignored.  If neither `SelfLink`
        /// nor `Project` are provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        /// <summary>
        /// Path to query for the guest attributes. Consists of
        /// `Namespace` name for the attributes followed with a `/`.
        /// </summary>
        [Input("queryPath")]
        public string? QueryPath { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        /// <summary>
        /// Key of a variable to get the value of. Consists of
        /// `Namespace` name and `Key` name for the variable separated by a `/`.
        /// </summary>
        [Input("variableKey")]
        public string? VariableKey { get; set; }

        /// <summary>
        /// The zone of the instance. If `SelfLink` is provided, this
        /// value is ignored.  If neither `SelfLink` nor `Zone` are provided, the
        /// provider zone is used.
        /// </summary>
        [Input("zone")]
        public string? Zone { get; set; }

        public GetInstanceGuestAttributesArgs()
        {
        }
        public static new GetInstanceGuestAttributesArgs Empty => new GetInstanceGuestAttributesArgs();
    }

    public sealed class GetInstanceGuestAttributesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name or SelfLink of the instance.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If `SelfLink` is provided, this value is ignored.  If neither `SelfLink`
        /// nor `Project` are provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Path to query for the guest attributes. Consists of
        /// `Namespace` name for the attributes followed with a `/`.
        /// </summary>
        [Input("queryPath")]
        public Input<string>? QueryPath { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Key of a variable to get the value of. Consists of
        /// `Namespace` name and `Key` name for the variable separated by a `/`.
        /// </summary>
        [Input("variableKey")]
        public Input<string>? VariableKey { get; set; }

        /// <summary>
        /// The zone of the instance. If `SelfLink` is provided, this
        /// value is ignored.  If neither `SelfLink` nor `Zone` are provided, the
        /// provider zone is used.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public GetInstanceGuestAttributesInvokeArgs()
        {
        }
        public static new GetInstanceGuestAttributesInvokeArgs Empty => new GetInstanceGuestAttributesInvokeArgs();
    }


    [OutputType]
    public sealed class GetInstanceGuestAttributesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string Project;
        public readonly string? QueryPath;
        /// <summary>
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstanceGuestAttributesQueryValueResult> QueryValues;
        public readonly string Region;
        public readonly string? VariableKey;
        /// <summary>
        /// Value of the queried guest_attribute.
        /// </summary>
        public readonly string VariableValue;
        public readonly string Zone;

        [OutputConstructor]
        private GetInstanceGuestAttributesResult(
            string id,

            string name,

            string project,

            string? queryPath,

            ImmutableArray<Outputs.GetInstanceGuestAttributesQueryValueResult> queryValues,

            string region,

            string? variableKey,

            string variableValue,

            string zone)
        {
            Id = id;
            Name = name;
            Project = project;
            QueryPath = queryPath;
            QueryValues = queryValues;
            Region = region;
            VariableKey = variableKey;
            VariableValue = variableValue;
            Zone = zone;
        }
    }
}
