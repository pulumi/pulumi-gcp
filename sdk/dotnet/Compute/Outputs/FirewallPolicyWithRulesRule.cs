// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Outputs
{

    [OutputType]
    public sealed class FirewallPolicyWithRulesRule
    {
        /// <summary>
        /// The Action to perform when the client connection triggers the rule. Can currently be either
        /// "allow", "deny", "apply_security_profile_group" or "goto_next".
        /// </summary>
        public readonly string Action;
        /// <summary>
        /// A description of the rule.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The direction in which this rule applies. If unspecified an INGRESS rule is created.
        /// Possible values are: `INGRESS`, `EGRESS`.
        /// </summary>
        public readonly string? Direction;
        /// <summary>
        /// Denotes whether the firewall policy rule is disabled. When set to true,
        /// the firewall policy rule is not enforced and traffic behaves as if it did
        /// not exist. If this is unspecified, the firewall policy rule will be
        /// enabled.
        /// </summary>
        public readonly bool? Disabled;
        /// <summary>
        /// Denotes whether to enable logging for a particular rule.
        /// If logging is enabled, logs will be exported to the
        /// configured export destination in Stackdriver.
        /// </summary>
        public readonly bool? EnableLogging;
        /// <summary>
        /// A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding 'action' is enforced.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.FirewallPolicyWithRulesRuleMatch Match;
        /// <summary>
        /// An integer indicating the priority of a rule in the list. The priority must be a value
        /// between 0 and 2147483647. Rules are evaluated from highest to lowest priority where 0 is the
        /// highest priority and 2147483647 is the lowest priority.
        /// </summary>
        public readonly int Priority;
        /// <summary>
        /// An optional name for the rule. This field is not a unique identifier
        /// and can be updated.
        /// </summary>
        public readonly string? RuleName;
        /// <summary>
        /// A fully-qualified URL of a SecurityProfile resource instance.
        /// Example:
        /// https://networksecurity.googleapis.com/v1/projects/{project}/locations/{location}/securityProfileGroups/my-security-profile-group
        /// Must be specified if action is 'apply_security_profile_group'.
        /// </summary>
        public readonly string? SecurityProfileGroup;
        /// <summary>
        /// A list of network resource URLs to which this rule applies.
        /// This field allows you to control which network's VMs get
        /// this rule. If this field is left blank, all VMs
        /// within the organization will receive the rule.
        /// </summary>
        public readonly ImmutableArray<string> TargetResources;
        /// <summary>
        /// A list of service accounts indicating the sets of
        /// instances that are applied with this rule.
        /// </summary>
        public readonly ImmutableArray<string> TargetServiceAccounts;
        /// <summary>
        /// Boolean flag indicating if the traffic should be TLS decrypted.
        /// It can be set only if action = 'apply_security_profile_group' and cannot be set for other actions.
        /// </summary>
        public readonly bool? TlsInspect;

        [OutputConstructor]
        private FirewallPolicyWithRulesRule(
            string action,

            string? description,

            string? direction,

            bool? disabled,

            bool? enableLogging,

            Outputs.FirewallPolicyWithRulesRuleMatch match,

            int priority,

            string? ruleName,

            string? securityProfileGroup,

            ImmutableArray<string> targetResources,

            ImmutableArray<string> targetServiceAccounts,

            bool? tlsInspect)
        {
            Action = action;
            Description = description;
            Direction = direction;
            Disabled = disabled;
            EnableLogging = enableLogging;
            Match = match;
            Priority = priority;
            RuleName = ruleName;
            SecurityProfileGroup = securityProfileGroup;
            TargetResources = targetResources;
            TargetServiceAccounts = targetServiceAccounts;
            TlsInspect = tlsInspect;
        }
    }
}
