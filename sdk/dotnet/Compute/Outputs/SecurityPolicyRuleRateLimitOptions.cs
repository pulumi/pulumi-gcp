// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Outputs
{

    [OutputType]
    public sealed class SecurityPolicyRuleRateLimitOptions
    {
        /// <summary>
        /// Can only be specified if the `action` for the rule is "rate_based_ban".
        /// If specified, determines the time (in seconds) the traffic will continue to be banned by the rate limit after the rate falls below the threshold.
        /// </summary>
        public readonly int? BanDurationSec;
        /// <summary>
        /// Can only be specified if the `action` for the rule is "rate_based_ban".
        /// If specified, the key will be banned for the configured 'ban_duration_sec' when the number of requests that exceed the 'rate_limit_threshold' also
        /// exceed this 'ban_threshold'. Structure is documented below.
        /// </summary>
        public readonly Outputs.SecurityPolicyRuleRateLimitOptionsBanThreshold? BanThreshold;
        /// <summary>
        /// Action to take for requests that are under the configured rate limit threshold. Valid option is "allow" only.
        /// </summary>
        public readonly string ConformAction;
        /// <summary>
        /// Determines the key to enforce the rate_limit_threshold on. If not specified, defaults to "ALL".
        /// </summary>
        public readonly string? EnforceOnKey;
        /// <summary>
        /// Rate limit key name applicable only for the following key types: HTTP_HEADER -- Name of the HTTP header whose value is taken as the key value. HTTP_COOKIE -- Name of the HTTP cookie whose value is taken as the key value.
        /// </summary>
        public readonly string? EnforceOnKeyName;
        /// <summary>
        /// When a request is denied, returns the HTTP response code specified.
        /// Valid options are "deny()" where valid values for status are 403, 404, 429, and 502.
        /// </summary>
        public readonly string ExceedAction;
        public readonly Outputs.SecurityPolicyRuleRateLimitOptionsExceedRedirectOptions? ExceedRedirectOptions;
        /// <summary>
        /// Threshold at which to begin ratelimiting. Structure is documented below.
        /// </summary>
        public readonly Outputs.SecurityPolicyRuleRateLimitOptionsRateLimitThreshold RateLimitThreshold;

        [OutputConstructor]
        private SecurityPolicyRuleRateLimitOptions(
            int? banDurationSec,

            Outputs.SecurityPolicyRuleRateLimitOptionsBanThreshold? banThreshold,

            string conformAction,

            string? enforceOnKey,

            string? enforceOnKeyName,

            string exceedAction,

            Outputs.SecurityPolicyRuleRateLimitOptionsExceedRedirectOptions? exceedRedirectOptions,

            Outputs.SecurityPolicyRuleRateLimitOptionsRateLimitThreshold rateLimitThreshold)
        {
            BanDurationSec = banDurationSec;
            BanThreshold = banThreshold;
            ConformAction = conformAction;
            EnforceOnKey = enforceOnKey;
            EnforceOnKeyName = enforceOnKeyName;
            ExceedAction = exceedAction;
            ExceedRedirectOptions = exceedRedirectOptions;
            RateLimitThreshold = rateLimitThreshold;
        }
    }
}
