// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Outputs
{

    [OutputType]
    public sealed class GetInstanceBootDiskResult
    {
        /// <summary>
        /// Whether the disk will be auto-deleted when the instance is deleted.
        /// </summary>
        public readonly bool AutoDelete;
        /// <summary>
        /// Name with which the attached disk is accessible
        /// under `/dev/disk/by-id/`
        /// </summary>
        public readonly string DeviceName;
        public readonly string DiskEncryptionKeyRaw;
        public readonly string DiskEncryptionKeySha256;
        /// <summary>
        /// Parameters with which a disk was created alongside the instance.
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstanceBootDiskInitializeParamResult> InitializeParams;
        public readonly string KmsKeySelfLink;
        /// <summary>
        /// Read/write mode for the disk. One of `"READ_ONLY"` or `"READ_WRITE"`.
        /// </summary>
        public readonly string Mode;
        /// <summary>
        /// The name or self_link of the disk attached to this instance.
        /// </summary>
        public readonly string Source;

        [OutputConstructor]
        private GetInstanceBootDiskResult(
            bool autoDelete,

            string deviceName,

            string diskEncryptionKeyRaw,

            string diskEncryptionKeySha256,

            ImmutableArray<Outputs.GetInstanceBootDiskInitializeParamResult> initializeParams,

            string kmsKeySelfLink,

            string mode,

            string source)
        {
            AutoDelete = autoDelete;
            DeviceName = deviceName;
            DiskEncryptionKeyRaw = diskEncryptionKeyRaw;
            DiskEncryptionKeySha256 = diskEncryptionKeySha256;
            InitializeParams = initializeParams;
            KmsKeySelfLink = kmsKeySelfLink;
            Mode = mode;
            Source = source;
        }
    }
}
