// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Outputs
{

    [OutputType]
    public sealed class GetInterconnectLocationsLocationResult
    {
        /// <summary>
        /// The postal address of the Point of Presence.
        /// </summary>
        public readonly string Address;
        /// <summary>
        /// The availability zone for this InterconnectLocation.
        /// </summary>
        public readonly string AvailabilityZone;
        /// <summary>
        /// A list of features available at this InterconnectLocation.
        /// </summary>
        public readonly ImmutableArray<string> AvailableFeatures;
        /// <summary>
        /// A list of link types available at this InterconnectLocation.
        /// </summary>
        public readonly ImmutableArray<string> AvailableLinkTypes;
        /// <summary>
        /// The city for this location.
        /// </summary>
        public readonly string City;
        /// <summary>
        /// The continent for this location.
        /// </summary>
        public readonly string Continent;
        /// <summary>
        /// A textual description of the resource.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The name of the provider for this facility.
        /// </summary>
        public readonly string FacilityProvider;
        /// <summary>
        /// A provider-assigned Identifier for this facility.
        /// </summary>
        public readonly string FacilityProviderFacilityId;
        public readonly string Name;
        /// <summary>
        /// The PeeringDB facility ID for this facility.
        /// </summary>
        public readonly string PeeringdbFacilityId;
        /// <summary>
        /// The URI of the created resource.
        /// </summary>
        public readonly string SelfLink;
        /// <summary>
        /// The status of this InterconnectLocation.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Reserved for future use.
        /// </summary>
        public readonly bool SupportsPzs;

        [OutputConstructor]
        private GetInterconnectLocationsLocationResult(
            string address,

            string availabilityZone,

            ImmutableArray<string> availableFeatures,

            ImmutableArray<string> availableLinkTypes,

            string city,

            string continent,

            string description,

            string facilityProvider,

            string facilityProviderFacilityId,

            string name,

            string peeringdbFacilityId,

            string selfLink,

            string status,

            bool supportsPzs)
        {
            Address = address;
            AvailabilityZone = availabilityZone;
            AvailableFeatures = availableFeatures;
            AvailableLinkTypes = availableLinkTypes;
            City = city;
            Continent = continent;
            Description = description;
            FacilityProvider = facilityProvider;
            FacilityProviderFacilityId = facilityProviderFacilityId;
            Name = name;
            PeeringdbFacilityId = peeringdbFacilityId;
            SelfLink = selfLink;
            Status = status;
            SupportsPzs = supportsPzs;
        }
    }
}
