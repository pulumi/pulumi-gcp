// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Outputs
{

    [OutputType]
    public sealed class RegionBackendServiceOutlierDetection
    {
        public readonly Outputs.RegionBackendServiceOutlierDetectionBaseEjectionTime? BaseEjectionTime;
        public readonly int? ConsecutiveErrors;
        public readonly int? ConsecutiveGatewayFailure;
        public readonly int? EnforcingConsecutiveErrors;
        public readonly int? EnforcingConsecutiveGatewayFailure;
        public readonly int? EnforcingSuccessRate;
        public readonly Outputs.RegionBackendServiceOutlierDetectionInterval? Interval;
        public readonly int? MaxEjectionPercent;
        public readonly int? SuccessRateMinimumHosts;
        public readonly int? SuccessRateRequestVolume;
        public readonly int? SuccessRateStdevFactor;

        [OutputConstructor]
        private RegionBackendServiceOutlierDetection(
            Outputs.RegionBackendServiceOutlierDetectionBaseEjectionTime? baseEjectionTime,

            int? consecutiveErrors,

            int? consecutiveGatewayFailure,

            int? enforcingConsecutiveErrors,

            int? enforcingConsecutiveGatewayFailure,

            int? enforcingSuccessRate,

            Outputs.RegionBackendServiceOutlierDetectionInterval? interval,

            int? maxEjectionPercent,

            int? successRateMinimumHosts,

            int? successRateRequestVolume,

            int? successRateStdevFactor)
        {
            BaseEjectionTime = baseEjectionTime;
            ConsecutiveErrors = consecutiveErrors;
            ConsecutiveGatewayFailure = consecutiveGatewayFailure;
            EnforcingConsecutiveErrors = enforcingConsecutiveErrors;
            EnforcingConsecutiveGatewayFailure = enforcingConsecutiveGatewayFailure;
            EnforcingSuccessRate = enforcingSuccessRate;
            Interval = interval;
            MaxEjectionPercent = maxEjectionPercent;
            SuccessRateMinimumHosts = successRateMinimumHosts;
            SuccessRateRequestVolume = successRateRequestVolume;
            SuccessRateStdevFactor = successRateStdevFactor;
        }
    }
}
