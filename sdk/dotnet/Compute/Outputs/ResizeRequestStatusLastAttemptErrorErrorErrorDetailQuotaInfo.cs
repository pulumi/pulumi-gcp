// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Outputs
{

    [OutputType]
    public sealed class ResizeRequestStatusLastAttemptErrorErrorErrorDetailQuotaInfo
    {
        /// <summary>
        /// (Output)
        /// The map holding related quota dimensions
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Dimensions;
        /// <summary>
        /// (Output)
        /// Future quota limit being rolled out. The limit's unit depends on the quota type or metric.
        /// </summary>
        public readonly int? FutureLimit;
        /// <summary>
        /// (Output)
        /// Current effective quota limit. The limit's unit depends on the quota type or metric.
        /// </summary>
        public readonly int? Limit;
        /// <summary>
        /// (Output)
        /// The name of the quota limit.
        /// </summary>
        public readonly string? LimitName;
        /// <summary>
        /// (Output)
        /// The Compute Engine quota metric name.
        /// </summary>
        public readonly string? MetricName;
        /// <summary>
        /// (Output)
        /// Rollout status of the future quota limit.
        /// </summary>
        public readonly string? RolloutStatus;

        [OutputConstructor]
        private ResizeRequestStatusLastAttemptErrorErrorErrorDetailQuotaInfo(
            ImmutableDictionary<string, string>? dimensions,

            int? futureLimit,

            int? limit,

            string? limitName,

            string? metricName,

            string? rolloutStatus)
        {
            Dimensions = dimensions;
            FutureLimit = futureLimit;
            Limit = limit;
            LimitName = limitName;
            MetricName = metricName;
            RolloutStatus = rolloutStatus;
        }
    }
}
