// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Outputs
{

    [OutputType]
    public sealed class GetSecurityPolicyRuleResult
    {
        /// <summary>
        /// Action to take when match matches the request.
        /// </summary>
        public readonly string Action;
        /// <summary>
        /// An optional description of this rule. Max size is 64.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Additional actions that are performed on headers.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSecurityPolicyRuleHeaderActionResult> HeaderActions;
        /// <summary>
        /// A match condition that incoming traffic is evaluated against. If it evaluates to true, the corresponding action is enforced.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSecurityPolicyRuleMatchResult> Matches;
        /// <summary>
        /// Preconfigured WAF configuration to be applied for the rule. If the rule does not evaluate preconfigured WAF rules, i.e., if evaluatePreconfiguredWaf() is not used, this field will have no effect.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSecurityPolicyRulePreconfiguredWafConfigResult> PreconfiguredWafConfigs;
        /// <summary>
        /// When set to true, the action specified above is not enforced. Stackdriver logs for requests that trigger a preview action are annotated as such.
        /// </summary>
        public readonly bool Preview;
        /// <summary>
        /// An unique positive integer indicating the priority of evaluation for a rule. Rules are evaluated from highest priority (lowest numerically) to lowest priority (highest numerically) in order.
        /// </summary>
        public readonly int Priority;
        /// <summary>
        /// Rate limit threshold for this security policy. Must be specified if the action is "RateBasedBan" or "throttle". Cannot be specified for any other actions.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSecurityPolicyRuleRateLimitOptionResult> RateLimitOptions;
        /// <summary>
        /// Parameters defining the redirect action. Cannot be specified for any other actions.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSecurityPolicyRuleRedirectOptionResult> RedirectOptions;

        [OutputConstructor]
        private GetSecurityPolicyRuleResult(
            string action,

            string description,

            ImmutableArray<Outputs.GetSecurityPolicyRuleHeaderActionResult> headerActions,

            ImmutableArray<Outputs.GetSecurityPolicyRuleMatchResult> matches,

            ImmutableArray<Outputs.GetSecurityPolicyRulePreconfiguredWafConfigResult> preconfiguredWafConfigs,

            bool preview,

            int priority,

            ImmutableArray<Outputs.GetSecurityPolicyRuleRateLimitOptionResult> rateLimitOptions,

            ImmutableArray<Outputs.GetSecurityPolicyRuleRedirectOptionResult> redirectOptions)
        {
            Action = action;
            Description = description;
            HeaderActions = headerActions;
            Matches = matches;
            PreconfiguredWafConfigs = preconfiguredWafConfigs;
            Preview = preview;
            Priority = priority;
            RateLimitOptions = rateLimitOptions;
            RedirectOptions = redirectOptions;
        }
    }
}
