// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Outputs
{

    [OutputType]
    public sealed class ResourcePolicyInstanceSchedulePolicy
    {
        /// <summary>
        /// The expiration time of the schedule. The timestamp is an RFC3339 string.
        /// </summary>
        public readonly string? ExpirationTime;
        /// <summary>
        /// The start time of the schedule. The timestamp is an RFC3339 string.
        /// </summary>
        public readonly string? StartTime;
        /// <summary>
        /// Specifies the time zone to be used in interpreting the schedule. The value of this field must be a time zone name
        /// from the tz database: http://en.wikipedia.org/wiki/Tz_database.
        /// </summary>
        public readonly string TimeZone;
        /// <summary>
        /// Specifies the schedule for starting instances.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.ResourcePolicyInstanceSchedulePolicyVmStartSchedule? VmStartSchedule;
        /// <summary>
        /// Specifies the schedule for stopping instances.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.ResourcePolicyInstanceSchedulePolicyVmStopSchedule? VmStopSchedule;

        [OutputConstructor]
        private ResourcePolicyInstanceSchedulePolicy(
            string? expirationTime,

            string? startTime,

            string timeZone,

            Outputs.ResourcePolicyInstanceSchedulePolicyVmStartSchedule? vmStartSchedule,

            Outputs.ResourcePolicyInstanceSchedulePolicyVmStopSchedule? vmStopSchedule)
        {
            ExpirationTime = expirationTime;
            StartTime = startTime;
            TimeZone = timeZone;
            VmStartSchedule = vmStartSchedule;
            VmStopSchedule = vmStopSchedule;
        }
    }
}
