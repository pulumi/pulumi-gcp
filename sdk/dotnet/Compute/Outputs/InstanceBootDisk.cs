// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Outputs
{

    [OutputType]
    public sealed class InstanceBootDisk
    {
        /// <summary>
        /// Whether the disk will be auto-deleted when the instance
        /// is deleted. Defaults to true.
        /// </summary>
        public readonly bool? AutoDelete;
        /// <summary>
        /// Name with which attached disk will be accessible.
        /// On the instance, this device will be `/dev/disk/by-id/google-{{device_name}}`.
        /// </summary>
        public readonly string? DeviceName;
        /// <summary>
        /// A 256-bit [customer-supplied encryption key]
        /// (https://cloud.google.com/compute/docs/disks/customer-supplied-encryption),
        /// encoded in [RFC 4648 base64](https://tools.ietf.org/html/rfc4648#section-4)
        /// to encrypt this disk. Only one of `kms_key_self_link`, `disk_encryption_key_rsa` and `disk_encryption_key_raw`
        /// may be set.
        /// </summary>
        public readonly string? DiskEncryptionKeyRaw;
        /// <summary>
        /// Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit [customer-supplied encryption key]
        /// (https://cloud.google.com/compute/docs/disks/customer-supplied-encryption) to encrypt this disk. Only one of `kms_key_self_link`, `disk_encryption_key_rsa` and `disk_encryption_key_raw`
        /// </summary>
        public readonly string? DiskEncryptionKeyRsa;
        /// <summary>
        /// The [RFC 4648 base64](https://tools.ietf.org/html/rfc4648#section-4)
        /// encoded SHA-256 hash of the [customer-supplied encryption key]
        /// (https://cloud.google.com/compute/docs/disks/customer-supplied-encryption) that protects this resource.
        /// </summary>
        public readonly string? DiskEncryptionKeySha256;
        /// <summary>
        /// The service account being used for the encryption request for the given KMS key. If absent, the Compute Engine default service account is used.
        /// </summary>
        public readonly string? DiskEncryptionServiceAccount;
        /// <summary>
        /// boolean field that determines whether to force attach the regional
        /// disk even if it's currently attached to another instance. If you try to force attach a zonal
        /// disk to an instance, you will receive an error. Setting this parameter cause VM recreation.
        /// </summary>
        public readonly bool? ForceAttach;
        /// <summary>
        /// A list of features to enable on the guest operating system. Applicable only for bootable images. Read [Enabling guest operating system features](https://cloud.google.com/compute/docs/images/create-delete-deprecate-private-images#guest-os-features) to see a list of available options.
        /// </summary>
        public readonly ImmutableArray<string> GuestOsFeatures;
        /// <summary>
        /// Parameters for a new disk that will be created
        /// alongside the new instance. Either `initialize_params` or `source` must be set.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.InstanceBootDiskInitializeParams? InitializeParams;
        /// <summary>
        /// The disk interface used for attaching this disk. One of SCSI or NVME. (This field is shared with attached_disk and only used for specific cases, please don't specify this field without advice from Google.)
        /// </summary>
        public readonly string? Interface;
        /// <summary>
        /// The self_link of the encryption key that is
        /// stored in Google Cloud KMS to encrypt this disk. Only one of `kms_key_self_link`,
        /// `disk_encryption_key_rsa` and `disk_encryption_key_raw`
        /// may be set.
        /// </summary>
        public readonly string? KmsKeySelfLink;
        /// <summary>
        /// The mode in which to attach this disk, either `READ_WRITE`
        /// or `READ_ONLY`. If not specified, the default is to attach the disk in `READ_WRITE` mode.
        /// </summary>
        public readonly string? Mode;
        /// <summary>
        /// The name or self_link of the existing disk (such as those managed by
        /// `gcp.compute.Disk`) or disk image. To create an instance from a snapshot, first create a
        /// `gcp.compute.Disk` from a snapshot and reference it here.
        /// </summary>
        public readonly string? Source;

        [OutputConstructor]
        private InstanceBootDisk(
            bool? autoDelete,

            string? deviceName,

            string? diskEncryptionKeyRaw,

            string? diskEncryptionKeyRsa,

            string? diskEncryptionKeySha256,

            string? diskEncryptionServiceAccount,

            bool? forceAttach,

            ImmutableArray<string> guestOsFeatures,

            Outputs.InstanceBootDiskInitializeParams? initializeParams,

            string? @interface,

            string? kmsKeySelfLink,

            string? mode,

            string? source)
        {
            AutoDelete = autoDelete;
            DeviceName = deviceName;
            DiskEncryptionKeyRaw = diskEncryptionKeyRaw;
            DiskEncryptionKeyRsa = diskEncryptionKeyRsa;
            DiskEncryptionKeySha256 = diskEncryptionKeySha256;
            DiskEncryptionServiceAccount = diskEncryptionServiceAccount;
            ForceAttach = forceAttach;
            GuestOsFeatures = guestOsFeatures;
            InitializeParams = initializeParams;
            Interface = @interface;
            KmsKeySelfLink = kmsKeySelfLink;
            Mode = mode;
            Source = source;
        }
    }
}
