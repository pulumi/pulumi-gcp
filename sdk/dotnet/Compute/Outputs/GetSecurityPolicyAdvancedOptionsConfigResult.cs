// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Outputs
{

    [OutputType]
    public sealed class GetSecurityPolicyAdvancedOptionsConfigResult
    {
        /// <summary>
        /// Custom configuration to apply the JSON parsing. Only applicable when JSON parsing is set to STANDARD.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSecurityPolicyAdvancedOptionsConfigJsonCustomConfigResult> JsonCustomConfigs;
        /// <summary>
        /// JSON body parsing. Supported values include: "DISABLED", "STANDARD".
        /// </summary>
        public readonly string JsonParsing;
        /// <summary>
        /// Logging level. Supported values include: "NORMAL", "VERBOSE".
        /// </summary>
        public readonly string LogLevel;
        /// <summary>
        /// The maximum request size chosen by the customer with Waf enabled. Values supported are "8KB", "16KB, "32KB", "48KB" and "64KB". Values are case insensitive.
        /// </summary>
        public readonly string RequestBodyInspectionSize;
        /// <summary>
        /// An optional list of case-insensitive request header names to use for resolving the callers client IP address.
        /// </summary>
        public readonly ImmutableArray<string> UserIpRequestHeaders;

        [OutputConstructor]
        private GetSecurityPolicyAdvancedOptionsConfigResult(
            ImmutableArray<Outputs.GetSecurityPolicyAdvancedOptionsConfigJsonCustomConfigResult> jsonCustomConfigs,

            string jsonParsing,

            string logLevel,

            string requestBodyInspectionSize,

            ImmutableArray<string> userIpRequestHeaders)
        {
            JsonCustomConfigs = jsonCustomConfigs;
            JsonParsing = jsonParsing;
            LogLevel = logLevel;
            RequestBodyInspectionSize = requestBodyInspectionSize;
            UserIpRequestHeaders = userIpRequestHeaders;
        }
    }
}
