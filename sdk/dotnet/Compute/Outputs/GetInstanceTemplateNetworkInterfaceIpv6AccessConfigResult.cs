// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Outputs
{

    [OutputType]
    public sealed class GetInstanceTemplateNetworkInterfaceIpv6AccessConfigResult
    {
        /// <summary>
        /// The first IPv6 address of the external IPv6 range associated with this instance, prefix length is stored in externalIpv6PrefixLength in ipv6AccessConfig. The field is output only, an IPv6 address from a subnetwork associated with the instance will be allocated dynamically.
        /// </summary>
        public readonly string ExternalIpv6;
        /// <summary>
        /// The prefix length of the external IPv6 range.
        /// </summary>
        public readonly string ExternalIpv6PrefixLength;
        /// <summary>
        /// The name of the instance template. One of `name`, `filter` or `self_link_unique` must be provided.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The [networking tier][network-tier] used for configuring
        /// this instance template. This field can take the following values: PREMIUM or
        /// STANDARD. If this field is not specified, it is assumed to be PREMIUM.
        /// </summary>
        public readonly string NetworkTier;
        /// <summary>
        /// The domain name to be used when creating DNSv6 records for the external IPv6 ranges.
        /// </summary>
        public readonly string PublicPtrDomainName;

        [OutputConstructor]
        private GetInstanceTemplateNetworkInterfaceIpv6AccessConfigResult(
            string externalIpv6,

            string externalIpv6PrefixLength,

            string name,

            string networkTier,

            string publicPtrDomainName)
        {
            ExternalIpv6 = externalIpv6;
            ExternalIpv6PrefixLength = externalIpv6PrefixLength;
            Name = name;
            NetworkTier = networkTier;
            PublicPtrDomainName = publicPtrDomainName;
        }
    }
}
