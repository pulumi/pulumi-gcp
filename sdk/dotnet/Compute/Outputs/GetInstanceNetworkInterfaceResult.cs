// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Outputs
{

    [OutputType]
    public sealed class GetInstanceNetworkInterfaceResult
    {
        /// <summary>
        /// Access configurations, i.e. IPs via which this
        /// instance can be accessed via the Internet. Structure documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstanceNetworkInterfaceAccessConfigResult> AccessConfigs;
        /// <summary>
        /// An array of alias IP ranges for this network interface. Structure documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstanceNetworkInterfaceAliasIpRangeResult> AliasIpRanges;
        /// <summary>
        /// The name of the instance. One of `name` or `self_link` must be provided.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The name or self_link of the network attached to this interface.
        /// </summary>
        public readonly string Network;
        /// <summary>
        /// The private IP address assigned to the instance.
        /// </summary>
        public readonly string NetworkIp;
        public readonly string NicType;
        /// <summary>
        /// The name or self_link of the subnetwork attached to this interface.
        /// </summary>
        public readonly string Subnetwork;
        /// <summary>
        /// The project in which the subnetwork belongs.
        /// </summary>
        public readonly string SubnetworkProject;

        [OutputConstructor]
        private GetInstanceNetworkInterfaceResult(
            ImmutableArray<Outputs.GetInstanceNetworkInterfaceAccessConfigResult> accessConfigs,

            ImmutableArray<Outputs.GetInstanceNetworkInterfaceAliasIpRangeResult> aliasIpRanges,

            string name,

            string network,

            string networkIp,

            string nicType,

            string subnetwork,

            string subnetworkProject)
        {
            AccessConfigs = accessConfigs;
            AliasIpRanges = aliasIpRanges;
            Name = name;
            Network = network;
            NetworkIp = networkIp;
            NicType = nicType;
            Subnetwork = subnetwork;
            SubnetworkProject = subnetworkProject;
        }
    }
}
