// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Outputs
{

    [OutputType]
    public sealed class GetInstanceTemplateNetworkInterfaceResult
    {
        /// <summary>
        /// Access configurations, i.e. IPs via which this
        /// instance can be accessed via the Internet. Omit to ensure that the instance
        /// is not accessible from the Internet (this means that ssh provisioners will
        /// not work unless you are running the prvovider can send traffic to the instance's
        /// network (e.g. via tunnel or because it is running on another cloud instance
        /// on that network). This block can be repeated multiple times. Structure documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstanceTemplateNetworkInterfaceAccessConfigResult> AccessConfigs;
        /// <summary>
        /// An
        /// array of alias IP ranges for this network interface. Can only be specified for network
        /// interfaces on subnet-mode networks. Structure documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstanceTemplateNetworkInterfaceAliasIpRangeResult> AliasIpRanges;
        /// <summary>
        /// The name of the instance template. One of `name` or `filter` must be provided.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The name or self_link of the network to attach this interface to.
        /// Use `network` attribute for Legacy or Auto subnetted networks and
        /// `subnetwork` for custom subnetted networks.
        /// </summary>
        public readonly string Network;
        /// <summary>
        /// The private IP address to assign to the instance. If
        /// empty, the address will be automatically assigned.
        /// </summary>
        public readonly string NetworkIp;
        public readonly string NicType;
        /// <summary>
        /// the name of the subnetwork to attach this interface
        /// to. The subnetwork must exist in the same `region` this instance will be
        /// created in. Either `network` or `subnetwork` must be provided.
        /// </summary>
        public readonly string Subnetwork;
        /// <summary>
        /// The ID of the project in which the subnetwork belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        public readonly string SubnetworkProject;

        [OutputConstructor]
        private GetInstanceTemplateNetworkInterfaceResult(
            ImmutableArray<Outputs.GetInstanceTemplateNetworkInterfaceAccessConfigResult> accessConfigs,

            ImmutableArray<Outputs.GetInstanceTemplateNetworkInterfaceAliasIpRangeResult> aliasIpRanges,

            string name,

            string network,

            string networkIp,

            string nicType,

            string subnetwork,

            string subnetworkProject)
        {
            AccessConfigs = accessConfigs;
            AliasIpRanges = aliasIpRanges;
            Name = name;
            Network = network;
            NetworkIp = networkIp;
            NicType = nicType;
            Subnetwork = subnetwork;
            SubnetworkProject = subnetworkProject;
        }
    }
}
