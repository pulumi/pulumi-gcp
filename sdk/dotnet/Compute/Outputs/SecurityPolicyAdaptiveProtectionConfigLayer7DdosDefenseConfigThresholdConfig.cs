// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Outputs
{

    [OutputType]
    public sealed class SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigThresholdConfig
    {
        /// <summary>
        /// Confidence threshold above which Adaptive Protection's auto-deploy takes actions.
        /// </summary>
        public readonly double? AutoDeployConfidenceThreshold;
        /// <summary>
        /// Duration over which Adaptive Protection's auto-deployed actions last.
        /// </summary>
        public readonly int? AutoDeployExpirationSec;
        /// <summary>
        /// Impacted baseline threshold below which Adaptive Protection's auto-deploy takes actions.
        /// </summary>
        public readonly double? AutoDeployImpactedBaselineThreshold;
        /// <summary>
        /// Load threshold above which Adaptive Protection automatically deploy threshold based on the backend load threshold and detect a new rule during an alerted attack.
        /// </summary>
        public readonly double? AutoDeployLoadThreshold;
        /// <summary>
        /// Detection threshold based on absolute QPS.
        /// </summary>
        public readonly double? DetectionAbsoluteQps;
        /// <summary>
        /// Detection threshold based on the backend service's load.
        /// </summary>
        public readonly double? DetectionLoadThreshold;
        /// <summary>
        /// Detection threshold based on QPS relative to the average of baseline traffic.
        /// </summary>
        public readonly double? DetectionRelativeToBaselineQps;
        /// <summary>
        /// The name of config. The name must be 1-63 characters long, and comply with RFC1035. The name must be unique within the security policy.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Configuration options for enabling Adaptive Protection to work on the specified service granularity. Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigThresholdConfigTrafficGranularityConfig> TrafficGranularityConfigs;

        [OutputConstructor]
        private SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigThresholdConfig(
            double? autoDeployConfidenceThreshold,

            int? autoDeployExpirationSec,

            double? autoDeployImpactedBaselineThreshold,

            double? autoDeployLoadThreshold,

            double? detectionAbsoluteQps,

            double? detectionLoadThreshold,

            double? detectionRelativeToBaselineQps,

            string name,

            ImmutableArray<Outputs.SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfigThresholdConfigTrafficGranularityConfig> trafficGranularityConfigs)
        {
            AutoDeployConfidenceThreshold = autoDeployConfidenceThreshold;
            AutoDeployExpirationSec = autoDeployExpirationSec;
            AutoDeployImpactedBaselineThreshold = autoDeployImpactedBaselineThreshold;
            AutoDeployLoadThreshold = autoDeployLoadThreshold;
            DetectionAbsoluteQps = detectionAbsoluteQps;
            DetectionLoadThreshold = detectionLoadThreshold;
            DetectionRelativeToBaselineQps = detectionRelativeToBaselineQps;
            Name = name;
            TrafficGranularityConfigs = trafficGranularityConfigs;
        }
    }
}
