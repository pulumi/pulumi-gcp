// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Outputs
{

    [OutputType]
    public sealed class InstanceTemplateSchedulingGracefulShutdown
    {
        /// <summary>
        /// Opts-in for graceful shutdown.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// The time allotted for the instance to gracefully shut down.
        /// If the graceful shutdown isn't complete after this time, then the instance
        /// transitions to the STOPPING state. Structure is documented below:
        /// </summary>
        public readonly Outputs.InstanceTemplateSchedulingGracefulShutdownMaxDuration? MaxDuration;

        [OutputConstructor]
        private InstanceTemplateSchedulingGracefulShutdown(
            bool enabled,

            Outputs.InstanceTemplateSchedulingGracefulShutdownMaxDuration? maxDuration)
        {
            Enabled = enabled;
            MaxDuration = maxDuration;
        }
    }
}
