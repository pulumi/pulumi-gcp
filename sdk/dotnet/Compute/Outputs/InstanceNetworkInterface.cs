// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Outputs
{

    [OutputType]
    public sealed class InstanceNetworkInterface
    {
        /// <summary>
        /// Access configurations, i.e. IPs via which this
        /// instance can be accessed via the Internet. Omit to ensure that the instance
        /// is not accessible from the Internet. If omitted, ssh will not
        /// work unless this provider can send traffic to the instance's network (e.g. via
        /// tunnel or because it is running on another cloud instance on that network).
        /// This block can be repeated multiple times. Structure documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.InstanceNetworkInterfaceAccessConfig> AccessConfigs;
        /// <summary>
        /// An
        /// array of alias IP ranges for this network interface. Can only be specified for network
        /// interfaces on subnet-mode networks. Structure documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.InstanceNetworkInterfaceAliasIpRange> AliasIpRanges;
        /// <summary>
        /// A unique name for the resource, required by GCE.
        /// Changing this forces a new resource to be created.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// The name or self_link of the network to attach this interface to.
        /// Either `network` or `subnetwork` must be provided.
        /// </summary>
        public readonly string? Network;
        /// <summary>
        /// The private IP address to assign to the instance. If
        /// empty, the address will be automatically assigned.
        /// </summary>
        public readonly string? NetworkIp;
        /// <summary>
        /// The name or self_link of the subnetwork to attach this
        /// interface to. The subnetwork must exist in the same region this instance will be
        /// created in. Either `network` or `subnetwork` must be provided.
        /// </summary>
        public readonly string? Subnetwork;
        /// <summary>
        /// The project in which the subnetwork belongs.
        /// If the `subnetwork` is a self_link, this field is ignored in favor of the project
        /// defined in the subnetwork self_link. If the `subnetwork` is a name and this
        /// field is not provided, the provider project is used.
        /// </summary>
        public readonly string? SubnetworkProject;

        [OutputConstructor]
        private InstanceNetworkInterface(
            ImmutableArray<Outputs.InstanceNetworkInterfaceAccessConfig> accessConfigs,

            ImmutableArray<Outputs.InstanceNetworkInterfaceAliasIpRange> aliasIpRanges,

            string? name,

            string? network,

            string? networkIp,

            string? subnetwork,

            string? subnetworkProject)
        {
            AccessConfigs = accessConfigs;
            AliasIpRanges = aliasIpRanges;
            Name = name;
            Network = network;
            NetworkIp = networkIp;
            Subnetwork = subnetwork;
            SubnetworkProject = subnetworkProject;
        }
    }
}
