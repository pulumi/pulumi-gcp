// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Outputs
{

    [OutputType]
    public sealed class RegionPerInstanceConfigPreservedStateDisk
    {
        /// <summary>
        /// A value that prescribes what should happen to the stateful disk when the VM instance is deleted.
        /// The available options are `NEVER` and `ON_PERMANENT_INSTANCE_DELETION`.
        /// `NEVER` - detach the disk when the VM is deleted, but do not delete the disk.
        /// `ON_PERMANENT_INSTANCE_DELETION` will delete the stateful disk when the VM is permanently
        /// deleted from the instance group.
        /// Default value is `NEVER`.
        /// Possible values are: `NEVER`, `ON_PERMANENT_INSTANCE_DELETION`.
        /// </summary>
        public readonly string? DeleteRule;
        /// <summary>
        /// A unique device name that is reflected into the /dev/ tree of a Linux operating system running within the instance.
        /// </summary>
        public readonly string DeviceName;
        /// <summary>
        /// The mode of the disk.
        /// Default value is `READ_WRITE`.
        /// Possible values are: `READ_ONLY`, `READ_WRITE`.
        /// </summary>
        public readonly string? Mode;
        /// <summary>
        /// The URI of an existing persistent disk to attach under the specified device-name in the format
        /// `projects/project-id/zones/zone/disks/disk-name`.
        /// </summary>
        public readonly string Source;

        [OutputConstructor]
        private RegionPerInstanceConfigPreservedStateDisk(
            string? deleteRule,

            string deviceName,

            string? mode,

            string source)
        {
            DeleteRule = deleteRule;
            DeviceName = deviceName;
            Mode = mode;
            Source = source;
        }
    }
}
