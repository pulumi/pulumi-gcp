// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Outputs
{

    [OutputType]
    public sealed class RegionUrlMapPathMatcherRouteRuleRouteAction
    {
        public readonly Outputs.RegionUrlMapPathMatcherRouteRuleRouteActionCorsPolicy? CorsPolicy;
        public readonly Outputs.RegionUrlMapPathMatcherRouteRuleRouteActionFaultInjectionPolicy? FaultInjectionPolicy;
        public readonly Outputs.RegionUrlMapPathMatcherRouteRuleRouteActionRequestMirrorPolicy? RequestMirrorPolicy;
        public readonly Outputs.RegionUrlMapPathMatcherRouteRuleRouteActionRetryPolicy? RetryPolicy;
        public readonly Outputs.RegionUrlMapPathMatcherRouteRuleRouteActionTimeout? Timeout;
        public readonly Outputs.RegionUrlMapPathMatcherRouteRuleRouteActionUrlRewrite? UrlRewrite;
        public readonly ImmutableArray<Outputs.RegionUrlMapPathMatcherRouteRuleRouteActionWeightedBackendService> WeightedBackendServices;

        [OutputConstructor]
        private RegionUrlMapPathMatcherRouteRuleRouteAction(
            Outputs.RegionUrlMapPathMatcherRouteRuleRouteActionCorsPolicy? corsPolicy,

            Outputs.RegionUrlMapPathMatcherRouteRuleRouteActionFaultInjectionPolicy? faultInjectionPolicy,

            Outputs.RegionUrlMapPathMatcherRouteRuleRouteActionRequestMirrorPolicy? requestMirrorPolicy,

            Outputs.RegionUrlMapPathMatcherRouteRuleRouteActionRetryPolicy? retryPolicy,

            Outputs.RegionUrlMapPathMatcherRouteRuleRouteActionTimeout? timeout,

            Outputs.RegionUrlMapPathMatcherRouteRuleRouteActionUrlRewrite? urlRewrite,

            ImmutableArray<Outputs.RegionUrlMapPathMatcherRouteRuleRouteActionWeightedBackendService> weightedBackendServices)
        {
            CorsPolicy = corsPolicy;
            FaultInjectionPolicy = faultInjectionPolicy;
            RequestMirrorPolicy = requestMirrorPolicy;
            RetryPolicy = retryPolicy;
            Timeout = timeout;
            UrlRewrite = urlRewrite;
            WeightedBackendServices = weightedBackendServices;
        }
    }
}
