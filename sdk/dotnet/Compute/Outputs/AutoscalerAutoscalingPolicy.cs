// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Outputs
{

    [OutputType]
    public sealed class AutoscalerAutoscalingPolicy
    {
        /// <summary>
        /// The number of seconds that the autoscaler should wait before it
        /// starts collecting information from a new instance. This prevents
        /// the autoscaler from collecting information when the instance is
        /// initializing, during which the collected usage would not be
        /// reliable. The default time autoscaler waits is 60 seconds.
        /// Virtual machine initialization times might vary because of
        /// numerous factors. We recommend that you test how long an
        /// instance may take to initialize. To do this, create an instance
        /// and time the startup process.
        /// </summary>
        public readonly int? CooldownPeriod;
        /// <summary>
        /// Defines the CPU utilization policy that allows the autoscaler to
        /// scale based on the average CPU utilization of a managed instance
        /// group.  Structure is documented below.
        /// </summary>
        public readonly Outputs.AutoscalerAutoscalingPolicyCpuUtilization? CpuUtilization;
        /// <summary>
        /// Configuration parameters of autoscaling based on a load balancer.  Structure is documented below.
        /// </summary>
        public readonly Outputs.AutoscalerAutoscalingPolicyLoadBalancingUtilization? LoadBalancingUtilization;
        /// <summary>
        /// The maximum number of instances that the autoscaler can scale up
        /// to. This is required when creating or updating an autoscaler. The
        /// maximum number of replicas should not be lower than minimal number
        /// of replicas.
        /// </summary>
        public readonly int MaxReplicas;
        /// <summary>
        /// Configuration parameters of autoscaling based on a custom metric.  Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.AutoscalerAutoscalingPolicyMetric> Metrics;
        /// <summary>
        /// The minimum number of replicas that the autoscaler can scale down
        /// to. This cannot be less than 0. If not provided, autoscaler will
        /// choose a default value depending on maximum number of instances
        /// allowed.
        /// </summary>
        public readonly int MinReplicas;

        [OutputConstructor]
        private AutoscalerAutoscalingPolicy(
            int? cooldownPeriod,

            Outputs.AutoscalerAutoscalingPolicyCpuUtilization? cpuUtilization,

            Outputs.AutoscalerAutoscalingPolicyLoadBalancingUtilization? loadBalancingUtilization,

            int maxReplicas,

            ImmutableArray<Outputs.AutoscalerAutoscalingPolicyMetric> metrics,

            int minReplicas)
        {
            CooldownPeriod = cooldownPeriod;
            CpuUtilization = cpuUtilization;
            LoadBalancingUtilization = loadBalancingUtilization;
            MaxReplicas = maxReplicas;
            Metrics = metrics;
            MinReplicas = minReplicas;
        }
    }
}
