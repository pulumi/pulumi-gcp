// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Outputs
{

    [OutputType]
    public sealed class StoragePoolStatus
    {
        /// <summary>
        /// (Output)
        /// Number of disks used.
        /// </summary>
        public readonly string? DiskCount;
        /// <summary>
        /// (Output)
        /// Timestamp of the last successful resize in RFC3339 text format.
        /// </summary>
        public readonly string? LastResizeTimestamp;
        /// <summary>
        /// (Output)
        /// Maximum allowed aggregate disk size in gigabytes.
        /// </summary>
        public readonly string? MaxTotalProvisionedDiskCapacityGb;
        /// <summary>
        /// (Output)
        /// Space used by data stored in disks within the storage pool (in bytes).
        /// This will reflect the total number of bytes written to the disks in the pool, in contrast to the capacity of those disks.
        /// </summary>
        public readonly string? PoolUsedCapacityBytes;
        /// <summary>
        /// (Output)
        /// Sum of all the disks' provisioned IOPS, minus some amount that is allowed per disk that is not counted towards pool's IOPS capacity. For more information, see https://cloud.google.com/compute/docs/disks/storage-pools.
        /// </summary>
        public readonly string? PoolUsedIops;
        /// <summary>
        /// (Output)
        /// Sum of all the disks' provisioned throughput in MB/s.
        /// </summary>
        public readonly string? PoolUsedThroughput;
        /// <summary>
        /// (Output)
        /// Amount of data written into the pool, before it is compacted.
        /// </summary>
        public readonly string? PoolUserWrittenBytes;
        /// <summary>
        /// (Output)
        /// Sum of all the capacity provisioned in disks in this storage pool.
        /// A disk's provisioned capacity is the same as its total capacity.
        /// </summary>
        public readonly string? TotalProvisionedDiskCapacityGb;
        /// <summary>
        /// (Output)
        /// Sum of all the disks' provisioned IOPS.
        /// </summary>
        public readonly string? TotalProvisionedDiskIops;
        /// <summary>
        /// (Output)
        /// Sum of all the disks' provisioned throughput in MB/s,
        /// minus some amount that is allowed per disk that is not counted towards pool's throughput capacity.
        /// </summary>
        public readonly string? TotalProvisionedDiskThroughput;

        [OutputConstructor]
        private StoragePoolStatus(
            string? diskCount,

            string? lastResizeTimestamp,

            string? maxTotalProvisionedDiskCapacityGb,

            string? poolUsedCapacityBytes,

            string? poolUsedIops,

            string? poolUsedThroughput,

            string? poolUserWrittenBytes,

            string? totalProvisionedDiskCapacityGb,

            string? totalProvisionedDiskIops,

            string? totalProvisionedDiskThroughput)
        {
            DiskCount = diskCount;
            LastResizeTimestamp = lastResizeTimestamp;
            MaxTotalProvisionedDiskCapacityGb = maxTotalProvisionedDiskCapacityGb;
            PoolUsedCapacityBytes = poolUsedCapacityBytes;
            PoolUsedIops = poolUsedIops;
            PoolUsedThroughput = poolUsedThroughput;
            PoolUserWrittenBytes = poolUserWrittenBytes;
            TotalProvisionedDiskCapacityGb = totalProvisionedDiskCapacityGb;
            TotalProvisionedDiskIops = totalProvisionedDiskIops;
            TotalProvisionedDiskThroughput = totalProvisionedDiskThroughput;
        }
    }
}
