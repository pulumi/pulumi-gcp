// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Outputs
{

    [OutputType]
    public sealed class ImageShieldedInstanceInitialState
    {
        /// <summary>
        /// The Key Database (db).
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.ImageShieldedInstanceInitialStateDb> Dbs;
        /// <summary>
        /// The forbidden key database (dbx).
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.ImageShieldedInstanceInitialStateDbx> Dbxs;
        /// <summary>
        /// The Key Exchange Key (KEK).
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.ImageShieldedInstanceInitialStateKek> Keks;
        /// <summary>
        /// The Platform Key (PK).
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.ImageShieldedInstanceInitialStatePk? Pk;

        [OutputConstructor]
        private ImageShieldedInstanceInitialState(
            ImmutableArray<Outputs.ImageShieldedInstanceInitialStateDb> dbs,

            ImmutableArray<Outputs.ImageShieldedInstanceInitialStateDbx> dbxs,

            ImmutableArray<Outputs.ImageShieldedInstanceInitialStateKek> keks,

            Outputs.ImageShieldedInstanceInitialStatePk? pk)
        {
            Dbs = dbs;
            Dbxs = dbxs;
            Keks = keks;
            Pk = pk;
        }
    }
}
