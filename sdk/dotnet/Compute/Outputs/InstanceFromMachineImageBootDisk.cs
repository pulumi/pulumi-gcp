// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Outputs
{

    [OutputType]
    public sealed class InstanceFromMachineImageBootDisk
    {
        /// <summary>
        /// Whether the disk will be auto-deleted when the instance is deleted.
        /// </summary>
        public readonly bool? AutoDelete;
        /// <summary>
        /// Name with which attached disk will be accessible under /dev/disk/by-id/
        /// </summary>
        public readonly string? DeviceName;
        /// <summary>
        /// A 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to encrypt this disk. Only one of kms_key_self_link and disk_encryption_key_raw may be set.
        /// </summary>
        public readonly string? DiskEncryptionKeyRaw;
        /// <summary>
        /// The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.
        /// </summary>
        public readonly string? DiskEncryptionKeySha256;
        /// <summary>
        /// Parameters with which a disk was created alongside the instance.
        /// </summary>
        public readonly Outputs.InstanceFromMachineImageBootDiskInitializeParams? InitializeParams;
        /// <summary>
        /// The disk interface used for attaching this disk. One of SCSI or NVME. (This field is shared with attached_disk and only used for specific cases, please don't specify this field without advice from Google.)
        /// </summary>
        public readonly string? Interface;
        /// <summary>
        /// The self_link of the encryption key that is stored in Google Cloud KMS to encrypt this disk. Only one of kms_key_self_link and disk_encryption_key_raw may be set.
        /// </summary>
        public readonly string? KmsKeySelfLink;
        /// <summary>
        /// Read/write mode for the disk. One of "READ_ONLY" or "READ_WRITE".
        /// </summary>
        public readonly string? Mode;
        /// <summary>
        /// The name or self_link of the disk attached to this instance.
        /// </summary>
        public readonly string? Source;

        [OutputConstructor]
        private InstanceFromMachineImageBootDisk(
            bool? autoDelete,

            string? deviceName,

            string? diskEncryptionKeyRaw,

            string? diskEncryptionKeySha256,

            Outputs.InstanceFromMachineImageBootDiskInitializeParams? initializeParams,

            string? @interface,

            string? kmsKeySelfLink,

            string? mode,

            string? source)
        {
            AutoDelete = autoDelete;
            DeviceName = deviceName;
            DiskEncryptionKeyRaw = diskEncryptionKeyRaw;
            DiskEncryptionKeySha256 = diskEncryptionKeySha256;
            InitializeParams = initializeParams;
            Interface = @interface;
            KmsKeySelfLink = kmsKeySelfLink;
            Mode = mode;
            Source = source;
        }
    }
}
