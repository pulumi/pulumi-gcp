// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Outputs
{

    [OutputType]
    public sealed class URLMapPathMatcherPathRuleRouteAction
    {
        public readonly Outputs.URLMapPathMatcherPathRuleRouteActionCorsPolicy? CorsPolicy;
        public readonly Outputs.URLMapPathMatcherPathRuleRouteActionFaultInjectionPolicy? FaultInjectionPolicy;
        public readonly Outputs.URLMapPathMatcherPathRuleRouteActionRequestMirrorPolicy? RequestMirrorPolicy;
        public readonly Outputs.URLMapPathMatcherPathRuleRouteActionRetryPolicy? RetryPolicy;
        public readonly Outputs.URLMapPathMatcherPathRuleRouteActionTimeout? Timeout;
        public readonly Outputs.URLMapPathMatcherPathRuleRouteActionUrlRewrite? UrlRewrite;
        public readonly ImmutableArray<Outputs.URLMapPathMatcherPathRuleRouteActionWeightedBackendService> WeightedBackendServices;

        [OutputConstructor]
        private URLMapPathMatcherPathRuleRouteAction(
            Outputs.URLMapPathMatcherPathRuleRouteActionCorsPolicy? corsPolicy,

            Outputs.URLMapPathMatcherPathRuleRouteActionFaultInjectionPolicy? faultInjectionPolicy,

            Outputs.URLMapPathMatcherPathRuleRouteActionRequestMirrorPolicy? requestMirrorPolicy,

            Outputs.URLMapPathMatcherPathRuleRouteActionRetryPolicy? retryPolicy,

            Outputs.URLMapPathMatcherPathRuleRouteActionTimeout? timeout,

            Outputs.URLMapPathMatcherPathRuleRouteActionUrlRewrite? urlRewrite,

            ImmutableArray<Outputs.URLMapPathMatcherPathRuleRouteActionWeightedBackendService> weightedBackendServices)
        {
            CorsPolicy = corsPolicy;
            FaultInjectionPolicy = faultInjectionPolicy;
            RequestMirrorPolicy = requestMirrorPolicy;
            RetryPolicy = retryPolicy;
            Timeout = timeout;
            UrlRewrite = urlRewrite;
            WeightedBackendServices = weightedBackendServices;
        }
    }
}
