// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Outputs
{

    [OutputType]
    public sealed class SubnetworkLogConfig
    {
        /// <summary>
        /// Can only be specified if VPC flow logging for this subnetwork is enabled.
        /// Toggles the aggregation interval for collecting flow logs. Increasing the
        /// interval time will reduce the amount of generated flow logs for long
        /// lasting connections. Default is an interval of 5 seconds per connection.
        /// Possible values are INTERVAL_5_SEC, INTERVAL_30_SEC, INTERVAL_1_MIN,
        /// INTERVAL_5_MIN, INTERVAL_10_MIN, INTERVAL_15_MIN
        /// </summary>
        public readonly string? AggregationInterval;
        /// <summary>
        /// Can only be specified if VPC flow logging for this subnetwork is enabled.
        /// The value of the field must be in [0, 1]. Set the sampling rate of VPC
        /// flow logs within the subnetwork where 1.0 means all collected logs are
        /// reported and 0.0 means no logs are reported. Default is 0.5 which means
        /// half of all collected logs are reported.
        /// </summary>
        public readonly double? FlowSampling;
        /// <summary>
        /// Can only be specified if VPC flow logging for this subnetwork is enabled.
        /// Configures whether metadata fields should be added to the reported VPC
        /// flow logs. Default is `INCLUDE_ALL_METADATA`.
        /// </summary>
        public readonly string? Metadata;

        [OutputConstructor]
        private SubnetworkLogConfig(
            string? aggregationInterval,

            double? flowSampling,

            string? metadata)
        {
            AggregationInterval = aggregationInterval;
            FlowSampling = flowSampling;
            Metadata = metadata;
        }
    }
}
