// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Outputs
{

    [OutputType]
    public sealed class SecurityPolicyRule
    {
        /// <summary>
        /// Action to take when `match` matches the request. Valid values:
        /// * "allow" : allow access to target
        /// * "deny(status)" : deny access to target, returns the  HTTP response code specified (valid values are 403, 404 and 502)
        /// </summary>
        public readonly string Action;
        /// <summary>
        /// An optional description of this rule. Max size is 64.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// A match condition that incoming traffic is evaluated against.
        /// If it evaluates to true, the corresponding `action` is enforced. Structure is documented below.
        /// </summary>
        public readonly Outputs.SecurityPolicyRuleMatch Match;
        /// <summary>
        /// When set to true, the `action` specified above is not enforced.
        /// Stackdriver logs for requests that trigger a preview action are annotated as such.
        /// </summary>
        public readonly bool? Preview;
        /// <summary>
        /// An unique positive integer indicating the priority of evaluation for a rule.
        /// Rules are evaluated from highest priority (lowest numerically) to lowest priority (highest numerically) in order.
        /// </summary>
        public readonly int Priority;

        [OutputConstructor]
        private SecurityPolicyRule(
            string action,

            string? description,

            Outputs.SecurityPolicyRuleMatch match,

            bool? preview,

            int priority)
        {
            Action = action;
            Description = description;
            Match = match;
            Preview = preview;
            Priority = priority;
        }
    }
}
