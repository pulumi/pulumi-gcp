// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Outputs
{

    [OutputType]
    public sealed class RegionSecurityPolicyAdvancedOptionsConfig
    {
        /// <summary>
        /// Custom configuration to apply the JSON parsing. Only applicable when JSON parsing is set to STANDARD.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.RegionSecurityPolicyAdvancedOptionsConfigJsonCustomConfig? JsonCustomConfig;
        /// <summary>
        /// JSON body parsing. Supported values include: "DISABLED", "STANDARD", "STANDARD_WITH_GRAPHQL".
        /// Possible values are: `DISABLED`, `STANDARD`, `STANDARD_WITH_GRAPHQL`.
        /// </summary>
        public readonly string? JsonParsing;
        /// <summary>
        /// Logging level. Supported values include: "NORMAL", "VERBOSE".
        /// Possible values are: `NORMAL`, `VERBOSE`.
        /// </summary>
        public readonly string? LogLevel;
        /// <summary>
        /// The maximum request size chosen by the customer with Waf enabled. Values supported are "8KB", "16KB, "32KB", "48KB" and "64KB".
        /// Values are case insensitive.
        /// Possible values are: `8KB`, `16KB`, `32KB`, `48KB`, `64KB`.
        /// </summary>
        public readonly string? RequestBodyInspectionSize;
        /// <summary>
        /// An optional list of case-insensitive request header names to use for resolving the callers client IP address.
        /// </summary>
        public readonly ImmutableArray<string> UserIpRequestHeaders;

        [OutputConstructor]
        private RegionSecurityPolicyAdvancedOptionsConfig(
            Outputs.RegionSecurityPolicyAdvancedOptionsConfigJsonCustomConfig? jsonCustomConfig,

            string? jsonParsing,

            string? logLevel,

            string? requestBodyInspectionSize,

            ImmutableArray<string> userIpRequestHeaders)
        {
            JsonCustomConfig = jsonCustomConfig;
            JsonParsing = jsonParsing;
            LogLevel = logLevel;
            RequestBodyInspectionSize = requestBodyInspectionSize;
            UserIpRequestHeaders = userIpRequestHeaders;
        }
    }
}
