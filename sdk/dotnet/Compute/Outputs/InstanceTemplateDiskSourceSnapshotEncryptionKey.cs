// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Outputs
{

    [OutputType]
    public sealed class InstanceTemplateDiskSourceSnapshotEncryptionKey
    {
        /// <summary>
        /// The self link of the encryption key that is
        /// stored in Google Cloud KMS. Only one of `KmsKeySelfLink`, `RsaEncryptedKey` and `RawKey`
        /// may be set.
        /// </summary>
        public readonly string? KmsKeySelfLink;
        /// <summary>
        /// The service account being used for the
        /// encryption request for the given KMS key. If absent, the Compute Engine
        /// default service account is used.
        /// </summary>
        public readonly string? KmsKeyServiceAccount;
        /// <summary>
        /// A 256-bit [customer-supplied encryption key]
        /// (https://cloud.google.com/compute/docs/disks/customer-supplied-encryption),
        /// encoded in [RFC 4648 base64](https://tools.ietf.org/html/rfc4648#section-4)
        /// to decrypt this snapshot. Only one of `KmsKeySelfLink`, `RsaEncryptedKey` and `RawKey`
        /// may be set.
        /// </summary>
        public readonly string? RawKey;
        /// <summary>
        /// Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit [customer-supplied encryption key]
        /// (https://cloud.google.com/compute/docs/disks/customer-supplied-encryption) to decrypt this snapshot. Only one of `KmsKeySelfLink`, `RsaEncryptedKey` and `RawKey`
        /// may be set.
        /// </summary>
        public readonly string? RsaEncryptedKey;

        [OutputConstructor]
        private InstanceTemplateDiskSourceSnapshotEncryptionKey(
            string? kmsKeySelfLink,

            string? kmsKeyServiceAccount,

            string? rawKey,

            string? rsaEncryptedKey)
        {
            KmsKeySelfLink = kmsKeySelfLink;
            KmsKeyServiceAccount = kmsKeyServiceAccount;
            RawKey = rawKey;
            RsaEncryptedKey = rsaEncryptedKey;
        }
    }
}
