// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Inputs
{

    public sealed class BackendServiceCdnPolicyCacheKeyPolicyGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If true requests to different hosts will be cached separately.
        /// </summary>
        [Input("includeHost")]
        public Input<bool>? IncludeHost { get; set; }

        /// <summary>
        /// If true, http and https requests will be cached separately.
        /// </summary>
        [Input("includeProtocol")]
        public Input<bool>? IncludeProtocol { get; set; }

        /// <summary>
        /// If true, include query string parameters in the cache key
        /// according to query_string_whitelist and
        /// query_string_blacklist. If neither is set, the entire query
        /// string will be included.
        /// If false, the query string will be excluded from the cache
        /// key entirely.
        /// </summary>
        [Input("includeQueryString")]
        public Input<bool>? IncludeQueryString { get; set; }

        [Input("queryStringBlacklists")]
        private InputList<string>? _queryStringBlacklists;

        /// <summary>
        /// Names of query string parameters to exclude in cache keys.
        /// All other parameters will be included. Either specify
        /// query_string_whitelist or query_string_blacklist, not both.
        /// '&amp;' and '=' will be percent encoded and not treated as
        /// delimiters.
        /// </summary>
        public InputList<string> QueryStringBlacklists
        {
            get => _queryStringBlacklists ?? (_queryStringBlacklists = new InputList<string>());
            set => _queryStringBlacklists = value;
        }

        [Input("queryStringWhitelists")]
        private InputList<string>? _queryStringWhitelists;

        /// <summary>
        /// Names of query string parameters to include in cache keys.
        /// All other parameters will be excluded. Either specify
        /// query_string_whitelist or query_string_blacklist, not both.
        /// '&amp;' and '=' will be percent encoded and not treated as
        /// delimiters.
        /// </summary>
        public InputList<string> QueryStringWhitelists
        {
            get => _queryStringWhitelists ?? (_queryStringWhitelists = new InputList<string>());
            set => _queryStringWhitelists = value;
        }

        public BackendServiceCdnPolicyCacheKeyPolicyGetArgs()
        {
        }
    }
}
