// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Inputs
{

    public sealed class InstanceTemplateDiskGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether or not the disk should be auto-deleted.
        /// This defaults to true.
        /// </summary>
        [Input("autoDelete")]
        public Input<bool>? AutoDelete { get; set; }

        /// <summary>
        /// Indicates that this is a boot disk.
        /// </summary>
        [Input("boot")]
        public Input<bool>? Boot { get; set; }

        /// <summary>
        /// A unique device name that is reflected into the
        /// /dev/  tree of a Linux operating system running within the instance. If not
        /// specified, the server chooses a default device name to apply to this disk.
        /// </summary>
        [Input("deviceName")]
        public Input<string>? DeviceName { get; set; }

        /// <summary>
        /// Encrypts or decrypts a disk using a customer-supplied encryption key.
        /// </summary>
        [Input("diskEncryptionKey")]
        public Input<Inputs.InstanceTemplateDiskDiskEncryptionKeyGetArgs>? DiskEncryptionKey { get; set; }

        /// <summary>
        /// Name of the disk. When not provided, this defaults
        /// to the name of the instance.
        /// </summary>
        [Input("diskName")]
        public Input<string>? DiskName { get; set; }

        /// <summary>
        /// The size of the image in gigabytes. If not
        /// specified, it will inherit the size of its base image. For SCRATCH disks,
        /// the size must be exactly 375GB.
        /// </summary>
        [Input("diskSizeGb")]
        public Input<int>? DiskSizeGb { get; set; }

        /// <summary>
        /// The GCE disk type. Such as `"pd-ssd"`, `"local-ssd"`,
        /// `"pd-balanced"` or `"pd-standard"`.
        /// </summary>
        [Input("diskType")]
        public Input<string>? DiskType { get; set; }

        /// <summary>
        /// Specifies the disk interface to use for attaching this disk,
        /// which is either SCSI or NVME. The default is SCSI. Persistent disks must always use SCSI
        /// and the request will fail if you attempt to attach a persistent disk in any other format
        /// than SCSI. Local SSDs can use either NVME or SCSI.
        /// </summary>
        [Input("interface")]
        public Input<string>? Interface { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// A set of ket/value label pairs to assign to disk created from
        /// this template
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The mode in which to attach this disk, either READ_WRITE
        /// or READ_ONLY. If you are attaching or creating a boot disk, this must
        /// read-write mode.
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// -- A list (short name or id) of resource policies to attach to this disk for automatic snapshot creations. Currently a max of 1 resource policy is supported.
        /// </summary>
        [Input("resourcePolicies")]
        public Input<string>? ResourcePolicies { get; set; }

        /// <summary>
        /// The name (**not self_link**)
        /// of the disk (such as those managed by `gcp.compute.Disk`) to attach.
        /// &gt; **Note:** Either `source` or `source_image` is **required** in a disk block unless the disk type is `local-ssd`. Check the API [docs](https://cloud.google.com/compute/docs/reference/rest/v1/instanceTemplates/insert) for details.
        /// </summary>
        [Input("source")]
        public Input<string>? Source { get; set; }

        /// <summary>
        /// The image from which to
        /// initialize this disk. This can be one of: the image's `self_link`,
        /// `projects/{project}/global/images/{image}`,
        /// `projects/{project}/global/images/family/{family}`, `global/images/{image}`,
        /// `global/images/family/{family}`, `family/{family}`, `{project}/{family}`,
        /// `{project}/{image}`, `{family}`, or `{image}`.
        /// &gt; **Note:** Either `source` or `source_image` is **required** in a disk block unless the disk type is `local-ssd`. Check the API [docs](https://cloud.google.com/compute/docs/reference/rest/v1/instanceTemplates/insert) for details.
        /// </summary>
        [Input("sourceImage")]
        public Input<string>? SourceImage { get; set; }

        /// <summary>
        /// The type of reservation from which this instance can consume resources.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public InstanceTemplateDiskGetArgs()
        {
        }
        public static new InstanceTemplateDiskGetArgs Empty => new InstanceTemplateDiskGetArgs();
    }
}
