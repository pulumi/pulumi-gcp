// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Inputs
{

    public sealed class RegionUrlMapDefaultRouteActionGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the policy on how requests intended for the route's backends are shadowed to a separate mirrored backend service.
        /// The load balancer does not wait for responses from the shadow service. Before sending traffic to the shadow service, the host / authority header is suffixed with -shadow.
        /// Not supported when the URL map is bound to a target gRPC proxy that has the validateForProxyless field set to true.
        /// Structure is documented below.
        /// </summary>
        [Input("requestMirrorPolicy")]
        public Input<Inputs.RegionUrlMapDefaultRouteActionRequestMirrorPolicyGetArgs>? RequestMirrorPolicy { get; set; }

        /// <summary>
        /// Specifies the retry policy associated with this route.
        /// Structure is documented below.
        /// </summary>
        [Input("retryPolicy")]
        public Input<Inputs.RegionUrlMapDefaultRouteActionRetryPolicyGetArgs>? RetryPolicy { get; set; }

        [Input("weightedBackendServices")]
        private InputList<Inputs.RegionUrlMapDefaultRouteActionWeightedBackendServiceGetArgs>? _weightedBackendServices;

        /// <summary>
        /// A list of weighted backend services to send traffic to when a route match occurs. The weights determine the fraction of traffic that flows to their corresponding backend service. If all traffic needs to go to a single backend service, there must be one weightedBackendService with weight set to a non-zero number.
        /// After a backend service is identified and before forwarding the request to the backend service, advanced routing actions such as URL rewrites and header transformations are applied depending on additional settings specified in this HttpRouteAction.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.RegionUrlMapDefaultRouteActionWeightedBackendServiceGetArgs> WeightedBackendServices
        {
            get => _weightedBackendServices ?? (_weightedBackendServices = new InputList<Inputs.RegionUrlMapDefaultRouteActionWeightedBackendServiceGetArgs>());
            set => _weightedBackendServices = value;
        }

        public RegionUrlMapDefaultRouteActionGetArgs()
        {
        }
        public static new RegionUrlMapDefaultRouteActionGetArgs Empty => new RegionUrlMapDefaultRouteActionGetArgs();
    }
}
