// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Inputs
{

    public sealed class WireGroupWirePropertiesGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The configuration of a wire's bandwidth allocation.
        /// ALLOCATE_PER_WIRE: configures a separate unmetered bandwidth allocation (and associated charges) for each wire in the group.
        /// SHARED_WITH_WIRE_GROUP: this is the default behavior, which configures one unmetered bandwidth allocation for the wire group. The unmetered bandwidth is divided equally across each wire in the group, but dynamic
        /// throttling reallocates unused unmetered bandwidth from unused or underused wires to other wires in the group.
        /// </summary>
        [Input("bandwidthAllocation", required: true)]
        public Input<string> BandwidthAllocation { get; set; } = null!;

        /// <summary>
        /// The unmetered bandwidth setting.
        /// </summary>
        [Input("bandwidthUnmetered")]
        public Input<int>? BandwidthUnmetered { get; set; }

        /// <summary>
        /// Response when a fault is detected in a pseudowire:
        /// NONE: default.
        /// DISABLE_PORT: set the port line protocol down when inline probes detect a fault. This setting is only permitted on port mode pseudowires.
        /// </summary>
        [Input("faultResponse")]
        public Input<string>? FaultResponse { get; set; }

        public WireGroupWirePropertiesGetArgs()
        {
        }
        public static new WireGroupWirePropertiesGetArgs Empty => new WireGroupWirePropertiesGetArgs();
    }
}
