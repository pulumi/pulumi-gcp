// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Inputs
{

    public sealed class RouterRoutePolicyTermArgs : global::Pulumi.ResourceArgs
    {
        [Input("actions")]
        private InputList<Inputs.RouterRoutePolicyTermActionArgs>? _actions;

        /// <summary>
        /// 'CEL expressions to evaluate to modify a route when this term matches.'\
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.RouterRoutePolicyTermActionArgs> Actions
        {
            get => _actions ?? (_actions = new InputList<Inputs.RouterRoutePolicyTermActionArgs>());
            set => _actions = value;
        }

        /// <summary>
        /// CEL expression evaluated against a route to determine if this term applies (see Policy Language). When not set, the term applies to all routes.
        /// Structure is documented below.
        /// </summary>
        [Input("match")]
        public Input<Inputs.RouterRoutePolicyTermMatchArgs>? Match { get; set; }

        /// <summary>
        /// The evaluation priority for this term, which must be between 0 (inclusive) and 231 (exclusive), and unique within the list.
        /// </summary>
        [Input("priority", required: true)]
        public Input<int> Priority { get; set; } = null!;

        public RouterRoutePolicyTermArgs()
        {
        }
        public static new RouterRoutePolicyTermArgs Empty => new RouterRoutePolicyTermArgs();
    }
}
