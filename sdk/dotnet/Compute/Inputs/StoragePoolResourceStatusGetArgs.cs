// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Inputs
{

    public sealed class StoragePoolResourceStatusGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Output)
        /// Number of disks used.
        /// </summary>
        [Input("diskCount")]
        public Input<string>? DiskCount { get; set; }

        /// <summary>
        /// (Output)
        /// Timestamp of the last successful resize in RFC3339 text format.
        /// </summary>
        [Input("lastResizeTimestamp")]
        public Input<string>? LastResizeTimestamp { get; set; }

        /// <summary>
        /// (Output)
        /// Maximum allowed aggregate disk size in gigabytes.
        /// </summary>
        [Input("maxTotalProvisionedDiskCapacityGb")]
        public Input<string>? MaxTotalProvisionedDiskCapacityGb { get; set; }

        /// <summary>
        /// (Output)
        /// Space used by data stored in disks within the storage pool (in bytes).
        /// This will reflect the total number of bytes written to the disks in the pool, in contrast to the capacity of those disks.
        /// </summary>
        [Input("poolUsedCapacityBytes")]
        public Input<string>? PoolUsedCapacityBytes { get; set; }

        /// <summary>
        /// (Output)
        /// Sum of all the disks' provisioned IOPS, minus some amount that is allowed per disk that is not counted towards pool's IOPS capacity. For more information, see https://cloud.google.com/compute/docs/disks/storage-pools.
        /// </summary>
        [Input("poolUsedIops")]
        public Input<string>? PoolUsedIops { get; set; }

        /// <summary>
        /// (Output)
        /// Sum of all the disks' provisioned throughput in MB/s.
        /// </summary>
        [Input("poolUsedThroughput")]
        public Input<string>? PoolUsedThroughput { get; set; }

        /// <summary>
        /// (Output)
        /// Amount of data written into the pool, before it is compacted.
        /// </summary>
        [Input("poolUserWrittenBytes")]
        public Input<string>? PoolUserWrittenBytes { get; set; }

        /// <summary>
        /// (Output)
        /// Sum of all the capacity provisioned in disks in this storage pool.
        /// A disk's provisioned capacity is the same as its total capacity.
        /// </summary>
        [Input("totalProvisionedDiskCapacityGb")]
        public Input<string>? TotalProvisionedDiskCapacityGb { get; set; }

        /// <summary>
        /// (Output)
        /// Sum of all the disks' provisioned IOPS.
        /// </summary>
        [Input("totalProvisionedDiskIops")]
        public Input<string>? TotalProvisionedDiskIops { get; set; }

        /// <summary>
        /// (Output)
        /// Sum of all the disks' provisioned throughput in MB/s,
        /// minus some amount that is allowed per disk that is not counted towards pool's throughput capacity.
        /// </summary>
        [Input("totalProvisionedDiskThroughput")]
        public Input<string>? TotalProvisionedDiskThroughput { get; set; }

        public StoragePoolResourceStatusGetArgs()
        {
        }
        public static new StoragePoolResourceStatusGetArgs Empty => new StoragePoolResourceStatusGetArgs();
    }
}
