// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Inputs
{

    public sealed class NetworkFirewallPolicyPacketMirroringRuleMatchGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("destIpRanges")]
        private InputList<string>? _destIpRanges;

        /// <summary>
        /// CIDR IP address range. Maximum number of destination CIDR IP ranges allowed is 5000.
        /// </summary>
        public InputList<string> DestIpRanges
        {
            get => _destIpRanges ?? (_destIpRanges = new InputList<string>());
            set => _destIpRanges = value;
        }

        [Input("layer4Configs", required: true)]
        private InputList<Inputs.NetworkFirewallPolicyPacketMirroringRuleMatchLayer4ConfigGetArgs>? _layer4Configs;

        /// <summary>
        /// Pairs of IP protocols and ports that the rule should match.
        /// Structure is documented below.
        /// 
        /// 
        /// &lt;a name="nested_match_layer4_configs"&gt;&lt;/a&gt;The `layer4_configs` block supports:
        /// </summary>
        public InputList<Inputs.NetworkFirewallPolicyPacketMirroringRuleMatchLayer4ConfigGetArgs> Layer4Configs
        {
            get => _layer4Configs ?? (_layer4Configs = new InputList<Inputs.NetworkFirewallPolicyPacketMirroringRuleMatchLayer4ConfigGetArgs>());
            set => _layer4Configs = value;
        }

        [Input("srcIpRanges")]
        private InputList<string>? _srcIpRanges;

        /// <summary>
        /// CIDR IP address range. Maximum number of source CIDR IP ranges allowed is 5000.
        /// </summary>
        public InputList<string> SrcIpRanges
        {
            get => _srcIpRanges ?? (_srcIpRanges = new InputList<string>());
            set => _srcIpRanges = value;
        }

        public NetworkFirewallPolicyPacketMirroringRuleMatchGetArgs()
        {
        }
        public static new NetworkFirewallPolicyPacketMirroringRuleMatchGetArgs Empty => new NetworkFirewallPolicyPacketMirroringRuleMatchGetArgs();
    }
}
