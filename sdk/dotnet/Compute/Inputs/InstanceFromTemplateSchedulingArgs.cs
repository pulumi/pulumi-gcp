// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Inputs
{

    public sealed class InstanceFromTemplateSchedulingArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies if the instance should be restarted if it was terminated by Compute Engine (not a user).
        /// </summary>
        [Input("automaticRestart")]
        public Input<bool>? AutomaticRestart { get; set; }

        /// <summary>
        /// Specifies the availability domain, which this instance should be scheduled on.
        /// </summary>
        [Input("availabilityDomain")]
        public Input<int>? AvailabilityDomain { get; set; }

        /// <summary>
        /// Settings for the instance to perform a graceful shutdown.
        /// </summary>
        [Input("gracefulShutdown")]
        public Input<Inputs.InstanceFromTemplateSchedulingGracefulShutdownArgs>? GracefulShutdown { get; set; }

        /// <summary>
        /// Specify the time in seconds for host error detection, the value must be within the range of [90, 330] with the increment of 30, if unset, the default behavior of host error recovery will be used.
        /// </summary>
        [Input("hostErrorTimeoutSeconds")]
        public Input<int>? HostErrorTimeoutSeconds { get; set; }

        /// <summary>
        /// Specifies the action GCE should take when SPOT VM is preempted.
        /// </summary>
        [Input("instanceTerminationAction")]
        public Input<string>? InstanceTerminationAction { get; set; }

        /// <summary>
        /// Specifies the maximum amount of time a Local Ssd Vm should wait while
        ///   recovery of the Local Ssd state is attempted. Its value should be in
        ///   between 0 and 168 hours with hour granularity and the default value being 1
        ///   hour.
        /// </summary>
        [Input("localSsdRecoveryTimeout")]
        public Input<Inputs.InstanceFromTemplateSchedulingLocalSsdRecoveryTimeoutArgs>? LocalSsdRecoveryTimeout { get; set; }

        /// <summary>
        /// Specifies the frequency of planned maintenance events. The accepted values are: PERIODIC
        /// </summary>
        [Input("maintenanceInterval")]
        public Input<string>? MaintenanceInterval { get; set; }

        /// <summary>
        /// The timeout for new network connections to hosts.
        /// </summary>
        [Input("maxRunDuration")]
        public Input<Inputs.InstanceFromTemplateSchedulingMaxRunDurationArgs>? MaxRunDuration { get; set; }

        [Input("minNodeCpus")]
        public Input<int>? MinNodeCpus { get; set; }

        [Input("nodeAffinities")]
        private InputList<Inputs.InstanceFromTemplateSchedulingNodeAffinityArgs>? _nodeAffinities;

        /// <summary>
        /// Specifies node affinities or anti-affinities to determine which sole-tenant nodes your instances and managed instance groups will use as host systems.
        /// </summary>
        public InputList<Inputs.InstanceFromTemplateSchedulingNodeAffinityArgs> NodeAffinities
        {
            get => _nodeAffinities ?? (_nodeAffinities = new InputList<Inputs.InstanceFromTemplateSchedulingNodeAffinityArgs>());
            set => _nodeAffinities = value;
        }

        /// <summary>
        /// Describes maintenance behavior for the instance. One of MIGRATE or TERMINATE,
        /// </summary>
        [Input("onHostMaintenance")]
        public Input<string>? OnHostMaintenance { get; set; }

        /// <summary>
        /// Defines the behaviour for instances with the instance_termination_action.
        /// </summary>
        [Input("onInstanceStopAction")]
        public Input<Inputs.InstanceFromTemplateSchedulingOnInstanceStopActionArgs>? OnInstanceStopAction { get; set; }

        /// <summary>
        /// Whether the instance is preemptible.
        /// </summary>
        [Input("preemptible")]
        public Input<bool>? Preemptible { get; set; }

        /// <summary>
        /// Whether the instance is spot. If this is set as SPOT.
        /// </summary>
        [Input("provisioningModel")]
        public Input<string>? ProvisioningModel { get; set; }

        /// <summary>
        /// Default is false and there will be 120 seconds between GCE ACPI G2 Soft Off and ACPI G3 Mechanical Off for Standard VMs and 30 seconds for Spot VMs.
        /// </summary>
        [Input("skipGuestOsShutdown")]
        public Input<bool>? SkipGuestOsShutdown { get; set; }

        /// <summary>
        /// Specifies the timestamp, when the instance will be terminated,
        /// in RFC3339 text format. If specified, the instance termination action
        /// will be performed at the termination time.
        /// </summary>
        [Input("terminationTime")]
        public Input<string>? TerminationTime { get; set; }

        public InstanceFromTemplateSchedulingArgs()
        {
        }
        public static new InstanceFromTemplateSchedulingArgs Empty => new InstanceFromTemplateSchedulingArgs();
    }
}
