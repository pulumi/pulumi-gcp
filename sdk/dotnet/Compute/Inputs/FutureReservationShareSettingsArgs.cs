// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Inputs
{

    public sealed class FutureReservationShareSettingsArgs : global::Pulumi.ResourceArgs
    {
        [Input("projectMaps")]
        private InputList<Inputs.FutureReservationShareSettingsProjectMapArgs>? _projectMaps;

        /// <summary>
        /// A map of project id and project config. This is only valid when shareType's value is SPECIFIC_PROJECTS.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.FutureReservationShareSettingsProjectMapArgs> ProjectMaps
        {
            get => _projectMaps ?? (_projectMaps = new InputList<Inputs.FutureReservationShareSettingsProjectMapArgs>());
            set => _projectMaps = value;
        }

        [Input("projects")]
        private InputList<string>? _projects;

        /// <summary>
        /// list of Project names to specify consumer projects for this shared-reservation. This is only valid when shareType's value is SPECIFIC_PROJECTS.
        /// </summary>
        public InputList<string> Projects
        {
            get => _projects ?? (_projects = new InputList<string>());
            set => _projects = value;
        }

        /// <summary>
        /// Type of sharing for this future reservation.
        /// Possible values are: `LOCAL`, `SPECIFIC_PROJECTS`.
        /// </summary>
        [Input("shareType")]
        public Input<string>? ShareType { get; set; }

        public FutureReservationShareSettingsArgs()
        {
        }
        public static new FutureReservationShareSettingsArgs Empty => new FutureReservationShareSettingsArgs();
    }
}
