// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Inputs
{

    public sealed class URLMapPathMatcherDefaultCustomErrorResponsePolicyErrorResponseRuleArgs : global::Pulumi.ResourceArgs
    {
        [Input("matchResponseCodes")]
        private InputList<string>? _matchResponseCodes;

        /// <summary>
        /// Valid values include:
        /// - A number between 400 and 599: For example 401 or 503, in which case the load balancer applies the policy if the error code exactly matches this value.
        /// - 5xx: Load Balancer will apply the policy if the backend service responds with any response code in the range of 500 to 599.
        /// - 4xx: Load Balancer will apply the policy if the backend service responds with any response code in the range of 400 to 499.
        /// Values must be unique within matchResponseCodes and across all errorResponseRules of CustomErrorResponsePolicy.
        /// </summary>
        public InputList<string> MatchResponseCodes
        {
            get => _matchResponseCodes ?? (_matchResponseCodes = new InputList<string>());
            set => _matchResponseCodes = value;
        }

        /// <summary>
        /// The HTTP status code returned with the response containing the custom error content.
        /// If overrideResponseCode is not supplied, the same response code returned by the original backend bucket or backend service is returned to the client.
        /// </summary>
        [Input("overrideResponseCode")]
        public Input<int>? OverrideResponseCode { get; set; }

        /// <summary>
        /// The full path to a file within backendBucket. For example: /errors/defaultError.html
        /// path must start with a leading slash. path cannot have trailing slashes.
        /// If the file is not available in backendBucket or the load balancer cannot reach the BackendBucket, a simple Not Found Error is returned to the client.
        /// The value must be from 1 to 1024 characters.
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        public URLMapPathMatcherDefaultCustomErrorResponsePolicyErrorResponseRuleArgs()
        {
        }
        public static new URLMapPathMatcherDefaultCustomErrorResponsePolicyErrorResponseRuleArgs Empty => new URLMapPathMatcherDefaultCustomErrorResponsePolicyErrorResponseRuleArgs();
    }
}
