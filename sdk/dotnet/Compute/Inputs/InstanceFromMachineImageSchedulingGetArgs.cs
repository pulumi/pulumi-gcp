// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Inputs
{

    public sealed class InstanceFromMachineImageSchedulingGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies if the instance should be restarted if it was terminated by Compute Engine (not a user).
        /// </summary>
        [Input("automaticRestart")]
        public Input<bool>? AutomaticRestart { get; set; }

        /// <summary>
        /// Specifies the action GCE should take when SPOT VM is preempted.
        /// </summary>
        [Input("instanceTerminationAction")]
        public Input<string>? InstanceTerminationAction { get; set; }

        /// <summary>
        /// Specifies the maximum amount of time a Local Ssd Vm should wait while
        ///   recovery of the Local Ssd state is attempted. Its value should be in
        ///   between 0 and 168 hours with hour granularity and the default value being 1
        ///   hour.
        /// </summary>
        [Input("localSsdRecoveryTimeout")]
        public Input<Inputs.InstanceFromMachineImageSchedulingLocalSsdRecoveryTimeoutGetArgs>? LocalSsdRecoveryTimeout { get; set; }

        /// <summary>
        /// Specifies the frequency of planned maintenance events. The accepted values are: PERIODIC
        /// </summary>
        [Input("maintenanceInterval")]
        public Input<string>? MaintenanceInterval { get; set; }

        /// <summary>
        /// The timeout for new network connections to hosts.
        /// </summary>
        [Input("maxRunDuration")]
        public Input<Inputs.InstanceFromMachineImageSchedulingMaxRunDurationGetArgs>? MaxRunDuration { get; set; }

        [Input("minNodeCpus")]
        public Input<int>? MinNodeCpus { get; set; }

        [Input("nodeAffinities")]
        private InputList<Inputs.InstanceFromMachineImageSchedulingNodeAffinityGetArgs>? _nodeAffinities;

        /// <summary>
        /// Specifies node affinities or anti-affinities to determine which sole-tenant nodes your instances and managed instance groups will use as host systems.
        /// </summary>
        public InputList<Inputs.InstanceFromMachineImageSchedulingNodeAffinityGetArgs> NodeAffinities
        {
            get => _nodeAffinities ?? (_nodeAffinities = new InputList<Inputs.InstanceFromMachineImageSchedulingNodeAffinityGetArgs>());
            set => _nodeAffinities = value;
        }

        /// <summary>
        /// Describes maintenance behavior for the instance. One of MIGRATE or TERMINATE,
        /// </summary>
        [Input("onHostMaintenance")]
        public Input<string>? OnHostMaintenance { get; set; }

        /// <summary>
        /// Defines the behaviour for instances with the instance_termination_action.
        /// </summary>
        [Input("onInstanceStopAction")]
        public Input<Inputs.InstanceFromMachineImageSchedulingOnInstanceStopActionGetArgs>? OnInstanceStopAction { get; set; }

        /// <summary>
        /// Whether the instance is preemptible.
        /// </summary>
        [Input("preemptible")]
        public Input<bool>? Preemptible { get; set; }

        /// <summary>
        /// Whether the instance is spot. If this is set as SPOT.
        /// </summary>
        [Input("provisioningModel")]
        public Input<string>? ProvisioningModel { get; set; }

        public InstanceFromMachineImageSchedulingGetArgs()
        {
        }
        public static new InstanceFromMachineImageSchedulingGetArgs Empty => new InstanceFromMachineImageSchedulingGetArgs();
    }
}
