// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute.Inputs
{

    public sealed class RegionInstanceGroupManagerInstanceLifecyclePolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// , Specifies the action that a MIG performs on a failed VM. If the value of the `OnFailedHealthCheck` field is `DEFAULT_ACTION`, then the same action also applies to the VMs on which your application fails a health check. Valid options are: `DO_NOTHING`, `REPAIR`. If `DO_NOTHING`, then MIG does not repair a failed VM. If `REPAIR` (default), then MIG automatically repairs a failed VM by recreating it. For more information, see about repairing VMs in a MIG.
        /// </summary>
        [Input("defaultActionOnFailure")]
        public Input<string>? DefaultActionOnFailure { get; set; }

        /// <summary>
        /// , Specifies whether to apply the group's latest configuration when repairing a VM. Valid options are: `YES`, `NO`. If `YES` and you updated the group's instance template or per-instance configurations after the VM was created, then these changes are applied when VM is repaired. If `NO` (default), then updates are applied in accordance with the group's update policy type.
        /// </summary>
        [Input("forceUpdateOnRepair")]
        public Input<string>? ForceUpdateOnRepair { get; set; }

        /// <summary>
        /// , Specifies the action that a MIG performs on an unhealthy VM. A VM is marked as unhealthy when the application running on that VM fails a health check. Valid options are: `DEFAULT_ACTION`, `DO_NOTHING`, `REPAIR`. If `DEFAULT_ACTION` (default), then MIG uses the same action configured for the  `DefaultActionOnFailure` field. If `DO_NOTHING`, then MIG does not repair unhealthy VM. If `REPAIR`, then MIG automatically repairs an unhealthy VM by recreating it. For more information, see about repairing VMs in a MIG. 
        /// 
        /// - - -
        /// &lt;a name="NestedInstanceFlexibilityPolicy"&gt;&lt;/a&gt;The `InstanceFlexibilityPolicy` block supports:
        /// </summary>
        [Input("onFailedHealthCheck")]
        public Input<string>? OnFailedHealthCheck { get; set; }

        public RegionInstanceGroupManagerInstanceLifecyclePolicyArgs()
        {
        }
        public static new RegionInstanceGroupManagerInstanceLifecyclePolicyArgs Empty => new RegionInstanceGroupManagerInstanceLifecyclePolicyArgs();
    }
}
