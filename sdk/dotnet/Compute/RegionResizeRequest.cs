// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ### Compute Rmig Resize Request
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var a3Dws = new Gcp.Compute.RegionInstanceTemplate("a3_dws", new()
    ///     {
    ///         Name = "a3-dws",
    ///         Region = "us-central1",
    ///         Description = "This template is used to create a mig instance that is compatible with DWS resize requests.",
    ///         InstanceDescription = "A3 GPU",
    ///         MachineType = "a3-highgpu-8g",
    ///         CanIpForward = false,
    ///         Scheduling = new Gcp.Compute.Inputs.RegionInstanceTemplateSchedulingArgs
    ///         {
    ///             AutomaticRestart = false,
    ///             OnHostMaintenance = "TERMINATE",
    ///         },
    ///         Disks = new[]
    ///         {
    ///             new Gcp.Compute.Inputs.RegionInstanceTemplateDiskArgs
    ///             {
    ///                 SourceImage = "cos-cloud/cos-121-lts",
    ///                 AutoDelete = true,
    ///                 Boot = true,
    ///                 DiskType = "pd-ssd",
    ///                 DiskSizeGb = 960,
    ///                 Mode = "READ_WRITE",
    ///             },
    ///         },
    ///         GuestAccelerators = new[]
    ///         {
    ///             new Gcp.Compute.Inputs.RegionInstanceTemplateGuestAcceleratorArgs
    ///             {
    ///                 Type = "nvidia-h100-80gb",
    ///                 Count = 8,
    ///             },
    ///         },
    ///         ReservationAffinity = new Gcp.Compute.Inputs.RegionInstanceTemplateReservationAffinityArgs
    ///         {
    ///             Type = "NO_RESERVATION",
    ///         },
    ///         ShieldedInstanceConfig = new Gcp.Compute.Inputs.RegionInstanceTemplateShieldedInstanceConfigArgs
    ///         {
    ///             EnableVtpm = true,
    ///             EnableIntegrityMonitoring = true,
    ///         },
    ///         NetworkInterfaces = new[]
    ///         {
    ///             new Gcp.Compute.Inputs.RegionInstanceTemplateNetworkInterfaceArgs
    ///             {
    ///                 Network = "default",
    ///             },
    ///         },
    ///     });
    /// 
    ///     var a3DwsRegionInstanceGroupManager = new Gcp.Compute.RegionInstanceGroupManager("a3_dws", new()
    ///     {
    ///         Name = "a3-dws",
    ///         BaseInstanceName = "a3-dws",
    ///         Region = "us-central1",
    ///         Versions = new[]
    ///         {
    ///             new Gcp.Compute.Inputs.RegionInstanceGroupManagerVersionArgs
    ///             {
    ///                 InstanceTemplate = a3Dws.SelfLink,
    ///             },
    ///         },
    ///         InstanceLifecyclePolicy = new Gcp.Compute.Inputs.RegionInstanceGroupManagerInstanceLifecyclePolicyArgs
    ///         {
    ///             DefaultActionOnFailure = "DO_NOTHING",
    ///         },
    ///         DistributionPolicyTargetShape = "ANY_SINGLE_ZONE",
    ///         DistributionPolicyZones = new[]
    ///         {
    ///             "us-central1-a",
    ///             "us-central1-b",
    ///             "us-central1-c",
    ///             "us-central1-f",
    ///         },
    ///         UpdatePolicy = new Gcp.Compute.Inputs.RegionInstanceGroupManagerUpdatePolicyArgs
    ///         {
    ///             InstanceRedistributionType = "NONE",
    ///             Type = "OPPORTUNISTIC",
    ///             MinimalAction = "REPLACE",
    ///             MaxSurgeFixed = 0,
    ///             MaxUnavailableFixed = 6,
    ///         },
    ///         WaitForInstances = false,
    ///     });
    /// 
    ///     var a3ResizeRequest = new Gcp.Compute.RegionResizeRequest("a3_resize_request", new()
    ///     {
    ///         Name = "a3-dws",
    ///         InstanceGroupManager = a3DwsRegionInstanceGroupManager.Name,
    ///         Region = "us-central1",
    ///         Description = "Test resize request resource",
    ///         ResizeBy = 2,
    ///         RequestedRunDuration = new Gcp.Compute.Inputs.RegionResizeRequestRequestedRunDurationArgs
    ///         {
    ///             Seconds = "14400",
    ///             Nanos = 0,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// RegionResizeRequest can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/regions/{{region}}/instanceGroupManagers/{{instance_group_manager}}/resizeRequests/{{name}}`
    /// 
    /// * `{{project}}/{{region}}/{{instance_group_manager}}/{{name}}`
    /// 
    /// * `{{region}}/{{instance_group_manager}}/{{name}}`
    /// 
    /// * `{{instance_group_manager}}/{{name}}`
    /// 
    /// When using the `pulumi import` command, RegionResizeRequest can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:compute/regionResizeRequest:RegionResizeRequest default projects/{{project}}/regions/{{region}}/instanceGroupManagers/{{instance_group_manager}}/resizeRequests/{{name}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:compute/regionResizeRequest:RegionResizeRequest default {{project}}/{{region}}/{{instance_group_manager}}/{{name}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:compute/regionResizeRequest:RegionResizeRequest default {{region}}/{{instance_group_manager}}/{{name}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:compute/regionResizeRequest:RegionResizeRequest default {{instance_group_manager}}/{{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:compute/regionResizeRequest:RegionResizeRequest")]
    public partial class RegionResizeRequest : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The creation timestamp for this resize request in RFC3339 text format.
        /// </summary>
        [Output("creationTimestamp")]
        public Output<string> CreationTimestamp { get; private set; } = null!;

        /// <summary>
        /// An optional description of this resize-request.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The reference of the regional instance group manager this ResizeRequest is a part of.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Output("instanceGroupManager")]
        public Output<string> InstanceGroupManager { get; private set; } = null!;

        /// <summary>
        /// The name of this resize request. The name must be 1-63 characters long, and comply with RFC1035.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The reference of the compute region scoping this request. If it is not provided, the provider region is used.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// Requested run duration for instances that will be created by this request. At the end of the run duration instances will be deleted.
        /// Structure is documented below.
        /// </summary>
        [Output("requestedRunDuration")]
        public Output<Outputs.RegionResizeRequestRequestedRunDuration?> RequestedRunDuration { get; private set; } = null!;

        /// <summary>
        /// The number of instances to be created by this resize request. The group's target size will be increased by this number.
        /// </summary>
        [Output("resizeBy")]
        public Output<int> ResizeBy { get; private set; } = null!;

        /// <summary>
        /// Current state of the request.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Status of the request.
        /// Structure is documented below.
        /// </summary>
        [Output("statuses")]
        public Output<ImmutableArray<Outputs.RegionResizeRequestStatus>> Statuses { get; private set; } = null!;


        /// <summary>
        /// Create a RegionResizeRequest resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RegionResizeRequest(string name, RegionResizeRequestArgs args, CustomResourceOptions? options = null)
            : base("gcp:compute/regionResizeRequest:RegionResizeRequest", name, args ?? new RegionResizeRequestArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RegionResizeRequest(string name, Input<string> id, RegionResizeRequestState? state = null, CustomResourceOptions? options = null)
            : base("gcp:compute/regionResizeRequest:RegionResizeRequest", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RegionResizeRequest resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RegionResizeRequest Get(string name, Input<string> id, RegionResizeRequestState? state = null, CustomResourceOptions? options = null)
        {
            return new RegionResizeRequest(name, id, state, options);
        }
    }

    public sealed class RegionResizeRequestArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// An optional description of this resize-request.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The reference of the regional instance group manager this ResizeRequest is a part of.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("instanceGroupManager", required: true)]
        public Input<string> InstanceGroupManager { get; set; } = null!;

        /// <summary>
        /// The name of this resize request. The name must be 1-63 characters long, and comply with RFC1035.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The reference of the compute region scoping this request. If it is not provided, the provider region is used.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Requested run duration for instances that will be created by this request. At the end of the run duration instances will be deleted.
        /// Structure is documented below.
        /// </summary>
        [Input("requestedRunDuration")]
        public Input<Inputs.RegionResizeRequestRequestedRunDurationArgs>? RequestedRunDuration { get; set; }

        /// <summary>
        /// The number of instances to be created by this resize request. The group's target size will be increased by this number.
        /// </summary>
        [Input("resizeBy", required: true)]
        public Input<int> ResizeBy { get; set; } = null!;

        public RegionResizeRequestArgs()
        {
        }
        public static new RegionResizeRequestArgs Empty => new RegionResizeRequestArgs();
    }

    public sealed class RegionResizeRequestState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The creation timestamp for this resize request in RFC3339 text format.
        /// </summary>
        [Input("creationTimestamp")]
        public Input<string>? CreationTimestamp { get; set; }

        /// <summary>
        /// An optional description of this resize-request.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The reference of the regional instance group manager this ResizeRequest is a part of.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("instanceGroupManager")]
        public Input<string>? InstanceGroupManager { get; set; }

        /// <summary>
        /// The name of this resize request. The name must be 1-63 characters long, and comply with RFC1035.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The reference of the compute region scoping this request. If it is not provided, the provider region is used.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Requested run duration for instances that will be created by this request. At the end of the run duration instances will be deleted.
        /// Structure is documented below.
        /// </summary>
        [Input("requestedRunDuration")]
        public Input<Inputs.RegionResizeRequestRequestedRunDurationGetArgs>? RequestedRunDuration { get; set; }

        /// <summary>
        /// The number of instances to be created by this resize request. The group's target size will be increased by this number.
        /// </summary>
        [Input("resizeBy")]
        public Input<int>? ResizeBy { get; set; }

        /// <summary>
        /// Current state of the request.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("statuses")]
        private InputList<Inputs.RegionResizeRequestStatusGetArgs>? _statuses;

        /// <summary>
        /// Status of the request.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.RegionResizeRequestStatusGetArgs> Statuses
        {
            get => _statuses ?? (_statuses = new InputList<Inputs.RegionResizeRequestStatusGetArgs>());
            set => _statuses = value;
        }

        public RegionResizeRequestState()
        {
        }
        public static new RegionResizeRequestState Empty => new RegionResizeRequestState();
    }
}
