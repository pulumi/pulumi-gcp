// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute
{
    /// <summary>
    /// ## Example Usage
    /// ### Network Attachment Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var defaultNetwork = new Gcp.Compute.Network("defaultNetwork", new()
    ///     {
    ///         AutoCreateSubnetworks = false,
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = google_beta,
    ///     });
    /// 
    ///     var defaultSubnetwork = new Gcp.Compute.Subnetwork("defaultSubnetwork", new()
    ///     {
    ///         Region = "us-central1",
    ///         Network = defaultNetwork.Id,
    ///         IpCidrRange = "10.0.0.0/16",
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = google_beta,
    ///     });
    /// 
    ///     var rejectedProducerProject = new Gcp.Organizations.Project("rejectedProducerProject", new()
    ///     {
    ///         OrgId = "123456789",
    ///         BillingAccount = "000000-0000000-0000000-000000",
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = google_beta,
    ///     });
    /// 
    ///     var acceptedProducerProject = new Gcp.Organizations.Project("acceptedProducerProject", new()
    ///     {
    ///         OrgId = "123456789",
    ///         BillingAccount = "000000-0000000-0000000-000000",
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = google_beta,
    ///     });
    /// 
    ///     var defaultNetworkAttachment = new Gcp.Compute.NetworkAttachment("defaultNetworkAttachment", new()
    ///     {
    ///         Region = "us-central1",
    ///         Description = "basic network attachment description",
    ///         ConnectionPreference = "ACCEPT_MANUAL",
    ///         Subnetworks = new[]
    ///         {
    ///             defaultSubnetwork.SelfLink,
    ///         },
    ///         ProducerAcceptLists = new[]
    ///         {
    ///             acceptedProducerProject.ProjectId,
    ///         },
    ///         ProducerRejectLists = new[]
    ///         {
    ///             rejectedProducerProject.ProjectId,
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = google_beta,
    ///     });
    /// 
    /// });
    /// ```
    /// ### Network Attachment Instance Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var defaultNetwork = new Gcp.Compute.Network("defaultNetwork", new()
    ///     {
    ///         AutoCreateSubnetworks = false,
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = google_beta,
    ///     });
    /// 
    ///     var defaultSubnetwork = new Gcp.Compute.Subnetwork("defaultSubnetwork", new()
    ///     {
    ///         Region = "us-central1",
    ///         Network = defaultNetwork.Id,
    ///         IpCidrRange = "10.0.0.0/16",
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = google_beta,
    ///     });
    /// 
    ///     var defaultNetworkAttachment = new Gcp.Compute.NetworkAttachment("defaultNetworkAttachment", new()
    ///     {
    ///         Region = "us-central1",
    ///         Description = "my basic network attachment",
    ///         Subnetworks = new[]
    ///         {
    ///             defaultSubnetwork.Id,
    ///         },
    ///         ConnectionPreference = "ACCEPT_AUTOMATIC",
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = google_beta,
    ///     });
    /// 
    ///     var defaultInstance = new Gcp.Compute.Instance("defaultInstance", new()
    ///     {
    ///         Zone = "us-central1-a",
    ///         MachineType = "e2-micro",
    ///         BootDisk = new Gcp.Compute.Inputs.InstanceBootDiskArgs
    ///         {
    ///             InitializeParams = new Gcp.Compute.Inputs.InstanceBootDiskInitializeParamsArgs
    ///             {
    ///                 Image = "debian-cloud/debian-11",
    ///             },
    ///         },
    ///         NetworkInterfaces = new[]
    ///         {
    ///             new Gcp.Compute.Inputs.InstanceNetworkInterfaceArgs
    ///             {
    ///                 Network = "default",
    ///             },
    ///             new Gcp.Compute.Inputs.InstanceNetworkInterfaceArgs
    ///             {
    ///                 NetworkAttachment = defaultNetworkAttachment.SelfLink,
    ///             },
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = google_beta,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// NetworkAttachment can be imported using any of these accepted formats* `projects/{{project}}/regions/{{region}}/networkAttachments/{{name}}` * `{{project}}/{{region}}/{{name}}` * `{{region}}/{{name}}` * `{{name}}` In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import NetworkAttachment using one of the formats above. For exampletf import {
    /// 
    ///  id = "projects/{{project}}/regions/{{region}}/networkAttachments/{{name}}"
    /// 
    ///  to = google_compute_network_attachment.default }
    /// 
    /// ```sh
    ///  $ pulumi import gcp:compute/networkAttachment:NetworkAttachment When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), NetworkAttachment can be imported using one of the formats above. For example
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:compute/networkAttachment:NetworkAttachment default projects/{{project}}/regions/{{region}}/networkAttachments/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:compute/networkAttachment:NetworkAttachment default {{project}}/{{region}}/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:compute/networkAttachment:NetworkAttachment default {{region}}/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:compute/networkAttachment:NetworkAttachment default {{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:compute/networkAttachment:NetworkAttachment")]
    public partial class NetworkAttachment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// An array of connections for all the producers connected to this network attachment.
        /// Structure is documented below.
        /// </summary>
        [Output("connectionEndpoints")]
        public Output<ImmutableArray<Outputs.NetworkAttachmentConnectionEndpoint>> ConnectionEndpoints { get; private set; } = null!;

        /// <summary>
        /// The connection preference of service attachment. The value can be set to ACCEPT_AUTOMATIC. An ACCEPT_AUTOMATIC service attachment is one that always accepts the connection from consumer forwarding rules.
        /// Possible values are: `ACCEPT_AUTOMATIC`, `ACCEPT_MANUAL`, `INVALID`.
        /// </summary>
        [Output("connectionPreference")]
        public Output<string> ConnectionPreference { get; private set; } = null!;

        /// <summary>
        /// Creation timestamp in RFC3339 text format.
        /// </summary>
        [Output("creationTimestamp")]
        public Output<string> CreationTimestamp { get; private set; } = null!;

        /// <summary>
        /// An optional description of this resource. Provide this property when you create the resource.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Fingerprint of this resource. A hash of the contents stored in this object. This
        /// field is used in optimistic locking. An up-to-date fingerprint must be provided in order to patch.
        /// </summary>
        [Output("fingerprint")]
        public Output<string> Fingerprint { get; private set; } = null!;

        /// <summary>
        /// Type of the resource.
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The URL of the network which the Network Attachment belongs to. Practically it is inferred by fetching the network of the first subnetwork associated.
        /// Because it is required that all the subnetworks must be from the same network, it is assured that the Network Attachment belongs to the same network as all the subnetworks.
        /// </summary>
        [Output("network")]
        public Output<string> Network { get; private set; } = null!;

        /// <summary>
        /// Projects that are allowed to connect to this network attachment. The project can be specified using its id or number.
        /// </summary>
        [Output("producerAcceptLists")]
        public Output<ImmutableArray<string>> ProducerAcceptLists { get; private set; } = null!;

        /// <summary>
        /// Projects that are not allowed to connect to this network attachment. The project can be specified using its id or number.
        /// </summary>
        [Output("producerRejectLists")]
        public Output<ImmutableArray<string>> ProducerRejectLists { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// URL of the region where the network attachment resides. This field applies only to the region resource. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// Server-defined URL for the resource.
        /// </summary>
        [Output("selfLink")]
        public Output<string> SelfLink { get; private set; } = null!;

        /// <summary>
        /// Server-defined URL for this resource's resource id.
        /// </summary>
        [Output("selfLinkWithId")]
        public Output<string> SelfLinkWithId { get; private set; } = null!;

        /// <summary>
        /// An array of URLs where each entry is the URL of a subnet provided by the service consumer to use for endpoints in the producers that connect to this network attachment.
        /// </summary>
        [Output("subnetworks")]
        public Output<ImmutableArray<string>> Subnetworks { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkAttachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkAttachment(string name, NetworkAttachmentArgs args, CustomResourceOptions? options = null)
            : base("gcp:compute/networkAttachment:NetworkAttachment", name, args ?? new NetworkAttachmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkAttachment(string name, Input<string> id, NetworkAttachmentState? state = null, CustomResourceOptions? options = null)
            : base("gcp:compute/networkAttachment:NetworkAttachment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkAttachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkAttachment Get(string name, Input<string> id, NetworkAttachmentState? state = null, CustomResourceOptions? options = null)
        {
            return new NetworkAttachment(name, id, state, options);
        }
    }

    public sealed class NetworkAttachmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The connection preference of service attachment. The value can be set to ACCEPT_AUTOMATIC. An ACCEPT_AUTOMATIC service attachment is one that always accepts the connection from consumer forwarding rules.
        /// Possible values are: `ACCEPT_AUTOMATIC`, `ACCEPT_MANUAL`, `INVALID`.
        /// </summary>
        [Input("connectionPreference", required: true)]
        public Input<string> ConnectionPreference { get; set; } = null!;

        /// <summary>
        /// An optional description of this resource. Provide this property when you create the resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("producerAcceptLists")]
        private InputList<string>? _producerAcceptLists;

        /// <summary>
        /// Projects that are allowed to connect to this network attachment. The project can be specified using its id or number.
        /// </summary>
        public InputList<string> ProducerAcceptLists
        {
            get => _producerAcceptLists ?? (_producerAcceptLists = new InputList<string>());
            set => _producerAcceptLists = value;
        }

        [Input("producerRejectLists")]
        private InputList<string>? _producerRejectLists;

        /// <summary>
        /// Projects that are not allowed to connect to this network attachment. The project can be specified using its id or number.
        /// </summary>
        public InputList<string> ProducerRejectLists
        {
            get => _producerRejectLists ?? (_producerRejectLists = new InputList<string>());
            set => _producerRejectLists = value;
        }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// URL of the region where the network attachment resides. This field applies only to the region resource. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("subnetworks", required: true)]
        private InputList<string>? _subnetworks;

        /// <summary>
        /// An array of URLs where each entry is the URL of a subnet provided by the service consumer to use for endpoints in the producers that connect to this network attachment.
        /// </summary>
        public InputList<string> Subnetworks
        {
            get => _subnetworks ?? (_subnetworks = new InputList<string>());
            set => _subnetworks = value;
        }

        public NetworkAttachmentArgs()
        {
        }
        public static new NetworkAttachmentArgs Empty => new NetworkAttachmentArgs();
    }

    public sealed class NetworkAttachmentState : global::Pulumi.ResourceArgs
    {
        [Input("connectionEndpoints")]
        private InputList<Inputs.NetworkAttachmentConnectionEndpointGetArgs>? _connectionEndpoints;

        /// <summary>
        /// An array of connections for all the producers connected to this network attachment.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.NetworkAttachmentConnectionEndpointGetArgs> ConnectionEndpoints
        {
            get => _connectionEndpoints ?? (_connectionEndpoints = new InputList<Inputs.NetworkAttachmentConnectionEndpointGetArgs>());
            set => _connectionEndpoints = value;
        }

        /// <summary>
        /// The connection preference of service attachment. The value can be set to ACCEPT_AUTOMATIC. An ACCEPT_AUTOMATIC service attachment is one that always accepts the connection from consumer forwarding rules.
        /// Possible values are: `ACCEPT_AUTOMATIC`, `ACCEPT_MANUAL`, `INVALID`.
        /// </summary>
        [Input("connectionPreference")]
        public Input<string>? ConnectionPreference { get; set; }

        /// <summary>
        /// Creation timestamp in RFC3339 text format.
        /// </summary>
        [Input("creationTimestamp")]
        public Input<string>? CreationTimestamp { get; set; }

        /// <summary>
        /// An optional description of this resource. Provide this property when you create the resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Fingerprint of this resource. A hash of the contents stored in this object. This
        /// field is used in optimistic locking. An up-to-date fingerprint must be provided in order to patch.
        /// </summary>
        [Input("fingerprint")]
        public Input<string>? Fingerprint { get; set; }

        /// <summary>
        /// Type of the resource.
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        /// <summary>
        /// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The URL of the network which the Network Attachment belongs to. Practically it is inferred by fetching the network of the first subnetwork associated.
        /// Because it is required that all the subnetworks must be from the same network, it is assured that the Network Attachment belongs to the same network as all the subnetworks.
        /// </summary>
        [Input("network")]
        public Input<string>? Network { get; set; }

        [Input("producerAcceptLists")]
        private InputList<string>? _producerAcceptLists;

        /// <summary>
        /// Projects that are allowed to connect to this network attachment. The project can be specified using its id or number.
        /// </summary>
        public InputList<string> ProducerAcceptLists
        {
            get => _producerAcceptLists ?? (_producerAcceptLists = new InputList<string>());
            set => _producerAcceptLists = value;
        }

        [Input("producerRejectLists")]
        private InputList<string>? _producerRejectLists;

        /// <summary>
        /// Projects that are not allowed to connect to this network attachment. The project can be specified using its id or number.
        /// </summary>
        public InputList<string> ProducerRejectLists
        {
            get => _producerRejectLists ?? (_producerRejectLists = new InputList<string>());
            set => _producerRejectLists = value;
        }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// URL of the region where the network attachment resides. This field applies only to the region resource. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Server-defined URL for the resource.
        /// </summary>
        [Input("selfLink")]
        public Input<string>? SelfLink { get; set; }

        /// <summary>
        /// Server-defined URL for this resource's resource id.
        /// </summary>
        [Input("selfLinkWithId")]
        public Input<string>? SelfLinkWithId { get; set; }

        [Input("subnetworks")]
        private InputList<string>? _subnetworks;

        /// <summary>
        /// An array of URLs where each entry is the URL of a subnet provided by the service consumer to use for endpoints in the producers that connect to this network attachment.
        /// </summary>
        public InputList<string> Subnetworks
        {
            get => _subnetworks ?? (_subnetworks = new InputList<string>());
            set => _subnetworks = value;
        }

        public NetworkAttachmentState()
        {
        }
        public static new NetworkAttachmentState Empty => new NetworkAttachmentState();
    }
}
