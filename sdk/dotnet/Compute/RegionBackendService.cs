// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute
{
    /// <summary>
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/compute_region_backend_service.html.markdown.
    /// </summary>
    public partial class RegionBackendService : Pulumi.CustomResource
    {
        [Output("backends")]
        public Output<ImmutableArray<Outputs.RegionBackendServiceBackends>> Backends { get; private set; } = null!;

        [Output("connectionDrainingTimeoutSec")]
        public Output<int?> ConnectionDrainingTimeoutSec { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("failoverPolicy")]
        public Output<Outputs.RegionBackendServiceFailoverPolicy?> FailoverPolicy { get; private set; } = null!;

        [Output("fingerprint")]
        public Output<string> Fingerprint { get; private set; } = null!;

        [Output("healthChecks")]
        public Output<string> HealthChecks { get; private set; } = null!;

        [Output("loadBalancingScheme")]
        public Output<string?> LoadBalancingScheme { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        [Output("protocol")]
        public Output<string> Protocol { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// The URI of the created resource.
        /// </summary>
        [Output("selfLink")]
        public Output<string> SelfLink { get; private set; } = null!;

        [Output("sessionAffinity")]
        public Output<string> SessionAffinity { get; private set; } = null!;

        [Output("timeoutSec")]
        public Output<int> TimeoutSec { get; private set; } = null!;


        /// <summary>
        /// Create a RegionBackendService resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RegionBackendService(string name, RegionBackendServiceArgs args, CustomResourceOptions? options = null)
            : base("gcp:compute/regionBackendService:RegionBackendService", name, args, MakeResourceOptions(options, ""))
        {
        }

        private RegionBackendService(string name, Input<string> id, RegionBackendServiceState? state = null, CustomResourceOptions? options = null)
            : base("gcp:compute/regionBackendService:RegionBackendService", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RegionBackendService resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RegionBackendService Get(string name, Input<string> id, RegionBackendServiceState? state = null, CustomResourceOptions? options = null)
        {
            return new RegionBackendService(name, id, state, options);
        }
    }

    public sealed class RegionBackendServiceArgs : Pulumi.ResourceArgs
    {
        [Input("backends")]
        private InputList<Inputs.RegionBackendServiceBackendsArgs>? _backends;
        public InputList<Inputs.RegionBackendServiceBackendsArgs> Backends
        {
            get => _backends ?? (_backends = new InputList<Inputs.RegionBackendServiceBackendsArgs>());
            set => _backends = value;
        }

        [Input("connectionDrainingTimeoutSec")]
        public Input<int>? ConnectionDrainingTimeoutSec { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("failoverPolicy")]
        public Input<Inputs.RegionBackendServiceFailoverPolicyArgs>? FailoverPolicy { get; set; }

        [Input("healthChecks", required: true)]
        public Input<string> HealthChecks { get; set; } = null!;

        [Input("loadBalancingScheme")]
        public Input<string>? LoadBalancingScheme { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("sessionAffinity")]
        public Input<string>? SessionAffinity { get; set; }

        [Input("timeoutSec")]
        public Input<int>? TimeoutSec { get; set; }

        public RegionBackendServiceArgs()
        {
        }
    }

    public sealed class RegionBackendServiceState : Pulumi.ResourceArgs
    {
        [Input("backends")]
        private InputList<Inputs.RegionBackendServiceBackendsGetArgs>? _backends;
        public InputList<Inputs.RegionBackendServiceBackendsGetArgs> Backends
        {
            get => _backends ?? (_backends = new InputList<Inputs.RegionBackendServiceBackendsGetArgs>());
            set => _backends = value;
        }

        [Input("connectionDrainingTimeoutSec")]
        public Input<int>? ConnectionDrainingTimeoutSec { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("failoverPolicy")]
        public Input<Inputs.RegionBackendServiceFailoverPolicyGetArgs>? FailoverPolicy { get; set; }

        [Input("fingerprint")]
        public Input<string>? Fingerprint { get; set; }

        [Input("healthChecks")]
        public Input<string>? HealthChecks { get; set; }

        [Input("loadBalancingScheme")]
        public Input<string>? LoadBalancingScheme { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The URI of the created resource.
        /// </summary>
        [Input("selfLink")]
        public Input<string>? SelfLink { get; set; }

        [Input("sessionAffinity")]
        public Input<string>? SessionAffinity { get; set; }

        [Input("timeoutSec")]
        public Input<int>? TimeoutSec { get; set; }

        public RegionBackendServiceState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class RegionBackendServiceBackendsArgs : Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("failover")]
        public Input<bool>? Failover { get; set; }

        [Input("group")]
        public Input<string>? Group { get; set; }

        public RegionBackendServiceBackendsArgs()
        {
        }
    }

    public sealed class RegionBackendServiceBackendsGetArgs : Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("failover")]
        public Input<bool>? Failover { get; set; }

        [Input("group")]
        public Input<string>? Group { get; set; }

        public RegionBackendServiceBackendsGetArgs()
        {
        }
    }

    public sealed class RegionBackendServiceFailoverPolicyArgs : Pulumi.ResourceArgs
    {
        [Input("disableConnectionDrainOnFailover")]
        public Input<bool>? DisableConnectionDrainOnFailover { get; set; }

        [Input("dropTrafficIfUnhealthy")]
        public Input<bool>? DropTrafficIfUnhealthy { get; set; }

        [Input("failoverRatio")]
        public Input<double>? FailoverRatio { get; set; }

        public RegionBackendServiceFailoverPolicyArgs()
        {
        }
    }

    public sealed class RegionBackendServiceFailoverPolicyGetArgs : Pulumi.ResourceArgs
    {
        [Input("disableConnectionDrainOnFailover")]
        public Input<bool>? DisableConnectionDrainOnFailover { get; set; }

        [Input("dropTrafficIfUnhealthy")]
        public Input<bool>? DropTrafficIfUnhealthy { get; set; }

        [Input("failoverRatio")]
        public Input<double>? FailoverRatio { get; set; }

        public RegionBackendServiceFailoverPolicyGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class RegionBackendServiceBackends
    {
        public readonly string? Description;
        public readonly bool? Failover;
        public readonly string? Group;

        [OutputConstructor]
        private RegionBackendServiceBackends(
            string? description,
            bool? failover,
            string? group)
        {
            Description = description;
            Failover = failover;
            Group = group;
        }
    }

    [OutputType]
    public sealed class RegionBackendServiceFailoverPolicy
    {
        public readonly bool? DisableConnectionDrainOnFailover;
        public readonly bool? DropTrafficIfUnhealthy;
        public readonly double? FailoverRatio;

        [OutputConstructor]
        private RegionBackendServiceFailoverPolicy(
            bool? disableConnectionDrainOnFailover,
            bool? dropTrafficIfUnhealthy,
            double? failoverRatio)
        {
            DisableConnectionDrainOnFailover = disableConnectionDrainOnFailover;
            DropTrafficIfUnhealthy = dropTrafficIfUnhealthy;
            FailoverRatio = failoverRatio;
        }
    }
    }
}
