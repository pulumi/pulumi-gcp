// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute
{
    /// <summary>
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/compute_global_address.html.markdown.
    /// </summary>
    public partial class GlobalAddress : Pulumi.CustomResource
    {
        /// <summary>
        /// The IP address or beginning of the address range represented by this resource. This can be supplied as an
        /// input to reserve a specific address or omitted to allow GCP to choose a valid one for you.
        /// </summary>
        [Output("address")]
        public Output<string> Address { get; private set; } = null!;

        /// <summary>
        /// The type of the address to reserve, default is EXTERNAL. * EXTERNAL indicates public/external single IP
        /// address. * INTERNAL indicates internal IP ranges belonging to some network.
        /// </summary>
        [Output("addressType")]
        public Output<string?> AddressType { get; private set; } = null!;

        /// <summary>
        /// Creation timestamp in RFC3339 text format.
        /// </summary>
        [Output("creationTimestamp")]
        public Output<string> CreationTimestamp { get; private set; } = null!;

        /// <summary>
        /// An optional description of this resource.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The IP Version that will be used by this address. Valid options are 'IPV4' or 'IPV6'. The default value is
        /// 'IPV4'.
        /// </summary>
        [Output("ipVersion")]
        public Output<string?> IpVersion { get; private set; } = null!;

        /// <summary>
        /// The fingerprint used for optimistic locking of this resource. Used internally during updates.
        /// </summary>
        [Output("labelFingerprint")]
        public Output<string> LabelFingerprint { get; private set; } = null!;

        /// <summary>
        /// Labels to apply to this address. A list of key-&gt;value pairs.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters
        /// long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular
        /// expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means the first character must be a lowercase letter, and all
        /// following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be
        /// a dash.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The URL of the network in which to reserve the IP range. The IP range must be in RFC1918 space. The network
        /// cannot be deleted if there are any reserved IP ranges referring to it. This should only be set when using an
        /// Internal address.
        /// </summary>
        [Output("network")]
        public Output<string?> Network { get; private set; } = null!;

        /// <summary>
        /// The prefix length of the IP range. If not present, it means the address field is a single IP address. This
        /// field is not applicable to addresses with addressType=EXTERNAL.
        /// </summary>
        [Output("prefixLength")]
        public Output<int?> PrefixLength { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The purpose of the resource. For global internal addresses it can be * VPC_PEERING - for peer networks This
        /// should only be set when using an Internal address.
        /// </summary>
        [Output("purpose")]
        public Output<string?> Purpose { get; private set; } = null!;

        /// <summary>
        /// The URI of the created resource.
        /// </summary>
        [Output("selfLink")]
        public Output<string> SelfLink { get; private set; } = null!;


        /// <summary>
        /// Create a GlobalAddress resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GlobalAddress(string name, GlobalAddressArgs? args = null, CustomResourceOptions? options = null)
            : base("gcp:compute/globalAddress:GlobalAddress", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private GlobalAddress(string name, Input<string> id, GlobalAddressState? state = null, CustomResourceOptions? options = null)
            : base("gcp:compute/globalAddress:GlobalAddress", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GlobalAddress resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GlobalAddress Get(string name, Input<string> id, GlobalAddressState? state = null, CustomResourceOptions? options = null)
        {
            return new GlobalAddress(name, id, state, options);
        }
    }

    public sealed class GlobalAddressArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The IP address or beginning of the address range represented by this resource. This can be supplied as an
        /// input to reserve a specific address or omitted to allow GCP to choose a valid one for you.
        /// </summary>
        [Input("address")]
        public Input<string>? Address { get; set; }

        /// <summary>
        /// The type of the address to reserve, default is EXTERNAL. * EXTERNAL indicates public/external single IP
        /// address. * INTERNAL indicates internal IP ranges belonging to some network.
        /// </summary>
        [Input("addressType")]
        public Input<string>? AddressType { get; set; }

        /// <summary>
        /// An optional description of this resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The IP Version that will be used by this address. Valid options are 'IPV4' or 'IPV6'. The default value is
        /// 'IPV4'.
        /// </summary>
        [Input("ipVersion")]
        public Input<string>? IpVersion { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Labels to apply to this address. A list of key-&gt;value pairs.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters
        /// long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular
        /// expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means the first character must be a lowercase letter, and all
        /// following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be
        /// a dash.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The URL of the network in which to reserve the IP range. The IP range must be in RFC1918 space. The network
        /// cannot be deleted if there are any reserved IP ranges referring to it. This should only be set when using an
        /// Internal address.
        /// </summary>
        [Input("network")]
        public Input<string>? Network { get; set; }

        /// <summary>
        /// The prefix length of the IP range. If not present, it means the address field is a single IP address. This
        /// field is not applicable to addresses with addressType=EXTERNAL.
        /// </summary>
        [Input("prefixLength")]
        public Input<int>? PrefixLength { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The purpose of the resource. For global internal addresses it can be * VPC_PEERING - for peer networks This
        /// should only be set when using an Internal address.
        /// </summary>
        [Input("purpose")]
        public Input<string>? Purpose { get; set; }

        public GlobalAddressArgs()
        {
        }
    }

    public sealed class GlobalAddressState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The IP address or beginning of the address range represented by this resource. This can be supplied as an
        /// input to reserve a specific address or omitted to allow GCP to choose a valid one for you.
        /// </summary>
        [Input("address")]
        public Input<string>? Address { get; set; }

        /// <summary>
        /// The type of the address to reserve, default is EXTERNAL. * EXTERNAL indicates public/external single IP
        /// address. * INTERNAL indicates internal IP ranges belonging to some network.
        /// </summary>
        [Input("addressType")]
        public Input<string>? AddressType { get; set; }

        /// <summary>
        /// Creation timestamp in RFC3339 text format.
        /// </summary>
        [Input("creationTimestamp")]
        public Input<string>? CreationTimestamp { get; set; }

        /// <summary>
        /// An optional description of this resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The IP Version that will be used by this address. Valid options are 'IPV4' or 'IPV6'. The default value is
        /// 'IPV4'.
        /// </summary>
        [Input("ipVersion")]
        public Input<string>? IpVersion { get; set; }

        /// <summary>
        /// The fingerprint used for optimistic locking of this resource. Used internally during updates.
        /// </summary>
        [Input("labelFingerprint")]
        public Input<string>? LabelFingerprint { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Labels to apply to this address. A list of key-&gt;value pairs.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters
        /// long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular
        /// expression '[a-z]([-a-z0-9]*[a-z0-9])?' which means the first character must be a lowercase letter, and all
        /// following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be
        /// a dash.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The URL of the network in which to reserve the IP range. The IP range must be in RFC1918 space. The network
        /// cannot be deleted if there are any reserved IP ranges referring to it. This should only be set when using an
        /// Internal address.
        /// </summary>
        [Input("network")]
        public Input<string>? Network { get; set; }

        /// <summary>
        /// The prefix length of the IP range. If not present, it means the address field is a single IP address. This
        /// field is not applicable to addresses with addressType=EXTERNAL.
        /// </summary>
        [Input("prefixLength")]
        public Input<int>? PrefixLength { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The purpose of the resource. For global internal addresses it can be * VPC_PEERING - for peer networks This
        /// should only be set when using an Internal address.
        /// </summary>
        [Input("purpose")]
        public Input<string>? Purpose { get; set; }

        /// <summary>
        /// The URI of the created resource.
        /// </summary>
        [Input("selfLink")]
        public Input<string>? SelfLink { get; set; }

        public GlobalAddressState()
        {
        }
    }
}
