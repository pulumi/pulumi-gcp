// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute
{
    /// <summary>
    /// Network endpoint groups (NEGs) are zonal resources that represent
    /// collections of IP address and port combinations for GCP resources within a
    /// single subnet. Each IP address and port combination is called a network
    /// endpoint.
    /// 
    /// Network endpoint groups can be used as backends in backend services for
    /// HTTP(S), TCP proxy, and SSL proxy load balancers. You cannot use NEGs as a
    /// backend with internal load balancers. Because NEG backends allow you to
    /// specify IP addresses and ports, you can distribute traffic in a granular
    /// fashion among applications or containers running within VM instances.
    /// 
    /// Recreating a network endpoint group that's in use by another resource will give a
    /// `resourceInUseByAnotherResource` error. Use `lifecycle.create_before_destroy`
    /// to avoid this type of error.
    /// 
    /// To get more information about NetworkEndpointGroup, see:
    /// 
    /// * [API documentation](https://cloud.google.com/compute/docs/reference/rest/beta/networkEndpointGroups)
    /// * How-to Guides
    ///     * [Official Documentation](https://cloud.google.com/load-balancing/docs/negs/)
    /// 
    /// ## Example Usage
    /// ### Network Endpoint Group
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var defaultNetwork = new Gcp.Compute.Network("defaultNetwork", new Gcp.Compute.NetworkArgs
    ///         {
    ///             AutoCreateSubnetworks = false,
    ///         });
    ///         var defaultSubnetwork = new Gcp.Compute.Subnetwork("defaultSubnetwork", new Gcp.Compute.SubnetworkArgs
    ///         {
    ///             IpCidrRange = "10.0.0.0/16",
    ///             Region = "us-central1",
    ///             Network = defaultNetwork.Id,
    ///         });
    ///         var neg = new Gcp.Compute.NetworkEndpointGroup("neg", new Gcp.Compute.NetworkEndpointGroupArgs
    ///         {
    ///             Network = defaultNetwork.Id,
    ///             Subnetwork = defaultSubnetwork.Id,
    ///             DefaultPort = 90,
    ///             Zone = "us-central1-a",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// NetworkEndpointGroup can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import gcp:compute/networkEndpointGroup:NetworkEndpointGroup default projects/{{project}}/zones/{{zone}}/networkEndpointGroups/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:compute/networkEndpointGroup:NetworkEndpointGroup default {{project}}/{{zone}}/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:compute/networkEndpointGroup:NetworkEndpointGroup default {{zone}}/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:compute/networkEndpointGroup:NetworkEndpointGroup default {{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:compute/networkEndpointGroup:NetworkEndpointGroup")]
    public partial class NetworkEndpointGroup : Pulumi.CustomResource
    {
        /// <summary>
        /// The default port used if the port number is not specified in the
        /// network endpoint.
        /// </summary>
        [Output("defaultPort")]
        public Output<int?> DefaultPort { get; private set; } = null!;

        /// <summary>
        /// An optional description of this resource. Provide this property when
        /// you create the resource.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Name of the resource; provided by the client when the resource is
        /// created. The name must be 1-63 characters long, and comply with
        /// RFC1035. Specifically, the name must be 1-63 characters long and match
        /// the regular expression `a-z?` which means the
        /// first character must be a lowercase letter, and all following
        /// characters must be a dash, lowercase letter, or digit, except the last
        /// character, which cannot be a dash.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The network to which all network endpoints in the NEG belong.
        /// Uses "default" project network if unspecified.
        /// </summary>
        [Output("network")]
        public Output<string> Network { get; private set; } = null!;

        /// <summary>
        /// Type of network endpoints in this network endpoint group.
        /// Default value is `GCE_VM_IP_PORT`.
        /// Possible values are `GCE_VM_IP_PORT`.
        /// </summary>
        [Output("networkEndpointType")]
        public Output<string?> NetworkEndpointType { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The URI of the created resource.
        /// </summary>
        [Output("selfLink")]
        public Output<string> SelfLink { get; private set; } = null!;

        /// <summary>
        /// Number of network endpoints in the network endpoint group.
        /// </summary>
        [Output("size")]
        public Output<int> Size { get; private set; } = null!;

        /// <summary>
        /// Optional subnetwork to which all network endpoints in the NEG belong.
        /// </summary>
        [Output("subnetwork")]
        public Output<string?> Subnetwork { get; private set; } = null!;

        /// <summary>
        /// Zone where the network endpoint group is located.
        /// </summary>
        [Output("zone")]
        public Output<string> Zone { get; private set; } = null!;


        /// <summary>
        /// Create a NetworkEndpointGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NetworkEndpointGroup(string name, NetworkEndpointGroupArgs args, CustomResourceOptions? options = null)
            : base("gcp:compute/networkEndpointGroup:NetworkEndpointGroup", name, args ?? new NetworkEndpointGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NetworkEndpointGroup(string name, Input<string> id, NetworkEndpointGroupState? state = null, CustomResourceOptions? options = null)
            : base("gcp:compute/networkEndpointGroup:NetworkEndpointGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NetworkEndpointGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NetworkEndpointGroup Get(string name, Input<string> id, NetworkEndpointGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new NetworkEndpointGroup(name, id, state, options);
        }
    }

    public sealed class NetworkEndpointGroupArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The default port used if the port number is not specified in the
        /// network endpoint.
        /// </summary>
        [Input("defaultPort")]
        public Input<int>? DefaultPort { get; set; }

        /// <summary>
        /// An optional description of this resource. Provide this property when
        /// you create the resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name of the resource; provided by the client when the resource is
        /// created. The name must be 1-63 characters long, and comply with
        /// RFC1035. Specifically, the name must be 1-63 characters long and match
        /// the regular expression `a-z?` which means the
        /// first character must be a lowercase letter, and all following
        /// characters must be a dash, lowercase letter, or digit, except the last
        /// character, which cannot be a dash.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The network to which all network endpoints in the NEG belong.
        /// Uses "default" project network if unspecified.
        /// </summary>
        [Input("network", required: true)]
        public Input<string> Network { get; set; } = null!;

        /// <summary>
        /// Type of network endpoints in this network endpoint group.
        /// Default value is `GCE_VM_IP_PORT`.
        /// Possible values are `GCE_VM_IP_PORT`.
        /// </summary>
        [Input("networkEndpointType")]
        public Input<string>? NetworkEndpointType { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Optional subnetwork to which all network endpoints in the NEG belong.
        /// </summary>
        [Input("subnetwork")]
        public Input<string>? Subnetwork { get; set; }

        /// <summary>
        /// Zone where the network endpoint group is located.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public NetworkEndpointGroupArgs()
        {
        }
    }

    public sealed class NetworkEndpointGroupState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The default port used if the port number is not specified in the
        /// network endpoint.
        /// </summary>
        [Input("defaultPort")]
        public Input<int>? DefaultPort { get; set; }

        /// <summary>
        /// An optional description of this resource. Provide this property when
        /// you create the resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name of the resource; provided by the client when the resource is
        /// created. The name must be 1-63 characters long, and comply with
        /// RFC1035. Specifically, the name must be 1-63 characters long and match
        /// the regular expression `a-z?` which means the
        /// first character must be a lowercase letter, and all following
        /// characters must be a dash, lowercase letter, or digit, except the last
        /// character, which cannot be a dash.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The network to which all network endpoints in the NEG belong.
        /// Uses "default" project network if unspecified.
        /// </summary>
        [Input("network")]
        public Input<string>? Network { get; set; }

        /// <summary>
        /// Type of network endpoints in this network endpoint group.
        /// Default value is `GCE_VM_IP_PORT`.
        /// Possible values are `GCE_VM_IP_PORT`.
        /// </summary>
        [Input("networkEndpointType")]
        public Input<string>? NetworkEndpointType { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The URI of the created resource.
        /// </summary>
        [Input("selfLink")]
        public Input<string>? SelfLink { get; set; }

        /// <summary>
        /// Number of network endpoints in the network endpoint group.
        /// </summary>
        [Input("size")]
        public Input<int>? Size { get; set; }

        /// <summary>
        /// Optional subnetwork to which all network endpoints in the NEG belong.
        /// </summary>
        [Input("subnetwork")]
        public Input<string>? Subnetwork { get; set; }

        /// <summary>
        /// Zone where the network endpoint group is located.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public NetworkEndpointGroupState()
        {
        }
    }
}
