// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute
{
    /// <summary>
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/compute_interconnect_attachment.html.markdown.
    /// </summary>
    public partial class InterconnectAttachment : Pulumi.CustomResource
    {
        [Output("adminEnabled")]
        public Output<bool?> AdminEnabled { get; private set; } = null!;

        [Output("bandwidth")]
        public Output<string> Bandwidth { get; private set; } = null!;

        [Output("candidateSubnets")]
        public Output<ImmutableArray<string>> CandidateSubnets { get; private set; } = null!;

        [Output("cloudRouterIpAddress")]
        public Output<string> CloudRouterIpAddress { get; private set; } = null!;

        [Output("creationTimestamp")]
        public Output<string> CreationTimestamp { get; private set; } = null!;

        [Output("customerRouterIpAddress")]
        public Output<string> CustomerRouterIpAddress { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("edgeAvailabilityDomain")]
        public Output<string?> EdgeAvailabilityDomain { get; private set; } = null!;

        [Output("googleReferenceId")]
        public Output<string> GoogleReferenceId { get; private set; } = null!;

        [Output("interconnect")]
        public Output<string?> Interconnect { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("pairingKey")]
        public Output<string> PairingKey { get; private set; } = null!;

        [Output("partnerAsn")]
        public Output<string> PartnerAsn { get; private set; } = null!;

        [Output("privateInterconnectInfo")]
        public Output<Outputs.InterconnectAttachmentPrivateInterconnectInfo> PrivateInterconnectInfo { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("router")]
        public Output<string> Router { get; private set; } = null!;

        /// <summary>
        /// The URI of the created resource.
        /// </summary>
        [Output("selfLink")]
        public Output<string> SelfLink { get; private set; } = null!;

        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        [Output("vlanTag8021q")]
        public Output<int> VlanTag8021q { get; private set; } = null!;


        /// <summary>
        /// Create a InterconnectAttachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InterconnectAttachment(string name, InterconnectAttachmentArgs args, CustomResourceOptions? options = null)
            : base("gcp:compute/interconnectAttachment:InterconnectAttachment", name, args, MakeResourceOptions(options, ""))
        {
        }

        private InterconnectAttachment(string name, Input<string> id, InterconnectAttachmentState? state = null, CustomResourceOptions? options = null)
            : base("gcp:compute/interconnectAttachment:InterconnectAttachment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InterconnectAttachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InterconnectAttachment Get(string name, Input<string> id, InterconnectAttachmentState? state = null, CustomResourceOptions? options = null)
        {
            return new InterconnectAttachment(name, id, state, options);
        }
    }

    public sealed class InterconnectAttachmentArgs : Pulumi.ResourceArgs
    {
        [Input("adminEnabled")]
        public Input<bool>? AdminEnabled { get; set; }

        [Input("bandwidth")]
        public Input<string>? Bandwidth { get; set; }

        [Input("candidateSubnets")]
        private InputList<string>? _candidateSubnets;
        public InputList<string> CandidateSubnets
        {
            get => _candidateSubnets ?? (_candidateSubnets = new InputList<string>());
            set => _candidateSubnets = value;
        }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("edgeAvailabilityDomain")]
        public Input<string>? EdgeAvailabilityDomain { get; set; }

        [Input("interconnect")]
        public Input<string>? Interconnect { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("router", required: true)]
        public Input<string> Router { get; set; } = null!;

        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("vlanTag8021q")]
        public Input<int>? VlanTag8021q { get; set; }

        public InterconnectAttachmentArgs()
        {
        }
    }

    public sealed class InterconnectAttachmentState : Pulumi.ResourceArgs
    {
        [Input("adminEnabled")]
        public Input<bool>? AdminEnabled { get; set; }

        [Input("bandwidth")]
        public Input<string>? Bandwidth { get; set; }

        [Input("candidateSubnets")]
        private InputList<string>? _candidateSubnets;
        public InputList<string> CandidateSubnets
        {
            get => _candidateSubnets ?? (_candidateSubnets = new InputList<string>());
            set => _candidateSubnets = value;
        }

        [Input("cloudRouterIpAddress")]
        public Input<string>? CloudRouterIpAddress { get; set; }

        [Input("creationTimestamp")]
        public Input<string>? CreationTimestamp { get; set; }

        [Input("customerRouterIpAddress")]
        public Input<string>? CustomerRouterIpAddress { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("edgeAvailabilityDomain")]
        public Input<string>? EdgeAvailabilityDomain { get; set; }

        [Input("googleReferenceId")]
        public Input<string>? GoogleReferenceId { get; set; }

        [Input("interconnect")]
        public Input<string>? Interconnect { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("pairingKey")]
        public Input<string>? PairingKey { get; set; }

        [Input("partnerAsn")]
        public Input<string>? PartnerAsn { get; set; }

        [Input("privateInterconnectInfo")]
        public Input<Inputs.InterconnectAttachmentPrivateInterconnectInfoGetArgs>? PrivateInterconnectInfo { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("router")]
        public Input<string>? Router { get; set; }

        /// <summary>
        /// The URI of the created resource.
        /// </summary>
        [Input("selfLink")]
        public Input<string>? SelfLink { get; set; }

        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("vlanTag8021q")]
        public Input<int>? VlanTag8021q { get; set; }

        public InterconnectAttachmentState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class InterconnectAttachmentPrivateInterconnectInfoGetArgs : Pulumi.ResourceArgs
    {
        [Input("tag8021q")]
        public Input<int>? Tag8021q { get; set; }

        public InterconnectAttachmentPrivateInterconnectInfoGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class InterconnectAttachmentPrivateInterconnectInfo
    {
        public readonly int Tag8021q;

        [OutputConstructor]
        private InterconnectAttachmentPrivateInterconnectInfo(int tag8021q)
        {
            Tag8021q = tag8021q;
        }
    }
    }
}
