// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute
{
    public static class GetGlobalAddress
    {
        /// <summary>
        /// Get the IP address from a static address reserved for a Global Forwarding Rule which are only used for HTTP load balancing. For more information see
        /// the official [API](https://cloud.google.com/compute/docs/reference/latest/globalAddresses) documentation.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var myAddress = Output.Create(Gcp.Compute.GetGlobalAddress.InvokeAsync(new Gcp.Compute.GetGlobalAddressArgs
        ///         {
        ///             Name = "foobar",
        ///         }));
        ///         var prod = new Gcp.Dns.ManagedZone("prod", new Gcp.Dns.ManagedZoneArgs
        ///         {
        ///             DnsName = "prod.mydomain.com.",
        ///         });
        ///         var frontend = new Gcp.Dns.RecordSet("frontend", new Gcp.Dns.RecordSetArgs
        ///         {
        ///             Type = "A",
        ///             Ttl = 300,
        ///             ManagedZone = prod.Name,
        ///             Rrdatas = 
        ///             {
        ///                 myAddress.Apply(myAddress =&gt; myAddress.Address),
        ///             },
        ///         });
        ///     }
        /// 
        /// }
        /// ```
        /// 
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetGlobalAddressResult> InvokeAsync(GetGlobalAddressArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetGlobalAddressResult>("gcp:compute/getGlobalAddress:getGlobalAddress", args ?? new GetGlobalAddressArgs(), options.WithVersion());
    }


    public sealed class GetGlobalAddressArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique name for the resource, required by GCE.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The project in which the resource belongs. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        public GetGlobalAddressArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetGlobalAddressResult
    {
        /// <summary>
        /// The IP of the created resource.
        /// </summary>
        public readonly string Address;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string Project;
        /// <summary>
        /// The URI of the created resource.
        /// </summary>
        public readonly string SelfLink;
        /// <summary>
        /// Indicates if the address is used. Possible values are: RESERVED or IN_USE.
        /// </summary>
        public readonly string Status;

        [OutputConstructor]
        private GetGlobalAddressResult(
            string address,

            string id,

            string name,

            string project,

            string selfLink,

            string status)
        {
            Address = address;
            Id = id;
            Name = name;
            Project = project;
            SelfLink = selfLink;
            Status = status;
        }
    }
}
