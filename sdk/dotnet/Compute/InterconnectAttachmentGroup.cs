// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute
{
    /// <summary>
    /// An interconnect attachment group resource allows customers to create,
    /// analyze, and expand highly available deployments.
    /// 
    /// To get more information about InterconnectAttachmentGroup, see:
    /// 
    /// * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/interconnects)
    /// * How-to Guides
    ///     * [Create a Dedicated Interconnect](https://cloud.google.com/network-connectivity/docs/interconnect/concepts/dedicated-overview)
    /// 
    /// ## Example Usage
    /// 
    /// ### Interconnect Attachment Group Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example_interconnect_attachment_group = new Gcp.Compute.InterconnectAttachmentGroup("example-interconnect-attachment-group", new()
    ///     {
    ///         Name = "example-interconnect-attachment-group",
    ///         Intent = new Gcp.Compute.Inputs.InterconnectAttachmentGroupIntentArgs
    ///         {
    ///             AvailabilitySla = "NO_SLA",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// InterconnectAttachmentGroup can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/global/interconnectAttachmentGroups/{{name}}`
    /// 
    /// * `{{project}}/{{name}}`
    /// 
    /// * `{{name}}`
    /// 
    /// When using the `pulumi import` command, InterconnectAttachmentGroup can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:compute/interconnectAttachmentGroup:InterconnectAttachmentGroup default projects/{{project}}/global/interconnectAttachmentGroups/{{name}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:compute/interconnectAttachmentGroup:InterconnectAttachmentGroup default {{project}}/{{name}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:compute/interconnectAttachmentGroup:InterconnectAttachmentGroup default {{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:compute/interconnectAttachmentGroup:InterconnectAttachmentGroup")]
    public partial class InterconnectAttachmentGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Attachments in the AttachmentGroup. Keys are arbitrary user-specified
        /// strings. Users are encouraged, but not required, to use their preferred
        /// format for resource links as keys.
        /// Note that there are add-members and remove-members methods in gcloud.
        /// The size of this map is limited by an "Attachments per group" quota.
        /// Structure is documented below.
        /// </summary>
        [Output("attachments")]
        public Output<ImmutableArray<Outputs.InterconnectAttachmentGroupAttachment>> Attachments { get; private set; } = null!;

        /// <summary>
        /// The redundancy this group is configured to support. The way a
        /// user queries what SLA their Attachment gets is by looking at this field of
        /// the Attachment's AttachmentGroup.
        /// Structure is documented below.
        /// </summary>
        [Output("configureds")]
        public Output<ImmutableArray<Outputs.InterconnectAttachmentGroupConfigured>> Configureds { get; private set; } = null!;

        /// <summary>
        /// Creation timestamp in RFC3339 text format.
        /// </summary>
        [Output("creationTimestamp")]
        public Output<string> CreationTimestamp { get; private set; } = null!;

        /// <summary>
        /// An optional description of this resource. Provide this property when you create the resource.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The user's intent for this group. This is the only required field besides
        /// the name that must be specified on group creation.
        /// Structure is documented below.
        /// </summary>
        [Output("intent")]
        public Output<Outputs.InterconnectAttachmentGroupIntent> Intent { get; private set; } = null!;

        /// <summary>
        /// The URL of an InterconnectGroup that groups these Attachments'
        /// Interconnects. Customers do not need to set this unless directed by
        /// Google Support.
        /// </summary>
        [Output("interconnectGroup")]
        public Output<string?> InterconnectGroup { get; private set; } = null!;

        /// <summary>
        /// An analysis of the logical layout of Attachments in this
        /// group. Every Attachment in the group is shown once in this structure.
        /// Structure is documented below.
        /// </summary>
        [Output("logicalStructures")]
        public Output<ImmutableArray<Outputs.InterconnectAttachmentGroupLogicalStructure>> LogicalStructures { get; private set; } = null!;

        /// <summary>
        /// Name of the resource. Provided by the client when the resource is created. The name must be
        /// 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters
        /// long and match the regular expression `a-z?` which means the first
        /// character must be a lowercase letter, and all following characters must be a dash,
        /// lowercase letter, or digit, except the last character, which cannot be a dash.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;


        /// <summary>
        /// Create a InterconnectAttachmentGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InterconnectAttachmentGroup(string name, InterconnectAttachmentGroupArgs args, CustomResourceOptions? options = null)
            : base("gcp:compute/interconnectAttachmentGroup:InterconnectAttachmentGroup", name, args ?? new InterconnectAttachmentGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InterconnectAttachmentGroup(string name, Input<string> id, InterconnectAttachmentGroupState? state = null, CustomResourceOptions? options = null)
            : base("gcp:compute/interconnectAttachmentGroup:InterconnectAttachmentGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InterconnectAttachmentGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InterconnectAttachmentGroup Get(string name, Input<string> id, InterconnectAttachmentGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new InterconnectAttachmentGroup(name, id, state, options);
        }
    }

    public sealed class InterconnectAttachmentGroupArgs : global::Pulumi.ResourceArgs
    {
        [Input("attachments")]
        private InputList<Inputs.InterconnectAttachmentGroupAttachmentArgs>? _attachments;

        /// <summary>
        /// Attachments in the AttachmentGroup. Keys are arbitrary user-specified
        /// strings. Users are encouraged, but not required, to use their preferred
        /// format for resource links as keys.
        /// Note that there are add-members and remove-members methods in gcloud.
        /// The size of this map is limited by an "Attachments per group" quota.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.InterconnectAttachmentGroupAttachmentArgs> Attachments
        {
            get => _attachments ?? (_attachments = new InputList<Inputs.InterconnectAttachmentGroupAttachmentArgs>());
            set => _attachments = value;
        }

        /// <summary>
        /// An optional description of this resource. Provide this property when you create the resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The user's intent for this group. This is the only required field besides
        /// the name that must be specified on group creation.
        /// Structure is documented below.
        /// </summary>
        [Input("intent", required: true)]
        public Input<Inputs.InterconnectAttachmentGroupIntentArgs> Intent { get; set; } = null!;

        /// <summary>
        /// The URL of an InterconnectGroup that groups these Attachments'
        /// Interconnects. Customers do not need to set this unless directed by
        /// Google Support.
        /// </summary>
        [Input("interconnectGroup")]
        public Input<string>? InterconnectGroup { get; set; }

        /// <summary>
        /// Name of the resource. Provided by the client when the resource is created. The name must be
        /// 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters
        /// long and match the regular expression `a-z?` which means the first
        /// character must be a lowercase letter, and all following characters must be a dash,
        /// lowercase letter, or digit, except the last character, which cannot be a dash.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public InterconnectAttachmentGroupArgs()
        {
        }
        public static new InterconnectAttachmentGroupArgs Empty => new InterconnectAttachmentGroupArgs();
    }

    public sealed class InterconnectAttachmentGroupState : global::Pulumi.ResourceArgs
    {
        [Input("attachments")]
        private InputList<Inputs.InterconnectAttachmentGroupAttachmentGetArgs>? _attachments;

        /// <summary>
        /// Attachments in the AttachmentGroup. Keys are arbitrary user-specified
        /// strings. Users are encouraged, but not required, to use their preferred
        /// format for resource links as keys.
        /// Note that there are add-members and remove-members methods in gcloud.
        /// The size of this map is limited by an "Attachments per group" quota.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.InterconnectAttachmentGroupAttachmentGetArgs> Attachments
        {
            get => _attachments ?? (_attachments = new InputList<Inputs.InterconnectAttachmentGroupAttachmentGetArgs>());
            set => _attachments = value;
        }

        [Input("configureds")]
        private InputList<Inputs.InterconnectAttachmentGroupConfiguredGetArgs>? _configureds;

        /// <summary>
        /// The redundancy this group is configured to support. The way a
        /// user queries what SLA their Attachment gets is by looking at this field of
        /// the Attachment's AttachmentGroup.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.InterconnectAttachmentGroupConfiguredGetArgs> Configureds
        {
            get => _configureds ?? (_configureds = new InputList<Inputs.InterconnectAttachmentGroupConfiguredGetArgs>());
            set => _configureds = value;
        }

        /// <summary>
        /// Creation timestamp in RFC3339 text format.
        /// </summary>
        [Input("creationTimestamp")]
        public Input<string>? CreationTimestamp { get; set; }

        /// <summary>
        /// An optional description of this resource. Provide this property when you create the resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The user's intent for this group. This is the only required field besides
        /// the name that must be specified on group creation.
        /// Structure is documented below.
        /// </summary>
        [Input("intent")]
        public Input<Inputs.InterconnectAttachmentGroupIntentGetArgs>? Intent { get; set; }

        /// <summary>
        /// The URL of an InterconnectGroup that groups these Attachments'
        /// Interconnects. Customers do not need to set this unless directed by
        /// Google Support.
        /// </summary>
        [Input("interconnectGroup")]
        public Input<string>? InterconnectGroup { get; set; }

        [Input("logicalStructures")]
        private InputList<Inputs.InterconnectAttachmentGroupLogicalStructureGetArgs>? _logicalStructures;

        /// <summary>
        /// An analysis of the logical layout of Attachments in this
        /// group. Every Attachment in the group is shown once in this structure.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.InterconnectAttachmentGroupLogicalStructureGetArgs> LogicalStructures
        {
            get => _logicalStructures ?? (_logicalStructures = new InputList<Inputs.InterconnectAttachmentGroupLogicalStructureGetArgs>());
            set => _logicalStructures = value;
        }

        /// <summary>
        /// Name of the resource. Provided by the client when the resource is created. The name must be
        /// 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters
        /// long and match the regular expression `a-z?` which means the first
        /// character must be a lowercase letter, and all following characters must be a dash,
        /// lowercase letter, or digit, except the last character, which cannot be a dash.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public InterconnectAttachmentGroupState()
        {
        }
        public static new InterconnectAttachmentGroupState Empty => new InterconnectAttachmentGroupState();
    }
}
