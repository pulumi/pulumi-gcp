// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute
{
    /// <summary>
    /// ## Import
    /// 
    /// RouterRoutePolicy can be imported using any of these accepted formats:
    /// 
    /// * `{{project}}/{{region}}/{{router}}/routePolicies/{{name}}`
    /// 
    /// * `{{project}}/{{region}}/{{router}}/{{name}}`
    /// 
    /// * `{{region}}/{{router}}/{{name}}`
    /// 
    /// * `{{router}}/{{name}}`
    /// 
    /// When using the `pulumi import` command, RouterRoutePolicy can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:compute/routerRoutePolicy:RouterRoutePolicy default {{project}}/{{region}}/{{router}}/routePolicies/{{name}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:compute/routerRoutePolicy:RouterRoutePolicy default {{project}}/{{region}}/{{router}}/{{name}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:compute/routerRoutePolicy:RouterRoutePolicy default {{region}}/{{router}}/{{name}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:compute/routerRoutePolicy:RouterRoutePolicy default {{router}}/{{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:compute/routerRoutePolicy:RouterRoutePolicy")]
    public partial class RouterRoutePolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The fingerprint used for optimistic locking of this resource.  Used
        /// internally during updates.
        /// </summary>
        [Output("fingerprint")]
        public Output<string> Fingerprint { get; private set; } = null!;

        /// <summary>
        /// Name of the route policy. This policy's name, which must be a resource ID segment and unique within all policies owned by the Router
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Region where the router and NAT reside.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// The name of the Cloud Router in which this route policy will be configured.
        /// </summary>
        [Output("router")]
        public Output<string> Router { get; private set; } = null!;

        /// <summary>
        /// List of terms (the order in the list is not important, they are evaluated in order of priority).
        /// Structure is documented below.
        /// </summary>
        [Output("terms")]
        public Output<ImmutableArray<Outputs.RouterRoutePolicyTerm>> Terms { get; private set; } = null!;

        /// <summary>
        /// This is policy's type, which is one of IMPORT or EXPORT Possible values: ["ROUTE_POLICY_TYPE_IMPORT",
        /// "ROUTE_POLICY_TYPE_EXPORT"]
        /// </summary>
        [Output("type")]
        public Output<string?> Type { get; private set; } = null!;


        /// <summary>
        /// Create a RouterRoutePolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RouterRoutePolicy(string name, RouterRoutePolicyArgs args, CustomResourceOptions? options = null)
            : base("gcp:compute/routerRoutePolicy:RouterRoutePolicy", name, args ?? new RouterRoutePolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RouterRoutePolicy(string name, Input<string> id, RouterRoutePolicyState? state = null, CustomResourceOptions? options = null)
            : base("gcp:compute/routerRoutePolicy:RouterRoutePolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RouterRoutePolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RouterRoutePolicy Get(string name, Input<string> id, RouterRoutePolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new RouterRoutePolicy(name, id, state, options);
        }
    }

    public sealed class RouterRoutePolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the route policy. This policy's name, which must be a resource ID segment and unique within all policies owned by the Router
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Region where the router and NAT reside.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The name of the Cloud Router in which this route policy will be configured.
        /// </summary>
        [Input("router", required: true)]
        public Input<string> Router { get; set; } = null!;

        [Input("terms", required: true)]
        private InputList<Inputs.RouterRoutePolicyTermArgs>? _terms;

        /// <summary>
        /// List of terms (the order in the list is not important, they are evaluated in order of priority).
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.RouterRoutePolicyTermArgs> Terms
        {
            get => _terms ?? (_terms = new InputList<Inputs.RouterRoutePolicyTermArgs>());
            set => _terms = value;
        }

        /// <summary>
        /// This is policy's type, which is one of IMPORT or EXPORT Possible values: ["ROUTE_POLICY_TYPE_IMPORT",
        /// "ROUTE_POLICY_TYPE_EXPORT"]
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public RouterRoutePolicyArgs()
        {
        }
        public static new RouterRoutePolicyArgs Empty => new RouterRoutePolicyArgs();
    }

    public sealed class RouterRoutePolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The fingerprint used for optimistic locking of this resource.  Used
        /// internally during updates.
        /// </summary>
        [Input("fingerprint")]
        public Input<string>? Fingerprint { get; set; }

        /// <summary>
        /// Name of the route policy. This policy's name, which must be a resource ID segment and unique within all policies owned by the Router
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Region where the router and NAT reside.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The name of the Cloud Router in which this route policy will be configured.
        /// </summary>
        [Input("router")]
        public Input<string>? Router { get; set; }

        [Input("terms")]
        private InputList<Inputs.RouterRoutePolicyTermGetArgs>? _terms;

        /// <summary>
        /// List of terms (the order in the list is not important, they are evaluated in order of priority).
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.RouterRoutePolicyTermGetArgs> Terms
        {
            get => _terms ?? (_terms = new InputList<Inputs.RouterRoutePolicyTermGetArgs>());
            set => _terms = value;
        }

        /// <summary>
        /// This is policy's type, which is one of IMPORT or EXPORT Possible values: ["ROUTE_POLICY_TYPE_IMPORT",
        /// "ROUTE_POLICY_TYPE_EXPORT"]
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public RouterRoutePolicyState()
        {
        }
        public static new RouterRoutePolicyState Empty => new RouterRoutePolicyState();
    }
}
