// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute
{
    public static class GetSecurityPolicy
    {
        /// <summary>
        /// To get more information about Google Compute Security Policy, see:
        /// 
        /// * [API documentation](https://cloud.google.com/compute/docs/reference/rest/beta/securityPolicies)
        /// * How-to Guides
        ///     * [Official Documentation](https://cloud.google.com/armor/docs/configure-security-policies)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var sp1 = Gcp.Compute.GetSecurityPolicy.Invoke(new()
        ///     {
        ///         Name = "my-policy",
        ///         Project = "my-project",
        ///     });
        /// 
        ///     var sp2 = Gcp.Compute.GetSecurityPolicy.Invoke(new()
        ///     {
        ///         SelfLink = "https://www.googleapis.com/compute/v1/projects/my-project/global/securityPolicies/my-policy",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSecurityPolicyResult> InvokeAsync(GetSecurityPolicyArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSecurityPolicyResult>("gcp:compute/getSecurityPolicy:getSecurityPolicy", args ?? new GetSecurityPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// To get more information about Google Compute Security Policy, see:
        /// 
        /// * [API documentation](https://cloud.google.com/compute/docs/reference/rest/beta/securityPolicies)
        /// * How-to Guides
        ///     * [Official Documentation](https://cloud.google.com/armor/docs/configure-security-policies)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var sp1 = Gcp.Compute.GetSecurityPolicy.Invoke(new()
        ///     {
        ///         Name = "my-policy",
        ///         Project = "my-project",
        ///     });
        /// 
        ///     var sp2 = Gcp.Compute.GetSecurityPolicy.Invoke(new()
        ///     {
        ///         SelfLink = "https://www.googleapis.com/compute/v1/projects/my-project/global/securityPolicies/my-policy",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSecurityPolicyResult> Invoke(GetSecurityPolicyInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecurityPolicyResult>("gcp:compute/getSecurityPolicy:getSecurityPolicy", args ?? new GetSecurityPolicyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// To get more information about Google Compute Security Policy, see:
        /// 
        /// * [API documentation](https://cloud.google.com/compute/docs/reference/rest/beta/securityPolicies)
        /// * How-to Guides
        ///     * [Official Documentation](https://cloud.google.com/armor/docs/configure-security-policies)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var sp1 = Gcp.Compute.GetSecurityPolicy.Invoke(new()
        ///     {
        ///         Name = "my-policy",
        ///         Project = "my-project",
        ///     });
        /// 
        ///     var sp2 = Gcp.Compute.GetSecurityPolicy.Invoke(new()
        ///     {
        ///         SelfLink = "https://www.googleapis.com/compute/v1/projects/my-project/global/securityPolicies/my-policy",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSecurityPolicyResult> Invoke(GetSecurityPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecurityPolicyResult>("gcp:compute/getSecurityPolicy:getSecurityPolicy", args ?? new GetSecurityPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecurityPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the security policy. Provide either this or a `SelfLink`.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        /// <summary>
        /// The project in which the resource belongs. If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        /// <summary>
        /// The SelfLink of the security policy. Provide either this or a `Name`
        /// </summary>
        [Input("selfLink")]
        public string? SelfLink { get; set; }

        public GetSecurityPolicyArgs()
        {
        }
        public static new GetSecurityPolicyArgs Empty => new GetSecurityPolicyArgs();
    }

    public sealed class GetSecurityPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the security policy. Provide either this or a `SelfLink`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The project in which the resource belongs. If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The SelfLink of the security policy. Provide either this or a `Name`
        /// </summary>
        [Input("selfLink")]
        public Input<string>? SelfLink { get; set; }

        public GetSecurityPolicyInvokeArgs()
        {
        }
        public static new GetSecurityPolicyInvokeArgs Empty => new GetSecurityPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetSecurityPolicyResult
    {
        public readonly ImmutableArray<Outputs.GetSecurityPolicyAdaptiveProtectionConfigResult> AdaptiveProtectionConfigs;
        public readonly ImmutableArray<Outputs.GetSecurityPolicyAdvancedOptionsConfigResult> AdvancedOptionsConfigs;
        public readonly string Description;
        public readonly ImmutableDictionary<string, string> EffectiveLabels;
        public readonly string Fingerprint;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string LabelFingerprint;
        public readonly ImmutableDictionary<string, string> Labels;
        public readonly string? Name;
        public readonly string? Project;
        public readonly ImmutableDictionary<string, string> PulumiLabels;
        public readonly ImmutableArray<Outputs.GetSecurityPolicyRecaptchaOptionsConfigResult> RecaptchaOptionsConfigs;
        public readonly ImmutableArray<Outputs.GetSecurityPolicyRuleResult> Rules;
        public readonly string? SelfLink;
        public readonly string Type;

        [OutputConstructor]
        private GetSecurityPolicyResult(
            ImmutableArray<Outputs.GetSecurityPolicyAdaptiveProtectionConfigResult> adaptiveProtectionConfigs,

            ImmutableArray<Outputs.GetSecurityPolicyAdvancedOptionsConfigResult> advancedOptionsConfigs,

            string description,

            ImmutableDictionary<string, string> effectiveLabels,

            string fingerprint,

            string id,

            string labelFingerprint,

            ImmutableDictionary<string, string> labels,

            string? name,

            string? project,

            ImmutableDictionary<string, string> pulumiLabels,

            ImmutableArray<Outputs.GetSecurityPolicyRecaptchaOptionsConfigResult> recaptchaOptionsConfigs,

            ImmutableArray<Outputs.GetSecurityPolicyRuleResult> rules,

            string? selfLink,

            string type)
        {
            AdaptiveProtectionConfigs = adaptiveProtectionConfigs;
            AdvancedOptionsConfigs = advancedOptionsConfigs;
            Description = description;
            EffectiveLabels = effectiveLabels;
            Fingerprint = fingerprint;
            Id = id;
            LabelFingerprint = labelFingerprint;
            Labels = labels;
            Name = name;
            Project = project;
            PulumiLabels = pulumiLabels;
            RecaptchaOptionsConfigs = recaptchaOptionsConfigs;
            Rules = rules;
            SelfLink = selfLink;
            Type = type;
        }
    }
}
