// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute
{
    public static class GetInstanceTemplateIamPolicy
    {
        /// <summary>
        /// Retrieves the current IAM policy data for instancetemplate
        /// 
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Compute.GetInstanceTemplateIamPolicy.Invoke(new()
        ///     {
        ///         Project = @default.Project,
        ///         Name = @default.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetInstanceTemplateIamPolicyResult> InvokeAsync(GetInstanceTemplateIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInstanceTemplateIamPolicyResult>("gcp:compute/getInstanceTemplateIamPolicy:getInstanceTemplateIamPolicy", args ?? new GetInstanceTemplateIamPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the current IAM policy data for instancetemplate
        /// 
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Compute.GetInstanceTemplateIamPolicy.Invoke(new()
        ///     {
        ///         Project = @default.Project,
        ///         Name = @default.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetInstanceTemplateIamPolicyResult> Invoke(GetInstanceTemplateIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInstanceTemplateIamPolicyResult>("gcp:compute/getInstanceTemplateIamPolicy:getInstanceTemplateIamPolicy", args ?? new GetInstanceTemplateIamPolicyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the current IAM policy data for instancetemplate
        /// 
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Compute.GetInstanceTemplateIamPolicy.Invoke(new()
        ///     {
        ///         Project = @default.Project,
        ///         Name = @default.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetInstanceTemplateIamPolicyResult> Invoke(GetInstanceTemplateIamPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetInstanceTemplateIamPolicyResult>("gcp:compute/getInstanceTemplateIamPolicy:getInstanceTemplateIamPolicy", args ?? new GetInstanceTemplateIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInstanceTemplateIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        public GetInstanceTemplateIamPolicyArgs()
        {
        }
        public static new GetInstanceTemplateIamPolicyArgs Empty => new GetInstanceTemplateIamPolicyArgs();
    }

    public sealed class GetInstanceTemplateIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetInstanceTemplateIamPolicyInvokeArgs()
        {
        }
        public static new GetInstanceTemplateIamPolicyInvokeArgs Empty => new GetInstanceTemplateIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetInstanceTemplateIamPolicyResult
    {
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        /// <summary>
        /// (Required only by `gcp.compute.InstanceTemplateIamPolicy`) The policy data generated by
        /// a `gcp.organizations.getIAMPolicy` data source.
        /// </summary>
        public readonly string PolicyData;
        public readonly string Project;

        [OutputConstructor]
        private GetInstanceTemplateIamPolicyResult(
            string etag,

            string id,

            string name,

            string policyData,

            string project)
        {
            Etag = etag;
            Id = id;
            Name = name;
            PolicyData = policyData;
            Project = project;
        }
    }
}
