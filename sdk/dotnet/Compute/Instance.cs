// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Compute
{
    /// <summary>
    /// Manages a VM instance resource within GCE. For more information see
    /// [the official documentation](https://cloud.google.com/compute/docs/instances)
    /// and
    /// [API](https://cloud.google.com/compute/docs/reference/latest/instances).
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/compute_instance.html.markdown.
    /// </summary>
    public partial class Instance : Pulumi.CustomResource
    {
        /// <summary>
        /// If true, allows this provider to stop the instance to update its properties.
        /// If you try to update a property that requires stopping the instance without setting this field, the update will fail.
        /// </summary>
        [Output("allowStoppingForUpdate")]
        public Output<bool?> AllowStoppingForUpdate { get; private set; } = null!;

        /// <summary>
        /// Additional disks to attach to the instance. Can be repeated multiple times for multiple disks. Structure is documented below.
        /// </summary>
        [Output("attachedDisks")]
        public Output<ImmutableArray<Outputs.InstanceAttachedDisks>> AttachedDisks { get; private set; } = null!;

        /// <summary>
        /// The boot disk for the instance.
        /// Structure is documented below.
        /// </summary>
        [Output("bootDisk")]
        public Output<Outputs.InstanceBootDisk> BootDisk { get; private set; } = null!;

        /// <summary>
        /// Whether to allow sending and receiving of
        /// packets with non-matching source or destination IPs.
        /// This defaults to false.
        /// </summary>
        [Output("canIpForward")]
        public Output<bool?> CanIpForward { get; private set; } = null!;

        /// <summary>
        /// The CPU platform used by this instance.
        /// </summary>
        [Output("cpuPlatform")]
        public Output<string> CpuPlatform { get; private set; } = null!;

        /// <summary>
        /// Enable deletion protection on this instance. Defaults to false.
        /// **Note:** you must disable deletion protection before removing the resource, or the instance cannot be deleted and the deployment will not complete successfully.
        /// </summary>
        [Output("deletionProtection")]
        public Output<bool?> DeletionProtection { get; private set; } = null!;

        /// <summary>
        /// A brief description of this resource.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Enable [Virtual Displays](https://cloud.google.com/compute/docs/instances/enable-instance-virtual-display#verify_display_driver) on this instance.
        /// **Note**: `allow_stopping_for_update` must be set to true in order to update this field.
        /// </summary>
        [Output("enableDisplay")]
        public Output<bool?> EnableDisplay { get; private set; } = null!;

        /// <summary>
        /// List of the type and count of accelerator cards attached to the instance. Structure documented below.
        /// **Note:** GPU accelerators can only be used with `on_host_maintenance` option set to TERMINATE.
        /// </summary>
        [Output("guestAccelerators")]
        public Output<ImmutableArray<Outputs.InstanceGuestAccelerators>> GuestAccelerators { get; private set; } = null!;

        /// <summary>
        /// A custom hostname for the instance. Must be a fully qualified DNS name and RFC-1035-valid.
        /// Valid format is a series of labels 1-63 characters long matching the regular expression `a-z`, concatenated with periods.
        /// The entire hostname must not exceed 253 characters. Changing this forces a new resource to be created.
        /// </summary>
        [Output("hostname")]
        public Output<string?> Hostname { get; private set; } = null!;

        /// <summary>
        /// The server-assigned unique identifier of this instance.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// The unique fingerprint of the labels.
        /// </summary>
        [Output("labelFingerprint")]
        public Output<string> LabelFingerprint { get; private set; } = null!;

        /// <summary>
        /// A map of key/value label pairs to assign to the instance.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// The machine type to create.
        /// </summary>
        [Output("machineType")]
        public Output<string> MachineType { get; private set; } = null!;

        /// <summary>
        /// Metadata key/value pairs to make available from
        /// within the instance. Ssh keys attached in the Cloud Console will be removed.
        /// Add them to your config in order to keep them attached to your instance.
        /// </summary>
        [Output("metadata")]
        public Output<ImmutableDictionary<string, string>?> Metadata { get; private set; } = null!;

        /// <summary>
        /// The unique fingerprint of the metadata.
        /// </summary>
        [Output("metadataFingerprint")]
        public Output<string> MetadataFingerprint { get; private set; } = null!;

        /// <summary>
        /// An alternative to using the
        /// startup-script metadata key, except this one forces the instance to be
        /// recreated (thus re-running the script) if it is changed. This replaces the
        /// startup-script metadata key on the created instance and thus the two
        /// mechanisms are not allowed to be used simultaneously.
        /// </summary>
        [Output("metadataStartupScript")]
        public Output<string?> MetadataStartupScript { get; private set; } = null!;

        /// <summary>
        /// Specifies a minimum CPU platform for the VM instance. Applicable values are the friendly names of CPU platforms, such as
        /// `Intel Haswell` or `Intel Skylake`. See the complete list [here](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform).
        /// **Note**: `allow_stopping_for_update` must be set to true in order to update this field.
        /// </summary>
        [Output("minCpuPlatform")]
        public Output<string?> MinCpuPlatform { get; private set; } = null!;

        /// <summary>
        /// A unique name for the resource, required by GCE.
        /// Changing this forces a new resource to be created.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Networks to attach to the instance. This can
        /// be specified multiple times. Structure is documented below.
        /// </summary>
        [Output("networkInterfaces")]
        public Output<ImmutableArray<Outputs.InstanceNetworkInterfaces>> NetworkInterfaces { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The scheduling strategy to use. More details about
        /// this configuration option are detailed below.
        /// </summary>
        [Output("scheduling")]
        public Output<Outputs.InstanceScheduling> Scheduling { get; private set; } = null!;

        /// <summary>
        /// Scratch disks to attach to the instance. This can be
        /// specified multiple times for multiple scratch disks. Structure is documented below.
        /// </summary>
        [Output("scratchDisks")]
        public Output<ImmutableArray<Outputs.InstanceScratchDisks>> ScratchDisks { get; private set; } = null!;

        /// <summary>
        /// The URI of the created resource.
        /// </summary>
        [Output("selfLink")]
        public Output<string> SelfLink { get; private set; } = null!;

        /// <summary>
        /// Service account to attach to the instance.
        /// Structure is documented below.
        /// **Note**: `allow_stopping_for_update` must be set to true in order to update this field.
        /// </summary>
        [Output("serviceAccount")]
        public Output<Outputs.InstanceServiceAccount?> ServiceAccount { get; private set; } = null!;

        /// <summary>
        /// Enable [Shielded VM](https://cloud.google.com/security/shielded-cloud/shielded-vm) on this instance. Shielded VM provides verifiable integrity to prevent against malware and rootkits. Defaults to disabled. Structure is documented below.
        /// **Note**: `shielded_instance_config` can only be used with boot images with shielded vm support. See the complete list [here](https://cloud.google.com/compute/docs/images#shielded-images).
        /// </summary>
        [Output("shieldedInstanceConfig")]
        public Output<Outputs.InstanceShieldedInstanceConfig> ShieldedInstanceConfig { get; private set; } = null!;

        /// <summary>
        /// A list of tags to attach to the instance.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;

        /// <summary>
        /// The unique fingerprint of the tags.
        /// </summary>
        [Output("tagsFingerprint")]
        public Output<string> TagsFingerprint { get; private set; } = null!;

        /// <summary>
        /// The zone that the machine should be created in.
        /// </summary>
        [Output("zone")]
        public Output<string> Zone { get; private set; } = null!;


        /// <summary>
        /// Create a Instance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Instance(string name, InstanceArgs args, CustomResourceOptions? options = null)
            : base("gcp:compute/instance:Instance", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private Instance(string name, Input<string> id, InstanceState? state = null, CustomResourceOptions? options = null)
            : base("gcp:compute/instance:Instance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Instance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Instance Get(string name, Input<string> id, InstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new Instance(name, id, state, options);
        }
    }

    public sealed class InstanceArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If true, allows this provider to stop the instance to update its properties.
        /// If you try to update a property that requires stopping the instance without setting this field, the update will fail.
        /// </summary>
        [Input("allowStoppingForUpdate")]
        public Input<bool>? AllowStoppingForUpdate { get; set; }

        [Input("attachedDisks")]
        private InputList<Inputs.InstanceAttachedDisksArgs>? _attachedDisks;

        /// <summary>
        /// Additional disks to attach to the instance. Can be repeated multiple times for multiple disks. Structure is documented below.
        /// </summary>
        public InputList<Inputs.InstanceAttachedDisksArgs> AttachedDisks
        {
            get => _attachedDisks ?? (_attachedDisks = new InputList<Inputs.InstanceAttachedDisksArgs>());
            set => _attachedDisks = value;
        }

        /// <summary>
        /// The boot disk for the instance.
        /// Structure is documented below.
        /// </summary>
        [Input("bootDisk", required: true)]
        public Input<Inputs.InstanceBootDiskArgs> BootDisk { get; set; } = null!;

        /// <summary>
        /// Whether to allow sending and receiving of
        /// packets with non-matching source or destination IPs.
        /// This defaults to false.
        /// </summary>
        [Input("canIpForward")]
        public Input<bool>? CanIpForward { get; set; }

        /// <summary>
        /// Enable deletion protection on this instance. Defaults to false.
        /// **Note:** you must disable deletion protection before removing the resource, or the instance cannot be deleted and the deployment will not complete successfully.
        /// </summary>
        [Input("deletionProtection")]
        public Input<bool>? DeletionProtection { get; set; }

        /// <summary>
        /// A brief description of this resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Enable [Virtual Displays](https://cloud.google.com/compute/docs/instances/enable-instance-virtual-display#verify_display_driver) on this instance.
        /// **Note**: `allow_stopping_for_update` must be set to true in order to update this field.
        /// </summary>
        [Input("enableDisplay")]
        public Input<bool>? EnableDisplay { get; set; }

        [Input("guestAccelerators")]
        private InputList<Inputs.InstanceGuestAcceleratorsArgs>? _guestAccelerators;

        /// <summary>
        /// List of the type and count of accelerator cards attached to the instance. Structure documented below.
        /// **Note:** GPU accelerators can only be used with `on_host_maintenance` option set to TERMINATE.
        /// </summary>
        public InputList<Inputs.InstanceGuestAcceleratorsArgs> GuestAccelerators
        {
            get => _guestAccelerators ?? (_guestAccelerators = new InputList<Inputs.InstanceGuestAcceleratorsArgs>());
            set => _guestAccelerators = value;
        }

        /// <summary>
        /// A custom hostname for the instance. Must be a fully qualified DNS name and RFC-1035-valid.
        /// Valid format is a series of labels 1-63 characters long matching the regular expression `a-z`, concatenated with periods.
        /// The entire hostname must not exceed 253 characters. Changing this forces a new resource to be created.
        /// </summary>
        [Input("hostname")]
        public Input<string>? Hostname { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// A map of key/value label pairs to assign to the instance.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The machine type to create.
        /// </summary>
        [Input("machineType", required: true)]
        public Input<string> MachineType { get; set; } = null!;

        [Input("metadata")]
        private InputMap<string>? _metadata;

        /// <summary>
        /// Metadata key/value pairs to make available from
        /// within the instance. Ssh keys attached in the Cloud Console will be removed.
        /// Add them to your config in order to keep them attached to your instance.
        /// </summary>
        public InputMap<string> Metadata
        {
            get => _metadata ?? (_metadata = new InputMap<string>());
            set => _metadata = value;
        }

        /// <summary>
        /// An alternative to using the
        /// startup-script metadata key, except this one forces the instance to be
        /// recreated (thus re-running the script) if it is changed. This replaces the
        /// startup-script metadata key on the created instance and thus the two
        /// mechanisms are not allowed to be used simultaneously.
        /// </summary>
        [Input("metadataStartupScript")]
        public Input<string>? MetadataStartupScript { get; set; }

        /// <summary>
        /// Specifies a minimum CPU platform for the VM instance. Applicable values are the friendly names of CPU platforms, such as
        /// `Intel Haswell` or `Intel Skylake`. See the complete list [here](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform).
        /// **Note**: `allow_stopping_for_update` must be set to true in order to update this field.
        /// </summary>
        [Input("minCpuPlatform")]
        public Input<string>? MinCpuPlatform { get; set; }

        /// <summary>
        /// A unique name for the resource, required by GCE.
        /// Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("networkInterfaces", required: true)]
        private InputList<Inputs.InstanceNetworkInterfacesArgs>? _networkInterfaces;

        /// <summary>
        /// Networks to attach to the instance. This can
        /// be specified multiple times. Structure is documented below.
        /// </summary>
        public InputList<Inputs.InstanceNetworkInterfacesArgs> NetworkInterfaces
        {
            get => _networkInterfaces ?? (_networkInterfaces = new InputList<Inputs.InstanceNetworkInterfacesArgs>());
            set => _networkInterfaces = value;
        }

        /// <summary>
        /// The ID of the project in which the resource belongs. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The scheduling strategy to use. More details about
        /// this configuration option are detailed below.
        /// </summary>
        [Input("scheduling")]
        public Input<Inputs.InstanceSchedulingArgs>? Scheduling { get; set; }

        [Input("scratchDisks")]
        private InputList<Inputs.InstanceScratchDisksArgs>? _scratchDisks;

        /// <summary>
        /// Scratch disks to attach to the instance. This can be
        /// specified multiple times for multiple scratch disks. Structure is documented below.
        /// </summary>
        public InputList<Inputs.InstanceScratchDisksArgs> ScratchDisks
        {
            get => _scratchDisks ?? (_scratchDisks = new InputList<Inputs.InstanceScratchDisksArgs>());
            set => _scratchDisks = value;
        }

        /// <summary>
        /// Service account to attach to the instance.
        /// Structure is documented below.
        /// **Note**: `allow_stopping_for_update` must be set to true in order to update this field.
        /// </summary>
        [Input("serviceAccount")]
        public Input<Inputs.InstanceServiceAccountArgs>? ServiceAccount { get; set; }

        /// <summary>
        /// Enable [Shielded VM](https://cloud.google.com/security/shielded-cloud/shielded-vm) on this instance. Shielded VM provides verifiable integrity to prevent against malware and rootkits. Defaults to disabled. Structure is documented below.
        /// **Note**: `shielded_instance_config` can only be used with boot images with shielded vm support. See the complete list [here](https://cloud.google.com/compute/docs/images#shielded-images).
        /// </summary>
        [Input("shieldedInstanceConfig")]
        public Input<Inputs.InstanceShieldedInstanceConfigArgs>? ShieldedInstanceConfig { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// A list of tags to attach to the instance.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The zone that the machine should be created in.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public InstanceArgs()
        {
        }
    }

    public sealed class InstanceState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If true, allows this provider to stop the instance to update its properties.
        /// If you try to update a property that requires stopping the instance without setting this field, the update will fail.
        /// </summary>
        [Input("allowStoppingForUpdate")]
        public Input<bool>? AllowStoppingForUpdate { get; set; }

        [Input("attachedDisks")]
        private InputList<Inputs.InstanceAttachedDisksGetArgs>? _attachedDisks;

        /// <summary>
        /// Additional disks to attach to the instance. Can be repeated multiple times for multiple disks. Structure is documented below.
        /// </summary>
        public InputList<Inputs.InstanceAttachedDisksGetArgs> AttachedDisks
        {
            get => _attachedDisks ?? (_attachedDisks = new InputList<Inputs.InstanceAttachedDisksGetArgs>());
            set => _attachedDisks = value;
        }

        /// <summary>
        /// The boot disk for the instance.
        /// Structure is documented below.
        /// </summary>
        [Input("bootDisk")]
        public Input<Inputs.InstanceBootDiskGetArgs>? BootDisk { get; set; }

        /// <summary>
        /// Whether to allow sending and receiving of
        /// packets with non-matching source or destination IPs.
        /// This defaults to false.
        /// </summary>
        [Input("canIpForward")]
        public Input<bool>? CanIpForward { get; set; }

        /// <summary>
        /// The CPU platform used by this instance.
        /// </summary>
        [Input("cpuPlatform")]
        public Input<string>? CpuPlatform { get; set; }

        /// <summary>
        /// Enable deletion protection on this instance. Defaults to false.
        /// **Note:** you must disable deletion protection before removing the resource, or the instance cannot be deleted and the deployment will not complete successfully.
        /// </summary>
        [Input("deletionProtection")]
        public Input<bool>? DeletionProtection { get; set; }

        /// <summary>
        /// A brief description of this resource.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Enable [Virtual Displays](https://cloud.google.com/compute/docs/instances/enable-instance-virtual-display#verify_display_driver) on this instance.
        /// **Note**: `allow_stopping_for_update` must be set to true in order to update this field.
        /// </summary>
        [Input("enableDisplay")]
        public Input<bool>? EnableDisplay { get; set; }

        [Input("guestAccelerators")]
        private InputList<Inputs.InstanceGuestAcceleratorsGetArgs>? _guestAccelerators;

        /// <summary>
        /// List of the type and count of accelerator cards attached to the instance. Structure documented below.
        /// **Note:** GPU accelerators can only be used with `on_host_maintenance` option set to TERMINATE.
        /// </summary>
        public InputList<Inputs.InstanceGuestAcceleratorsGetArgs> GuestAccelerators
        {
            get => _guestAccelerators ?? (_guestAccelerators = new InputList<Inputs.InstanceGuestAcceleratorsGetArgs>());
            set => _guestAccelerators = value;
        }

        /// <summary>
        /// A custom hostname for the instance. Must be a fully qualified DNS name and RFC-1035-valid.
        /// Valid format is a series of labels 1-63 characters long matching the regular expression `a-z`, concatenated with periods.
        /// The entire hostname must not exceed 253 characters. Changing this forces a new resource to be created.
        /// </summary>
        [Input("hostname")]
        public Input<string>? Hostname { get; set; }

        /// <summary>
        /// The server-assigned unique identifier of this instance.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// The unique fingerprint of the labels.
        /// </summary>
        [Input("labelFingerprint")]
        public Input<string>? LabelFingerprint { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// A map of key/value label pairs to assign to the instance.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The machine type to create.
        /// </summary>
        [Input("machineType")]
        public Input<string>? MachineType { get; set; }

        [Input("metadata")]
        private InputMap<string>? _metadata;

        /// <summary>
        /// Metadata key/value pairs to make available from
        /// within the instance. Ssh keys attached in the Cloud Console will be removed.
        /// Add them to your config in order to keep them attached to your instance.
        /// </summary>
        public InputMap<string> Metadata
        {
            get => _metadata ?? (_metadata = new InputMap<string>());
            set => _metadata = value;
        }

        /// <summary>
        /// The unique fingerprint of the metadata.
        /// </summary>
        [Input("metadataFingerprint")]
        public Input<string>? MetadataFingerprint { get; set; }

        /// <summary>
        /// An alternative to using the
        /// startup-script metadata key, except this one forces the instance to be
        /// recreated (thus re-running the script) if it is changed. This replaces the
        /// startup-script metadata key on the created instance and thus the two
        /// mechanisms are not allowed to be used simultaneously.
        /// </summary>
        [Input("metadataStartupScript")]
        public Input<string>? MetadataStartupScript { get; set; }

        /// <summary>
        /// Specifies a minimum CPU platform for the VM instance. Applicable values are the friendly names of CPU platforms, such as
        /// `Intel Haswell` or `Intel Skylake`. See the complete list [here](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform).
        /// **Note**: `allow_stopping_for_update` must be set to true in order to update this field.
        /// </summary>
        [Input("minCpuPlatform")]
        public Input<string>? MinCpuPlatform { get; set; }

        /// <summary>
        /// A unique name for the resource, required by GCE.
        /// Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("networkInterfaces")]
        private InputList<Inputs.InstanceNetworkInterfacesGetArgs>? _networkInterfaces;

        /// <summary>
        /// Networks to attach to the instance. This can
        /// be specified multiple times. Structure is documented below.
        /// </summary>
        public InputList<Inputs.InstanceNetworkInterfacesGetArgs> NetworkInterfaces
        {
            get => _networkInterfaces ?? (_networkInterfaces = new InputList<Inputs.InstanceNetworkInterfacesGetArgs>());
            set => _networkInterfaces = value;
        }

        /// <summary>
        /// The ID of the project in which the resource belongs. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The scheduling strategy to use. More details about
        /// this configuration option are detailed below.
        /// </summary>
        [Input("scheduling")]
        public Input<Inputs.InstanceSchedulingGetArgs>? Scheduling { get; set; }

        [Input("scratchDisks")]
        private InputList<Inputs.InstanceScratchDisksGetArgs>? _scratchDisks;

        /// <summary>
        /// Scratch disks to attach to the instance. This can be
        /// specified multiple times for multiple scratch disks. Structure is documented below.
        /// </summary>
        public InputList<Inputs.InstanceScratchDisksGetArgs> ScratchDisks
        {
            get => _scratchDisks ?? (_scratchDisks = new InputList<Inputs.InstanceScratchDisksGetArgs>());
            set => _scratchDisks = value;
        }

        /// <summary>
        /// The URI of the created resource.
        /// </summary>
        [Input("selfLink")]
        public Input<string>? SelfLink { get; set; }

        /// <summary>
        /// Service account to attach to the instance.
        /// Structure is documented below.
        /// **Note**: `allow_stopping_for_update` must be set to true in order to update this field.
        /// </summary>
        [Input("serviceAccount")]
        public Input<Inputs.InstanceServiceAccountGetArgs>? ServiceAccount { get; set; }

        /// <summary>
        /// Enable [Shielded VM](https://cloud.google.com/security/shielded-cloud/shielded-vm) on this instance. Shielded VM provides verifiable integrity to prevent against malware and rootkits. Defaults to disabled. Structure is documented below.
        /// **Note**: `shielded_instance_config` can only be used with boot images with shielded vm support. See the complete list [here](https://cloud.google.com/compute/docs/images#shielded-images).
        /// </summary>
        [Input("shieldedInstanceConfig")]
        public Input<Inputs.InstanceShieldedInstanceConfigGetArgs>? ShieldedInstanceConfig { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// A list of tags to attach to the instance.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The unique fingerprint of the tags.
        /// </summary>
        [Input("tagsFingerprint")]
        public Input<string>? TagsFingerprint { get; set; }

        /// <summary>
        /// The zone that the machine should be created in.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public InstanceState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class InstanceAttachedDisksArgs : Pulumi.ResourceArgs
    {
        [Input("deviceName")]
        public Input<string>? DeviceName { get; set; }

        [Input("diskEncryptionKeyRaw")]
        public Input<string>? DiskEncryptionKeyRaw { get; set; }

        [Input("diskEncryptionKeySha256")]
        public Input<string>? DiskEncryptionKeySha256 { get; set; }

        [Input("kmsKeySelfLink")]
        public Input<string>? KmsKeySelfLink { get; set; }

        [Input("mode")]
        public Input<string>? Mode { get; set; }

        [Input("source", required: true)]
        public Input<string> Source { get; set; } = null!;

        public InstanceAttachedDisksArgs()
        {
        }
    }

    public sealed class InstanceAttachedDisksGetArgs : Pulumi.ResourceArgs
    {
        [Input("deviceName")]
        public Input<string>? DeviceName { get; set; }

        [Input("diskEncryptionKeyRaw")]
        public Input<string>? DiskEncryptionKeyRaw { get; set; }

        [Input("diskEncryptionKeySha256")]
        public Input<string>? DiskEncryptionKeySha256 { get; set; }

        [Input("kmsKeySelfLink")]
        public Input<string>? KmsKeySelfLink { get; set; }

        [Input("mode")]
        public Input<string>? Mode { get; set; }

        [Input("source", required: true)]
        public Input<string> Source { get; set; } = null!;

        public InstanceAttachedDisksGetArgs()
        {
        }
    }

    public sealed class InstanceBootDiskArgs : Pulumi.ResourceArgs
    {
        [Input("autoDelete")]
        public Input<bool>? AutoDelete { get; set; }

        [Input("deviceName")]
        public Input<string>? DeviceName { get; set; }

        [Input("diskEncryptionKeyRaw")]
        public Input<string>? DiskEncryptionKeyRaw { get; set; }

        [Input("diskEncryptionKeySha256")]
        public Input<string>? DiskEncryptionKeySha256 { get; set; }

        [Input("initializeParams")]
        public Input<InstanceBootDiskInitializeParamsArgs>? InitializeParams { get; set; }

        [Input("kmsKeySelfLink")]
        public Input<string>? KmsKeySelfLink { get; set; }

        [Input("mode")]
        public Input<string>? Mode { get; set; }

        [Input("source")]
        public Input<string>? Source { get; set; }

        public InstanceBootDiskArgs()
        {
        }
    }

    public sealed class InstanceBootDiskGetArgs : Pulumi.ResourceArgs
    {
        [Input("autoDelete")]
        public Input<bool>? AutoDelete { get; set; }

        [Input("deviceName")]
        public Input<string>? DeviceName { get; set; }

        [Input("diskEncryptionKeyRaw")]
        public Input<string>? DiskEncryptionKeyRaw { get; set; }

        [Input("diskEncryptionKeySha256")]
        public Input<string>? DiskEncryptionKeySha256 { get; set; }

        [Input("initializeParams")]
        public Input<InstanceBootDiskInitializeParamsGetArgs>? InitializeParams { get; set; }

        [Input("kmsKeySelfLink")]
        public Input<string>? KmsKeySelfLink { get; set; }

        [Input("mode")]
        public Input<string>? Mode { get; set; }

        [Input("source")]
        public Input<string>? Source { get; set; }

        public InstanceBootDiskGetArgs()
        {
        }
    }

    public sealed class InstanceBootDiskInitializeParamsArgs : Pulumi.ResourceArgs
    {
        [Input("image")]
        public Input<string>? Image { get; set; }

        [Input("labels")]
        private InputMap<object>? _labels;

        /// <summary>
        /// A map of key/value label pairs to assign to the instance.
        /// </summary>
        public InputMap<object> Labels
        {
            get => _labels ?? (_labels = new InputMap<object>());
            set => _labels = value;
        }

        [Input("size")]
        public Input<int>? Size { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        public InstanceBootDiskInitializeParamsArgs()
        {
        }
    }

    public sealed class InstanceBootDiskInitializeParamsGetArgs : Pulumi.ResourceArgs
    {
        [Input("image")]
        public Input<string>? Image { get; set; }

        [Input("labels")]
        private InputMap<object>? _labels;

        /// <summary>
        /// A map of key/value label pairs to assign to the instance.
        /// </summary>
        public InputMap<object> Labels
        {
            get => _labels ?? (_labels = new InputMap<object>());
            set => _labels = value;
        }

        [Input("size")]
        public Input<int>? Size { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        public InstanceBootDiskInitializeParamsGetArgs()
        {
        }
    }

    public sealed class InstanceGuestAcceleratorsArgs : Pulumi.ResourceArgs
    {
        [Input("count", required: true)]
        public Input<int> Count { get; set; } = null!;

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public InstanceGuestAcceleratorsArgs()
        {
        }
    }

    public sealed class InstanceGuestAcceleratorsGetArgs : Pulumi.ResourceArgs
    {
        [Input("count", required: true)]
        public Input<int> Count { get; set; } = null!;

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public InstanceGuestAcceleratorsGetArgs()
        {
        }
    }

    public sealed class InstanceNetworkInterfacesAccessConfigsArgs : Pulumi.ResourceArgs
    {
        [Input("natIp")]
        public Input<string>? NatIp { get; set; }

        [Input("networkTier")]
        public Input<string>? NetworkTier { get; set; }

        [Input("publicPtrDomainName")]
        public Input<string>? PublicPtrDomainName { get; set; }

        public InstanceNetworkInterfacesAccessConfigsArgs()
        {
        }
    }

    public sealed class InstanceNetworkInterfacesAccessConfigsGetArgs : Pulumi.ResourceArgs
    {
        [Input("natIp")]
        public Input<string>? NatIp { get; set; }

        [Input("networkTier")]
        public Input<string>? NetworkTier { get; set; }

        [Input("publicPtrDomainName")]
        public Input<string>? PublicPtrDomainName { get; set; }

        public InstanceNetworkInterfacesAccessConfigsGetArgs()
        {
        }
    }

    public sealed class InstanceNetworkInterfacesAliasIpRangesArgs : Pulumi.ResourceArgs
    {
        [Input("ipCidrRange", required: true)]
        public Input<string> IpCidrRange { get; set; } = null!;

        [Input("subnetworkRangeName")]
        public Input<string>? SubnetworkRangeName { get; set; }

        public InstanceNetworkInterfacesAliasIpRangesArgs()
        {
        }
    }

    public sealed class InstanceNetworkInterfacesAliasIpRangesGetArgs : Pulumi.ResourceArgs
    {
        [Input("ipCidrRange", required: true)]
        public Input<string> IpCidrRange { get; set; } = null!;

        [Input("subnetworkRangeName")]
        public Input<string>? SubnetworkRangeName { get; set; }

        public InstanceNetworkInterfacesAliasIpRangesGetArgs()
        {
        }
    }

    public sealed class InstanceNetworkInterfacesArgs : Pulumi.ResourceArgs
    {
        [Input("accessConfigs")]
        private InputList<InstanceNetworkInterfacesAccessConfigsArgs>? _accessConfigs;
        public InputList<InstanceNetworkInterfacesAccessConfigsArgs> AccessConfigs
        {
            get => _accessConfigs ?? (_accessConfigs = new InputList<InstanceNetworkInterfacesAccessConfigsArgs>());
            set => _accessConfigs = value;
        }

        [Input("aliasIpRanges")]
        private InputList<InstanceNetworkInterfacesAliasIpRangesArgs>? _aliasIpRanges;
        public InputList<InstanceNetworkInterfacesAliasIpRangesArgs> AliasIpRanges
        {
            get => _aliasIpRanges ?? (_aliasIpRanges = new InputList<InstanceNetworkInterfacesAliasIpRangesArgs>());
            set => _aliasIpRanges = value;
        }

        /// <summary>
        /// A unique name for the resource, required by GCE.
        /// Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("network")]
        public Input<string>? Network { get; set; }

        [Input("networkIp")]
        public Input<string>? NetworkIp { get; set; }

        [Input("subnetwork")]
        public Input<string>? Subnetwork { get; set; }

        [Input("subnetworkProject")]
        public Input<string>? SubnetworkProject { get; set; }

        public InstanceNetworkInterfacesArgs()
        {
        }
    }

    public sealed class InstanceNetworkInterfacesGetArgs : Pulumi.ResourceArgs
    {
        [Input("accessConfigs")]
        private InputList<InstanceNetworkInterfacesAccessConfigsGetArgs>? _accessConfigs;
        public InputList<InstanceNetworkInterfacesAccessConfigsGetArgs> AccessConfigs
        {
            get => _accessConfigs ?? (_accessConfigs = new InputList<InstanceNetworkInterfacesAccessConfigsGetArgs>());
            set => _accessConfigs = value;
        }

        [Input("aliasIpRanges")]
        private InputList<InstanceNetworkInterfacesAliasIpRangesGetArgs>? _aliasIpRanges;
        public InputList<InstanceNetworkInterfacesAliasIpRangesGetArgs> AliasIpRanges
        {
            get => _aliasIpRanges ?? (_aliasIpRanges = new InputList<InstanceNetworkInterfacesAliasIpRangesGetArgs>());
            set => _aliasIpRanges = value;
        }

        /// <summary>
        /// A unique name for the resource, required by GCE.
        /// Changing this forces a new resource to be created.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("network")]
        public Input<string>? Network { get; set; }

        [Input("networkIp")]
        public Input<string>? NetworkIp { get; set; }

        [Input("subnetwork")]
        public Input<string>? Subnetwork { get; set; }

        [Input("subnetworkProject")]
        public Input<string>? SubnetworkProject { get; set; }

        public InstanceNetworkInterfacesGetArgs()
        {
        }
    }

    public sealed class InstanceSchedulingArgs : Pulumi.ResourceArgs
    {
        [Input("automaticRestart")]
        public Input<bool>? AutomaticRestart { get; set; }

        [Input("nodeAffinities")]
        private InputList<InstanceSchedulingNodeAffinitiesArgs>? _nodeAffinities;
        public InputList<InstanceSchedulingNodeAffinitiesArgs> NodeAffinities
        {
            get => _nodeAffinities ?? (_nodeAffinities = new InputList<InstanceSchedulingNodeAffinitiesArgs>());
            set => _nodeAffinities = value;
        }

        [Input("onHostMaintenance")]
        public Input<string>? OnHostMaintenance { get; set; }

        [Input("preemptible")]
        public Input<bool>? Preemptible { get; set; }

        public InstanceSchedulingArgs()
        {
        }
    }

    public sealed class InstanceSchedulingGetArgs : Pulumi.ResourceArgs
    {
        [Input("automaticRestart")]
        public Input<bool>? AutomaticRestart { get; set; }

        [Input("nodeAffinities")]
        private InputList<InstanceSchedulingNodeAffinitiesGetArgs>? _nodeAffinities;
        public InputList<InstanceSchedulingNodeAffinitiesGetArgs> NodeAffinities
        {
            get => _nodeAffinities ?? (_nodeAffinities = new InputList<InstanceSchedulingNodeAffinitiesGetArgs>());
            set => _nodeAffinities = value;
        }

        [Input("onHostMaintenance")]
        public Input<string>? OnHostMaintenance { get; set; }

        [Input("preemptible")]
        public Input<bool>? Preemptible { get; set; }

        public InstanceSchedulingGetArgs()
        {
        }
    }

    public sealed class InstanceSchedulingNodeAffinitiesArgs : Pulumi.ResourceArgs
    {
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        [Input("operator", required: true)]
        public Input<string> Operator { get; set; } = null!;

        [Input("values", required: true)]
        private InputList<string>? _values;
        public InputList<string> Values
        {
            get => _values ?? (_values = new InputList<string>());
            set => _values = value;
        }

        public InstanceSchedulingNodeAffinitiesArgs()
        {
        }
    }

    public sealed class InstanceSchedulingNodeAffinitiesGetArgs : Pulumi.ResourceArgs
    {
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        [Input("operator", required: true)]
        public Input<string> Operator { get; set; } = null!;

        [Input("values", required: true)]
        private InputList<string>? _values;
        public InputList<string> Values
        {
            get => _values ?? (_values = new InputList<string>());
            set => _values = value;
        }

        public InstanceSchedulingNodeAffinitiesGetArgs()
        {
        }
    }

    public sealed class InstanceScratchDisksArgs : Pulumi.ResourceArgs
    {
        [Input("interface")]
        public Input<string>? Interface { get; set; }

        public InstanceScratchDisksArgs()
        {
        }
    }

    public sealed class InstanceScratchDisksGetArgs : Pulumi.ResourceArgs
    {
        [Input("interface")]
        public Input<string>? Interface { get; set; }

        public InstanceScratchDisksGetArgs()
        {
        }
    }

    public sealed class InstanceServiceAccountArgs : Pulumi.ResourceArgs
    {
        [Input("email")]
        public Input<string>? Email { get; set; }

        [Input("scopes", required: true)]
        private InputList<string>? _scopes;
        public InputList<string> Scopes
        {
            get => _scopes ?? (_scopes = new InputList<string>());
            set => _scopes = value;
        }

        public InstanceServiceAccountArgs()
        {
        }
    }

    public sealed class InstanceServiceAccountGetArgs : Pulumi.ResourceArgs
    {
        [Input("email")]
        public Input<string>? Email { get; set; }

        [Input("scopes", required: true)]
        private InputList<string>? _scopes;
        public InputList<string> Scopes
        {
            get => _scopes ?? (_scopes = new InputList<string>());
            set => _scopes = value;
        }

        public InstanceServiceAccountGetArgs()
        {
        }
    }

    public sealed class InstanceShieldedInstanceConfigArgs : Pulumi.ResourceArgs
    {
        [Input("enableIntegrityMonitoring")]
        public Input<bool>? EnableIntegrityMonitoring { get; set; }

        [Input("enableSecureBoot")]
        public Input<bool>? EnableSecureBoot { get; set; }

        [Input("enableVtpm")]
        public Input<bool>? EnableVtpm { get; set; }

        public InstanceShieldedInstanceConfigArgs()
        {
        }
    }

    public sealed class InstanceShieldedInstanceConfigGetArgs : Pulumi.ResourceArgs
    {
        [Input("enableIntegrityMonitoring")]
        public Input<bool>? EnableIntegrityMonitoring { get; set; }

        [Input("enableSecureBoot")]
        public Input<bool>? EnableSecureBoot { get; set; }

        [Input("enableVtpm")]
        public Input<bool>? EnableVtpm { get; set; }

        public InstanceShieldedInstanceConfigGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class InstanceAttachedDisks
    {
        public readonly string DeviceName;
        public readonly string? DiskEncryptionKeyRaw;
        public readonly string DiskEncryptionKeySha256;
        public readonly string KmsKeySelfLink;
        public readonly string? Mode;
        public readonly string Source;

        [OutputConstructor]
        private InstanceAttachedDisks(
            string deviceName,
            string? diskEncryptionKeyRaw,
            string diskEncryptionKeySha256,
            string kmsKeySelfLink,
            string? mode,
            string source)
        {
            DeviceName = deviceName;
            DiskEncryptionKeyRaw = diskEncryptionKeyRaw;
            DiskEncryptionKeySha256 = diskEncryptionKeySha256;
            KmsKeySelfLink = kmsKeySelfLink;
            Mode = mode;
            Source = source;
        }
    }

    [OutputType]
    public sealed class InstanceBootDisk
    {
        public readonly bool? AutoDelete;
        public readonly string DeviceName;
        public readonly string? DiskEncryptionKeyRaw;
        public readonly string DiskEncryptionKeySha256;
        public readonly InstanceBootDiskInitializeParams InitializeParams;
        public readonly string KmsKeySelfLink;
        public readonly string? Mode;
        public readonly string Source;

        [OutputConstructor]
        private InstanceBootDisk(
            bool? autoDelete,
            string deviceName,
            string? diskEncryptionKeyRaw,
            string diskEncryptionKeySha256,
            InstanceBootDiskInitializeParams initializeParams,
            string kmsKeySelfLink,
            string? mode,
            string source)
        {
            AutoDelete = autoDelete;
            DeviceName = deviceName;
            DiskEncryptionKeyRaw = diskEncryptionKeyRaw;
            DiskEncryptionKeySha256 = diskEncryptionKeySha256;
            InitializeParams = initializeParams;
            KmsKeySelfLink = kmsKeySelfLink;
            Mode = mode;
            Source = source;
        }
    }

    [OutputType]
    public sealed class InstanceBootDiskInitializeParams
    {
        public readonly string Image;
        /// <summary>
        /// A map of key/value label pairs to assign to the instance.
        /// </summary>
        public readonly ImmutableDictionary<string, object> Labels;
        public readonly int Size;
        public readonly string Type;

        [OutputConstructor]
        private InstanceBootDiskInitializeParams(
            string image,
            ImmutableDictionary<string, object> labels,
            int size,
            string type)
        {
            Image = image;
            Labels = labels;
            Size = size;
            Type = type;
        }
    }

    [OutputType]
    public sealed class InstanceGuestAccelerators
    {
        public readonly int Count;
        public readonly string Type;

        [OutputConstructor]
        private InstanceGuestAccelerators(
            int count,
            string type)
        {
            Count = count;
            Type = type;
        }
    }

    [OutputType]
    public sealed class InstanceNetworkInterfaces
    {
        public readonly ImmutableArray<InstanceNetworkInterfacesAccessConfigs> AccessConfigs;
        public readonly ImmutableArray<InstanceNetworkInterfacesAliasIpRanges> AliasIpRanges;
        /// <summary>
        /// A unique name for the resource, required by GCE.
        /// Changing this forces a new resource to be created.
        /// </summary>
        public readonly string Name;
        public readonly string Network;
        public readonly string NetworkIp;
        public readonly string Subnetwork;
        public readonly string SubnetworkProject;

        [OutputConstructor]
        private InstanceNetworkInterfaces(
            ImmutableArray<InstanceNetworkInterfacesAccessConfigs> accessConfigs,
            ImmutableArray<InstanceNetworkInterfacesAliasIpRanges> aliasIpRanges,
            string name,
            string network,
            string networkIp,
            string subnetwork,
            string subnetworkProject)
        {
            AccessConfigs = accessConfigs;
            AliasIpRanges = aliasIpRanges;
            Name = name;
            Network = network;
            NetworkIp = networkIp;
            Subnetwork = subnetwork;
            SubnetworkProject = subnetworkProject;
        }
    }

    [OutputType]
    public sealed class InstanceNetworkInterfacesAccessConfigs
    {
        public readonly string NatIp;
        public readonly string NetworkTier;
        public readonly string? PublicPtrDomainName;

        [OutputConstructor]
        private InstanceNetworkInterfacesAccessConfigs(
            string natIp,
            string networkTier,
            string? publicPtrDomainName)
        {
            NatIp = natIp;
            NetworkTier = networkTier;
            PublicPtrDomainName = publicPtrDomainName;
        }
    }

    [OutputType]
    public sealed class InstanceNetworkInterfacesAliasIpRanges
    {
        public readonly string IpCidrRange;
        public readonly string? SubnetworkRangeName;

        [OutputConstructor]
        private InstanceNetworkInterfacesAliasIpRanges(
            string ipCidrRange,
            string? subnetworkRangeName)
        {
            IpCidrRange = ipCidrRange;
            SubnetworkRangeName = subnetworkRangeName;
        }
    }

    [OutputType]
    public sealed class InstanceScheduling
    {
        public readonly bool? AutomaticRestart;
        public readonly ImmutableArray<InstanceSchedulingNodeAffinities> NodeAffinities;
        public readonly string OnHostMaintenance;
        public readonly bool? Preemptible;

        [OutputConstructor]
        private InstanceScheduling(
            bool? automaticRestart,
            ImmutableArray<InstanceSchedulingNodeAffinities> nodeAffinities,
            string onHostMaintenance,
            bool? preemptible)
        {
            AutomaticRestart = automaticRestart;
            NodeAffinities = nodeAffinities;
            OnHostMaintenance = onHostMaintenance;
            Preemptible = preemptible;
        }
    }

    [OutputType]
    public sealed class InstanceSchedulingNodeAffinities
    {
        public readonly string Key;
        public readonly string Operator;
        public readonly ImmutableArray<string> Values;

        [OutputConstructor]
        private InstanceSchedulingNodeAffinities(
            string key,
            string @operator,
            ImmutableArray<string> values)
        {
            Key = key;
            Operator = @operator;
            Values = values;
        }
    }

    [OutputType]
    public sealed class InstanceScratchDisks
    {
        public readonly string? Interface;

        [OutputConstructor]
        private InstanceScratchDisks(string? @interface)
        {
            Interface = @interface;
        }
    }

    [OutputType]
    public sealed class InstanceServiceAccount
    {
        public readonly string Email;
        public readonly ImmutableArray<string> Scopes;

        [OutputConstructor]
        private InstanceServiceAccount(
            string email,
            ImmutableArray<string> scopes)
        {
            Email = email;
            Scopes = scopes;
        }
    }

    [OutputType]
    public sealed class InstanceShieldedInstanceConfig
    {
        public readonly bool? EnableIntegrityMonitoring;
        public readonly bool? EnableSecureBoot;
        public readonly bool? EnableVtpm;

        [OutputConstructor]
        private InstanceShieldedInstanceConfig(
            bool? enableIntegrityMonitoring,
            bool? enableSecureBoot,
            bool? enableVtpm)
        {
            EnableIntegrityMonitoring = enableIntegrityMonitoring;
            EnableSecureBoot = enableSecureBoot;
            EnableVtpm = enableVtpm;
        }
    }
    }
}
