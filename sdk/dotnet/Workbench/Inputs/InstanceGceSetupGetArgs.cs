// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Workbench.Inputs
{

    public sealed class InstanceGceSetupGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("acceleratorConfigs")]
        private InputList<Inputs.InstanceGceSetupAcceleratorConfigGetArgs>? _acceleratorConfigs;

        /// <summary>
        /// The hardware accelerators used on this instance. If you use accelerators, make sure that your configuration has
        /// [enough vCPUs and memory to support the `machine_type` you have selected](https://cloud.google.com/compute/docs/gpus/#gpus-list).
        /// Currently supports only one accelerator configuration.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.InstanceGceSetupAcceleratorConfigGetArgs> AcceleratorConfigs
        {
            get => _acceleratorConfigs ?? (_acceleratorConfigs = new InputList<Inputs.InstanceGceSetupAcceleratorConfigGetArgs>());
            set => _acceleratorConfigs = value;
        }

        /// <summary>
        /// The definition of a boot disk.
        /// Structure is documented below.
        /// </summary>
        [Input("bootDisk")]
        public Input<Inputs.InstanceGceSetupBootDiskGetArgs>? BootDisk { get; set; }

        /// <summary>
        /// Confidential instance configuration.
        /// Structure is documented below.
        /// </summary>
        [Input("confidentialInstanceConfig")]
        public Input<Inputs.InstanceGceSetupConfidentialInstanceConfigGetArgs>? ConfidentialInstanceConfig { get; set; }

        /// <summary>
        /// Use a container image to start the workbench instance.
        /// Structure is documented below.
        /// </summary>
        [Input("containerImage")]
        public Input<Inputs.InstanceGceSetupContainerImageGetArgs>? ContainerImage { get; set; }

        /// <summary>
        /// Data disks attached to the VM instance. Currently supports only one data disk.
        /// Structure is documented below.
        /// </summary>
        [Input("dataDisks")]
        public Input<Inputs.InstanceGceSetupDataDisksGetArgs>? DataDisks { get; set; }

        /// <summary>
        /// Optional. If true, no external IP will be assigned to this VM instance.
        /// </summary>
        [Input("disablePublicIp")]
        public Input<bool>? DisablePublicIp { get; set; }

        /// <summary>
        /// Optional. Flag to enable ip forwarding or not, default false/off.
        /// https://cloud.google.com/vpc/docs/using-routes#canipforward
        /// </summary>
        [Input("enableIpForwarding")]
        public Input<bool>? EnableIpForwarding { get; set; }

        /// <summary>
        /// Optional. The machine type of the VM instance. https://cloud.google.com/compute/docs/machine-resource
        /// </summary>
        [Input("machineType")]
        public Input<string>? MachineType { get; set; }

        [Input("metadata")]
        private InputMap<string>? _metadata;

        /// <summary>
        /// Optional. Custom metadata to apply to this instance.
        /// </summary>
        public InputMap<string> Metadata
        {
            get => _metadata ?? (_metadata = new InputMap<string>());
            set => _metadata = value;
        }

        [Input("networkInterfaces")]
        private InputList<Inputs.InstanceGceSetupNetworkInterfaceGetArgs>? _networkInterfaces;

        /// <summary>
        /// The network interfaces for the VM. Supports only one interface.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.InstanceGceSetupNetworkInterfaceGetArgs> NetworkInterfaces
        {
            get => _networkInterfaces ?? (_networkInterfaces = new InputList<Inputs.InstanceGceSetupNetworkInterfaceGetArgs>());
            set => _networkInterfaces = value;
        }

        /// <summary>
        /// Reservations that this instance can consume from.
        /// Structure is documented below.
        /// </summary>
        [Input("reservationAffinity")]
        public Input<Inputs.InstanceGceSetupReservationAffinityGetArgs>? ReservationAffinity { get; set; }

        [Input("serviceAccounts")]
        private InputList<Inputs.InstanceGceSetupServiceAccountGetArgs>? _serviceAccounts;

        /// <summary>
        /// The service account that serves as an identity for the VM instance. Currently supports only one service account.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.InstanceGceSetupServiceAccountGetArgs> ServiceAccounts
        {
            get => _serviceAccounts ?? (_serviceAccounts = new InputList<Inputs.InstanceGceSetupServiceAccountGetArgs>());
            set => _serviceAccounts = value;
        }

        /// <summary>
        /// A set of Shielded Instance options. See [Images using supported Shielded
        /// VM features](https://cloud.google.com/compute/docs/instances/modifying-shielded-vm).
        /// Not all combinations are valid.
        /// Structure is documented below.
        /// </summary>
        [Input("shieldedInstanceConfig")]
        public Input<Inputs.InstanceGceSetupShieldedInstanceConfigGetArgs>? ShieldedInstanceConfig { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// Optional. The Compute Engine tags to add to instance (see [Tagging
        /// instances](https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Definition of a custom Compute Engine virtual machine image for starting
        /// a workbench instance with the environment installed directly on the VM.
        /// Structure is documented below.
        /// </summary>
        [Input("vmImage")]
        public Input<Inputs.InstanceGceSetupVmImageGetArgs>? VmImage { get; set; }

        public InstanceGceSetupGetArgs()
        {
        }
        public static new InstanceGceSetupGetArgs Empty => new InstanceGceSetupGetArgs();
    }
}
