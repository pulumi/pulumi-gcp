// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.NetworkConnectivity.Inputs
{

    public sealed class SpokeLinkedProducerVpcNetworkArgs : global::Pulumi.ResourceArgs
    {
        [Input("excludeExportRanges")]
        private InputList<string>? _excludeExportRanges;

        /// <summary>
        /// IP ranges encompassing the subnets to be excluded from peering.
        /// </summary>
        public InputList<string> ExcludeExportRanges
        {
            get => _excludeExportRanges ?? (_excludeExportRanges = new InputList<string>());
            set => _excludeExportRanges = value;
        }

        [Input("includeExportRanges")]
        private InputList<string>? _includeExportRanges;

        /// <summary>
        /// IP ranges allowed to be included from peering.
        /// </summary>
        public InputList<string> IncludeExportRanges
        {
            get => _includeExportRanges ?? (_includeExportRanges = new InputList<string>());
            set => _includeExportRanges = value;
        }

        /// <summary>
        /// The URI of the Service Consumer VPC that the Producer VPC is peered with.
        /// </summary>
        [Input("network", required: true)]
        public Input<string> Network { get; set; } = null!;

        /// <summary>
        /// The name of the VPC peering between the Service Consumer VPC and the Producer VPC (defined in the Tenant project) which is added to the NCC hub. This peering must be in ACTIVE state.
        /// </summary>
        [Input("peering", required: true)]
        public Input<string> Peering { get; set; } = null!;

        /// <summary>
        /// (Output)
        /// The URI of the Producer VPC.
        /// </summary>
        [Input("producerNetwork")]
        public Input<string>? ProducerNetwork { get; set; }

        public SpokeLinkedProducerVpcNetworkArgs()
        {
        }
        public static new SpokeLinkedProducerVpcNetworkArgs Empty => new SpokeLinkedProducerVpcNetworkArgs();
    }
}
