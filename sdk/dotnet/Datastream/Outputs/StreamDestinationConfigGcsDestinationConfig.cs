// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Datastream.Outputs
{

    [OutputType]
    public sealed class StreamDestinationConfigGcsDestinationConfig
    {
        /// <summary>
        /// AVRO file format configuration.
        /// </summary>
        public readonly Outputs.StreamDestinationConfigGcsDestinationConfigAvroFileFormat? AvroFileFormat;
        /// <summary>
        /// The maximum duration for which new events are added before a file is closed and a new file is created.
        /// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s". Defaults to 900s.
        /// </summary>
        public readonly string? FileRotationInterval;
        /// <summary>
        /// The maximum file size to be saved in the bucket.
        /// </summary>
        public readonly int? FileRotationMb;
        /// <summary>
        /// JSON file format configuration.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.StreamDestinationConfigGcsDestinationConfigJsonFileFormat? JsonFileFormat;
        /// <summary>
        /// Path inside the Cloud Storage bucket to write data to.
        /// </summary>
        public readonly string? Path;

        [OutputConstructor]
        private StreamDestinationConfigGcsDestinationConfig(
            Outputs.StreamDestinationConfigGcsDestinationConfigAvroFileFormat? avroFileFormat,

            string? fileRotationInterval,

            int? fileRotationMb,

            Outputs.StreamDestinationConfigGcsDestinationConfigJsonFileFormat? jsonFileFormat,

            string? path)
        {
            AvroFileFormat = avroFileFormat;
            FileRotationInterval = fileRotationInterval;
            FileRotationMb = fileRotationMb;
            JsonFileFormat = jsonFileFormat;
            Path = path;
        }
    }
}
