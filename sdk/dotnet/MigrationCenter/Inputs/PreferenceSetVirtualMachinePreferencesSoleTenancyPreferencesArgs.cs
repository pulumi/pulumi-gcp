// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.MigrationCenter.Inputs
{

    public sealed class PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Commitment plan to consider when calculating costs for virtual machine insights and recommendations. If you are unsure which value to set, a 3 year commitment plan is often a good value to start with. Possible values: `COMMITMENT_PLAN_UNSPECIFIED`, `ON_DEMAND`, `COMMITMENT_1_YEAR`, `COMMITMENT_3_YEAR`
        /// </summary>
        [Input("commitmentPlan")]
        public Input<string>? CommitmentPlan { get; set; }

        /// <summary>
        /// CPU overcommit ratio. Acceptable values are between 1.0 and 2.0 inclusive.
        /// </summary>
        [Input("cpuOvercommitRatio")]
        public Input<double>? CpuOvercommitRatio { get; set; }

        /// <summary>
        /// Sole Tenancy nodes maintenance policy. Possible values: `HOST_MAINTENANCE_POLICY_UNSPECIFIED`, `HOST_MAINTENANCE_POLICY_DEFAULT`, `HOST_MAINTENANCE_POLICY_RESTART_IN_PLACE`, `HOST_MAINTENANCE_POLICY_MIGRATE_WITHIN_NODE_GROUP`
        /// </summary>
        [Input("hostMaintenancePolicy")]
        public Input<string>? HostMaintenancePolicy { get; set; }

        [Input("nodeTypes")]
        private InputList<Inputs.PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArgs>? _nodeTypes;

        /// <summary>
        /// A list of sole tenant node types. An empty list means that all possible node types will be considered.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArgs> NodeTypes
        {
            get => _nodeTypes ?? (_nodeTypes = new InputList<Inputs.PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesNodeTypeArgs>());
            set => _nodeTypes = value;
        }

        public PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesArgs()
        {
        }
        public static new PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesArgs Empty => new PreferenceSetVirtualMachinePreferencesSoleTenancyPreferencesArgs();
    }
}
