// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Alloydb
{
    /// <summary>
    /// A database user in an AlloyDB cluster.
    /// 
    /// To get more information about User, see:
    /// 
    /// * [API documentation](https://cloud.google.com/alloydb/docs/reference/rest/v1/projects.locations.clusters.users/create)
    /// * How-to Guides
    ///     * [AlloyDB](https://cloud.google.com/alloydb/docs/)
    /// 
    /// ## Example Usage
    /// 
    /// ### Alloydb User Builtin
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var defaultNetwork = new Gcp.Compute.Network("default", new()
    ///     {
    ///         Name = "alloydb-network",
    ///     });
    /// 
    ///     var defaultCluster = new Gcp.Alloydb.Cluster("default", new()
    ///     {
    ///         ClusterId = "alloydb-cluster",
    ///         Location = "us-central1",
    ///         Network = defaultNetwork.Id,
    ///         InitialUser = new Gcp.Alloydb.Inputs.ClusterInitialUserArgs
    ///         {
    ///             Password = "cluster_secret",
    ///         },
    ///     });
    /// 
    ///     var @default = new Gcp.Alloydb.Instance("default", new()
    ///     {
    ///         Cluster = defaultCluster.Name,
    ///         InstanceId = "alloydb-instance",
    ///         InstanceType = "PRIMARY",
    ///     });
    /// 
    ///     var project = Gcp.Organizations.GetProject.Invoke();
    /// 
    ///     var privateIpAlloc = new Gcp.Compute.GlobalAddress("private_ip_alloc", new()
    ///     {
    ///         Name = "alloydb-cluster",
    ///         AddressType = "INTERNAL",
    ///         Purpose = "VPC_PEERING",
    ///         PrefixLength = 16,
    ///         Network = defaultNetwork.Id,
    ///     });
    /// 
    ///     var vpcConnection = new Gcp.ServiceNetworking.Connection("vpc_connection", new()
    ///     {
    ///         Network = defaultNetwork.Id,
    ///         Service = "servicenetworking.googleapis.com",
    ///         ReservedPeeringRanges = new[]
    ///         {
    ///             privateIpAlloc.Name,
    ///         },
    ///     });
    /// 
    ///     var user1 = new Gcp.Alloydb.User("user1", new()
    ///     {
    ///         Cluster = defaultCluster.Name,
    ///         UserId = "user1",
    ///         UserType = "ALLOYDB_BUILT_IN",
    ///         Password = "user_secret",
    ///         DatabaseRoles = new[]
    ///         {
    ///             "alloydbsuperuser",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Alloydb User Iam
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var defaultNetwork = new Gcp.Compute.Network("default", new()
    ///     {
    ///         Name = "alloydb-network",
    ///     });
    /// 
    ///     var defaultCluster = new Gcp.Alloydb.Cluster("default", new()
    ///     {
    ///         ClusterId = "alloydb-cluster",
    ///         Location = "us-central1",
    ///         Network = defaultNetwork.Id,
    ///         InitialUser = new Gcp.Alloydb.Inputs.ClusterInitialUserArgs
    ///         {
    ///             Password = "cluster_secret",
    ///         },
    ///     });
    /// 
    ///     var @default = new Gcp.Alloydb.Instance("default", new()
    ///     {
    ///         Cluster = defaultCluster.Name,
    ///         InstanceId = "alloydb-instance",
    ///         InstanceType = "PRIMARY",
    ///     });
    /// 
    ///     var project = Gcp.Organizations.GetProject.Invoke();
    /// 
    ///     var privateIpAlloc = new Gcp.Compute.GlobalAddress("private_ip_alloc", new()
    ///     {
    ///         Name = "alloydb-cluster",
    ///         AddressType = "INTERNAL",
    ///         Purpose = "VPC_PEERING",
    ///         PrefixLength = 16,
    ///         Network = defaultNetwork.Id,
    ///     });
    /// 
    ///     var vpcConnection = new Gcp.ServiceNetworking.Connection("vpc_connection", new()
    ///     {
    ///         Network = defaultNetwork.Id,
    ///         Service = "servicenetworking.googleapis.com",
    ///         ReservedPeeringRanges = new[]
    ///         {
    ///             privateIpAlloc.Name,
    ///         },
    ///     });
    /// 
    ///     var user2 = new Gcp.Alloydb.User("user2", new()
    ///     {
    ///         Cluster = defaultCluster.Name,
    ///         UserId = "user2@foo.com",
    ///         UserType = "ALLOYDB_IAM_USER",
    ///         DatabaseRoles = new[]
    ///         {
    ///             "alloydbiamuser",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// User can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/locations/{{location}}/clusters/{{cluster}}/users/{{user_id}}`
    /// 
    /// * `{{project}}/{{location}}/{{cluster}}/{{user_id}}`
    /// 
    /// * `{{location}}/{{cluster}}/{{user_id}}`
    /// 
    /// When using the `pulumi import` command, User can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:alloydb/user:User default projects/{{project}}/locations/{{location}}/clusters/{{cluster}}/users/{{user_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:alloydb/user:User default {{project}}/{{location}}/{{cluster}}/{{user_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:alloydb/user:User default {{location}}/{{cluster}}/{{user_id}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:alloydb/user:User")]
    public partial class User : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Identifies the alloydb cluster. Must be in the format
        /// 'projects/{project}/locations/{location}/clusters/{cluster_id}'
        /// </summary>
        [Output("cluster")]
        public Output<string> Cluster { get; private set; } = null!;

        /// <summary>
        /// List of database roles this database user has.
        /// </summary>
        [Output("databaseRoles")]
        public Output<ImmutableArray<string>> DatabaseRoles { get; private set; } = null!;

        /// <summary>
        /// Name of the resource in the form of projects/{project}/locations/{location}/clusters/{cluster}/users/{user}.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Password for this database user.
        /// </summary>
        [Output("password")]
        public Output<string?> Password { get; private set; } = null!;

        /// <summary>
        /// The database role name of the user.
        /// </summary>
        [Output("userId")]
        public Output<string> UserId { get; private set; } = null!;

        /// <summary>
        /// The type of this user.
        /// Possible values are: `ALLOYDB_BUILT_IN`, `ALLOYDB_IAM_USER`.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Output("userType")]
        public Output<string> UserType { get; private set; } = null!;


        /// <summary>
        /// Create a User resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public User(string name, UserArgs args, CustomResourceOptions? options = null)
            : base("gcp:alloydb/user:User", name, args ?? new UserArgs(), MakeResourceOptions(options, ""))
        {
        }

        private User(string name, Input<string> id, UserState? state = null, CustomResourceOptions? options = null)
            : base("gcp:alloydb/user:User", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing User resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static User Get(string name, Input<string> id, UserState? state = null, CustomResourceOptions? options = null)
        {
            return new User(name, id, state, options);
        }
    }

    public sealed class UserArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Identifies the alloydb cluster. Must be in the format
        /// 'projects/{project}/locations/{location}/clusters/{cluster_id}'
        /// </summary>
        [Input("cluster", required: true)]
        public Input<string> Cluster { get; set; } = null!;

        [Input("databaseRoles")]
        private InputList<string>? _databaseRoles;

        /// <summary>
        /// List of database roles this database user has.
        /// </summary>
        public InputList<string> DatabaseRoles
        {
            get => _databaseRoles ?? (_databaseRoles = new InputList<string>());
            set => _databaseRoles = value;
        }

        /// <summary>
        /// Password for this database user.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// The database role name of the user.
        /// </summary>
        [Input("userId", required: true)]
        public Input<string> UserId { get; set; } = null!;

        /// <summary>
        /// The type of this user.
        /// Possible values are: `ALLOYDB_BUILT_IN`, `ALLOYDB_IAM_USER`.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("userType", required: true)]
        public Input<string> UserType { get; set; } = null!;

        public UserArgs()
        {
        }
        public static new UserArgs Empty => new UserArgs();
    }

    public sealed class UserState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Identifies the alloydb cluster. Must be in the format
        /// 'projects/{project}/locations/{location}/clusters/{cluster_id}'
        /// </summary>
        [Input("cluster")]
        public Input<string>? Cluster { get; set; }

        [Input("databaseRoles")]
        private InputList<string>? _databaseRoles;

        /// <summary>
        /// List of database roles this database user has.
        /// </summary>
        public InputList<string> DatabaseRoles
        {
            get => _databaseRoles ?? (_databaseRoles = new InputList<string>());
            set => _databaseRoles = value;
        }

        /// <summary>
        /// Name of the resource in the form of projects/{project}/locations/{location}/clusters/{cluster}/users/{user}.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Password for this database user.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// The database role name of the user.
        /// </summary>
        [Input("userId")]
        public Input<string>? UserId { get; set; }

        /// <summary>
        /// The type of this user.
        /// Possible values are: `ALLOYDB_BUILT_IN`, `ALLOYDB_IAM_USER`.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("userType")]
        public Input<string>? UserType { get; set; }

        public UserState()
        {
        }
        public static new UserState Empty => new UserState();
    }
}
