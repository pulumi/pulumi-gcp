// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Alloydb.Inputs
{

    public sealed class InstanceObservabilityConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Observability feature status for an instance.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// Query string length. The default value is 10240. Any integer between 1024 and 100000 is considered valid.
        /// </summary>
        [Input("maxQueryStringLength")]
        public Input<int>? MaxQueryStringLength { get; set; }

        /// <summary>
        /// Preserve comments in the query string.
        /// </summary>
        [Input("preserveComments")]
        public Input<bool>? PreserveComments { get; set; }

        /// <summary>
        /// Number of query execution plans captured by Insights per minute for all queries combined. The default value is 5. Any integer between 0 and 200 is considered valid.
        /// </summary>
        [Input("queryPlansPerMinute")]
        public Input<int>? QueryPlansPerMinute { get; set; }

        /// <summary>
        /// Record application tags for an instance. This flag is turned "on" by default.
        /// </summary>
        [Input("recordApplicationTags")]
        public Input<bool>? RecordApplicationTags { get; set; }

        /// <summary>
        /// Track actively running queries. If not set, default value is "off".
        /// </summary>
        [Input("trackActiveQueries")]
        public Input<bool>? TrackActiveQueries { get; set; }

        /// <summary>
        /// Record wait event types during query execution for an instance.
        /// </summary>
        [Input("trackWaitEventTypes")]
        public Input<bool>? TrackWaitEventTypes { get; set; }

        /// <summary>
        /// Record wait events during query execution for an instance.
        /// </summary>
        [Input("trackWaitEvents")]
        public Input<bool>? TrackWaitEvents { get; set; }

        public InstanceObservabilityConfigArgs()
        {
        }
        public static new InstanceObservabilityConfigArgs Empty => new InstanceObservabilityConfigArgs();
    }
}
