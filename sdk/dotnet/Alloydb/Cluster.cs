// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Alloydb
{
    /// <summary>
    /// ## Example Usage
    /// ### Alloydb Cluster Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var project = Gcp.Organizations.GetProject.Invoke();
    /// 
    ///     var defaultNetwork = new Gcp.Compute.Network("defaultNetwork", new()
    ///     {
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = google_beta,
    ///     });
    /// 
    ///     var defaultCluster = new Gcp.Alloydb.Cluster("defaultCluster", new()
    ///     {
    ///         ClusterId = "alloydb-cluster",
    ///         Location = "us-central1",
    ///         Network = Output.Tuple(project, defaultNetwork.Name).Apply(values =&gt;
    ///         {
    ///             var project = values.Item1;
    ///             var name = values.Item2;
    ///             return $"projects/{project.Apply(getProjectResult =&gt; getProjectResult.Number)}/global/networks/{name}";
    ///         }),
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = google_beta,
    ///     });
    /// 
    /// });
    /// ```
    /// ### Alloydb Cluster Full
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var project = Gcp.Organizations.GetProject.Invoke();
    /// 
    ///     var @default = new Gcp.Compute.Network("default", new()
    ///     {
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = google_beta,
    ///     });
    /// 
    ///     var full = new Gcp.Alloydb.Cluster("full", new()
    ///     {
    ///         ClusterId = "alloydb-cluster-full",
    ///         Location = "us-central1",
    ///         Network = Output.Tuple(project, @default.Name).Apply(values =&gt;
    ///         {
    ///             var project = values.Item1;
    ///             var name = values.Item2;
    ///             return $"projects/{project.Apply(getProjectResult =&gt; getProjectResult.Number)}/global/networks/{name}";
    ///         }),
    ///         InitialUser = new Gcp.Alloydb.Inputs.ClusterInitialUserArgs
    ///         {
    ///             User = "alloydb-cluster-full",
    ///             Password = "alloydb-cluster-full",
    ///         },
    ///         AutomatedBackupPolicy = new Gcp.Alloydb.Inputs.ClusterAutomatedBackupPolicyArgs
    ///         {
    ///             Location = "us-central1",
    ///             BackupWindow = "1800s",
    ///             Enabled = true,
    ///             WeeklySchedule = new Gcp.Alloydb.Inputs.ClusterAutomatedBackupPolicyWeeklyScheduleArgs
    ///             {
    ///                 DaysOfWeeks = new[]
    ///                 {
    ///                     "MONDAY",
    ///                 },
    ///                 StartTimes = new[]
    ///                 {
    ///                     new Gcp.Alloydb.Inputs.ClusterAutomatedBackupPolicyWeeklyScheduleStartTimeArgs
    ///                     {
    ///                         Hours = 23,
    ///                         Minutes = 0,
    ///                         Seconds = 0,
    ///                         Nanos = 0,
    ///                     },
    ///                 },
    ///             },
    ///             QuantityBasedRetention = new Gcp.Alloydb.Inputs.ClusterAutomatedBackupPolicyQuantityBasedRetentionArgs
    ///             {
    ///                 Count = 1,
    ///             },
    ///             Labels = 
    ///             {
    ///                 { "test", "alloydb-cluster-full" },
    ///             },
    ///         },
    ///         Labels = 
    ///         {
    ///             { "test", "alloydb-cluster-full" },
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = google_beta,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Cluster can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import gcp:alloydb/cluster:Cluster default projects/{{project}}/locations/{{location}}/clusters/{{cluster_id}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:alloydb/cluster:Cluster default {{project}}/{{location}}/{{cluster_id}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:alloydb/cluster:Cluster default {{location}}/{{cluster_id}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:alloydb/cluster:Cluster default {{cluster_id}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:alloydb/cluster:Cluster")]
    public partial class Cluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The automated backup policy for this cluster.
        /// If no policy is provided then the default policy will be used. The default policy takes one backup a day, has a backup window of 1 hour, and retains backups for 14 days.
        /// Structure is documented below.
        /// </summary>
        [Output("automatedBackupPolicy")]
        public Output<Outputs.ClusterAutomatedBackupPolicy?> AutomatedBackupPolicy { get; private set; } = null!;

        /// <summary>
        /// Cluster created from backup.
        /// Structure is documented below.
        /// </summary>
        [Output("backupSources")]
        public Output<ImmutableArray<Outputs.ClusterBackupSource>> BackupSources { get; private set; } = null!;

        /// <summary>
        /// The ID of the alloydb cluster.
        /// </summary>
        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        /// <summary>
        /// The database engine major version. This is an output-only field and it's populated at the Cluster creation time. This field cannot be changed after cluster creation.
        /// </summary>
        [Output("databaseVersion")]
        public Output<string> DatabaseVersion { get; private set; } = null!;

        /// <summary>
        /// User-settable and human-readable display name for the Cluster.
        /// </summary>
        [Output("displayName")]
        public Output<string?> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Initial user to setup during cluster creation.
        /// Structure is documented below.
        /// </summary>
        [Output("initialUser")]
        public Output<Outputs.ClusterInitialUser?> InitialUser { get; private set; } = null!;

        /// <summary>
        /// User-defined labels for the alloydb cluster.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// The location where the alloydb cluster should reside.
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// Cluster created via DMS migration.
        /// Structure is documented below.
        /// </summary>
        [Output("migrationSources")]
        public Output<ImmutableArray<Outputs.ClusterMigrationSource>> MigrationSources { get; private set; } = null!;

        /// <summary>
        /// The name of the cluster resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The relative resource name of the VPC network on which the instance can be accessed. It is specified in the following form:
        /// "projects/{projectNumber}/global/networks/{network_id}".
        /// </summary>
        [Output("network")]
        public Output<string> Network { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The system-generated UID of the resource.
        /// </summary>
        [Output("uid")]
        public Output<string> Uid { get; private set; } = null!;


        /// <summary>
        /// Create a Cluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Cluster(string name, ClusterArgs args, CustomResourceOptions? options = null)
            : base("gcp:alloydb/cluster:Cluster", name, args ?? new ClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Cluster(string name, Input<string> id, ClusterState? state = null, CustomResourceOptions? options = null)
            : base("gcp:alloydb/cluster:Cluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Cluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Cluster Get(string name, Input<string> id, ClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new Cluster(name, id, state, options);
        }
    }

    public sealed class ClusterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The automated backup policy for this cluster.
        /// If no policy is provided then the default policy will be used. The default policy takes one backup a day, has a backup window of 1 hour, and retains backups for 14 days.
        /// Structure is documented below.
        /// </summary>
        [Input("automatedBackupPolicy")]
        public Input<Inputs.ClusterAutomatedBackupPolicyArgs>? AutomatedBackupPolicy { get; set; }

        /// <summary>
        /// The ID of the alloydb cluster.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        /// <summary>
        /// User-settable and human-readable display name for the Cluster.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Initial user to setup during cluster creation.
        /// Structure is documented below.
        /// </summary>
        [Input("initialUser")]
        public Input<Inputs.ClusterInitialUserArgs>? InitialUser { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// User-defined labels for the alloydb cluster.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The location where the alloydb cluster should reside.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The relative resource name of the VPC network on which the instance can be accessed. It is specified in the following form:
        /// "projects/{projectNumber}/global/networks/{network_id}".
        /// </summary>
        [Input("network", required: true)]
        public Input<string> Network { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public ClusterArgs()
        {
        }
        public static new ClusterArgs Empty => new ClusterArgs();
    }

    public sealed class ClusterState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The automated backup policy for this cluster.
        /// If no policy is provided then the default policy will be used. The default policy takes one backup a day, has a backup window of 1 hour, and retains backups for 14 days.
        /// Structure is documented below.
        /// </summary>
        [Input("automatedBackupPolicy")]
        public Input<Inputs.ClusterAutomatedBackupPolicyGetArgs>? AutomatedBackupPolicy { get; set; }

        [Input("backupSources")]
        private InputList<Inputs.ClusterBackupSourceGetArgs>? _backupSources;

        /// <summary>
        /// Cluster created from backup.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.ClusterBackupSourceGetArgs> BackupSources
        {
            get => _backupSources ?? (_backupSources = new InputList<Inputs.ClusterBackupSourceGetArgs>());
            set => _backupSources = value;
        }

        /// <summary>
        /// The ID of the alloydb cluster.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// The database engine major version. This is an output-only field and it's populated at the Cluster creation time. This field cannot be changed after cluster creation.
        /// </summary>
        [Input("databaseVersion")]
        public Input<string>? DatabaseVersion { get; set; }

        /// <summary>
        /// User-settable and human-readable display name for the Cluster.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Initial user to setup during cluster creation.
        /// Structure is documented below.
        /// </summary>
        [Input("initialUser")]
        public Input<Inputs.ClusterInitialUserGetArgs>? InitialUser { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// User-defined labels for the alloydb cluster.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// The location where the alloydb cluster should reside.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        [Input("migrationSources")]
        private InputList<Inputs.ClusterMigrationSourceGetArgs>? _migrationSources;

        /// <summary>
        /// Cluster created via DMS migration.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.ClusterMigrationSourceGetArgs> MigrationSources
        {
            get => _migrationSources ?? (_migrationSources = new InputList<Inputs.ClusterMigrationSourceGetArgs>());
            set => _migrationSources = value;
        }

        /// <summary>
        /// The name of the cluster resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The relative resource name of the VPC network on which the instance can be accessed. It is specified in the following form:
        /// "projects/{projectNumber}/global/networks/{network_id}".
        /// </summary>
        [Input("network")]
        public Input<string>? Network { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The system-generated UID of the resource.
        /// </summary>
        [Input("uid")]
        public Input<string>? Uid { get; set; }

        public ClusterState()
        {
        }
        public static new ClusterState Empty => new ClusterState();
    }
}
