// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Alloydb.Outputs
{

    [OutputType]
    public sealed class GetClusterAutomatedBackupPolicyResult
    {
        /// <summary>
        /// The length of the time window during which a backup can be taken. If a backup does not succeed within this time window, it will be canceled and considered failed.
        /// 
        /// The backup window must be at least 5 minutes long. There is no upper bound on the window. If not set, it will default to 1 hour.
        /// 
        /// A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
        /// </summary>
        public readonly string BackupWindow;
        /// <summary>
        /// Whether automated backups are enabled.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key).
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterAutomatedBackupPolicyEncryptionConfigResult> EncryptionConfigs;
        /// <summary>
        /// Labels to apply to backups created using this configuration.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Labels;
        /// <summary>
        /// (optional)
        /// The canonical id of the location.If it is not provided, the provider project is used. For example: us-east1.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// Quantity-based Backup retention policy to retain recent backups. Conflicts with 'time_based_retention', both can't be set together.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterAutomatedBackupPolicyQuantityBasedRetentionResult> QuantityBasedRetentions;
        /// <summary>
        /// Time-based Backup retention policy. Conflicts with 'quantity_based_retention', both can't be set together.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterAutomatedBackupPolicyTimeBasedRetentionResult> TimeBasedRetentions;
        /// <summary>
        /// Weekly schedule for the Backup.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetClusterAutomatedBackupPolicyWeeklyScheduleResult> WeeklySchedules;

        [OutputConstructor]
        private GetClusterAutomatedBackupPolicyResult(
            string backupWindow,

            bool enabled,

            ImmutableArray<Outputs.GetClusterAutomatedBackupPolicyEncryptionConfigResult> encryptionConfigs,

            ImmutableDictionary<string, string> labels,

            string location,

            ImmutableArray<Outputs.GetClusterAutomatedBackupPolicyQuantityBasedRetentionResult> quantityBasedRetentions,

            ImmutableArray<Outputs.GetClusterAutomatedBackupPolicyTimeBasedRetentionResult> timeBasedRetentions,

            ImmutableArray<Outputs.GetClusterAutomatedBackupPolicyWeeklyScheduleResult> weeklySchedules)
        {
            BackupWindow = backupWindow;
            Enabled = enabled;
            EncryptionConfigs = encryptionConfigs;
            Labels = labels;
            Location = location;
            QuantityBasedRetentions = quantityBasedRetentions;
            TimeBasedRetentions = timeBasedRetentions;
            WeeklySchedules = weeklySchedules;
        }
    }
}
