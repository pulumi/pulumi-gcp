// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Alloydb.Outputs
{

    [OutputType]
    public sealed class GetInstanceObservabilityConfigResult
    {
        /// <summary>
        /// Whether assistive experiences are enabled for this AlloyDB instance.
        /// </summary>
        public readonly bool AssistiveExperiencesEnabled;
        /// <summary>
        /// Observability feature status for an instance.
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// Query string length. The default value is 10240. Any integer between 1024 and 100000 is considered valid.
        /// </summary>
        public readonly int MaxQueryStringLength;
        /// <summary>
        /// Preserve comments in the query string.
        /// </summary>
        public readonly bool PreserveComments;
        /// <summary>
        /// Number of query execution plans captured by Insights per minute for all queries combined. The default value is 5. Any integer between 0 and 200 is considered valid.
        /// </summary>
        public readonly int QueryPlansPerMinute;
        /// <summary>
        /// Record application tags for an instance. This flag is turned "on" by default.
        /// </summary>
        public readonly bool RecordApplicationTags;
        /// <summary>
        /// Track actively running queries. If not set, default value is "off".
        /// </summary>
        public readonly bool TrackActiveQueries;
        /// <summary>
        /// Record wait event types during query execution for an instance.
        /// </summary>
        public readonly bool TrackWaitEventTypes;
        /// <summary>
        /// Record wait events during query execution for an instance.
        /// </summary>
        public readonly bool TrackWaitEvents;

        [OutputConstructor]
        private GetInstanceObservabilityConfigResult(
            bool assistiveExperiencesEnabled,

            bool enabled,

            int maxQueryStringLength,

            bool preserveComments,

            int queryPlansPerMinute,

            bool recordApplicationTags,

            bool trackActiveQueries,

            bool trackWaitEventTypes,

            bool trackWaitEvents)
        {
            AssistiveExperiencesEnabled = assistiveExperiencesEnabled;
            Enabled = enabled;
            MaxQueryStringLength = maxQueryStringLength;
            PreserveComments = preserveComments;
            QueryPlansPerMinute = queryPlansPerMinute;
            RecordApplicationTags = recordApplicationTags;
            TrackActiveQueries = trackActiveQueries;
            TrackWaitEventTypes = trackWaitEventTypes;
            TrackWaitEvents = trackWaitEvents;
        }
    }
}
