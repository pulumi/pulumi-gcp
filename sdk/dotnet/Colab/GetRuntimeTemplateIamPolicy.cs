// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Colab
{
    public static class GetRuntimeTemplateIamPolicy
    {
        /// <summary>
        /// Retrieves the current IAM policy data for runtimetemplate
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Colab.GetRuntimeTemplateIamPolicy.Invoke(new()
        ///     {
        ///         Project = runtime_template.Project,
        ///         Location = runtime_template.Location,
        ///         RuntimeTemplate = runtime_template.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetRuntimeTemplateIamPolicyResult> InvokeAsync(GetRuntimeTemplateIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRuntimeTemplateIamPolicyResult>("gcp:colab/getRuntimeTemplateIamPolicy:getRuntimeTemplateIamPolicy", args ?? new GetRuntimeTemplateIamPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the current IAM policy data for runtimetemplate
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Colab.GetRuntimeTemplateIamPolicy.Invoke(new()
        ///     {
        ///         Project = runtime_template.Project,
        ///         Location = runtime_template.Location,
        ///         RuntimeTemplate = runtime_template.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRuntimeTemplateIamPolicyResult> Invoke(GetRuntimeTemplateIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRuntimeTemplateIamPolicyResult>("gcp:colab/getRuntimeTemplateIamPolicy:getRuntimeTemplateIamPolicy", args ?? new GetRuntimeTemplateIamPolicyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the current IAM policy data for runtimetemplate
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Colab.GetRuntimeTemplateIamPolicy.Invoke(new()
        ///     {
        ///         Project = runtime_template.Project,
        ///         Location = runtime_template.Location,
        ///         RuntimeTemplate = runtime_template.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRuntimeTemplateIamPolicyResult> Invoke(GetRuntimeTemplateIamPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRuntimeTemplateIamPolicyResult>("gcp:colab/getRuntimeTemplateIamPolicy:getRuntimeTemplateIamPolicy", args ?? new GetRuntimeTemplateIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRuntimeTemplateIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The location for the resource: https://cloud.google.com/colab/docs/locations Used to find the parent resource to bind the IAM policy to. If not specified,
        /// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
        /// location is specified, it is taken from the provider configuration.
        /// </summary>
        [Input("location")]
        public string? Location { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("runtimeTemplate", required: true)]
        public string RuntimeTemplate { get; set; } = null!;

        public GetRuntimeTemplateIamPolicyArgs()
        {
        }
        public static new GetRuntimeTemplateIamPolicyArgs Empty => new GetRuntimeTemplateIamPolicyArgs();
    }

    public sealed class GetRuntimeTemplateIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The location for the resource: https://cloud.google.com/colab/docs/locations Used to find the parent resource to bind the IAM policy to. If not specified,
        /// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
        /// location is specified, it is taken from the provider configuration.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("runtimeTemplate", required: true)]
        public Input<string> RuntimeTemplate { get; set; } = null!;

        public GetRuntimeTemplateIamPolicyInvokeArgs()
        {
        }
        public static new GetRuntimeTemplateIamPolicyInvokeArgs Empty => new GetRuntimeTemplateIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetRuntimeTemplateIamPolicyResult
    {
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Location;
        /// <summary>
        /// (Required only by `gcp.colab.RuntimeTemplateIamPolicy`) The policy data generated by
        /// a `gcp.organizations.getIAMPolicy` data source.
        /// </summary>
        public readonly string PolicyData;
        public readonly string Project;
        public readonly string RuntimeTemplate;

        [OutputConstructor]
        private GetRuntimeTemplateIamPolicyResult(
            string etag,

            string id,

            string location,

            string policyData,

            string project,

            string runtimeTemplate)
        {
            Etag = etag;
            Id = id;
            Location = location;
            PolicyData = policyData;
            Project = project;
            RuntimeTemplate = runtimeTemplate;
        }
    }
}
