// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Colab
{
    /// <summary>
    /// 'A runtime is a Google-provisioned virtual machine (VM) that can run the code in your notebook (IPYNB file).'
    /// 
    /// To get more information about Runtime, see:
    /// 
    /// * [API documentation](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.notebookRuntimes)
    /// * How-to Guides
    ///     * [Create a runtime](https://cloud.google.com/colab/docs/create-runtime)
    /// 
    /// ## Example Usage
    /// 
    /// ### Colab Runtime Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var myTemplate = new Gcp.Colab.RuntimeTemplate("my_template", new()
    ///     {
    ///         Name = "colab-runtime",
    ///         DisplayName = "Runtime template basic",
    ///         Location = "us-central1",
    ///         MachineSpec = new Gcp.Colab.Inputs.RuntimeTemplateMachineSpecArgs
    ///         {
    ///             MachineType = "e2-standard-4",
    ///         },
    ///         NetworkSpec = new Gcp.Colab.Inputs.RuntimeTemplateNetworkSpecArgs
    ///         {
    ///             EnableInternetAccess = true,
    ///         },
    ///     });
    /// 
    ///     var runtime = new Gcp.Colab.Runtime("runtime", new()
    ///     {
    ///         Name = "colab-runtime",
    ///         Location = "us-central1",
    ///         NotebookRuntimeTemplateRef = new Gcp.Colab.Inputs.RuntimeNotebookRuntimeTemplateRefArgs
    ///         {
    ///             NotebookRuntimeTemplate = myTemplate.Id,
    ///         },
    ///         DisplayName = "Runtime basic",
    ///         RuntimeUser = "gterraformtestuser@gmail.com",
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             myTemplate,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Colab Runtime Full
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var myTemplate = new Gcp.Colab.RuntimeTemplate("my_template", new()
    ///     {
    ///         Name = "colab-runtime",
    ///         DisplayName = "Runtime template full",
    ///         Location = "us-central1",
    ///         Description = "Full runtime template",
    ///         MachineSpec = new Gcp.Colab.Inputs.RuntimeTemplateMachineSpecArgs
    ///         {
    ///             MachineType = "n1-standard-2",
    ///             AcceleratorType = "NVIDIA_TESLA_T4",
    ///             AcceleratorCount = 1,
    ///         },
    ///         DataPersistentDiskSpec = new Gcp.Colab.Inputs.RuntimeTemplateDataPersistentDiskSpecArgs
    ///         {
    ///             DiskType = "pd-standard",
    ///             DiskSizeGb = "200",
    ///         },
    ///         NetworkSpec = new Gcp.Colab.Inputs.RuntimeTemplateNetworkSpecArgs
    ///         {
    ///             EnableInternetAccess = true,
    ///         },
    ///         Labels = 
    ///         {
    ///             { "k", "val" },
    ///         },
    ///         IdleShutdownConfig = new Gcp.Colab.Inputs.RuntimeTemplateIdleShutdownConfigArgs
    ///         {
    ///             IdleTimeout = "3600s",
    ///         },
    ///         EucConfig = new Gcp.Colab.Inputs.RuntimeTemplateEucConfigArgs
    ///         {
    ///             EucDisabled = true,
    ///         },
    ///         ShieldedVmConfig = new Gcp.Colab.Inputs.RuntimeTemplateShieldedVmConfigArgs
    ///         {
    ///             EnableSecureBoot = true,
    ///         },
    ///         NetworkTags = new[]
    ///         {
    ///             "abc",
    ///             "def",
    ///         },
    ///         EncryptionSpec = new Gcp.Colab.Inputs.RuntimeTemplateEncryptionSpecArgs
    ///         {
    ///             KmsKeyName = "my-crypto-key",
    ///         },
    ///     });
    /// 
    ///     var runtime = new Gcp.Colab.Runtime("runtime", new()
    ///     {
    ///         Name = "colab-runtime",
    ///         Location = "us-central1",
    ///         NotebookRuntimeTemplateRef = new Gcp.Colab.Inputs.RuntimeNotebookRuntimeTemplateRefArgs
    ///         {
    ///             NotebookRuntimeTemplate = myTemplate.Id,
    ///         },
    ///         DisplayName = "Runtime full",
    ///         RuntimeUser = "gterraformtestuser@gmail.com",
    ///         Description = "Full runtime",
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             myTemplate,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Runtime can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/locations/{{location}}/notebookRuntimes/{{name}}`
    /// 
    /// * `{{project}}/{{location}}/{{name}}`
    /// 
    /// * `{{location}}/{{name}}`
    /// 
    /// When using the `pulumi import` command, Runtime can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:colab/runtime:Runtime default projects/{{project}}/locations/{{location}}/notebookRuntimes/{{name}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:colab/runtime:Runtime default {{project}}/{{location}}/{{name}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:colab/runtime:Runtime default {{location}}/{{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:colab/runtime:Runtime")]
    public partial class Runtime : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The description of the Runtime.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Required. The display name of the Runtime.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// The location for the resource: https://cloud.google.com/colab/docs/locations
        /// 
        /// 
        /// - - -
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The resource name of the Runtime
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// 'Runtime specific information used for NotebookRuntime creation.'
        /// Structure is documented below.
        /// </summary>
        [Output("notebookRuntimeTemplateRef")]
        public Output<Outputs.RuntimeNotebookRuntimeTemplateRef?> NotebookRuntimeTemplateRef { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The user email of the NotebookRuntime.
        /// </summary>
        [Output("runtimeUser")]
        public Output<string> RuntimeUser { get; private set; } = null!;


        /// <summary>
        /// Create a Runtime resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Runtime(string name, RuntimeArgs args, CustomResourceOptions? options = null)
            : base("gcp:colab/runtime:Runtime", name, args ?? new RuntimeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Runtime(string name, Input<string> id, RuntimeState? state = null, CustomResourceOptions? options = null)
            : base("gcp:colab/runtime:Runtime", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Runtime resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Runtime Get(string name, Input<string> id, RuntimeState? state = null, CustomResourceOptions? options = null)
        {
            return new Runtime(name, id, state, options);
        }
    }

    public sealed class RuntimeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the Runtime.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Required. The display name of the Runtime.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// The location for the resource: https://cloud.google.com/colab/docs/locations
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The resource name of the Runtime
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// 'Runtime specific information used for NotebookRuntime creation.'
        /// Structure is documented below.
        /// </summary>
        [Input("notebookRuntimeTemplateRef")]
        public Input<Inputs.RuntimeNotebookRuntimeTemplateRefArgs>? NotebookRuntimeTemplateRef { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The user email of the NotebookRuntime.
        /// </summary>
        [Input("runtimeUser", required: true)]
        public Input<string> RuntimeUser { get; set; } = null!;

        public RuntimeArgs()
        {
        }
        public static new RuntimeArgs Empty => new RuntimeArgs();
    }

    public sealed class RuntimeState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of the Runtime.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Required. The display name of the Runtime.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The location for the resource: https://cloud.google.com/colab/docs/locations
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The resource name of the Runtime
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// 'Runtime specific information used for NotebookRuntime creation.'
        /// Structure is documented below.
        /// </summary>
        [Input("notebookRuntimeTemplateRef")]
        public Input<Inputs.RuntimeNotebookRuntimeTemplateRefGetArgs>? NotebookRuntimeTemplateRef { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The user email of the NotebookRuntime.
        /// </summary>
        [Input("runtimeUser")]
        public Input<string>? RuntimeUser { get; set; }

        public RuntimeState()
        {
        }
        public static new RuntimeState Empty => new RuntimeState();
    }
}
