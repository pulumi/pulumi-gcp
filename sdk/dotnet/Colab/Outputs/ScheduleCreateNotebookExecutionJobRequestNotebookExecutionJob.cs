// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Colab.Outputs
{

    [OutputType]
    public sealed class ScheduleCreateNotebookExecutionJobRequestNotebookExecutionJob
    {
        /// <summary>
        /// The Dataform Repository containing the input notebook.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.ScheduleCreateNotebookExecutionJobRequestNotebookExecutionJobDataformRepositorySource? DataformRepositorySource;
        /// <summary>
        /// Required. The display name of the Notebook Execution.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// Max running time of the execution job in seconds (default 86400s / 24 hrs). A duration in seconds with up to nine fractional digits, ending with "s". Example: "3.5s".
        /// </summary>
        public readonly string? ExecutionTimeout;
        /// <summary>
        /// The user email to run the execution as.
        /// </summary>
        public readonly string? ExecutionUser;
        /// <summary>
        /// The Cloud Storage uri for the input notebook.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.ScheduleCreateNotebookExecutionJobRequestNotebookExecutionJobGcsNotebookSource? GcsNotebookSource;
        /// <summary>
        /// The Cloud Storage location to upload the result to. Format:`gs://bucket-name`
        /// </summary>
        public readonly string GcsOutputUri;
        /// <summary>
        /// The NotebookRuntimeTemplate to source compute configuration from.
        /// </summary>
        public readonly string NotebookRuntimeTemplateResourceName;
        /// <summary>
        /// The service account to run the execution as.
        /// </summary>
        public readonly string? ServiceAccount;

        [OutputConstructor]
        private ScheduleCreateNotebookExecutionJobRequestNotebookExecutionJob(
            Outputs.ScheduleCreateNotebookExecutionJobRequestNotebookExecutionJobDataformRepositorySource? dataformRepositorySource,

            string displayName,

            string? executionTimeout,

            string? executionUser,

            Outputs.ScheduleCreateNotebookExecutionJobRequestNotebookExecutionJobGcsNotebookSource? gcsNotebookSource,

            string gcsOutputUri,

            string notebookRuntimeTemplateResourceName,

            string? serviceAccount)
        {
            DataformRepositorySource = dataformRepositorySource;
            DisplayName = displayName;
            ExecutionTimeout = executionTimeout;
            ExecutionUser = executionUser;
            GcsNotebookSource = gcsNotebookSource;
            GcsOutputUri = gcsOutputUri;
            NotebookRuntimeTemplateResourceName = notebookRuntimeTemplateResourceName;
            ServiceAccount = serviceAccount;
        }
    }
}
