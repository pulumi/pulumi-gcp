// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Workflows
{
    /// <summary>
    /// Workflow program to be executed by Workflows.
    /// 
    /// To get more information about Workflow, see:
    /// 
    /// * [API documentation](https://cloud.google.com/workflows/docs/reference/rest/v1/projects.locations.workflows)
    /// * How-to Guides
    ///     * [Managing Workflows](https://cloud.google.com/workflows/docs/creating-updating-workflow)
    /// 
    /// ## Example Usage
    /// 
    /// ### Workflow Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testAccount = new Gcp.ServiceAccount.Account("test_account", new()
    ///     {
    ///         Name = "my-account",
    ///         DisplayName = "Test Service Account",
    ///     });
    /// 
    ///     var example = new Gcp.Workflows.Workflow("example", new()
    ///     {
    ///         Name = "workflow",
    ///         Region = "us-central1",
    ///         Description = "Magic",
    ///         ServiceAccount = testAccount.Id,
    ///         CallLogLevel = "LOG_ERRORS_ONLY",
    ///         Labels = 
    ///         {
    ///             { "env", "test" },
    ///         },
    ///         UserEnvVars = 
    ///         {
    ///             { "url", "https://timeapi.io/api/Time/current/zone?timeZone=Europe/Amsterdam" },
    ///         },
    ///         SourceContents = @"# This is a sample workflow. You can replace it with your source code.
    /// #
    /// # This workflow does the following:
    /// # - reads current time and date information from an external API and stores
    /// #   the response in currentTime variable
    /// # - retrieves a list of Wikipedia articles related to the day of the week
    /// #   from currentTime
    /// # - returns the list of articles as an output of the workflow
    /// #
    /// # Note: In Terraform you need to escape the $$ or it will cause errors.
    /// 
    /// - getCurrentTime:
    ///     call: http.get
    ///     args:
    ///         url: ${sys.get_env(""url"")}
    ///     result: currentTime
    /// - readWikipedia:
    ///     call: http.get
    ///     args:
    ///         url: https://en.wikipedia.org/w/api.php
    ///         query:
    ///             action: opensearch
    ///             search: ${currentTime.body.dayOfWeek}
    ///     result: wikiResult
    /// - returnOutput:
    ///     return: ${wikiResult.body[1]}
    /// ",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// This resource does not support import.
    /// </summary>
    [GcpResourceType("gcp:workflows/workflow:Workflow")]
    public partial class Workflow : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Describes the level of platform logging to apply to calls and call responses during
        /// executions of this workflow. If both the workflow and the execution specify a logging level,
        /// the execution level takes precedence.
        /// Possible values are: `CALL_LOG_LEVEL_UNSPECIFIED`, `LOG_ALL_CALLS`, `LOG_ERRORS_ONLY`, `LOG_NONE`.
        /// </summary>
        [Output("callLogLevel")]
        public Output<string?> CallLogLevel { get; private set; } = null!;

        /// <summary>
        /// The timestamp of when the workflow was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The KMS key used to encrypt workflow and execution data.
        /// Format: projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey}
        /// </summary>
        [Output("cryptoKeyName")]
        public Output<string?> CryptoKeyName { get; private set; } = null!;

        /// <summary>
        /// Description of the workflow provided by the user. Must be at most 1000 unicode characters long.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
        /// </summary>
        [Output("effectiveLabels")]
        public Output<ImmutableDictionary<string, string>> EffectiveLabels { get; private set; } = null!;

        /// <summary>
        /// A set of key/value label pairs to assign to this Workflow.
        /// 
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `effective_labels` for all of the labels present on the resource.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// Name of the Workflow.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Creates a unique name beginning with the
        /// specified prefix. If this and name are unspecified, a random value is chosen for the name.
        /// </summary>
        [Output("namePrefix")]
        public Output<string> NamePrefix { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The combination of labels configured directly on the resource
        /// and default labels configured on the provider.
        /// </summary>
        [Output("pulumiLabels")]
        public Output<ImmutableDictionary<string, string>> PulumiLabels { get; private set; } = null!;

        /// <summary>
        /// The region of the workflow.
        /// </summary>
        [Output("region")]
        public Output<string?> Region { get; private set; } = null!;

        /// <summary>
        /// The revision of the workflow. A new one is generated if the service account or source contents is changed.
        /// </summary>
        [Output("revisionId")]
        public Output<string> RevisionId { get; private set; } = null!;

        /// <summary>
        /// Name of the service account associated with the latest workflow version. This service
        /// account represents the identity of the workflow and determines what permissions the workflow has.
        /// Format: projects/{project}/serviceAccounts/{account} or {account}.
        /// Using - as a wildcard for the {project} or not providing one at all will infer the project from the account.
        /// The {account} value can be the email address or the unique_id of the service account.
        /// If not provided, workflow will use the project's default service account.
        /// Modifying this field for an existing workflow results in a new workflow revision.
        /// </summary>
        [Output("serviceAccount")]
        public Output<string> ServiceAccount { get; private set; } = null!;

        /// <summary>
        /// Workflow code to be executed. The size limit is 128KB.
        /// </summary>
        [Output("sourceContents")]
        public Output<string?> SourceContents { get; private set; } = null!;

        /// <summary>
        /// State of the workflow deployment.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The timestamp of when the workflow was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;

        /// <summary>
        /// User-defined environment variables associated with this workflow revision. This map has a maximum length of 20. Each string can take up to 4KiB. Keys cannot be empty strings and cannot start with “GOOGLE” or “WORKFLOWS".
        /// </summary>
        [Output("userEnvVars")]
        public Output<ImmutableDictionary<string, string>?> UserEnvVars { get; private set; } = null!;


        /// <summary>
        /// Create a Workflow resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Workflow(string name, WorkflowArgs? args = null, CustomResourceOptions? options = null)
            : base("gcp:workflows/workflow:Workflow", name, args ?? new WorkflowArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Workflow(string name, Input<string> id, WorkflowState? state = null, CustomResourceOptions? options = null)
            : base("gcp:workflows/workflow:Workflow", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "effectiveLabels",
                    "pulumiLabels",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Workflow resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Workflow Get(string name, Input<string> id, WorkflowState? state = null, CustomResourceOptions? options = null)
        {
            return new Workflow(name, id, state, options);
        }
    }

    public sealed class WorkflowArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Describes the level of platform logging to apply to calls and call responses during
        /// executions of this workflow. If both the workflow and the execution specify a logging level,
        /// the execution level takes precedence.
        /// Possible values are: `CALL_LOG_LEVEL_UNSPECIFIED`, `LOG_ALL_CALLS`, `LOG_ERRORS_ONLY`, `LOG_NONE`.
        /// </summary>
        [Input("callLogLevel")]
        public Input<string>? CallLogLevel { get; set; }

        /// <summary>
        /// The KMS key used to encrypt workflow and execution data.
        /// Format: projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey}
        /// </summary>
        [Input("cryptoKeyName")]
        public Input<string>? CryptoKeyName { get; set; }

        /// <summary>
        /// Description of the workflow provided by the user. Must be at most 1000 unicode characters long.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// A set of key/value label pairs to assign to this Workflow.
        /// 
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `effective_labels` for all of the labels present on the resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Name of the Workflow.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Creates a unique name beginning with the
        /// specified prefix. If this and name are unspecified, a random value is chosen for the name.
        /// </summary>
        [Input("namePrefix")]
        public Input<string>? NamePrefix { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The region of the workflow.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Name of the service account associated with the latest workflow version. This service
        /// account represents the identity of the workflow and determines what permissions the workflow has.
        /// Format: projects/{project}/serviceAccounts/{account} or {account}.
        /// Using - as a wildcard for the {project} or not providing one at all will infer the project from the account.
        /// The {account} value can be the email address or the unique_id of the service account.
        /// If not provided, workflow will use the project's default service account.
        /// Modifying this field for an existing workflow results in a new workflow revision.
        /// </summary>
        [Input("serviceAccount")]
        public Input<string>? ServiceAccount { get; set; }

        /// <summary>
        /// Workflow code to be executed. The size limit is 128KB.
        /// </summary>
        [Input("sourceContents")]
        public Input<string>? SourceContents { get; set; }

        [Input("userEnvVars")]
        private InputMap<string>? _userEnvVars;

        /// <summary>
        /// User-defined environment variables associated with this workflow revision. This map has a maximum length of 20. Each string can take up to 4KiB. Keys cannot be empty strings and cannot start with “GOOGLE” or “WORKFLOWS".
        /// </summary>
        public InputMap<string> UserEnvVars
        {
            get => _userEnvVars ?? (_userEnvVars = new InputMap<string>());
            set => _userEnvVars = value;
        }

        public WorkflowArgs()
        {
        }
        public static new WorkflowArgs Empty => new WorkflowArgs();
    }

    public sealed class WorkflowState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Describes the level of platform logging to apply to calls and call responses during
        /// executions of this workflow. If both the workflow and the execution specify a logging level,
        /// the execution level takes precedence.
        /// Possible values are: `CALL_LOG_LEVEL_UNSPECIFIED`, `LOG_ALL_CALLS`, `LOG_ERRORS_ONLY`, `LOG_NONE`.
        /// </summary>
        [Input("callLogLevel")]
        public Input<string>? CallLogLevel { get; set; }

        /// <summary>
        /// The timestamp of when the workflow was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The KMS key used to encrypt workflow and execution data.
        /// Format: projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey}
        /// </summary>
        [Input("cryptoKeyName")]
        public Input<string>? CryptoKeyName { get; set; }

        /// <summary>
        /// Description of the workflow provided by the user. Must be at most 1000 unicode characters long.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("effectiveLabels")]
        private InputMap<string>? _effectiveLabels;

        /// <summary>
        /// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
        /// </summary>
        public InputMap<string> EffectiveLabels
        {
            get => _effectiveLabels ?? (_effectiveLabels = new InputMap<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableDictionary.Create<string, string>());
                _effectiveLabels = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// A set of key/value label pairs to assign to this Workflow.
        /// 
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `effective_labels` for all of the labels present on the resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Name of the Workflow.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Creates a unique name beginning with the
        /// specified prefix. If this and name are unspecified, a random value is chosen for the name.
        /// </summary>
        [Input("namePrefix")]
        public Input<string>? NamePrefix { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("pulumiLabels")]
        private InputMap<string>? _pulumiLabels;

        /// <summary>
        /// The combination of labels configured directly on the resource
        /// and default labels configured on the provider.
        /// </summary>
        public InputMap<string> PulumiLabels
        {
            get => _pulumiLabels ?? (_pulumiLabels = new InputMap<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableDictionary.Create<string, string>());
                _pulumiLabels = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        /// <summary>
        /// The region of the workflow.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// The revision of the workflow. A new one is generated if the service account or source contents is changed.
        /// </summary>
        [Input("revisionId")]
        public Input<string>? RevisionId { get; set; }

        /// <summary>
        /// Name of the service account associated with the latest workflow version. This service
        /// account represents the identity of the workflow and determines what permissions the workflow has.
        /// Format: projects/{project}/serviceAccounts/{account} or {account}.
        /// Using - as a wildcard for the {project} or not providing one at all will infer the project from the account.
        /// The {account} value can be the email address or the unique_id of the service account.
        /// If not provided, workflow will use the project's default service account.
        /// Modifying this field for an existing workflow results in a new workflow revision.
        /// </summary>
        [Input("serviceAccount")]
        public Input<string>? ServiceAccount { get; set; }

        /// <summary>
        /// Workflow code to be executed. The size limit is 128KB.
        /// </summary>
        [Input("sourceContents")]
        public Input<string>? SourceContents { get; set; }

        /// <summary>
        /// State of the workflow deployment.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The timestamp of when the workflow was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        [Input("userEnvVars")]
        private InputMap<string>? _userEnvVars;

        /// <summary>
        /// User-defined environment variables associated with this workflow revision. This map has a maximum length of 20. Each string can take up to 4KiB. Keys cannot be empty strings and cannot start with “GOOGLE” or “WORKFLOWS".
        /// </summary>
        public InputMap<string> UserEnvVars
        {
            get => _userEnvVars ?? (_userEnvVars = new InputMap<string>());
            set => _userEnvVars = value;
        }

        public WorkflowState()
        {
        }
        public static new WorkflowState Empty => new WorkflowState();
    }
}
