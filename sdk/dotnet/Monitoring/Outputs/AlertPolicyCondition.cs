// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Monitoring.Outputs
{

    [OutputType]
    public sealed class AlertPolicyCondition
    {
        /// <summary>
        /// A condition that checks that a time series
        /// continues to receive new data points.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.AlertPolicyConditionConditionAbsent? ConditionAbsent;
        /// <summary>
        /// A condition that checks for log messages matching given constraints.
        /// If set, no other conditions can be present.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.AlertPolicyConditionConditionMatchedLog? ConditionMatchedLog;
        /// <summary>
        /// A Monitoring Query Language query that outputs a boolean stream
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.AlertPolicyConditionConditionMonitoringQueryLanguage? ConditionMonitoringQueryLanguage;
        /// <summary>
        /// A Monitoring Query Language query that outputs a boolean stream
        /// A condition type that allows alert policies to be defined using
        /// Prometheus Query Language (PromQL).
        /// The PrometheusQueryLanguageCondition message contains information
        /// from a Prometheus alerting rule and its associated rule group.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.AlertPolicyConditionConditionPrometheusQueryLanguage? ConditionPrometheusQueryLanguage;
        /// <summary>
        /// A condition that compares a time series against a
        /// threshold.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.AlertPolicyConditionConditionThreshold? ConditionThreshold;
        /// <summary>
        /// A short name or phrase used to identify the
        /// condition in dashboards, notifications, and
        /// incidents. To avoid confusion, don't use the same
        /// display name for multiple conditions in the same
        /// policy.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// (Output)
        /// The unique resource name for this condition.
        /// Its syntax is:
        /// projects/[PROJECT_ID]/alertPolicies/[POLICY_ID]/conditions/[CONDITION_ID]
        /// [CONDITION_ID] is assigned by Stackdriver Monitoring when
        /// the condition is created as part of a new or updated alerting
        /// policy.
        /// </summary>
        public readonly string? Name;

        [OutputConstructor]
        private AlertPolicyCondition(
            Outputs.AlertPolicyConditionConditionAbsent? conditionAbsent,

            Outputs.AlertPolicyConditionConditionMatchedLog? conditionMatchedLog,

            Outputs.AlertPolicyConditionConditionMonitoringQueryLanguage? conditionMonitoringQueryLanguage,

            Outputs.AlertPolicyConditionConditionPrometheusQueryLanguage? conditionPrometheusQueryLanguage,

            Outputs.AlertPolicyConditionConditionThreshold? conditionThreshold,

            string displayName,

            string? name)
        {
            ConditionAbsent = conditionAbsent;
            ConditionMatchedLog = conditionMatchedLog;
            ConditionMonitoringQueryLanguage = conditionMonitoringQueryLanguage;
            ConditionPrometheusQueryLanguage = conditionPrometheusQueryLanguage;
            ConditionThreshold = conditionThreshold;
            DisplayName = displayName;
            Name = name;
        }
    }
}
