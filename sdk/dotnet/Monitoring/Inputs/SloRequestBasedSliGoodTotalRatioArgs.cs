// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Monitoring.Inputs
{

    public sealed class SloRequestBasedSliGoodTotalRatioArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A TimeSeries [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters)
        /// quantifying bad service provided, either demanded service that
        /// was not provided or demanded service that was of inadequate
        /// quality. Exactly two of
        /// good, bad, or total service filter must be defined (where
        /// good + bad = total is assumed)
        /// Must have ValueType = DOUBLE or ValueType = INT64 and
        /// must have MetricKind = DELTA or MetricKind = CUMULATIVE.
        /// </summary>
        [Input("badServiceFilter")]
        public Input<string>? BadServiceFilter { get; set; }

        /// <summary>
        /// A TimeSeries [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters)
        /// quantifying good service provided. Exactly two of
        /// good, bad, or total service filter must be defined (where
        /// good + bad = total is assumed)
        /// Must have ValueType = DOUBLE or ValueType = INT64 and
        /// must have MetricKind = DELTA or MetricKind = CUMULATIVE.
        /// </summary>
        [Input("goodServiceFilter")]
        public Input<string>? GoodServiceFilter { get; set; }

        /// <summary>
        /// A TimeSeries [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters)
        /// quantifying total demanded service. Exactly two of
        /// good, bad, or total service filter must be defined (where
        /// good + bad = total is assumed)
        /// Must have ValueType = DOUBLE or ValueType = INT64 and
        /// must have MetricKind = DELTA or MetricKind = CUMULATIVE.
        /// </summary>
        [Input("totalServiceFilter")]
        public Input<string>? TotalServiceFilter { get; set; }

        public SloRequestBasedSliGoodTotalRatioArgs()
        {
        }
        public static new SloRequestBasedSliGoodTotalRatioArgs Empty => new SloRequestBasedSliGoodTotalRatioArgs();
    }
}
