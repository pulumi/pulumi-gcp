// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.PubSub
{
    /// <summary>
    /// A named resource representing the stream of messages from a single,
    /// specific topic, to be delivered to the subscribing application.
    /// 
    /// To get more information about Subscription, see:
    /// 
    /// * [API documentation](https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.subscriptions)
    /// * How-to Guides
    ///     * [Managing Subscriptions](https://cloud.google.com/pubsub/docs/admin#managing_subscriptions)
    /// 
    /// ## Example Usage
    /// ### Pubsub Lite Subscription Basic
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var project = Output.Create(Gcp.Organizations.GetProject.InvokeAsync());
    ///         var exampleLiteTopic = new Gcp.PubSub.LiteTopic("exampleLiteTopic", new Gcp.PubSub.LiteTopicArgs
    ///         {
    ///             Project = project.Apply(project =&gt; project.Number),
    ///             PartitionConfig = new Gcp.PubSub.Inputs.LiteTopicPartitionConfigArgs
    ///             {
    ///                 Count = 1,
    ///                 Capacity = new Gcp.PubSub.Inputs.LiteTopicPartitionConfigCapacityArgs
    ///                 {
    ///                     PublishMibPerSec = 4,
    ///                     SubscribeMibPerSec = 8,
    ///                 },
    ///             },
    ///             RetentionConfig = new Gcp.PubSub.Inputs.LiteTopicRetentionConfigArgs
    ///             {
    ///                 PerPartitionBytes = "32212254720",
    ///             },
    ///         });
    ///         var exampleLiteSubscription = new Gcp.PubSub.LiteSubscription("exampleLiteSubscription", new Gcp.PubSub.LiteSubscriptionArgs
    ///         {
    ///             Topic = exampleLiteTopic.Name,
    ///             DeliveryConfig = new Gcp.PubSub.Inputs.LiteSubscriptionDeliveryConfigArgs
    ///             {
    ///                 DeliveryRequirement = "DELIVER_AFTER_STORED",
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// Subscription can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import gcp:pubsub/liteSubscription:LiteSubscription default projects/{{project}}/locations/{{zone}}/subscriptions/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:pubsub/liteSubscription:LiteSubscription default {{project}}/{{zone}}/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:pubsub/liteSubscription:LiteSubscription default {{zone}}/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:pubsub/liteSubscription:LiteSubscription default {{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:pubsub/liteSubscription:LiteSubscription")]
    public partial class LiteSubscription : Pulumi.CustomResource
    {
        /// <summary>
        /// The settings for this subscription's message delivery.
        /// Structure is documented below.
        /// </summary>
        [Output("deliveryConfig")]
        public Output<Outputs.LiteSubscriptionDeliveryConfig?> DeliveryConfig { get; private set; } = null!;

        /// <summary>
        /// Name of the subscription.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The region of the pubsub lite topic.
        /// </summary>
        [Output("region")]
        public Output<string?> Region { get; private set; } = null!;

        /// <summary>
        /// A reference to a Topic resource.
        /// </summary>
        [Output("topic")]
        public Output<string> Topic { get; private set; } = null!;

        /// <summary>
        /// The zone of the pubsub lite topic.
        /// </summary>
        [Output("zone")]
        public Output<string?> Zone { get; private set; } = null!;


        /// <summary>
        /// Create a LiteSubscription resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LiteSubscription(string name, LiteSubscriptionArgs args, CustomResourceOptions? options = null)
            : base("gcp:pubsub/liteSubscription:LiteSubscription", name, args ?? new LiteSubscriptionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LiteSubscription(string name, Input<string> id, LiteSubscriptionState? state = null, CustomResourceOptions? options = null)
            : base("gcp:pubsub/liteSubscription:LiteSubscription", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LiteSubscription resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LiteSubscription Get(string name, Input<string> id, LiteSubscriptionState? state = null, CustomResourceOptions? options = null)
        {
            return new LiteSubscription(name, id, state, options);
        }
    }

    public sealed class LiteSubscriptionArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The settings for this subscription's message delivery.
        /// Structure is documented below.
        /// </summary>
        [Input("deliveryConfig")]
        public Input<Inputs.LiteSubscriptionDeliveryConfigArgs>? DeliveryConfig { get; set; }

        /// <summary>
        /// Name of the subscription.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The region of the pubsub lite topic.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// A reference to a Topic resource.
        /// </summary>
        [Input("topic", required: true)]
        public Input<string> Topic { get; set; } = null!;

        /// <summary>
        /// The zone of the pubsub lite topic.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public LiteSubscriptionArgs()
        {
        }
    }

    public sealed class LiteSubscriptionState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The settings for this subscription's message delivery.
        /// Structure is documented below.
        /// </summary>
        [Input("deliveryConfig")]
        public Input<Inputs.LiteSubscriptionDeliveryConfigGetArgs>? DeliveryConfig { get; set; }

        /// <summary>
        /// Name of the subscription.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The region of the pubsub lite topic.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// A reference to a Topic resource.
        /// </summary>
        [Input("topic")]
        public Input<string>? Topic { get; set; }

        /// <summary>
        /// The zone of the pubsub lite topic.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public LiteSubscriptionState()
        {
        }
    }
}
