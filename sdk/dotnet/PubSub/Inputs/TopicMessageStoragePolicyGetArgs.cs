// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.PubSub.Inputs
{

    public sealed class TopicMessageStoragePolicyGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("allowedPersistenceRegions", required: true)]
        private InputList<string>? _allowedPersistenceRegions;

        /// <summary>
        /// A list of IDs of GCP regions where messages that are published to
        /// the topic may be persisted in storage. Messages published by
        /// publishers running in non-allowed GCP regions (or running outside
        /// of GCP altogether) will be routed for storage in one of the
        /// allowed regions. An empty list means that no regions are allowed,
        /// and is not a valid configuration.
        /// </summary>
        public InputList<string> AllowedPersistenceRegions
        {
            get => _allowedPersistenceRegions ?? (_allowedPersistenceRegions = new InputList<string>());
            set => _allowedPersistenceRegions = value;
        }

        /// <summary>
        /// If true, `allowedPersistenceRegions` is also used to enforce in-transit
        /// guarantees for messages. That is, Pub/Sub will fail topics.publish
        /// operations on this topic and subscribe operations on any subscription
        /// attached to this topic in any region that is not in `allowedPersistenceRegions`.
        /// </summary>
        [Input("enforceInTransit")]
        public Input<bool>? EnforceInTransit { get; set; }

        public TopicMessageStoragePolicyGetArgs()
        {
        }
        public static new TopicMessageStoragePolicyGetArgs Empty => new TopicMessageStoragePolicyGetArgs();
    }
}
