// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.PubSub
{
    public static class GetSubscriptionIamPolicy
    {
        /// <summary>
        /// Retrieves the current IAM policy data for a Pubsub subscription.
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.PubSub.GetSubscriptionIamPolicy.Invoke(new()
        ///     {
        ///         Subscription = google_pubsub_subscription.Subscription.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSubscriptionIamPolicyResult> InvokeAsync(GetSubscriptionIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSubscriptionIamPolicyResult>("gcp:pubsub/getSubscriptionIamPolicy:getSubscriptionIamPolicy", args ?? new GetSubscriptionIamPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the current IAM policy data for a Pubsub subscription.
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.PubSub.GetSubscriptionIamPolicy.Invoke(new()
        ///     {
        ///         Subscription = google_pubsub_subscription.Subscription.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSubscriptionIamPolicyResult> Invoke(GetSubscriptionIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSubscriptionIamPolicyResult>("gcp:pubsub/getSubscriptionIamPolicy:getSubscriptionIamPolicy", args ?? new GetSubscriptionIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSubscriptionIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The project in which the resource belongs. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        /// <summary>
        /// The subscription name or id to bind to attach IAM policy to.
        /// </summary>
        [Input("subscription", required: true)]
        public string Subscription { get; set; } = null!;

        public GetSubscriptionIamPolicyArgs()
        {
        }
        public static new GetSubscriptionIamPolicyArgs Empty => new GetSubscriptionIamPolicyArgs();
    }

    public sealed class GetSubscriptionIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The project in which the resource belongs. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The subscription name or id to bind to attach IAM policy to.
        /// </summary>
        [Input("subscription", required: true)]
        public Input<string> Subscription { get; set; } = null!;

        public GetSubscriptionIamPolicyInvokeArgs()
        {
        }
        public static new GetSubscriptionIamPolicyInvokeArgs Empty => new GetSubscriptionIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetSubscriptionIamPolicyResult
    {
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (Computed) The policy data
        /// </summary>
        public readonly string PolicyData;
        public readonly string Project;
        public readonly string Subscription;

        [OutputConstructor]
        private GetSubscriptionIamPolicyResult(
            string etag,

            string id,

            string policyData,

            string project,

            string subscription)
        {
            Etag = etag;
            Id = id;
            PolicyData = policyData;
            Project = project;
            Subscription = subscription;
        }
    }
}
