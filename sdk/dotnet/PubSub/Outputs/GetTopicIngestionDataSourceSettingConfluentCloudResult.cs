// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.PubSub.Outputs
{

    [OutputType]
    public sealed class GetTopicIngestionDataSourceSettingConfluentCloudResult
    {
        /// <summary>
        /// The Confluent Cloud bootstrap server. The format is url:port.
        /// </summary>
        public readonly string BootstrapServer;
        /// <summary>
        /// The Confluent Cloud cluster ID.
        /// </summary>
        public readonly string ClusterId;
        /// <summary>
        /// The GCP service account to be used for Federated Identity authentication
        /// with Confluent Cloud.
        /// </summary>
        public readonly string GcpServiceAccount;
        /// <summary>
        /// Identity pool ID to be used for Federated Identity authentication with Confluent Cloud.
        /// </summary>
        public readonly string IdentityPoolId;
        /// <summary>
        /// Name of the Confluent Cloud topic that Pub/Sub will import from.
        /// </summary>
        public readonly string Topic;

        [OutputConstructor]
        private GetTopicIngestionDataSourceSettingConfluentCloudResult(
            string bootstrapServer,

            string clusterId,

            string gcpServiceAccount,

            string identityPoolId,

            string topic)
        {
            BootstrapServer = bootstrapServer;
            ClusterId = clusterId;
            GcpServiceAccount = gcpServiceAccount;
            IdentityPoolId = identityPoolId;
            Topic = topic;
        }
    }
}
