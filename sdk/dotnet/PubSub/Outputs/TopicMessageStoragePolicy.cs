// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.PubSub.Outputs
{

    [OutputType]
    public sealed class TopicMessageStoragePolicy
    {
        /// <summary>
        /// A list of IDs of GCP regions where messages that are published to
        /// the topic may be persisted in storage. Messages published by
        /// publishers running in non-allowed GCP regions (or running outside
        /// of GCP altogether) will be routed for storage in one of the
        /// allowed regions. An empty list means that no regions are allowed,
        /// and is not a valid configuration.
        /// </summary>
        public readonly ImmutableArray<string> AllowedPersistenceRegions;
        /// <summary>
        /// If true, `allowedPersistenceRegions` is also used to enforce in-transit
        /// guarantees for messages. That is, Pub/Sub will fail topics.publish
        /// operations on this topic and subscribe operations on any subscription
        /// attached to this topic in any region that is not in `allowedPersistenceRegions`.
        /// </summary>
        public readonly bool? EnforceInTransit;

        [OutputConstructor]
        private TopicMessageStoragePolicy(
            ImmutableArray<string> allowedPersistenceRegions,

            bool? enforceInTransit)
        {
            AllowedPersistenceRegions = allowedPersistenceRegions;
            EnforceInTransit = enforceInTransit;
        }
    }
}
