// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.PubSub
{
    public static class GetSchemaIamPolicy
    {
        /// <summary>
        /// Retrieves the current IAM policy data for schema
        /// 
        /// 
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.PubSub.GetSchemaIamPolicy.Invoke(new()
        ///     {
        ///         Project = example.Project,
        ///         Schema = example.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSchemaIamPolicyResult> InvokeAsync(GetSchemaIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSchemaIamPolicyResult>("gcp:pubsub/getSchemaIamPolicy:getSchemaIamPolicy", args ?? new GetSchemaIamPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the current IAM policy data for schema
        /// 
        /// 
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.PubSub.GetSchemaIamPolicy.Invoke(new()
        ///     {
        ///         Project = example.Project,
        ///         Schema = example.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSchemaIamPolicyResult> Invoke(GetSchemaIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSchemaIamPolicyResult>("gcp:pubsub/getSchemaIamPolicy:getSchemaIamPolicy", args ?? new GetSchemaIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSchemaIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("schema", required: true)]
        public string Schema { get; set; } = null!;

        public GetSchemaIamPolicyArgs()
        {
        }
        public static new GetSchemaIamPolicyArgs Empty => new GetSchemaIamPolicyArgs();
    }

    public sealed class GetSchemaIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("schema", required: true)]
        public Input<string> Schema { get; set; } = null!;

        public GetSchemaIamPolicyInvokeArgs()
        {
        }
        public static new GetSchemaIamPolicyInvokeArgs Empty => new GetSchemaIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetSchemaIamPolicyResult
    {
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (Required only by `gcp.pubsub.SchemaIamPolicy`) The policy data generated by
        /// a `gcp.organizations.getIAMPolicy` data source.
        /// </summary>
        public readonly string PolicyData;
        public readonly string Project;
        public readonly string Schema;

        [OutputConstructor]
        private GetSchemaIamPolicyResult(
            string etag,

            string id,

            string policyData,

            string project,

            string schema)
        {
            Etag = etag;
            Id = id;
            PolicyData = policyData;
            Project = project;
            Schema = schema;
        }
    }
}
