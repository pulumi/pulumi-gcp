// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Bigquery
{
    /// <summary>
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/bigtable_app_profile.html.markdown.
    /// </summary>
    public partial class AppProfile : Pulumi.CustomResource
    {
        [Output("appProfileId")]
        public Output<string> AppProfileId { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("ignoreWarnings")]
        public Output<bool?> IgnoreWarnings { get; private set; } = null!;

        [Output("instance")]
        public Output<string?> Instance { get; private set; } = null!;

        [Output("multiClusterRoutingUseAny")]
        public Output<bool?> MultiClusterRoutingUseAny { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        [Output("singleClusterRouting")]
        public Output<Outputs.AppProfileSingleClusterRouting?> SingleClusterRouting { get; private set; } = null!;


        /// <summary>
        /// Create a AppProfile resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AppProfile(string name, AppProfileArgs args, CustomResourceOptions? options = null)
            : base("gcp:bigquery/appProfile:AppProfile", name, args, MakeResourceOptions(options, ""))
        {
        }

        private AppProfile(string name, Input<string> id, AppProfileState? state = null, CustomResourceOptions? options = null)
            : base("gcp:bigquery/appProfile:AppProfile", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AppProfile resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AppProfile Get(string name, Input<string> id, AppProfileState? state = null, CustomResourceOptions? options = null)
        {
            return new AppProfile(name, id, state, options);
        }
    }

    public sealed class AppProfileArgs : Pulumi.ResourceArgs
    {
        [Input("appProfileId", required: true)]
        public Input<string> AppProfileId { get; set; } = null!;

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("ignoreWarnings")]
        public Input<bool>? IgnoreWarnings { get; set; }

        [Input("instance")]
        public Input<string>? Instance { get; set; }

        [Input("multiClusterRoutingUseAny")]
        public Input<bool>? MultiClusterRoutingUseAny { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("singleClusterRouting")]
        public Input<Inputs.AppProfileSingleClusterRoutingArgs>? SingleClusterRouting { get; set; }

        public AppProfileArgs()
        {
        }
    }

    public sealed class AppProfileState : Pulumi.ResourceArgs
    {
        [Input("appProfileId")]
        public Input<string>? AppProfileId { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("ignoreWarnings")]
        public Input<bool>? IgnoreWarnings { get; set; }

        [Input("instance")]
        public Input<string>? Instance { get; set; }

        [Input("multiClusterRoutingUseAny")]
        public Input<bool>? MultiClusterRoutingUseAny { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("singleClusterRouting")]
        public Input<Inputs.AppProfileSingleClusterRoutingGetArgs>? SingleClusterRouting { get; set; }

        public AppProfileState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class AppProfileSingleClusterRoutingArgs : Pulumi.ResourceArgs
    {
        [Input("allowTransactionalWrites")]
        public Input<bool>? AllowTransactionalWrites { get; set; }

        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        public AppProfileSingleClusterRoutingArgs()
        {
        }
    }

    public sealed class AppProfileSingleClusterRoutingGetArgs : Pulumi.ResourceArgs
    {
        [Input("allowTransactionalWrites")]
        public Input<bool>? AllowTransactionalWrites { get; set; }

        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        public AppProfileSingleClusterRoutingGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class AppProfileSingleClusterRouting
    {
        public readonly bool? AllowTransactionalWrites;
        public readonly string? ClusterId;

        [OutputConstructor]
        private AppProfileSingleClusterRouting(
            bool? allowTransactionalWrites,
            string? clusterId)
        {
            AllowTransactionalWrites = allowTransactionalWrites;
            ClusterId = clusterId;
        }
    }
    }
}
