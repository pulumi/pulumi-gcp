// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Notebooks.Outputs
{

    [OutputType]
    public sealed class RuntimeVirtualMachineVirtualMachineConfigDataDiskInitializeParams
    {
        /// <summary>
        /// Provide this property when creating the disk.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Specifies the disk name. If not specified, the default is
        /// to use the name of the instance. If the disk with the
        /// instance name exists already in the given zone/region, a
        /// new name will be automatically generated.
        /// </summary>
        public readonly string? DiskName;
        /// <summary>
        /// Specifies the size of the disk in base-2 GB. If not
        /// specified, the disk will be the same size as the image
        /// (usually 10GB). If specified, the size must be equal to
        /// or larger than 10GB. Default 100 GB.
        /// </summary>
        public readonly int? DiskSizeGb;
        /// <summary>
        /// The type of the boot disk attached to this runtime,
        /// defaults to standard persistent disk. For valid values,
        /// see `https://cloud.google.com/vertex-ai/docs/workbench/
        /// reference/rest/v1/projects.locations.runtimes#disktype`
        /// </summary>
        public readonly string? DiskType;
        /// <summary>
        /// Labels to apply to this disk. These can be later modified
        /// by the disks.setLabels method. This field is only
        /// applicable for persistent disks.
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Labels;

        [OutputConstructor]
        private RuntimeVirtualMachineVirtualMachineConfigDataDiskInitializeParams(
            string? description,

            string? diskName,

            int? diskSizeGb,

            string? diskType,

            ImmutableDictionary<string, string>? labels)
        {
            Description = description;
            DiskName = diskName;
            DiskSizeGb = diskSizeGb;
            DiskType = diskType;
            Labels = labels;
        }
    }
}
