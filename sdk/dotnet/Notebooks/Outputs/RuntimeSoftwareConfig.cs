// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Notebooks.Outputs
{

    [OutputType]
    public sealed class RuntimeSoftwareConfig
    {
        /// <summary>
        /// Specify a custom Cloud Storage path where the GPU driver is stored.
        /// If not specified, we'll automatically choose from official GPU drivers.
        /// </summary>
        public readonly string? CustomGpuDriverPath;
        /// <summary>
        /// Verifies core internal services are running. Default: True.
        /// </summary>
        public readonly bool? EnableHealthMonitoring;
        /// <summary>
        /// Runtime will automatically shutdown after idle_shutdown_time.
        /// Default: True
        /// </summary>
        public readonly bool? IdleShutdown;
        /// <summary>
        /// Time in minutes to wait before shuting down runtime.
        /// Default: 180 minutes
        /// </summary>
        public readonly int? IdleShutdownTimeout;
        /// <summary>
        /// Install Nvidia Driver automatically.
        /// </summary>
        public readonly bool? InstallGpuDriver;
        /// <summary>
        /// Use a list of container images to use as Kernels in the notebook instance.
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.RuntimeSoftwareConfigKernel> Kernels;
        /// <summary>
        /// Cron expression in UTC timezone for schedule instance auto upgrade.
        /// Please follow the [cron format](https://en.wikipedia.org/wiki/Cron).
        /// </summary>
        public readonly string? NotebookUpgradeSchedule;
        /// <summary>
        /// Path to a Bash script that automatically runs after a notebook instance
        /// fully boots up. The path must be a URL or
        /// Cloud Storage path (gs://path-to-file/file-name).
        /// </summary>
        public readonly string? PostStartupScript;
        /// <summary>
        /// Behavior for the post startup script.
        /// Possible values are `POST_STARTUP_SCRIPT_BEHAVIOR_UNSPECIFIED`, `RUN_EVERY_START`, and `DOWNLOAD_AND_RUN_EVERY_START`.
        /// </summary>
        public readonly string? PostStartupScriptBehavior;
        /// <summary>
        /// -
        /// Bool indicating whether an newer image is available in an image family.
        /// </summary>
        public readonly bool? Upgradeable;

        [OutputConstructor]
        private RuntimeSoftwareConfig(
            string? customGpuDriverPath,

            bool? enableHealthMonitoring,

            bool? idleShutdown,

            int? idleShutdownTimeout,

            bool? installGpuDriver,

            ImmutableArray<Outputs.RuntimeSoftwareConfigKernel> kernels,

            string? notebookUpgradeSchedule,

            string? postStartupScript,

            string? postStartupScriptBehavior,

            bool? upgradeable)
        {
            CustomGpuDriverPath = customGpuDriverPath;
            EnableHealthMonitoring = enableHealthMonitoring;
            IdleShutdown = idleShutdown;
            IdleShutdownTimeout = idleShutdownTimeout;
            InstallGpuDriver = installGpuDriver;
            Kernels = kernels;
            NotebookUpgradeSchedule = notebookUpgradeSchedule;
            PostStartupScript = postStartupScript;
            PostStartupScriptBehavior = postStartupScriptBehavior;
            Upgradeable = upgradeable;
        }
    }
}
