// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Tpu
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// Vm can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import gcp:tpu/v2Vm:V2Vm default projects/{{project}}/locations/{{zone}}/nodes/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:tpu/v2Vm:V2Vm default {{project}}/{{zone}}/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:tpu/v2Vm:V2Vm default {{zone}}/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:tpu/v2Vm:V2Vm default {{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:tpu/v2Vm:V2Vm")]
    public partial class V2Vm : global::Pulumi.CustomResource
    {
        /// <summary>
        /// TPU accelerator type for the TPU. If not specified, this defaults to 'v2-8'.
        /// </summary>
        [Output("acceleratorType")]
        public Output<string?> AcceleratorType { get; private set; } = null!;

        /// <summary>
        /// Text description of the TPU.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The immutable name of the TPU.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Runtime version for the TPU.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Output("runtimeVersion")]
        public Output<string> RuntimeVersion { get; private set; } = null!;

        /// <summary>
        /// The GCP location for the TPU. If it is not provided, the provider zone is used.
        /// </summary>
        [Output("zone")]
        public Output<string> Zone { get; private set; } = null!;


        /// <summary>
        /// Create a V2Vm resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public V2Vm(string name, V2VmArgs args, CustomResourceOptions? options = null)
            : base("gcp:tpu/v2Vm:V2Vm", name, args ?? new V2VmArgs(), MakeResourceOptions(options, ""))
        {
        }

        private V2Vm(string name, Input<string> id, V2VmState? state = null, CustomResourceOptions? options = null)
            : base("gcp:tpu/v2Vm:V2Vm", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing V2Vm resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static V2Vm Get(string name, Input<string> id, V2VmState? state = null, CustomResourceOptions? options = null)
        {
            return new V2Vm(name, id, state, options);
        }
    }

    public sealed class V2VmArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// TPU accelerator type for the TPU. If not specified, this defaults to 'v2-8'.
        /// </summary>
        [Input("acceleratorType")]
        public Input<string>? AcceleratorType { get; set; }

        /// <summary>
        /// Text description of the TPU.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The immutable name of the TPU.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Runtime version for the TPU.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("runtimeVersion", required: true)]
        public Input<string> RuntimeVersion { get; set; } = null!;

        /// <summary>
        /// The GCP location for the TPU. If it is not provided, the provider zone is used.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public V2VmArgs()
        {
        }
        public static new V2VmArgs Empty => new V2VmArgs();
    }

    public sealed class V2VmState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// TPU accelerator type for the TPU. If not specified, this defaults to 'v2-8'.
        /// </summary>
        [Input("acceleratorType")]
        public Input<string>? AcceleratorType { get; set; }

        /// <summary>
        /// Text description of the TPU.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The immutable name of the TPU.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Runtime version for the TPU.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("runtimeVersion")]
        public Input<string>? RuntimeVersion { get; set; }

        /// <summary>
        /// The GCP location for the TPU. If it is not provided, the provider zone is used.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public V2VmState()
        {
        }
        public static new V2VmState Empty => new V2VmState();
    }
}
