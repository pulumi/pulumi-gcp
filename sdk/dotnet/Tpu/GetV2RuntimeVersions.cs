// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Tpu
{
    public static class GetV2RuntimeVersions
    {
        /// <summary>
        /// Get runtime versions available for a project. For more information see the [official documentation](https://cloud.google.com/tpu/docs/) and [API](https://cloud.google.com/tpu/docs/reference/rest/v2/projects.locations.runtimeVersions).
        /// </summary>
        public static Task<GetV2RuntimeVersionsResult> InvokeAsync(GetV2RuntimeVersionsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetV2RuntimeVersionsResult>("gcp:tpu/getV2RuntimeVersions:getV2RuntimeVersions", args ?? new GetV2RuntimeVersionsArgs(), options.WithDefaults());

        /// <summary>
        /// Get runtime versions available for a project. For more information see the [official documentation](https://cloud.google.com/tpu/docs/) and [API](https://cloud.google.com/tpu/docs/reference/rest/v2/projects.locations.runtimeVersions).
        /// </summary>
        public static Output<GetV2RuntimeVersionsResult> Invoke(GetV2RuntimeVersionsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetV2RuntimeVersionsResult>("gcp:tpu/getV2RuntimeVersions:getV2RuntimeVersions", args ?? new GetV2RuntimeVersionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetV2RuntimeVersionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The project to list versions for. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        /// <summary>
        /// The zone to list versions for. If it
        /// is not provided, the provider zone is used.
        /// </summary>
        [Input("zone")]
        public string? Zone { get; set; }

        public GetV2RuntimeVersionsArgs()
        {
        }
        public static new GetV2RuntimeVersionsArgs Empty => new GetV2RuntimeVersionsArgs();
    }

    public sealed class GetV2RuntimeVersionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The project to list versions for. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The zone to list versions for. If it
        /// is not provided, the provider zone is used.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public GetV2RuntimeVersionsInvokeArgs()
        {
        }
        public static new GetV2RuntimeVersionsInvokeArgs Empty => new GetV2RuntimeVersionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetV2RuntimeVersionsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Project;
        /// <summary>
        /// The list of runtime versions available for the given project and zone.
        /// </summary>
        public readonly ImmutableArray<string> Versions;
        public readonly string Zone;

        [OutputConstructor]
        private GetV2RuntimeVersionsResult(
            string id,

            string project,

            ImmutableArray<string> versions,

            string zone)
        {
            Id = id;
            Project = project;
            Versions = versions;
            Zone = zone;
        }
    }
}
