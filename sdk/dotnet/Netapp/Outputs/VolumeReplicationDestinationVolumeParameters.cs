// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Netapp.Outputs
{

    [OutputType]
    public sealed class VolumeReplicationDestinationVolumeParameters
    {
        /// <summary>
        /// Description for the destination volume.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Share name for destination volume. If not specified, name of source volume's share name will be used.
        /// </summary>
        public readonly string? ShareName;
        /// <summary>
        /// Name of an existing storage pool for the destination volume with format: `projects/{{project}}/locations/{{location}}/storagePools/{{poolId}}`
        /// </summary>
        public readonly string StoragePool;
        /// <summary>
        /// Tiering policy for the volume.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.VolumeReplicationDestinationVolumeParametersTieringPolicy? TieringPolicy;
        /// <summary>
        /// Name for the destination volume to be created. If not specified, the name of the source volume will be used.
        /// </summary>
        public readonly string? VolumeId;

        [OutputConstructor]
        private VolumeReplicationDestinationVolumeParameters(
            string? description,

            string? shareName,

            string storagePool,

            Outputs.VolumeReplicationDestinationVolumeParametersTieringPolicy? tieringPolicy,

            string? volumeId)
        {
            Description = description;
            ShareName = shareName;
            StoragePool = storagePool;
            TieringPolicy = tieringPolicy;
            VolumeId = volumeId;
        }
    }
}
