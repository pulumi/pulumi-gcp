// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Netapp.Inputs
{

    public sealed class BackupVaultBackupRetentionPolicyGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Minimum retention duration in days for backups in the backup vault.
        /// </summary>
        [Input("backupMinimumEnforcedRetentionDays", required: true)]
        public Input<int> BackupMinimumEnforcedRetentionDays { get; set; } = null!;

        /// <summary>
        /// Indicates if the daily backups are immutable. At least one of daily_backup_immutable, weekly_backup_immutable, MonthlyBackupImmutable and ManualBackupImmutable must be true.
        /// </summary>
        [Input("dailyBackupImmutable")]
        public Input<bool>? DailyBackupImmutable { get; set; }

        /// <summary>
        /// Indicates if the manual backups are immutable. At least one of daily_backup_immutable, weekly_backup_immutable, MonthlyBackupImmutable and ManualBackupImmutable must be true.
        /// </summary>
        [Input("manualBackupImmutable")]
        public Input<bool>? ManualBackupImmutable { get; set; }

        /// <summary>
        /// Indicates if the monthly backups are immutable. At least one of daily_backup_immutable, weekly_backup_immutable, MonthlyBackupImmutable and ManualBackupImmutable must be true.
        /// </summary>
        [Input("monthlyBackupImmutable")]
        public Input<bool>? MonthlyBackupImmutable { get; set; }

        /// <summary>
        /// Indicates if the weekly backups are immutable. At least one of daily_backup_immutable, weekly_backup_immutable, MonthlyBackupImmutable and ManualBackupImmutable must be true.
        /// </summary>
        [Input("weeklyBackupImmutable")]
        public Input<bool>? WeeklyBackupImmutable { get; set; }

        public BackupVaultBackupRetentionPolicyGetArgs()
        {
        }
        public static new BackupVaultBackupRetentionPolicyGetArgs Empty => new BackupVaultBackupRetentionPolicyGetArgs();
    }
}
