// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.CertificateManager.Outputs
{

    [OutputType]
    public sealed class CertificateSelfManaged
    {
        /// <summary>
        /// (Optional, Deprecated)
        /// The certificate chain in PEM-encoded form.
        /// Leaf certificate comes first, followed by intermediate ones if any.
        /// **Note**: This property is sensitive and will not be displayed in the plan.
        /// 
        /// &gt; **Warning:** `CertificatePem` is deprecated and will be removed in a future major release. Use `PemCertificate` instead.
        /// </summary>
        public readonly string? CertificatePem;
        /// <summary>
        /// The certificate chain in PEM-encoded form.
        /// Leaf certificate comes first, followed by intermediate ones if any.
        /// **Note**: This property is sensitive and will not be displayed in the plan.
        /// </summary>
        public readonly string? PemCertificate;
        /// <summary>
        /// The private key of the leaf certificate in PEM-encoded form.
        /// **Note**: This property is sensitive and will not be displayed in the plan.
        /// </summary>
        public readonly string? PemPrivateKey;
        /// <summary>
        /// (Optional, Deprecated)
        /// The private key of the leaf certificate in PEM-encoded form.
        /// **Note**: This property is sensitive and will not be displayed in the plan.
        /// 
        /// &gt; **Warning:** `PrivateKeyPem` is deprecated and will be removed in a future major release. Use `PemPrivateKey` instead.
        /// </summary>
        public readonly string? PrivateKeyPem;

        [OutputConstructor]
        private CertificateSelfManaged(
            string? certificatePem,

            string? pemCertificate,

            string? pemPrivateKey,

            string? privateKeyPem)
        {
            CertificatePem = certificatePem;
            PemCertificate = pemCertificate;
            PemPrivateKey = pemPrivateKey;
            PrivateKeyPem = privateKeyPem;
        }
    }
}
