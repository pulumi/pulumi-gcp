// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.CertificateManager.Inputs
{

    public sealed class TrustConfigTrustStoreIntermediateCaGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("pemCertificate")]
        private Input<string>? _pemCertificate;

        /// <summary>
        /// PEM intermediate certificate used for building up paths for validation.
        /// Each certificate provided in PEM format may occupy up to 5kB.
        /// **Note**: This property is sensitive and will not be displayed in the plan.
        /// </summary>
        public Input<string>? PemCertificate
        {
            get => _pemCertificate;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _pemCertificate = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public TrustConfigTrustStoreIntermediateCaGetArgs()
        {
        }
        public static new TrustConfigTrustStoreIntermediateCaGetArgs Empty => new TrustConfigTrustStoreIntermediateCaGetArgs();
    }
}
