// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.CertificateManager.Inputs
{

    public sealed class CertificateManagedAuthorizationAttemptInfoGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// (Output)
        /// Human readable explanation about the issue. Provided to help address
        /// the configuration issues.
        /// Not guaranteed to be stable. For programmatic access use `reason` field.
        /// 
        /// &lt;a name="nested_authorization_attempt_info"&gt;&lt;/a&gt;The `authorization_attempt_info` block contains:
        /// 
        /// (Output)
        /// Human readable explanation for reaching the state. Provided to help
        /// address the configuration issues.
        /// Not guaranteed to be stable. For programmatic access use `failure_reason` field.
        /// </summary>
        [Input("details")]
        public Input<string>? Details { get; set; }

        /// <summary>
        /// (Output)
        /// Domain name of the authorization attempt.
        /// </summary>
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        /// <summary>
        /// (Output)
        /// Reason for failure of the authorization attempt for the domain.
        /// </summary>
        [Input("failureReason")]
        public Input<string>? FailureReason { get; set; }

        /// <summary>
        /// (Output)
        /// A state of this Managed Certificate.
        /// 
        /// (Output)
        /// State of the domain for managed certificate issuance.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public CertificateManagedAuthorizationAttemptInfoGetArgs()
        {
        }
        public static new CertificateManagedAuthorizationAttemptInfoGetArgs Empty => new CertificateManagedAuthorizationAttemptInfoGetArgs();
    }
}
