// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.CertificateManager
{
    public static class GetCertificateMap
    {
        /// <summary>
        /// Get info about a Google Certificate Manager Certificate Map resource.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Gcp.CertificateManager.GetCertificateMap.Invoke(new()
        ///     {
        ///         Name = "cert-map",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetCertificateMapResult> InvokeAsync(GetCertificateMapArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCertificateMapResult>("gcp:certificatemanager/getCertificateMap:getCertificateMap", args ?? new GetCertificateMapArgs(), options.WithDefaults());

        /// <summary>
        /// Get info about a Google Certificate Manager Certificate Map resource.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Gcp.CertificateManager.GetCertificateMap.Invoke(new()
        ///     {
        ///         Name = "cert-map",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetCertificateMapResult> Invoke(GetCertificateMapInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCertificateMapResult>("gcp:certificatemanager/getCertificateMap:getCertificateMap", args ?? new GetCertificateMapInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCertificateMapArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the certificate map.
        /// 
        /// - - -
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        public GetCertificateMapArgs()
        {
        }
        public static new GetCertificateMapArgs Empty => new GetCertificateMapArgs();
    }

    public sealed class GetCertificateMapInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the certificate map.
        /// 
        /// - - -
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetCertificateMapInvokeArgs()
        {
        }
        public static new GetCertificateMapInvokeArgs Empty => new GetCertificateMapInvokeArgs();
    }


    [OutputType]
    public sealed class GetCertificateMapResult
    {
        public readonly string CreateTime;
        public readonly string Description;
        public readonly ImmutableArray<Outputs.GetCertificateMapGclbTargetResult> GclbTargets;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableDictionary<string, string> Labels;
        public readonly string Name;
        public readonly string? Project;
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetCertificateMapResult(
            string createTime,

            string description,

            ImmutableArray<Outputs.GetCertificateMapGclbTargetResult> gclbTargets,

            string id,

            ImmutableDictionary<string, string> labels,

            string name,

            string? project,

            string updateTime)
        {
            CreateTime = createTime;
            Description = description;
            GclbTargets = gclbTargets;
            Id = id;
            Labels = labels;
            Name = name;
            Project = project;
            UpdateTime = updateTime;
        }
    }
}
