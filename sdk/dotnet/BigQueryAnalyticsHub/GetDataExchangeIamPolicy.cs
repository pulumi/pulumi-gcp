// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.BigQueryAnalyticsHub
{
    public static class GetDataExchangeIamPolicy
    {
        /// <summary>
        /// Retrieves the current IAM policy data for dataexchange
        /// 
        /// 
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.BigQueryAnalyticsHub.GetDataExchangeIamPolicy.Invoke(new()
        ///     {
        ///         Project = google_bigquery_analytics_hub_data_exchange.Data_exchange.Project,
        ///         Location = google_bigquery_analytics_hub_data_exchange.Data_exchange.Location,
        ///         DataExchangeId = google_bigquery_analytics_hub_data_exchange.Data_exchange.Data_exchange_id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetDataExchangeIamPolicyResult> InvokeAsync(GetDataExchangeIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDataExchangeIamPolicyResult>("gcp:bigqueryanalyticshub/getDataExchangeIamPolicy:getDataExchangeIamPolicy", args ?? new GetDataExchangeIamPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the current IAM policy data for dataexchange
        /// 
        /// 
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.BigQueryAnalyticsHub.GetDataExchangeIamPolicy.Invoke(new()
        ///     {
        ///         Project = google_bigquery_analytics_hub_data_exchange.Data_exchange.Project,
        ///         Location = google_bigquery_analytics_hub_data_exchange.Data_exchange.Location,
        ///         DataExchangeId = google_bigquery_analytics_hub_data_exchange.Data_exchange.Data_exchange_id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetDataExchangeIamPolicyResult> Invoke(GetDataExchangeIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDataExchangeIamPolicyResult>("gcp:bigqueryanalyticshub/getDataExchangeIamPolicy:getDataExchangeIamPolicy", args ?? new GetDataExchangeIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDataExchangeIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the data exchange. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use characters that require URL-escaping, or characters outside of ASCII, spaces. Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("dataExchangeId", required: true)]
        public string DataExchangeId { get; set; } = null!;

        /// <summary>
        /// The name of the location this data exchange.
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("location")]
        public string? Location { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        public GetDataExchangeIamPolicyArgs()
        {
        }
        public static new GetDataExchangeIamPolicyArgs Empty => new GetDataExchangeIamPolicyArgs();
    }

    public sealed class GetDataExchangeIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the data exchange. Must contain only Unicode letters, numbers (0-9), underscores (_). Should not use characters that require URL-escaping, or characters outside of ASCII, spaces. Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("dataExchangeId", required: true)]
        public Input<string> DataExchangeId { get; set; } = null!;

        /// <summary>
        /// The name of the location this data exchange.
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetDataExchangeIamPolicyInvokeArgs()
        {
        }
        public static new GetDataExchangeIamPolicyInvokeArgs Empty => new GetDataExchangeIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetDataExchangeIamPolicyResult
    {
        public readonly string DataExchangeId;
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Location;
        /// <summary>
        /// (Required only by `gcp.bigqueryanalyticshub.DataExchangeIamPolicy`) The policy data generated by
        /// a `gcp.organizations.getIAMPolicy` data source.
        /// </summary>
        public readonly string PolicyData;
        public readonly string Project;

        [OutputConstructor]
        private GetDataExchangeIamPolicyResult(
            string dataExchangeId,

            string etag,

            string id,

            string location,

            string policyData,

            string project)
        {
            DataExchangeId = dataExchangeId;
            Etag = etag;
            Id = id;
            Location = location;
            PolicyData = policyData;
            Project = project;
        }
    }
}
