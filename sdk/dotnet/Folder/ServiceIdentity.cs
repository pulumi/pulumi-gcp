// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Folder
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ### Folder Service Identity Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var myFolder = new Gcp.Organizations.Folder("my_folder", new()
    ///     {
    ///         Parent = "organizations/1234567",
    ///         DisplayName = "my-folder",
    ///     });
    /// 
    ///     var osconfigSa = new Gcp.Folder.ServiceIdentity("osconfig_sa", new()
    ///     {
    ///         Folder = myFolder.FolderId,
    ///         Service = "osconfig.googleapis.com",
    ///     });
    /// 
    ///     var admin = new Gcp.Folder.IAMMember("admin", new()
    ///     {
    ///         Folder = myFolder.Name,
    ///         Role = "roles/osconfig.serviceAgent",
    ///         Member = osconfigSa.Member,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// This resource does not support import.
    /// </summary>
    [GcpResourceType("gcp:folder/serviceIdentity:ServiceIdentity")]
    public partial class ServiceIdentity : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The email address of the Google managed service account.
        /// </summary>
        [Output("email")]
        public Output<string> Email { get; private set; } = null!;

        /// <summary>
        /// The folder in which the resource belongs.
        /// </summary>
        [Output("folder")]
        public Output<string> Folder { get; private set; } = null!;

        /// <summary>
        /// The Identity of the Google managed service account in the form 'serviceAccount:{email}'. This value is often used to refer to the service account in order to grant IAM permissions.
        /// </summary>
        [Output("member")]
        public Output<string> Member { get; private set; } = null!;

        /// <summary>
        /// The service to generate identity for.
        /// 
        /// - - -
        /// </summary>
        [Output("service")]
        public Output<string> Service { get; private set; } = null!;


        /// <summary>
        /// Create a ServiceIdentity resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServiceIdentity(string name, ServiceIdentityArgs args, CustomResourceOptions? options = null)
            : base("gcp:folder/serviceIdentity:ServiceIdentity", name, args ?? new ServiceIdentityArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServiceIdentity(string name, Input<string> id, ServiceIdentityState? state = null, CustomResourceOptions? options = null)
            : base("gcp:folder/serviceIdentity:ServiceIdentity", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServiceIdentity resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServiceIdentity Get(string name, Input<string> id, ServiceIdentityState? state = null, CustomResourceOptions? options = null)
        {
            return new ServiceIdentity(name, id, state, options);
        }
    }

    public sealed class ServiceIdentityArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The folder in which the resource belongs.
        /// </summary>
        [Input("folder", required: true)]
        public Input<string> Folder { get; set; } = null!;

        /// <summary>
        /// The service to generate identity for.
        /// 
        /// - - -
        /// </summary>
        [Input("service", required: true)]
        public Input<string> Service { get; set; } = null!;

        public ServiceIdentityArgs()
        {
        }
        public static new ServiceIdentityArgs Empty => new ServiceIdentityArgs();
    }

    public sealed class ServiceIdentityState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The email address of the Google managed service account.
        /// </summary>
        [Input("email")]
        public Input<string>? Email { get; set; }

        /// <summary>
        /// The folder in which the resource belongs.
        /// </summary>
        [Input("folder")]
        public Input<string>? Folder { get; set; }

        /// <summary>
        /// The Identity of the Google managed service account in the form 'serviceAccount:{email}'. This value is often used to refer to the service account in order to grant IAM permissions.
        /// </summary>
        [Input("member")]
        public Input<string>? Member { get; set; }

        /// <summary>
        /// The service to generate identity for.
        /// 
        /// - - -
        /// </summary>
        [Input("service")]
        public Input<string>? Service { get; set; }

        public ServiceIdentityState()
        {
        }
        public static new ServiceIdentityState Empty => new ServiceIdentityState();
    }
}
