// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.IdentityPlatform
{
    /// <summary>
    /// Inbound SAML configuration for a Identity Toolkit tenant.
    /// 
    /// You must enable the
    /// [Google Identity Platform](https://console.cloud.google.com/marketplace/details/google-cloud-platform/customer-identity) in
    /// the marketplace prior to using this resource.
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/identity_platform_tenant_inbound_saml_config.html.markdown.
    /// </summary>
    public partial class TenantInboundSamlConfig : Pulumi.CustomResource
    {
        /// <summary>
        /// Human friendly display name.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// If this config allows users to sign in with the provider.
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// SAML IdP configuration when the project acts as the relying party
        /// </summary>
        [Output("idpConfig")]
        public Output<Outputs.TenantInboundSamlConfigIdpConfig> IdpConfig { get; private set; } = null!;

        /// <summary>
        /// The name of the InboundSamlConfig resource. Must start with 'saml.' and can only have alphanumeric
        /// characters, hyphens, underscores or periods. The part after 'saml.' must also start with a lowercase letter,
        /// end with an alphanumeric character, and have at least 2 characters.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// SAML SP (Service Provider) configuration when the project acts as the relying party to receive and accept an
        /// authentication assertion issued by a SAML identity provider.
        /// </summary>
        [Output("spConfig")]
        public Output<Outputs.TenantInboundSamlConfigSpConfig> SpConfig { get; private set; } = null!;

        /// <summary>
        /// The name of the tenant where this inbound SAML config resource exists
        /// </summary>
        [Output("tenant")]
        public Output<string> Tenant { get; private set; } = null!;


        /// <summary>
        /// Create a TenantInboundSamlConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TenantInboundSamlConfig(string name, TenantInboundSamlConfigArgs args, CustomResourceOptions? options = null)
            : base("gcp:identityplatform/tenantInboundSamlConfig:TenantInboundSamlConfig", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private TenantInboundSamlConfig(string name, Input<string> id, TenantInboundSamlConfigState? state = null, CustomResourceOptions? options = null)
            : base("gcp:identityplatform/tenantInboundSamlConfig:TenantInboundSamlConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TenantInboundSamlConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TenantInboundSamlConfig Get(string name, Input<string> id, TenantInboundSamlConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new TenantInboundSamlConfig(name, id, state, options);
        }
    }

    public sealed class TenantInboundSamlConfigArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Human friendly display name.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// If this config allows users to sign in with the provider.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// SAML IdP configuration when the project acts as the relying party
        /// </summary>
        [Input("idpConfig", required: true)]
        public Input<Inputs.TenantInboundSamlConfigIdpConfigArgs> IdpConfig { get; set; } = null!;

        /// <summary>
        /// The name of the InboundSamlConfig resource. Must start with 'saml.' and can only have alphanumeric
        /// characters, hyphens, underscores or periods. The part after 'saml.' must also start with a lowercase letter,
        /// end with an alphanumeric character, and have at least 2 characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// SAML SP (Service Provider) configuration when the project acts as the relying party to receive and accept an
        /// authentication assertion issued by a SAML identity provider.
        /// </summary>
        [Input("spConfig", required: true)]
        public Input<Inputs.TenantInboundSamlConfigSpConfigArgs> SpConfig { get; set; } = null!;

        /// <summary>
        /// The name of the tenant where this inbound SAML config resource exists
        /// </summary>
        [Input("tenant", required: true)]
        public Input<string> Tenant { get; set; } = null!;

        public TenantInboundSamlConfigArgs()
        {
        }
    }

    public sealed class TenantInboundSamlConfigState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Human friendly display name.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// If this config allows users to sign in with the provider.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// SAML IdP configuration when the project acts as the relying party
        /// </summary>
        [Input("idpConfig")]
        public Input<Inputs.TenantInboundSamlConfigIdpConfigGetArgs>? IdpConfig { get; set; }

        /// <summary>
        /// The name of the InboundSamlConfig resource. Must start with 'saml.' and can only have alphanumeric
        /// characters, hyphens, underscores or periods. The part after 'saml.' must also start with a lowercase letter,
        /// end with an alphanumeric character, and have at least 2 characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// SAML SP (Service Provider) configuration when the project acts as the relying party to receive and accept an
        /// authentication assertion issued by a SAML identity provider.
        /// </summary>
        [Input("spConfig")]
        public Input<Inputs.TenantInboundSamlConfigSpConfigGetArgs>? SpConfig { get; set; }

        /// <summary>
        /// The name of the tenant where this inbound SAML config resource exists
        /// </summary>
        [Input("tenant")]
        public Input<string>? Tenant { get; set; }

        public TenantInboundSamlConfigState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class TenantInboundSamlConfigIdpConfigArgs : Pulumi.ResourceArgs
    {
        [Input("idpCertificates", required: true)]
        private InputList<TenantInboundSamlConfigIdpConfigIdpCertificatesArgs>? _idpCertificates;
        public InputList<TenantInboundSamlConfigIdpConfigIdpCertificatesArgs> IdpCertificates
        {
            get => _idpCertificates ?? (_idpCertificates = new InputList<TenantInboundSamlConfigIdpConfigIdpCertificatesArgs>());
            set => _idpCertificates = value;
        }

        [Input("idpEntityId", required: true)]
        public Input<string> IdpEntityId { get; set; } = null!;

        [Input("signRequest")]
        public Input<bool>? SignRequest { get; set; }

        [Input("ssoUrl", required: true)]
        public Input<string> SsoUrl { get; set; } = null!;

        public TenantInboundSamlConfigIdpConfigArgs()
        {
        }
    }

    public sealed class TenantInboundSamlConfigIdpConfigGetArgs : Pulumi.ResourceArgs
    {
        [Input("idpCertificates", required: true)]
        private InputList<TenantInboundSamlConfigIdpConfigIdpCertificatesGetArgs>? _idpCertificates;
        public InputList<TenantInboundSamlConfigIdpConfigIdpCertificatesGetArgs> IdpCertificates
        {
            get => _idpCertificates ?? (_idpCertificates = new InputList<TenantInboundSamlConfigIdpConfigIdpCertificatesGetArgs>());
            set => _idpCertificates = value;
        }

        [Input("idpEntityId", required: true)]
        public Input<string> IdpEntityId { get; set; } = null!;

        [Input("signRequest")]
        public Input<bool>? SignRequest { get; set; }

        [Input("ssoUrl", required: true)]
        public Input<string> SsoUrl { get; set; } = null!;

        public TenantInboundSamlConfigIdpConfigGetArgs()
        {
        }
    }

    public sealed class TenantInboundSamlConfigIdpConfigIdpCertificatesArgs : Pulumi.ResourceArgs
    {
        [Input("x509Certificate")]
        public Input<string>? X509Certificate { get; set; }

        public TenantInboundSamlConfigIdpConfigIdpCertificatesArgs()
        {
        }
    }

    public sealed class TenantInboundSamlConfigIdpConfigIdpCertificatesGetArgs : Pulumi.ResourceArgs
    {
        [Input("x509Certificate")]
        public Input<string>? X509Certificate { get; set; }

        public TenantInboundSamlConfigIdpConfigIdpCertificatesGetArgs()
        {
        }
    }

    public sealed class TenantInboundSamlConfigSpConfigArgs : Pulumi.ResourceArgs
    {
        [Input("callbackUri", required: true)]
        public Input<string> CallbackUri { get; set; } = null!;

        [Input("spCertificates")]
        private InputList<TenantInboundSamlConfigSpConfigSpCertificatesArgs>? _spCertificates;
        public InputList<TenantInboundSamlConfigSpConfigSpCertificatesArgs> SpCertificates
        {
            get => _spCertificates ?? (_spCertificates = new InputList<TenantInboundSamlConfigSpConfigSpCertificatesArgs>());
            set => _spCertificates = value;
        }

        [Input("spEntityId", required: true)]
        public Input<string> SpEntityId { get; set; } = null!;

        public TenantInboundSamlConfigSpConfigArgs()
        {
        }
    }

    public sealed class TenantInboundSamlConfigSpConfigGetArgs : Pulumi.ResourceArgs
    {
        [Input("callbackUri", required: true)]
        public Input<string> CallbackUri { get; set; } = null!;

        [Input("spCertificates")]
        private InputList<TenantInboundSamlConfigSpConfigSpCertificatesGetArgs>? _spCertificates;
        public InputList<TenantInboundSamlConfigSpConfigSpCertificatesGetArgs> SpCertificates
        {
            get => _spCertificates ?? (_spCertificates = new InputList<TenantInboundSamlConfigSpConfigSpCertificatesGetArgs>());
            set => _spCertificates = value;
        }

        [Input("spEntityId", required: true)]
        public Input<string> SpEntityId { get; set; } = null!;

        public TenantInboundSamlConfigSpConfigGetArgs()
        {
        }
    }

    public sealed class TenantInboundSamlConfigSpConfigSpCertificatesArgs : Pulumi.ResourceArgs
    {
        [Input("x509Certificate")]
        public Input<string>? X509Certificate { get; set; }

        public TenantInboundSamlConfigSpConfigSpCertificatesArgs()
        {
        }
    }

    public sealed class TenantInboundSamlConfigSpConfigSpCertificatesGetArgs : Pulumi.ResourceArgs
    {
        [Input("x509Certificate")]
        public Input<string>? X509Certificate { get; set; }

        public TenantInboundSamlConfigSpConfigSpCertificatesGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class TenantInboundSamlConfigIdpConfig
    {
        public readonly ImmutableArray<TenantInboundSamlConfigIdpConfigIdpCertificates> IdpCertificates;
        public readonly string IdpEntityId;
        public readonly bool? SignRequest;
        public readonly string SsoUrl;

        [OutputConstructor]
        private TenantInboundSamlConfigIdpConfig(
            ImmutableArray<TenantInboundSamlConfigIdpConfigIdpCertificates> idpCertificates,
            string idpEntityId,
            bool? signRequest,
            string ssoUrl)
        {
            IdpCertificates = idpCertificates;
            IdpEntityId = idpEntityId;
            SignRequest = signRequest;
            SsoUrl = ssoUrl;
        }
    }

    [OutputType]
    public sealed class TenantInboundSamlConfigIdpConfigIdpCertificates
    {
        public readonly string? X509Certificate;

        [OutputConstructor]
        private TenantInboundSamlConfigIdpConfigIdpCertificates(string? x509Certificate)
        {
            X509Certificate = x509Certificate;
        }
    }

    [OutputType]
    public sealed class TenantInboundSamlConfigSpConfig
    {
        public readonly string CallbackUri;
        public readonly ImmutableArray<TenantInboundSamlConfigSpConfigSpCertificates> SpCertificates;
        public readonly string SpEntityId;

        [OutputConstructor]
        private TenantInboundSamlConfigSpConfig(
            string callbackUri,
            ImmutableArray<TenantInboundSamlConfigSpConfigSpCertificates> spCertificates,
            string spEntityId)
        {
            CallbackUri = callbackUri;
            SpCertificates = spCertificates;
            SpEntityId = spEntityId;
        }
    }

    [OutputType]
    public sealed class TenantInboundSamlConfigSpConfigSpCertificates
    {
        public readonly string X509Certificate;

        [OutputConstructor]
        private TenantInboundSamlConfigSpConfigSpCertificates(string x509Certificate)
        {
            X509Certificate = x509Certificate;
        }
    }
    }
}
