// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.AppEngine
{
    /// <summary>
    /// Standard App Version resource to create a new version of standard GAE Application.
    /// Currently supporting Zip and File Containers.
    /// Currently does not support async operation checking.
    /// 
    /// 
    /// To get more information about StandardAppVersion, see:
    /// 
    /// * [API documentation](https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions)
    /// * How-to Guides
    ///     * [Official Documentation](https://cloud.google.com/appengine/docs/standard)
    /// </summary>
    public partial class StandardAppVersion : Pulumi.CustomResource
    {
        /// <summary>
        /// If set to `true`, the service will be deleted if it is the last version.    
        /// </summary>
        [Output("deleteServiceOnDestroy")]
        public Output<bool?> DeleteServiceOnDestroy { get; private set; } = null!;

        /// <summary>
        /// Code and application artifacts that make up this version.  Structure is documented below.
        /// </summary>
        [Output("deployment")]
        public Output<Outputs.StandardAppVersionDeployment?> Deployment { get; private set; } = null!;

        /// <summary>
        /// The entrypoint for the application.  Structure is documented below.
        /// </summary>
        [Output("entrypoint")]
        public Output<Outputs.StandardAppVersionEntrypoint?> Entrypoint { get; private set; } = null!;

        /// <summary>
        /// Environment variables available to the application.
        /// </summary>
        [Output("envVariables")]
        public Output<ImmutableDictionary<string, string>?> EnvVariables { get; private set; } = null!;

        /// <summary>
        /// An ordered list of URL-matching patterns that should be applied to incoming requests.
        /// The first matching URL handles the request and other request handlers are not attempted.  Structure is documented below.
        /// </summary>
        [Output("handlers")]
        public Output<ImmutableArray<Outputs.StandardAppVersionHandler>> Handlers { get; private set; } = null!;

        /// <summary>
        /// Instance class that is used to run this version. Valid values are
        /// AutomaticScaling F1, F2, F4, F4_1G
        /// (Only AutomaticScaling is supported at the moment)
        /// </summary>
        [Output("instanceClass")]
        public Output<string?> InstanceClass { get; private set; } = null!;

        /// <summary>
        /// Configuration for third-party Python runtime libraries that are required by the application.  Structure is documented below.
        /// </summary>
        [Output("libraries")]
        public Output<ImmutableArray<Outputs.StandardAppVersionLibrary>> Libraries { get; private set; } = null!;

        /// <summary>
        /// The identifier for this object. Format specified above.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// If set to `true`, the application version will not be deleted.
        /// </summary>
        [Output("noopOnDestroy")]
        public Output<bool?> NoopOnDestroy { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Desired runtime. Example python27.
        /// </summary>
        [Output("runtime")]
        public Output<string> Runtime { get; private set; } = null!;

        /// <summary>
        /// The version of the API in the given runtime environment.
        /// Please see the app.yaml reference for valid values at https://cloud.google.com/appengine/docs/standard//config/appref
        /// </summary>
        [Output("runtimeApiVersion")]
        public Output<string?> RuntimeApiVersion { get; private set; } = null!;

        /// <summary>
        /// AppEngine service resource
        /// </summary>
        [Output("service")]
        public Output<string?> Service { get; private set; } = null!;

        /// <summary>
        /// Whether multiple requests can be dispatched to this version at once.
        /// </summary>
        [Output("threadsafe")]
        public Output<bool?> Threadsafe { get; private set; } = null!;

        /// <summary>
        /// Relative name of the version within the service. For example, `v1`. Version names can contain only lowercase letters, numbers, or hyphens. Reserved names,"default", "latest", and any name with the prefix "ah-".
        /// </summary>
        [Output("versionId")]
        public Output<string?> VersionId { get; private set; } = null!;


        /// <summary>
        /// Create a StandardAppVersion resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public StandardAppVersion(string name, StandardAppVersionArgs args, CustomResourceOptions? options = null)
            : base("gcp:appengine/standardAppVersion:StandardAppVersion", name, args ?? new StandardAppVersionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private StandardAppVersion(string name, Input<string> id, StandardAppVersionState? state = null, CustomResourceOptions? options = null)
            : base("gcp:appengine/standardAppVersion:StandardAppVersion", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing StandardAppVersion resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static StandardAppVersion Get(string name, Input<string> id, StandardAppVersionState? state = null, CustomResourceOptions? options = null)
        {
            return new StandardAppVersion(name, id, state, options);
        }
    }

    public sealed class StandardAppVersionArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If set to `true`, the service will be deleted if it is the last version.    
        /// </summary>
        [Input("deleteServiceOnDestroy")]
        public Input<bool>? DeleteServiceOnDestroy { get; set; }

        /// <summary>
        /// Code and application artifacts that make up this version.  Structure is documented below.
        /// </summary>
        [Input("deployment")]
        public Input<Inputs.StandardAppVersionDeploymentArgs>? Deployment { get; set; }

        /// <summary>
        /// The entrypoint for the application.  Structure is documented below.
        /// </summary>
        [Input("entrypoint")]
        public Input<Inputs.StandardAppVersionEntrypointArgs>? Entrypoint { get; set; }

        [Input("envVariables")]
        private InputMap<string>? _envVariables;

        /// <summary>
        /// Environment variables available to the application.
        /// </summary>
        public InputMap<string> EnvVariables
        {
            get => _envVariables ?? (_envVariables = new InputMap<string>());
            set => _envVariables = value;
        }

        [Input("handlers")]
        private InputList<Inputs.StandardAppVersionHandlerArgs>? _handlers;

        /// <summary>
        /// An ordered list of URL-matching patterns that should be applied to incoming requests.
        /// The first matching URL handles the request and other request handlers are not attempted.  Structure is documented below.
        /// </summary>
        public InputList<Inputs.StandardAppVersionHandlerArgs> Handlers
        {
            get => _handlers ?? (_handlers = new InputList<Inputs.StandardAppVersionHandlerArgs>());
            set => _handlers = value;
        }

        /// <summary>
        /// Instance class that is used to run this version. Valid values are
        /// AutomaticScaling F1, F2, F4, F4_1G
        /// (Only AutomaticScaling is supported at the moment)
        /// </summary>
        [Input("instanceClass")]
        public Input<string>? InstanceClass { get; set; }

        [Input("libraries")]
        private InputList<Inputs.StandardAppVersionLibraryArgs>? _libraries;

        /// <summary>
        /// Configuration for third-party Python runtime libraries that are required by the application.  Structure is documented below.
        /// </summary>
        public InputList<Inputs.StandardAppVersionLibraryArgs> Libraries
        {
            get => _libraries ?? (_libraries = new InputList<Inputs.StandardAppVersionLibraryArgs>());
            set => _libraries = value;
        }

        /// <summary>
        /// If set to `true`, the application version will not be deleted.
        /// </summary>
        [Input("noopOnDestroy")]
        public Input<bool>? NoopOnDestroy { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Desired runtime. Example python27.
        /// </summary>
        [Input("runtime", required: true)]
        public Input<string> Runtime { get; set; } = null!;

        /// <summary>
        /// The version of the API in the given runtime environment.
        /// Please see the app.yaml reference for valid values at https://cloud.google.com/appengine/docs/standard//config/appref
        /// </summary>
        [Input("runtimeApiVersion")]
        public Input<string>? RuntimeApiVersion { get; set; }

        /// <summary>
        /// AppEngine service resource
        /// </summary>
        [Input("service")]
        public Input<string>? Service { get; set; }

        /// <summary>
        /// Whether multiple requests can be dispatched to this version at once.
        /// </summary>
        [Input("threadsafe")]
        public Input<bool>? Threadsafe { get; set; }

        /// <summary>
        /// Relative name of the version within the service. For example, `v1`. Version names can contain only lowercase letters, numbers, or hyphens. Reserved names,"default", "latest", and any name with the prefix "ah-".
        /// </summary>
        [Input("versionId")]
        public Input<string>? VersionId { get; set; }

        public StandardAppVersionArgs()
        {
        }
    }

    public sealed class StandardAppVersionState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// If set to `true`, the service will be deleted if it is the last version.    
        /// </summary>
        [Input("deleteServiceOnDestroy")]
        public Input<bool>? DeleteServiceOnDestroy { get; set; }

        /// <summary>
        /// Code and application artifacts that make up this version.  Structure is documented below.
        /// </summary>
        [Input("deployment")]
        public Input<Inputs.StandardAppVersionDeploymentGetArgs>? Deployment { get; set; }

        /// <summary>
        /// The entrypoint for the application.  Structure is documented below.
        /// </summary>
        [Input("entrypoint")]
        public Input<Inputs.StandardAppVersionEntrypointGetArgs>? Entrypoint { get; set; }

        [Input("envVariables")]
        private InputMap<string>? _envVariables;

        /// <summary>
        /// Environment variables available to the application.
        /// </summary>
        public InputMap<string> EnvVariables
        {
            get => _envVariables ?? (_envVariables = new InputMap<string>());
            set => _envVariables = value;
        }

        [Input("handlers")]
        private InputList<Inputs.StandardAppVersionHandlerGetArgs>? _handlers;

        /// <summary>
        /// An ordered list of URL-matching patterns that should be applied to incoming requests.
        /// The first matching URL handles the request and other request handlers are not attempted.  Structure is documented below.
        /// </summary>
        public InputList<Inputs.StandardAppVersionHandlerGetArgs> Handlers
        {
            get => _handlers ?? (_handlers = new InputList<Inputs.StandardAppVersionHandlerGetArgs>());
            set => _handlers = value;
        }

        /// <summary>
        /// Instance class that is used to run this version. Valid values are
        /// AutomaticScaling F1, F2, F4, F4_1G
        /// (Only AutomaticScaling is supported at the moment)
        /// </summary>
        [Input("instanceClass")]
        public Input<string>? InstanceClass { get; set; }

        [Input("libraries")]
        private InputList<Inputs.StandardAppVersionLibraryGetArgs>? _libraries;

        /// <summary>
        /// Configuration for third-party Python runtime libraries that are required by the application.  Structure is documented below.
        /// </summary>
        public InputList<Inputs.StandardAppVersionLibraryGetArgs> Libraries
        {
            get => _libraries ?? (_libraries = new InputList<Inputs.StandardAppVersionLibraryGetArgs>());
            set => _libraries = value;
        }

        /// <summary>
        /// The identifier for this object. Format specified above.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// If set to `true`, the application version will not be deleted.
        /// </summary>
        [Input("noopOnDestroy")]
        public Input<bool>? NoopOnDestroy { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Desired runtime. Example python27.
        /// </summary>
        [Input("runtime")]
        public Input<string>? Runtime { get; set; }

        /// <summary>
        /// The version of the API in the given runtime environment.
        /// Please see the app.yaml reference for valid values at https://cloud.google.com/appengine/docs/standard//config/appref
        /// </summary>
        [Input("runtimeApiVersion")]
        public Input<string>? RuntimeApiVersion { get; set; }

        /// <summary>
        /// AppEngine service resource
        /// </summary>
        [Input("service")]
        public Input<string>? Service { get; set; }

        /// <summary>
        /// Whether multiple requests can be dispatched to this version at once.
        /// </summary>
        [Input("threadsafe")]
        public Input<bool>? Threadsafe { get; set; }

        /// <summary>
        /// Relative name of the version within the service. For example, `v1`. Version names can contain only lowercase letters, numbers, or hyphens. Reserved names,"default", "latest", and any name with the prefix "ah-".
        /// </summary>
        [Input("versionId")]
        public Input<string>? VersionId { get; set; }

        public StandardAppVersionState()
        {
        }
    }
}
