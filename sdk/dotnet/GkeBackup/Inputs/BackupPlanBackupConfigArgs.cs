// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.GkeBackup.Inputs
{

    public sealed class BackupPlanBackupConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// If True, include all namespaced resources.
        /// </summary>
        [Input("allNamespaces")]
        public Input<bool>? AllNamespaces { get; set; }

        /// <summary>
        /// This defines a customer managed encryption key that will be used to encrypt the "config"
        /// portion (the Kubernetes resources) of Backups created via this plan.
        /// Structure is documented below.
        /// </summary>
        [Input("encryptionKey")]
        public Input<Inputs.BackupPlanBackupConfigEncryptionKeyArgs>? EncryptionKey { get; set; }

        /// <summary>
        /// This flag specifies whether Kubernetes Secret resources should be included
        /// when they fall into the scope of Backups.
        /// </summary>
        [Input("includeSecrets")]
        public Input<bool>? IncludeSecrets { get; set; }

        /// <summary>
        /// This flag specifies whether volume data should be backed up when PVCs are
        /// included in the scope of a Backup.
        /// </summary>
        [Input("includeVolumeData")]
        public Input<bool>? IncludeVolumeData { get; set; }

        /// <summary>
        /// A list of namespaced Kubernetes Resources.
        /// Structure is documented below.
        /// </summary>
        [Input("selectedApplications")]
        public Input<Inputs.BackupPlanBackupConfigSelectedApplicationsArgs>? SelectedApplications { get; set; }

        /// <summary>
        /// If set, include just the resources in the listed namespaces.
        /// Structure is documented below.
        /// </summary>
        [Input("selectedNamespaces")]
        public Input<Inputs.BackupPlanBackupConfigSelectedNamespacesArgs>? SelectedNamespaces { get; set; }

        public BackupPlanBackupConfigArgs()
        {
        }
        public static new BackupPlanBackupConfigArgs Empty => new BackupPlanBackupConfigArgs();
    }
}
