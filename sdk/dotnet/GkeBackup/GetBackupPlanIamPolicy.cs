// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.GkeBackup
{
    public static class GetBackupPlanIamPolicy
    {
        /// <summary>
        /// Retrieves the current IAM policy data for backupplan
        /// 
        /// 
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.GkeBackup.GetBackupPlanIamPolicy.Invoke(new()
        ///     {
        ///         Project = google_gke_backup_backup_plan.Basic.Project,
        ///         Location = google_gke_backup_backup_plan.Basic.Location,
        ///         Name = google_gke_backup_backup_plan.Basic.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetBackupPlanIamPolicyResult> InvokeAsync(GetBackupPlanIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBackupPlanIamPolicyResult>("gcp:gkebackup/getBackupPlanIamPolicy:getBackupPlanIamPolicy", args ?? new GetBackupPlanIamPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the current IAM policy data for backupplan
        /// 
        /// 
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.GkeBackup.GetBackupPlanIamPolicy.Invoke(new()
        ///     {
        ///         Project = google_gke_backup_backup_plan.Basic.Project,
        ///         Location = google_gke_backup_backup_plan.Basic.Location,
        ///         Name = google_gke_backup_backup_plan.Basic.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetBackupPlanIamPolicyResult> Invoke(GetBackupPlanIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBackupPlanIamPolicyResult>("gcp:gkebackup/getBackupPlanIamPolicy:getBackupPlanIamPolicy", args ?? new GetBackupPlanIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBackupPlanIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The region of the Backup Plan.
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("location")]
        public string? Location { get; set; }

        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        public GetBackupPlanIamPolicyArgs()
        {
        }
        public static new GetBackupPlanIamPolicyArgs Empty => new GetBackupPlanIamPolicyArgs();
    }

    public sealed class GetBackupPlanIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The region of the Backup Plan.
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetBackupPlanIamPolicyInvokeArgs()
        {
        }
        public static new GetBackupPlanIamPolicyInvokeArgs Empty => new GetBackupPlanIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetBackupPlanIamPolicyResult
    {
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Location;
        public readonly string Name;
        /// <summary>
        /// (Required only by `gcp.gkebackup.BackupPlanIamPolicy`) The policy data generated by
        /// a `gcp.organizations.getIAMPolicy` data source.
        /// </summary>
        public readonly string PolicyData;
        public readonly string Project;

        [OutputConstructor]
        private GetBackupPlanIamPolicyResult(
            string etag,

            string id,

            string location,

            string name,

            string policyData,

            string project)
        {
            Etag = etag;
            Id = id;
            Location = location;
            Name = name;
            PolicyData = policyData;
            Project = project;
        }
    }
}
