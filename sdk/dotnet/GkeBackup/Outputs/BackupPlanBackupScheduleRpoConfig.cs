// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.GkeBackup.Outputs
{

    [OutputType]
    public sealed class BackupPlanBackupScheduleRpoConfig
    {
        /// <summary>
        /// User specified time windows during which backup can NOT happen for this BackupPlan.
        /// Backups should start and finish outside of any given exclusion window. Note: backup
        /// jobs will be scheduled to start and finish outside the duration of the window as
        /// much as possible, but running jobs will not get canceled when it runs into the window.
        /// All the time and date values in exclusionWindows entry in the API are in UTC. We
        /// only allow &lt;=1 recurrence (daily or weekly) exclusion window for a BackupPlan while no
        /// restriction on number of single occurrence windows.
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.BackupPlanBackupScheduleRpoConfigExclusionWindow> ExclusionWindows;
        /// <summary>
        /// Defines the target RPO for the BackupPlan in minutes, which means the target
        /// maximum data loss in time that is acceptable for this BackupPlan. This must be
        /// at least 60, i.e., 1 hour, and at most 86400, i.e., 60 days.
        /// </summary>
        public readonly int TargetRpoMinutes;

        [OutputConstructor]
        private BackupPlanBackupScheduleRpoConfig(
            ImmutableArray<Outputs.BackupPlanBackupScheduleRpoConfigExclusionWindow> exclusionWindows,

            int targetRpoMinutes)
        {
            ExclusionWindows = exclusionWindows;
            TargetRpoMinutes = targetRpoMinutes;
        }
    }
}
