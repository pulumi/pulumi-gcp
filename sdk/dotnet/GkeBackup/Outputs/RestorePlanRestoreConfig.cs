// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.GkeBackup.Outputs
{

    [OutputType]
    public sealed class RestorePlanRestoreConfig
    {
        /// <summary>
        /// If True, restore all namespaced resources in the Backup.
        /// Setting this field to False will result in an error.
        /// </summary>
        public readonly bool? AllNamespaces;
        /// <summary>
        /// Defines the behavior for handling the situation where cluster-scoped resources
        /// being restored already exist in the target cluster.
        /// This MUST be set to a value other than `CLUSTER_RESOURCE_CONFLICT_POLICY_UNSPECIFIED`
        /// if `clusterResourceRestoreScope` is anyting other than `noGroupKinds`.
        /// See https://cloud.google.com/kubernetes-engine/docs/add-on/backup-for-gke/reference/rest/v1/RestoreConfig#clusterresourceconflictpolicy
        /// for more information on each policy option.
        /// Possible values are: `USE_EXISTING_VERSION`, `USE_BACKUP_VERSION`.
        /// </summary>
        public readonly string? ClusterResourceConflictPolicy;
        /// <summary>
        /// Identifies the cluster-scoped resources to restore from the Backup.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.RestorePlanRestoreConfigClusterResourceRestoreScope? ClusterResourceRestoreScope;
        /// <summary>
        /// A list of selected namespaces excluded from restoration.
        /// All namespaces except those in this list will be restored.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.RestorePlanRestoreConfigExcludedNamespaces? ExcludedNamespaces;
        /// <summary>
        /// Defines the behavior for handling the situation where sets of namespaced resources
        /// being restored already exist in the target cluster.
        /// This MUST be set to a value other than `NAMESPACED_RESOURCE_RESTORE_MODE_UNSPECIFIED`
        /// if the `namespacedResourceRestoreScope` is anything other than `noNamespaces`.
        /// See https://cloud.google.com/kubernetes-engine/docs/add-on/backup-for-gke/reference/rest/v1/RestoreConfig#namespacedresourcerestoremode
        /// for more information on each mode.
        /// Possible values are: `DELETE_AND_RESTORE`, `FAIL_ON_CONFLICT`.
        /// </summary>
        public readonly string? NamespacedResourceRestoreMode;
        /// <summary>
        /// Do not restore any namespaced resources if set to "True".
        /// Specifying this field to "False" is not allowed.
        /// </summary>
        public readonly bool? NoNamespaces;
        /// <summary>
        /// A list of selected ProtectedApplications to restore.
        /// The listed ProtectedApplications and all the resources
        /// to which they refer will be restored.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.RestorePlanRestoreConfigSelectedApplications? SelectedApplications;
        /// <summary>
        /// A list of selected namespaces to restore from the Backup.
        /// The listed Namespaces and all resources contained in them will be restored.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.RestorePlanRestoreConfigSelectedNamespaces? SelectedNamespaces;
        /// <summary>
        /// A list of transformation rules to be applied against Kubernetes
        /// resources as they are selected for restoration from a Backup.
        /// Rules are executed in order defined - this order matters,
        /// as changes made by a rule may impact the filtering logic of subsequent
        /// rules. An empty list means no transformation will occur.
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.RestorePlanRestoreConfigTransformationRule> TransformationRules;
        /// <summary>
        /// Specifies the mechanism to be used to restore volume data.
        /// This should be set to a value other than `NAMESPACED_RESOURCE_RESTORE_MODE_UNSPECIFIED`
        /// if the `namespacedResourceRestoreScope` is anything other than `noNamespaces`.
        /// If not specified, it will be treated as `NO_VOLUME_DATA_RESTORATION`.
        /// See https://cloud.google.com/kubernetes-engine/docs/add-on/backup-for-gke/reference/rest/v1/RestoreConfig#VolumeDataRestorePolicy
        /// for more information on each policy option.
        /// Possible values are: `RESTORE_VOLUME_DATA_FROM_BACKUP`, `REUSE_VOLUME_HANDLE_FROM_BACKUP`, `NO_VOLUME_DATA_RESTORATION`.
        /// </summary>
        public readonly string? VolumeDataRestorePolicy;

        [OutputConstructor]
        private RestorePlanRestoreConfig(
            bool? allNamespaces,

            string? clusterResourceConflictPolicy,

            Outputs.RestorePlanRestoreConfigClusterResourceRestoreScope? clusterResourceRestoreScope,

            Outputs.RestorePlanRestoreConfigExcludedNamespaces? excludedNamespaces,

            string? namespacedResourceRestoreMode,

            bool? noNamespaces,

            Outputs.RestorePlanRestoreConfigSelectedApplications? selectedApplications,

            Outputs.RestorePlanRestoreConfigSelectedNamespaces? selectedNamespaces,

            ImmutableArray<Outputs.RestorePlanRestoreConfigTransformationRule> transformationRules,

            string? volumeDataRestorePolicy)
        {
            AllNamespaces = allNamespaces;
            ClusterResourceConflictPolicy = clusterResourceConflictPolicy;
            ClusterResourceRestoreScope = clusterResourceRestoreScope;
            ExcludedNamespaces = excludedNamespaces;
            NamespacedResourceRestoreMode = namespacedResourceRestoreMode;
            NoNamespaces = noNamespaces;
            SelectedApplications = selectedApplications;
            SelectedNamespaces = selectedNamespaces;
            TransformationRules = transformationRules;
            VolumeDataRestorePolicy = volumeDataRestorePolicy;
        }
    }
}
