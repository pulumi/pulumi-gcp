// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.DeveloperConnect.Outputs
{

    [OutputType]
    public sealed class ConnectionGitlabEnterpriseConfig
    {
        /// <summary>
        /// Represents a personal access token that authorized the Connection,
        /// and associated metadata.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.ConnectionGitlabEnterpriseConfigAuthorizerCredential AuthorizerCredential;
        /// <summary>
        /// Required. The URI of the GitLab Enterprise host this connection is for.
        /// </summary>
        public readonly string HostUri;
        /// <summary>
        /// Represents a personal access token that authorized the Connection,
        /// and associated metadata.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.ConnectionGitlabEnterpriseConfigReadAuthorizerCredential ReadAuthorizerCredential;
        /// <summary>
        /// (Output)
        /// Output only. Version of the GitLab Enterprise server running on the `HostUri`.
        /// </summary>
        public readonly string? ServerVersion;
        /// <summary>
        /// ServiceDirectoryConfig represents Service Directory configuration for a
        /// connection.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.ConnectionGitlabEnterpriseConfigServiceDirectoryConfig? ServiceDirectoryConfig;
        /// <summary>
        /// Optional. SSL Certificate Authority certificate to use for requests to GitLab
        /// Enterprise instance.
        /// </summary>
        public readonly string? SslCaCertificate;
        /// <summary>
        /// Required. Immutable. SecretManager resource containing the webhook secret of a GitLab project,
        /// formatted as `projects/*/secrets/*/versions/*`. This is used to validate
        /// webhooks.
        /// </summary>
        public readonly string WebhookSecretSecretVersion;

        [OutputConstructor]
        private ConnectionGitlabEnterpriseConfig(
            Outputs.ConnectionGitlabEnterpriseConfigAuthorizerCredential authorizerCredential,

            string hostUri,

            Outputs.ConnectionGitlabEnterpriseConfigReadAuthorizerCredential readAuthorizerCredential,

            string? serverVersion,

            Outputs.ConnectionGitlabEnterpriseConfigServiceDirectoryConfig? serviceDirectoryConfig,

            string? sslCaCertificate,

            string webhookSecretSecretVersion)
        {
            AuthorizerCredential = authorizerCredential;
            HostUri = hostUri;
            ReadAuthorizerCredential = readAuthorizerCredential;
            ServerVersion = serverVersion;
            ServiceDirectoryConfig = serviceDirectoryConfig;
            SslCaCertificate = sslCaCertificate;
            WebhookSecretSecretVersion = webhookSecretSecretVersion;
        }
    }
}
