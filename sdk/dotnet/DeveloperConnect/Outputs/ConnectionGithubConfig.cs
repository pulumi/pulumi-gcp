// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.DeveloperConnect.Outputs
{

    [OutputType]
    public sealed class ConnectionGithubConfig
    {
        /// <summary>
        /// Optional. GitHub App installation id.
        /// </summary>
        public readonly string? AppInstallationId;
        /// <summary>
        /// Represents an OAuth token of the account that authorized the Connection,
        /// and associated metadata.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.ConnectionGithubConfigAuthorizerCredential? AuthorizerCredential;
        /// <summary>
        /// Required. Immutable. The GitHub Application that was installed to the GitHub user or
        /// organization.
        /// Possible values:
        /// GIT_HUB_APP_UNSPECIFIED
        /// DEVELOPER_CONNECT
        /// FIREBASE
        /// </summary>
        public readonly string GithubApp;
        /// <summary>
        /// (Output)
        /// Output only. The URI to navigate to in order to manage the installation associated
        /// with this GitHubConfig.
        /// </summary>
        public readonly string? InstallationUri;

        [OutputConstructor]
        private ConnectionGithubConfig(
            string? appInstallationId,

            Outputs.ConnectionGithubConfigAuthorizerCredential? authorizerCredential,

            string githubApp,

            string? installationUri)
        {
            AppInstallationId = appInstallationId;
            AuthorizerCredential = authorizerCredential;
            GithubApp = githubApp;
            InstallationUri = installationUri;
        }
    }
}
