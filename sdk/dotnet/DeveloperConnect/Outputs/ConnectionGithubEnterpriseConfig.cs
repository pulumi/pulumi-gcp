// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.DeveloperConnect.Outputs
{

    [OutputType]
    public sealed class ConnectionGithubEnterpriseConfig
    {
        /// <summary>
        /// Optional. ID of the GitHub App created from the manifest.
        /// </summary>
        public readonly string? AppId;
        /// <summary>
        /// Optional. ID of the installation of the GitHub App.
        /// </summary>
        public readonly string? AppInstallationId;
        /// <summary>
        /// (Output)
        /// Output only. The URL-friendly name of the GitHub App.
        /// </summary>
        public readonly string? AppSlug;
        /// <summary>
        /// Required. The URI of the GitHub Enterprise host this connection is for.
        /// </summary>
        public readonly string HostUri;
        /// <summary>
        /// (Output)
        /// Output only. The URI to navigate to in order to manage the installation associated
        /// with this GitHubEnterpriseConfig.
        /// </summary>
        public readonly string? InstallationUri;
        /// <summary>
        /// Optional. SecretManager resource containing the private key of the GitHub App,
        /// formatted as `projects/*/secrets/*/versions/*`.
        /// </summary>
        public readonly string? PrivateKeySecretVersion;
        /// <summary>
        /// (Output)
        /// Output only. GitHub Enterprise version installed at the host_uri.
        /// </summary>
        public readonly string? ServerVersion;
        /// <summary>
        /// ServiceDirectoryConfig represents Service Directory configuration for a
        /// connection.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.ConnectionGithubEnterpriseConfigServiceDirectoryConfig? ServiceDirectoryConfig;
        /// <summary>
        /// Optional. SSL certificate to use for requests to GitHub Enterprise.
        /// </summary>
        public readonly string? SslCaCertificate;
        /// <summary>
        /// Optional. SecretManager resource containing the webhook secret of the GitHub App,
        /// formatted as `projects/*/secrets/*/versions/*`.
        /// </summary>
        public readonly string? WebhookSecretSecretVersion;

        [OutputConstructor]
        private ConnectionGithubEnterpriseConfig(
            string? appId,

            string? appInstallationId,

            string? appSlug,

            string hostUri,

            string? installationUri,

            string? privateKeySecretVersion,

            string? serverVersion,

            Outputs.ConnectionGithubEnterpriseConfigServiceDirectoryConfig? serviceDirectoryConfig,

            string? sslCaCertificate,

            string? webhookSecretSecretVersion)
        {
            AppId = appId;
            AppInstallationId = appInstallationId;
            AppSlug = appSlug;
            HostUri = hostUri;
            InstallationUri = installationUri;
            PrivateKeySecretVersion = privateKeySecretVersion;
            ServerVersion = serverVersion;
            ServiceDirectoryConfig = serviceDirectoryConfig;
            SslCaCertificate = sslCaCertificate;
            WebhookSecretSecretVersion = webhookSecretSecretVersion;
        }
    }
}
