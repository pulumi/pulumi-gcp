// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.DeveloperConnect
{
    /// <summary>
    /// Description
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// InsightsConfig can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/locations/{{location}}/insightsConfigs/{{insights_config_id}}`
    /// 
    /// * `{{project}}/{{location}}/{{insights_config_id}}`
    /// 
    /// * `{{location}}/{{insights_config_id}}`
    /// 
    /// When using the `pulumi import` command, InsightsConfig can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:developerconnect/insightsConfig:InsightsConfig default projects/{{project}}/locations/{{location}}/insightsConfigs/{{insights_config_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:developerconnect/insightsConfig:InsightsConfig default {{project}}/{{location}}/{{insights_config_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:developerconnect/insightsConfig:InsightsConfig default {{location}}/{{insights_config_id}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:developerconnect/insightsConfig:InsightsConfig")]
    public partial class InsightsConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// User specified annotations. See https://google.aip.dev/148#annotations
        /// for more details such as format and size limitations.
        /// **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
        /// Please refer to the field `EffectiveAnnotations` for all of the annotations present on the resource.
        /// </summary>
        [Output("annotations")]
        public Output<ImmutableDictionary<string, string>?> Annotations { get; private set; } = null!;

        /// <summary>
        /// The name of the App Hub Application.
        /// Format:
        /// projects/{project}/locations/{location}/applications/{application}
        /// </summary>
        [Output("appHubApplication")]
        public Output<string> AppHubApplication { get; private set; } = null!;

        /// <summary>
        /// The artifact configurations of the artifacts that are deployed.
        /// Structure is documented below.
        /// </summary>
        [Output("artifactConfigs")]
        public Output<ImmutableArray<Outputs.InsightsConfigArtifactConfig>> ArtifactConfigs { get; private set; } = null!;

        /// <summary>
        /// [Output only] Create timestamp
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        [Output("effectiveAnnotations")]
        public Output<ImmutableDictionary<string, string>> EffectiveAnnotations { get; private set; } = null!;

        /// <summary>
        /// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
        /// </summary>
        [Output("effectiveLabels")]
        public Output<ImmutableDictionary<string, string>> EffectiveLabels { get; private set; } = null!;

        /// <summary>
        /// Any errors that occurred while setting up the InsightsConfig.
        /// Each error will be in the format: `field_name: ErrorMessage`, e.g.
        /// GetAppHubApplication: Permission denied while getting App Hub
        /// application. Please grant permissions to the P4SA.
        /// Structure is documented below.
        /// </summary>
        [Output("errors")]
        public Output<ImmutableArray<Outputs.InsightsConfigError>> Errors { get; private set; } = null!;

        /// <summary>
        /// ID of the requesting InsightsConfig.
        /// </summary>
        [Output("insightsConfigId")]
        public Output<string> InsightsConfigId { get; private set; } = null!;

        /// <summary>
        /// Set of labels associated with an InsightsConfig.
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `EffectiveLabels` for all of the labels present on the resource.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// Resource ID segment making up resource `Name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Identifier. The name of the InsightsConfig.
        /// Format:
        /// projects/{project}/locations/{location}/insightsConfigs/{insightsConfig}
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The combination of labels configured directly on the resource
        /// and default labels configured on the provider.
        /// </summary>
        [Output("pulumiLabels")]
        public Output<ImmutableDictionary<string, string>> PulumiLabels { get; private set; } = null!;

        /// <summary>
        /// Reconciling (https://google.aip.dev/128#reconciliation).
        /// Set to true if the current state of InsightsConfig does not match the
        /// user's intended state, and the service is actively updating the resource to
        /// reconcile them. This can happen due to user-triggered updates or
        /// system actions like failover or maintenance.
        /// </summary>
        [Output("reconciling")]
        public Output<bool> Reconciling { get; private set; } = null!;

        /// <summary>
        /// The runtime configurations where the application is deployed.
        /// Structure is documented below.
        /// </summary>
        [Output("runtimeConfigs")]
        public Output<ImmutableArray<Outputs.InsightsConfigRuntimeConfig>> RuntimeConfigs { get; private set; } = null!;

        /// <summary>
        /// (Output)
        /// The state of the Runtime.
        /// Possible values:
        /// STATE_UNSPECIFIED
        /// LINKED
        /// UNLINKED
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// [Output only] Update timestamp
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a InsightsConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InsightsConfig(string name, InsightsConfigArgs args, CustomResourceOptions? options = null)
            : base("gcp:developerconnect/insightsConfig:InsightsConfig", name, args ?? new InsightsConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InsightsConfig(string name, Input<string> id, InsightsConfigState? state = null, CustomResourceOptions? options = null)
            : base("gcp:developerconnect/insightsConfig:InsightsConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "effectiveLabels",
                    "pulumiLabels",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InsightsConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InsightsConfig Get(string name, Input<string> id, InsightsConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new InsightsConfig(name, id, state, options);
        }
    }

    public sealed class InsightsConfigArgs : global::Pulumi.ResourceArgs
    {
        [Input("annotations")]
        private InputMap<string>? _annotations;

        /// <summary>
        /// User specified annotations. See https://google.aip.dev/148#annotations
        /// for more details such as format and size limitations.
        /// **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
        /// Please refer to the field `EffectiveAnnotations` for all of the annotations present on the resource.
        /// </summary>
        public InputMap<string> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<string>());
            set => _annotations = value;
        }

        /// <summary>
        /// The name of the App Hub Application.
        /// Format:
        /// projects/{project}/locations/{location}/applications/{application}
        /// </summary>
        [Input("appHubApplication", required: true)]
        public Input<string> AppHubApplication { get; set; } = null!;

        [Input("artifactConfigs")]
        private InputList<Inputs.InsightsConfigArtifactConfigArgs>? _artifactConfigs;

        /// <summary>
        /// The artifact configurations of the artifacts that are deployed.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.InsightsConfigArtifactConfigArgs> ArtifactConfigs
        {
            get => _artifactConfigs ?? (_artifactConfigs = new InputList<Inputs.InsightsConfigArtifactConfigArgs>());
            set => _artifactConfigs = value;
        }

        /// <summary>
        /// ID of the requesting InsightsConfig.
        /// </summary>
        [Input("insightsConfigId", required: true)]
        public Input<string> InsightsConfigId { get; set; } = null!;

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Set of labels associated with an InsightsConfig.
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `EffectiveLabels` for all of the labels present on the resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Resource ID segment making up resource `Name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public InsightsConfigArgs()
        {
        }
        public static new InsightsConfigArgs Empty => new InsightsConfigArgs();
    }

    public sealed class InsightsConfigState : global::Pulumi.ResourceArgs
    {
        [Input("annotations")]
        private InputMap<string>? _annotations;

        /// <summary>
        /// User specified annotations. See https://google.aip.dev/148#annotations
        /// for more details such as format and size limitations.
        /// **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
        /// Please refer to the field `EffectiveAnnotations` for all of the annotations present on the resource.
        /// </summary>
        public InputMap<string> Annotations
        {
            get => _annotations ?? (_annotations = new InputMap<string>());
            set => _annotations = value;
        }

        /// <summary>
        /// The name of the App Hub Application.
        /// Format:
        /// projects/{project}/locations/{location}/applications/{application}
        /// </summary>
        [Input("appHubApplication")]
        public Input<string>? AppHubApplication { get; set; }

        [Input("artifactConfigs")]
        private InputList<Inputs.InsightsConfigArtifactConfigGetArgs>? _artifactConfigs;

        /// <summary>
        /// The artifact configurations of the artifacts that are deployed.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.InsightsConfigArtifactConfigGetArgs> ArtifactConfigs
        {
            get => _artifactConfigs ?? (_artifactConfigs = new InputList<Inputs.InsightsConfigArtifactConfigGetArgs>());
            set => _artifactConfigs = value;
        }

        /// <summary>
        /// [Output only] Create timestamp
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        [Input("effectiveAnnotations")]
        private InputMap<string>? _effectiveAnnotations;
        public InputMap<string> EffectiveAnnotations
        {
            get => _effectiveAnnotations ?? (_effectiveAnnotations = new InputMap<string>());
            set => _effectiveAnnotations = value;
        }

        [Input("effectiveLabels")]
        private InputMap<string>? _effectiveLabels;

        /// <summary>
        /// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
        /// </summary>
        public InputMap<string> EffectiveLabels
        {
            get => _effectiveLabels ?? (_effectiveLabels = new InputMap<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableDictionary.Create<string, string>());
                _effectiveLabels = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        [Input("errors")]
        private InputList<Inputs.InsightsConfigErrorGetArgs>? _errors;

        /// <summary>
        /// Any errors that occurred while setting up the InsightsConfig.
        /// Each error will be in the format: `field_name: ErrorMessage`, e.g.
        /// GetAppHubApplication: Permission denied while getting App Hub
        /// application. Please grant permissions to the P4SA.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.InsightsConfigErrorGetArgs> Errors
        {
            get => _errors ?? (_errors = new InputList<Inputs.InsightsConfigErrorGetArgs>());
            set => _errors = value;
        }

        /// <summary>
        /// ID of the requesting InsightsConfig.
        /// </summary>
        [Input("insightsConfigId")]
        public Input<string>? InsightsConfigId { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Set of labels associated with an InsightsConfig.
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `EffectiveLabels` for all of the labels present on the resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Resource ID segment making up resource `Name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Identifier. The name of the InsightsConfig.
        /// Format:
        /// projects/{project}/locations/{location}/insightsConfigs/{insightsConfig}
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("pulumiLabels")]
        private InputMap<string>? _pulumiLabels;

        /// <summary>
        /// The combination of labels configured directly on the resource
        /// and default labels configured on the provider.
        /// </summary>
        public InputMap<string> PulumiLabels
        {
            get => _pulumiLabels ?? (_pulumiLabels = new InputMap<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableDictionary.Create<string, string>());
                _pulumiLabels = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        /// <summary>
        /// Reconciling (https://google.aip.dev/128#reconciliation).
        /// Set to true if the current state of InsightsConfig does not match the
        /// user's intended state, and the service is actively updating the resource to
        /// reconcile them. This can happen due to user-triggered updates or
        /// system actions like failover or maintenance.
        /// </summary>
        [Input("reconciling")]
        public Input<bool>? Reconciling { get; set; }

        [Input("runtimeConfigs")]
        private InputList<Inputs.InsightsConfigRuntimeConfigGetArgs>? _runtimeConfigs;

        /// <summary>
        /// The runtime configurations where the application is deployed.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.InsightsConfigRuntimeConfigGetArgs> RuntimeConfigs
        {
            get => _runtimeConfigs ?? (_runtimeConfigs = new InputList<Inputs.InsightsConfigRuntimeConfigGetArgs>());
            set => _runtimeConfigs = value;
        }

        /// <summary>
        /// (Output)
        /// The state of the Runtime.
        /// Possible values:
        /// STATE_UNSPECIFIED
        /// LINKED
        /// UNLINKED
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// [Output only] Update timestamp
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public InsightsConfigState()
        {
        }
        public static new InsightsConfigState Empty => new InsightsConfigState();
    }
}
