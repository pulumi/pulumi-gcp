// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.DeveloperConnect.Inputs
{

    public sealed class ConnectionGithubConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional. GitHub App installation id.
        /// </summary>
        [Input("appInstallationId")]
        public Input<string>? AppInstallationId { get; set; }

        /// <summary>
        /// Represents an OAuth token of the account that authorized the Connection,
        /// and associated metadata.
        /// Structure is documented below.
        /// </summary>
        [Input("authorizerCredential")]
        public Input<Inputs.ConnectionGithubConfigAuthorizerCredentialArgs>? AuthorizerCredential { get; set; }

        /// <summary>
        /// Required. Immutable. The GitHub Application that was installed to the GitHub user or
        /// organization.
        /// Possible values:
        /// GIT_HUB_APP_UNSPECIFIED
        /// DEVELOPER_CONNECT
        /// FIREBASE
        /// </summary>
        [Input("githubApp", required: true)]
        public Input<string> GithubApp { get; set; } = null!;

        /// <summary>
        /// (Output)
        /// Output only. The URI to navigate to in order to manage the installation associated
        /// with this GitHubConfig.
        /// </summary>
        [Input("installationUri")]
        public Input<string>? InstallationUri { get; set; }

        public ConnectionGithubConfigArgs()
        {
        }
        public static new ConnectionGithubConfigArgs Empty => new ConnectionGithubConfigArgs();
    }
}
