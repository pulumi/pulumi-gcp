// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.DeveloperConnect.Inputs
{

    public sealed class ConnectionBitbucketCloudConfigGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Represents a personal access token that authorized the Connection,
        /// and associated metadata.
        /// Structure is documented below.
        /// </summary>
        [Input("authorizerCredential", required: true)]
        public Input<Inputs.ConnectionBitbucketCloudConfigAuthorizerCredentialGetArgs> AuthorizerCredential { get; set; } = null!;

        /// <summary>
        /// Represents a personal access token that authorized the Connection,
        /// and associated metadata.
        /// Structure is documented below.
        /// </summary>
        [Input("readAuthorizerCredential", required: true)]
        public Input<Inputs.ConnectionBitbucketCloudConfigReadAuthorizerCredentialGetArgs> ReadAuthorizerCredential { get; set; } = null!;

        /// <summary>
        /// Required. Immutable. SecretManager resource containing the webhook secret used to verify webhook
        /// events, formatted as `projects/*/secrets/*/versions/*`. This is used to
        /// validate and create webhooks.
        /// </summary>
        [Input("webhookSecretSecretVersion", required: true)]
        public Input<string> WebhookSecretSecretVersion { get; set; } = null!;

        /// <summary>
        /// Required. The Bitbucket Cloud Workspace ID to be connected to Google Cloud Platform.
        /// </summary>
        [Input("workspace", required: true)]
        public Input<string> Workspace { get; set; } = null!;

        public ConnectionBitbucketCloudConfigGetArgs()
        {
        }
        public static new ConnectionBitbucketCloudConfigGetArgs Empty => new ConnectionBitbucketCloudConfigGetArgs();
    }
}
