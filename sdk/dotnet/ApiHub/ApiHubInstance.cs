// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.ApiHub
{
    /// <summary>
    /// An ApiHubInstance represents the instance resources of the API Hub.
    /// Currently, only one ApiHub instance is allowed for each project.
    /// Currently, updation/deletion of ApiHub instance is not allowed.
    /// 
    /// ## Example Usage
    /// 
    /// ### Apihub Api Hub Instance Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var apihub_instance_without_search = new Gcp.ApiHub.ApiHubInstance("apihub-instance-without-search", new()
    ///     {
    ///         Location = "us-central1",
    ///         Config = new Gcp.ApiHub.Inputs.ApiHubInstanceConfigArgs
    ///         {
    ///             DisableSearch = true,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Apihub Api Hub Instance Full
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var apihub_instance_search = new Gcp.ApiHub.ApiHubInstance("apihub-instance-search", new()
    ///     {
    ///         Project = "my-project",
    ///         ApiHubInstanceId = "test-instance-full",
    ///         Description = "Test API hub instance",
    ///         Location = "us-central1",
    ///         Config = new Gcp.ApiHub.Inputs.ApiHubInstanceConfigArgs
    ///         {
    ///             EncryptionType = "CMEK",
    ///             CmekKeyName = "projects/my-project/locations/us-central1/keyRings/apihub/cryptoKeys/apihub-key",
    ///             DisableSearch = false,
    ///             VertexLocation = "us",
    ///         },
    ///         Labels = 
    ///         {
    ///             { "environment", "dev" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ApiHubInstance can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/locations/{{location}}/apiHubInstances/{{api_hub_instance_id}}`
    /// 
    /// * `{{project}}/{{location}}/{{api_hub_instance_id}}`
    /// 
    /// * `{{location}}/{{api_hub_instance_id}}`
    /// 
    /// When using the `pulumi import` command, ApiHubInstance can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:apihub/apiHubInstance:ApiHubInstance default projects/{{project}}/locations/{{location}}/apiHubInstances/{{api_hub_instance_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:apihub/apiHubInstance:ApiHubInstance default {{project}}/{{location}}/{{api_hub_instance_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:apihub/apiHubInstance:ApiHubInstance default {{location}}/{{api_hub_instance_id}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:apihub/apiHubInstance:ApiHubInstance")]
    public partial class ApiHubInstance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Optional. Identifier to assign to the Api Hub instance. Must be unique within scope of the parent resource. If the field
        /// is not provided, system generated id will be used. This value should be 4-40 characters, and valid characters are
        /// '/a-z[0-9]-_/'.
        /// </summary>
        [Output("apiHubInstanceId")]
        public Output<string?> ApiHubInstanceId { get; private set; } = null!;

        /// <summary>
        /// Available configurations to provision an ApiHub Instance.
        /// Structure is documented below.
        /// </summary>
        [Output("config")]
        public Output<Outputs.ApiHubInstanceConfig> Config { get; private set; } = null!;

        /// <summary>
        /// Output only. Creation timestamp.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Optional. Description of the ApiHub instance.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
        /// </summary>
        [Output("effectiveLabels")]
        public Output<ImmutableDictionary<string, string>> EffectiveLabels { get; private set; } = null!;

        /// <summary>
        /// Optional. Instance labels to represent user-provided metadata. Refer to cloud documentation on labels for more details.
        /// https://cloud.google.com/compute/docs/labeling-resources **Note**: This field is non-authoritative, and will only manage
        /// the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
        /// the resource.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Identifier. Format:
        /// `projects/{project}/locations/{location}/apiHubInstances/{apiHubInstance}`.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The combination of labels configured directly on the resource
        /// and default labels configured on the provider.
        /// </summary>
        [Output("pulumiLabels")]
        public Output<ImmutableDictionary<string, string>> PulumiLabels { get; private set; } = null!;

        /// <summary>
        /// Output only. The current state of the ApiHub instance.
        /// Possible values:
        /// STATE_UNSPECIFIED
        /// INACTIVE
        /// CREATING
        /// ACTIVE
        /// UPDATING
        /// DELETING
        /// FAILED
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Output only. Extra information about ApiHub instance state. Currently the message
        /// would be populated when state is `FAILED`.
        /// </summary>
        [Output("stateMessage")]
        public Output<string> StateMessage { get; private set; } = null!;

        /// <summary>
        /// Output only. Last update timestamp.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a ApiHubInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApiHubInstance(string name, ApiHubInstanceArgs args, CustomResourceOptions? options = null)
            : base("gcp:apihub/apiHubInstance:ApiHubInstance", name, args ?? new ApiHubInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApiHubInstance(string name, Input<string> id, ApiHubInstanceState? state = null, CustomResourceOptions? options = null)
            : base("gcp:apihub/apiHubInstance:ApiHubInstance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "effectiveLabels",
                    "pulumiLabels",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApiHubInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApiHubInstance Get(string name, Input<string> id, ApiHubInstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new ApiHubInstance(name, id, state, options);
        }
    }

    public sealed class ApiHubInstanceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional. Identifier to assign to the Api Hub instance. Must be unique within scope of the parent resource. If the field
        /// is not provided, system generated id will be used. This value should be 4-40 characters, and valid characters are
        /// '/a-z[0-9]-_/'.
        /// </summary>
        [Input("apiHubInstanceId")]
        public Input<string>? ApiHubInstanceId { get; set; }

        /// <summary>
        /// Available configurations to provision an ApiHub Instance.
        /// Structure is documented below.
        /// </summary>
        [Input("config", required: true)]
        public Input<Inputs.ApiHubInstanceConfigArgs> Config { get; set; } = null!;

        /// <summary>
        /// Optional. Description of the ApiHub instance.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Optional. Instance labels to represent user-provided metadata. Refer to cloud documentation on labels for more details.
        /// https://cloud.google.com/compute/docs/labeling-resources **Note**: This field is non-authoritative, and will only manage
        /// the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
        /// the resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public ApiHubInstanceArgs()
        {
        }
        public static new ApiHubInstanceArgs Empty => new ApiHubInstanceArgs();
    }

    public sealed class ApiHubInstanceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional. Identifier to assign to the Api Hub instance. Must be unique within scope of the parent resource. If the field
        /// is not provided, system generated id will be used. This value should be 4-40 characters, and valid characters are
        /// '/a-z[0-9]-_/'.
        /// </summary>
        [Input("apiHubInstanceId")]
        public Input<string>? ApiHubInstanceId { get; set; }

        /// <summary>
        /// Available configurations to provision an ApiHub Instance.
        /// Structure is documented below.
        /// </summary>
        [Input("config")]
        public Input<Inputs.ApiHubInstanceConfigGetArgs>? Config { get; set; }

        /// <summary>
        /// Output only. Creation timestamp.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Optional. Description of the ApiHub instance.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("effectiveLabels")]
        private InputMap<string>? _effectiveLabels;

        /// <summary>
        /// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
        /// </summary>
        public InputMap<string> EffectiveLabels
        {
            get => _effectiveLabels ?? (_effectiveLabels = new InputMap<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableDictionary.Create<string, string>());
                _effectiveLabels = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Optional. Instance labels to represent user-provided metadata. Refer to cloud documentation on labels for more details.
        /// https://cloud.google.com/compute/docs/labeling-resources **Note**: This field is non-authoritative, and will only manage
        /// the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
        /// the resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Identifier. Format:
        /// `projects/{project}/locations/{location}/apiHubInstances/{apiHubInstance}`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("pulumiLabels")]
        private InputMap<string>? _pulumiLabels;

        /// <summary>
        /// The combination of labels configured directly on the resource
        /// and default labels configured on the provider.
        /// </summary>
        public InputMap<string> PulumiLabels
        {
            get => _pulumiLabels ?? (_pulumiLabels = new InputMap<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableDictionary.Create<string, string>());
                _pulumiLabels = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        /// <summary>
        /// Output only. The current state of the ApiHub instance.
        /// Possible values:
        /// STATE_UNSPECIFIED
        /// INACTIVE
        /// CREATING
        /// ACTIVE
        /// UPDATING
        /// DELETING
        /// FAILED
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// Output only. Extra information about ApiHub instance state. Currently the message
        /// would be populated when state is `FAILED`.
        /// </summary>
        [Input("stateMessage")]
        public Input<string>? StateMessage { get; set; }

        /// <summary>
        /// Output only. Last update timestamp.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public ApiHubInstanceState()
        {
        }
        public static new ApiHubInstanceState Empty => new ApiHubInstanceState();
    }
}
