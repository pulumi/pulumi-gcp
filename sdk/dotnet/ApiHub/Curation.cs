// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.ApiHub
{
    /// <summary>
    /// Description
    /// 
    /// ## Example Usage
    /// 
    /// ### Apihub Curation Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var apihubCurationBasic = new Gcp.ApiHub.Curation("apihub_curation_basic", new()
    ///     {
    ///         Location = "us-central1",
    ///         CurationId = "test",
    ///         Project = "apihub-terraform",
    ///         DisplayName = "Test Curation",
    ///         Description = "This is a sample curation resource managed by Terraform.",
    ///         Endpoint = new Gcp.ApiHub.Inputs.CurationEndpointArgs
    ///         {
    ///             ApplicationIntegrationEndpointDetails = new Gcp.ApiHub.Inputs.CurationEndpointApplicationIntegrationEndpointDetailsArgs
    ///             {
    ///                 TriggerId = "api_trigger/curation_API_1",
    ///                 Uri = "https://integrations.googleapis.com/v1/projects/1082615593856/locations/us-central1/integrations/curation:execute",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Curation can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/locations/{{location}}/curations/{{curation_id}}`
    /// 
    /// * `{{project}}/{{location}}/{{curation_id}}`
    /// 
    /// * `{{location}}/{{curation_id}}`
    /// 
    /// When using the `pulumi import` command, Curation can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:apihub/curation:Curation default projects/{{project}}/locations/{{location}}/curations/{{curation_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:apihub/curation:Curation default {{project}}/{{location}}/{{curation_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:apihub/curation:Curation default {{location}}/{{curation_id}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:apihub/curation:Curation")]
    public partial class Curation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The time at which the curation was created.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The ID to use for the curation resource, which will become the final
        /// component of the curations's resource name. This field is optional.
        /// * If provided, the same will be used. The service will throw an error if
        /// the specified ID is already used by another curation resource in the API
        /// hub.
        /// * If not provided, a system generated ID will be used.
        /// This value should be 4-500 characters, and valid characters
        /// are /a-z[0-9]-_/.
        /// </summary>
        [Output("curationId")]
        public Output<string> CurationId { get; private set; } = null!;

        /// <summary>
        /// The description of the curation.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The display name of the curation.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// The endpoint to be triggered for curation.
        /// The endpoint will be invoked with a request payload containing
        /// ApiMetadata.
        /// Response should contain curated data in the form of
        /// ApiMetadata.
        /// Structure is documented below.
        /// </summary>
        [Output("endpoint")]
        public Output<Outputs.CurationEndpoint> Endpoint { get; private set; } = null!;

        /// <summary>
        /// The error code of the last execution of the curation. The error code is
        /// populated only when the last execution state is failed.
        /// Possible values:
        /// ERROR_CODE_UNSPECIFIED
        /// INTERNAL_ERROR
        /// UNAUTHORIZED
        /// </summary>
        [Output("lastExecutionErrorCode")]
        public Output<string> LastExecutionErrorCode { get; private set; } = null!;

        /// <summary>
        /// Error message describing the failure, if any, during the last execution of
        /// the curation.
        /// </summary>
        [Output("lastExecutionErrorMessage")]
        public Output<string> LastExecutionErrorMessage { get; private set; } = null!;

        /// <summary>
        /// The last execution state of the curation.
        /// Possible values:
        /// LAST_EXECUTION_STATE_UNSPECIFIED
        /// SUCCEEDED
        /// FAILED
        /// </summary>
        [Output("lastExecutionState")]
        public Output<string> LastExecutionState { get; private set; } = null!;

        /// <summary>
        /// Resource ID segment making up resource `Name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Identifier. The name of the curation.
        /// Format:
        /// `projects/{project}/locations/{location}/curations/{curation}`
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The plugin instances and associated actions that are using the curation.
        /// Note: A particular curation could be used by multiple plugin instances or
        /// multiple actions in a plugin instance.
        /// Structure is documented below.
        /// </summary>
        [Output("pluginInstanceActions")]
        public Output<ImmutableArray<Outputs.CurationPluginInstanceAction>> PluginInstanceActions { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The time at which the curation was last updated.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a Curation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Curation(string name, CurationArgs args, CustomResourceOptions? options = null)
            : base("gcp:apihub/curation:Curation", name, args ?? new CurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Curation(string name, Input<string> id, CurationState? state = null, CustomResourceOptions? options = null)
            : base("gcp:apihub/curation:Curation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Curation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Curation Get(string name, Input<string> id, CurationState? state = null, CustomResourceOptions? options = null)
        {
            return new Curation(name, id, state, options);
        }
    }

    public sealed class CurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID to use for the curation resource, which will become the final
        /// component of the curations's resource name. This field is optional.
        /// * If provided, the same will be used. The service will throw an error if
        /// the specified ID is already used by another curation resource in the API
        /// hub.
        /// * If not provided, a system generated ID will be used.
        /// This value should be 4-500 characters, and valid characters
        /// are /a-z[0-9]-_/.
        /// </summary>
        [Input("curationId", required: true)]
        public Input<string> CurationId { get; set; } = null!;

        /// <summary>
        /// The description of the curation.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The display name of the curation.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// The endpoint to be triggered for curation.
        /// The endpoint will be invoked with a request payload containing
        /// ApiMetadata.
        /// Response should contain curated data in the form of
        /// ApiMetadata.
        /// Structure is documented below.
        /// </summary>
        [Input("endpoint", required: true)]
        public Input<Inputs.CurationEndpointArgs> Endpoint { get; set; } = null!;

        /// <summary>
        /// Resource ID segment making up resource `Name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public CurationArgs()
        {
        }
        public static new CurationArgs Empty => new CurationArgs();
    }

    public sealed class CurationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The time at which the curation was created.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The ID to use for the curation resource, which will become the final
        /// component of the curations's resource name. This field is optional.
        /// * If provided, the same will be used. The service will throw an error if
        /// the specified ID is already used by another curation resource in the API
        /// hub.
        /// * If not provided, a system generated ID will be used.
        /// This value should be 4-500 characters, and valid characters
        /// are /a-z[0-9]-_/.
        /// </summary>
        [Input("curationId")]
        public Input<string>? CurationId { get; set; }

        /// <summary>
        /// The description of the curation.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The display name of the curation.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The endpoint to be triggered for curation.
        /// The endpoint will be invoked with a request payload containing
        /// ApiMetadata.
        /// Response should contain curated data in the form of
        /// ApiMetadata.
        /// Structure is documented below.
        /// </summary>
        [Input("endpoint")]
        public Input<Inputs.CurationEndpointGetArgs>? Endpoint { get; set; }

        /// <summary>
        /// The error code of the last execution of the curation. The error code is
        /// populated only when the last execution state is failed.
        /// Possible values:
        /// ERROR_CODE_UNSPECIFIED
        /// INTERNAL_ERROR
        /// UNAUTHORIZED
        /// </summary>
        [Input("lastExecutionErrorCode")]
        public Input<string>? LastExecutionErrorCode { get; set; }

        /// <summary>
        /// Error message describing the failure, if any, during the last execution of
        /// the curation.
        /// </summary>
        [Input("lastExecutionErrorMessage")]
        public Input<string>? LastExecutionErrorMessage { get; set; }

        /// <summary>
        /// The last execution state of the curation.
        /// Possible values:
        /// LAST_EXECUTION_STATE_UNSPECIFIED
        /// SUCCEEDED
        /// FAILED
        /// </summary>
        [Input("lastExecutionState")]
        public Input<string>? LastExecutionState { get; set; }

        /// <summary>
        /// Resource ID segment making up resource `Name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Identifier. The name of the curation.
        /// Format:
        /// `projects/{project}/locations/{location}/curations/{curation}`
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("pluginInstanceActions")]
        private InputList<Inputs.CurationPluginInstanceActionGetArgs>? _pluginInstanceActions;

        /// <summary>
        /// The plugin instances and associated actions that are using the curation.
        /// Note: A particular curation could be used by multiple plugin instances or
        /// multiple actions in a plugin instance.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.CurationPluginInstanceActionGetArgs> PluginInstanceActions
        {
            get => _pluginInstanceActions ?? (_pluginInstanceActions = new InputList<Inputs.CurationPluginInstanceActionGetArgs>());
            set => _pluginInstanceActions = value;
        }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The time at which the curation was last updated.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public CurationState()
        {
        }
        public static new CurationState Empty => new CurationState();
    }
}
