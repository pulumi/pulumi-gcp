// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.ApiHub.Inputs
{

    public sealed class PluginConfigTemplateAdditionalConfigTemplateArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("enumOptions")]
        private InputList<Inputs.PluginConfigTemplateAdditionalConfigTemplateEnumOptionArgs>? _enumOptions;

        /// <summary>
        /// Enum options. To be populated if `ValueType` is `ENUM`.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.PluginConfigTemplateAdditionalConfigTemplateEnumOptionArgs> EnumOptions
        {
            get => _enumOptions ?? (_enumOptions = new InputList<Inputs.PluginConfigTemplateAdditionalConfigTemplateEnumOptionArgs>());
            set => _enumOptions = value;
        }

        /// <summary>
        /// ID of the config variable. Must be unique within the configuration.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        [Input("multiSelectOptions")]
        private InputList<Inputs.PluginConfigTemplateAdditionalConfigTemplateMultiSelectOptionArgs>? _multiSelectOptions;

        /// <summary>
        /// Multi select options. To be populated if `ValueType` is `MULTI_SELECT`.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.PluginConfigTemplateAdditionalConfigTemplateMultiSelectOptionArgs> MultiSelectOptions
        {
            get => _multiSelectOptions ?? (_multiSelectOptions = new InputList<Inputs.PluginConfigTemplateAdditionalConfigTemplateMultiSelectOptionArgs>());
            set => _multiSelectOptions = value;
        }

        /// <summary>
        /// Flag represents that this `ConfigVariable` must be provided for a
        /// PluginInstance.
        /// </summary>
        [Input("required")]
        public Input<bool>? Required { get; set; }

        /// <summary>
        /// Regular expression in RE2 syntax used for validating the `Value` of a
        /// `ConfigVariable`.
        /// </summary>
        [Input("validationRegex")]
        public Input<string>? ValidationRegex { get; set; }

        /// <summary>
        /// Type of the parameter: string, int, bool etc.
        /// Possible values:
        /// VALUE_TYPE_UNSPECIFIED
        /// STRING
        /// INT
        /// BOOL
        /// SECRET
        /// ENUM
        /// MULTI_SELECT
        /// MULTI_STRING
        /// MULTI_INT
        /// </summary>
        [Input("valueType", required: true)]
        public Input<string> ValueType { get; set; } = null!;

        public PluginConfigTemplateAdditionalConfigTemplateArgs()
        {
        }
        public static new PluginConfigTemplateAdditionalConfigTemplateArgs Empty => new PluginConfigTemplateAdditionalConfigTemplateArgs();
    }
}
