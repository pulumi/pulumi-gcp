// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.ApiHub
{
    /// <summary>
    /// Description
    /// 
    /// ## Example Usage
    /// 
    /// ### Apihub Plugin Instance Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var apihubPluginInstanceBasic = new Gcp.ApiHub.PluginInstance("apihub_plugin_instance_basic", new()
    ///     {
    ///         Location = "us-central1",
    ///         Plugin = "existing-plugin-id",
    ///         PluginInstanceId = "test",
    ///         DisplayName = "Sample Plugin Instance Display Name",
    ///         Disable = false,
    ///         Actions = new[]
    ///         {
    ///             new Gcp.ApiHub.Inputs.PluginInstanceActionArgs
    ///             {
    ///                 ActionId = "existing-action-id",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// PluginInstance can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/locations/{{location}}/plugins/{{plugin}}/instances/{{plugin_instance_id}}`
    /// 
    /// * `{{project}}/{{location}}/{{plugin}}/{{plugin_instance_id}}`
    /// 
    /// * `{{location}}/{{plugin}}/{{plugin_instance_id}}`
    /// 
    /// When using the `pulumi import` command, PluginInstance can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:apihub/pluginInstance:PluginInstance default projects/{{project}}/locations/{{location}}/plugins/{{plugin}}/instances/{{plugin_instance_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:apihub/pluginInstance:PluginInstance default {{project}}/{{location}}/{{plugin}}/{{plugin_instance_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:apihub/pluginInstance:PluginInstance default {{location}}/{{plugin}}/{{plugin_instance_id}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:apihub/pluginInstance:PluginInstance")]
    public partial class PluginInstance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The action status for the plugin instance.
        /// Structure is documented below.
        /// </summary>
        [Output("actions")]
        public Output<ImmutableArray<Outputs.PluginInstanceAction>> Actions { get; private set; } = null!;

        /// <summary>
        /// AuthConfig represents the authentication information.
        /// </summary>
        [Output("authConfig")]
        public Output<Outputs.PluginInstanceAuthConfig?> AuthConfig { get; private set; } = null!;

        /// <summary>
        /// Timestamp indicating when the plugin instance was created.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The display name for this plugin instance. Max length is 255 characters.
        /// </summary>
        [Output("disable")]
        public Output<bool?> Disable { get; private set; } = null!;

        /// <summary>
        /// The display name for this plugin instance. Max length is 255 characters.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Error message describing the failure, if any, during Create, Delete or
        /// ApplyConfig operation corresponding to the plugin instance.This field will
        /// only be populated if the plugin instance is in the ERROR or FAILED state.
        /// </summary>
        [Output("errorMessage")]
        public Output<string> ErrorMessage { get; private set; } = null!;

        /// <summary>
        /// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Identifier. The unique name of the plugin instance resource.
        /// Format:
        /// `projects/{project}/locations/{location}/plugins/{plugin}/instances/{instance}`
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
        /// </summary>
        [Output("plugin")]
        public Output<string> Plugin { get; private set; } = null!;

        /// <summary>
        /// The ID to use for the plugin instance, which will become the final
        /// component of the plugin instance's resource name. This field is optional.
        /// * If provided, the same will be used. The service will throw an error if
        /// the specified id is already used by another plugin instance in the plugin
        /// resource.
        /// * If not provided, a system generated id will be used.
        /// This value should be 4-63 characters, and valid characters
        /// are /a-z[0-9]-_/.
        /// </summary>
        [Output("pluginInstanceId")]
        public Output<string> PluginInstanceId { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The current state of the plugin instance (e.g., enabled, disabled,
        /// provisioning).
        /// Possible values:
        /// STATE_UNSPECIFIED
        /// CREATING
        /// ACTIVE
        /// APPLYING_CONFIG
        /// ERROR
        /// FAILED
        /// DELETING
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Timestamp indicating when the plugin instance was last updated.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a PluginInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PluginInstance(string name, PluginInstanceArgs args, CustomResourceOptions? options = null)
            : base("gcp:apihub/pluginInstance:PluginInstance", name, args ?? new PluginInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PluginInstance(string name, Input<string> id, PluginInstanceState? state = null, CustomResourceOptions? options = null)
            : base("gcp:apihub/pluginInstance:PluginInstance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PluginInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PluginInstance Get(string name, Input<string> id, PluginInstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new PluginInstance(name, id, state, options);
        }
    }

    public sealed class PluginInstanceArgs : global::Pulumi.ResourceArgs
    {
        [Input("actions")]
        private InputList<Inputs.PluginInstanceActionArgs>? _actions;

        /// <summary>
        /// The action status for the plugin instance.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.PluginInstanceActionArgs> Actions
        {
            get => _actions ?? (_actions = new InputList<Inputs.PluginInstanceActionArgs>());
            set => _actions = value;
        }

        /// <summary>
        /// AuthConfig represents the authentication information.
        /// </summary>
        [Input("authConfig")]
        public Input<Inputs.PluginInstanceAuthConfigArgs>? AuthConfig { get; set; }

        /// <summary>
        /// The display name for this plugin instance. Max length is 255 characters.
        /// </summary>
        [Input("disable")]
        public Input<bool>? Disable { get; set; }

        /// <summary>
        /// The display name for this plugin instance. Max length is 255 characters.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
        /// </summary>
        [Input("plugin", required: true)]
        public Input<string> Plugin { get; set; } = null!;

        /// <summary>
        /// The ID to use for the plugin instance, which will become the final
        /// component of the plugin instance's resource name. This field is optional.
        /// * If provided, the same will be used. The service will throw an error if
        /// the specified id is already used by another plugin instance in the plugin
        /// resource.
        /// * If not provided, a system generated id will be used.
        /// This value should be 4-63 characters, and valid characters
        /// are /a-z[0-9]-_/.
        /// </summary>
        [Input("pluginInstanceId", required: true)]
        public Input<string> PluginInstanceId { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public PluginInstanceArgs()
        {
        }
        public static new PluginInstanceArgs Empty => new PluginInstanceArgs();
    }

    public sealed class PluginInstanceState : global::Pulumi.ResourceArgs
    {
        [Input("actions")]
        private InputList<Inputs.PluginInstanceActionGetArgs>? _actions;

        /// <summary>
        /// The action status for the plugin instance.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.PluginInstanceActionGetArgs> Actions
        {
            get => _actions ?? (_actions = new InputList<Inputs.PluginInstanceActionGetArgs>());
            set => _actions = value;
        }

        /// <summary>
        /// AuthConfig represents the authentication information.
        /// </summary>
        [Input("authConfig")]
        public Input<Inputs.PluginInstanceAuthConfigGetArgs>? AuthConfig { get; set; }

        /// <summary>
        /// Timestamp indicating when the plugin instance was created.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The display name for this plugin instance. Max length is 255 characters.
        /// </summary>
        [Input("disable")]
        public Input<bool>? Disable { get; set; }

        /// <summary>
        /// The display name for this plugin instance. Max length is 255 characters.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Error message describing the failure, if any, during Create, Delete or
        /// ApplyConfig operation corresponding to the plugin instance.This field will
        /// only be populated if the plugin instance is in the ERROR or FAILED state.
        /// </summary>
        [Input("errorMessage")]
        public Input<string>? ErrorMessage { get; set; }

        /// <summary>
        /// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Identifier. The unique name of the plugin instance resource.
        /// Format:
        /// `projects/{project}/locations/{location}/plugins/{plugin}/instances/{instance}`
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
        /// </summary>
        [Input("plugin")]
        public Input<string>? Plugin { get; set; }

        /// <summary>
        /// The ID to use for the plugin instance, which will become the final
        /// component of the plugin instance's resource name. This field is optional.
        /// * If provided, the same will be used. The service will throw an error if
        /// the specified id is already used by another plugin instance in the plugin
        /// resource.
        /// * If not provided, a system generated id will be used.
        /// This value should be 4-63 characters, and valid characters
        /// are /a-z[0-9]-_/.
        /// </summary>
        [Input("pluginInstanceId")]
        public Input<string>? PluginInstanceId { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The current state of the plugin instance (e.g., enabled, disabled,
        /// provisioning).
        /// Possible values:
        /// STATE_UNSPECIFIED
        /// CREATING
        /// ACTIVE
        /// APPLYING_CONFIG
        /// ERROR
        /// FAILED
        /// DELETING
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// Timestamp indicating when the plugin instance was last updated.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public PluginInstanceState()
        {
        }
        public static new PluginInstanceState Empty => new PluginInstanceState();
    }
}
