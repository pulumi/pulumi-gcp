// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Apphub
{
    /// <summary>
    /// Workload represents a binary deployment (such as Managed Instance Groups (MIGs), GKE deployments, etc.) that performs the smallest logical subset of business functionality. It registers identified workload to the Application.
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// Workload can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/locations/{{location}}/applications/{{application_id}}/workloads/{{workload_id}}`
    /// 
    /// * `{{project}}/{{location}}/{{application_id}}/{{workload_id}}`
    /// 
    /// * `{{location}}/{{application_id}}/{{workload_id}}`
    /// 
    /// When using the `pulumi import` command, Workload can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:apphub/workload:Workload default projects/{{project}}/locations/{{location}}/applications/{{application_id}}/workloads/{{workload_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:apphub/workload:Workload default {{project}}/{{location}}/{{application_id}}/{{workload_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:apphub/workload:Workload default {{location}}/{{application_id}}/{{workload_id}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:apphub/workload:Workload")]
    public partial class Workload : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Part of `parent`.  Full resource name of a parent Application. Example: projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
        /// </summary>
        [Output("applicationId")]
        public Output<string> ApplicationId { get; private set; } = null!;

        /// <summary>
        /// Consumer provided attributes.
        /// Structure is documented below.
        /// </summary>
        [Output("attributes")]
        public Output<Outputs.WorkloadAttributes?> Attributes { get; private set; } = null!;

        /// <summary>
        /// Output only. Create time.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// User-defined description of a Workload.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Immutable. The resource name of the original discovered workload.
        /// </summary>
        [Output("discoveredWorkload")]
        public Output<string> DiscoveredWorkload { get; private set; } = null!;

        /// <summary>
        /// User-defined name for the Workload.
        /// </summary>
        [Output("displayName")]
        public Output<string?> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Part of `parent`.  Full resource name of a parent Application. Example: projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Identifier. The resource name of the Workload. Format:"projects/{host-project-id}/locations/{location}/applications/{application-id}/workloads/{workload-id}"
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Output only. Workload state. Possible values:  STATE_UNSPECIFIED CREATING ACTIVE DELETING DETACHED
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Output only. A universally unique identifier (UUID) for the `Workload` in the UUID4 format.
        /// </summary>
        [Output("uid")]
        public Output<string> Uid { get; private set; } = null!;

        /// <summary>
        /// Output only. Update time.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;

        /// <summary>
        /// The Workload identifier.
        /// </summary>
        [Output("workloadId")]
        public Output<string> WorkloadId { get; private set; } = null!;

        /// <summary>
        /// Properties of an underlying compute resource represented by the Workload.
        /// Structure is documented below.
        /// </summary>
        [Output("workloadProperties")]
        public Output<ImmutableArray<Outputs.WorkloadWorkloadProperty>> WorkloadProperties { get; private set; } = null!;

        /// <summary>
        /// Reference of an underlying compute resource represented by the Workload.
        /// Structure is documented below.
        /// </summary>
        [Output("workloadReferences")]
        public Output<ImmutableArray<Outputs.WorkloadWorkloadReference>> WorkloadReferences { get; private set; } = null!;


        /// <summary>
        /// Create a Workload resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Workload(string name, WorkloadArgs args, CustomResourceOptions? options = null)
            : base("gcp:apphub/workload:Workload", name, args ?? new WorkloadArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Workload(string name, Input<string> id, WorkloadState? state = null, CustomResourceOptions? options = null)
            : base("gcp:apphub/workload:Workload", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Workload resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Workload Get(string name, Input<string> id, WorkloadState? state = null, CustomResourceOptions? options = null)
        {
            return new Workload(name, id, state, options);
        }
    }

    public sealed class WorkloadArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Part of `parent`.  Full resource name of a parent Application. Example: projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
        /// </summary>
        [Input("applicationId", required: true)]
        public Input<string> ApplicationId { get; set; } = null!;

        /// <summary>
        /// Consumer provided attributes.
        /// Structure is documented below.
        /// </summary>
        [Input("attributes")]
        public Input<Inputs.WorkloadAttributesArgs>? Attributes { get; set; }

        /// <summary>
        /// User-defined description of a Workload.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Immutable. The resource name of the original discovered workload.
        /// </summary>
        [Input("discoveredWorkload", required: true)]
        public Input<string> DiscoveredWorkload { get; set; } = null!;

        /// <summary>
        /// User-defined name for the Workload.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Part of `parent`.  Full resource name of a parent Application. Example: projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The Workload identifier.
        /// </summary>
        [Input("workloadId", required: true)]
        public Input<string> WorkloadId { get; set; } = null!;

        public WorkloadArgs()
        {
        }
        public static new WorkloadArgs Empty => new WorkloadArgs();
    }

    public sealed class WorkloadState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Part of `parent`.  Full resource name of a parent Application. Example: projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
        /// </summary>
        [Input("applicationId")]
        public Input<string>? ApplicationId { get; set; }

        /// <summary>
        /// Consumer provided attributes.
        /// Structure is documented below.
        /// </summary>
        [Input("attributes")]
        public Input<Inputs.WorkloadAttributesGetArgs>? Attributes { get; set; }

        /// <summary>
        /// Output only. Create time.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// User-defined description of a Workload.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Immutable. The resource name of the original discovered workload.
        /// </summary>
        [Input("discoveredWorkload")]
        public Input<string>? DiscoveredWorkload { get; set; }

        /// <summary>
        /// User-defined name for the Workload.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// Part of `parent`.  Full resource name of a parent Application. Example: projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Identifier. The resource name of the Workload. Format:"projects/{host-project-id}/locations/{location}/applications/{application-id}/workloads/{workload-id}"
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Output only. Workload state. Possible values:  STATE_UNSPECIFIED CREATING ACTIVE DELETING DETACHED
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// Output only. A universally unique identifier (UUID) for the `Workload` in the UUID4 format.
        /// </summary>
        [Input("uid")]
        public Input<string>? Uid { get; set; }

        /// <summary>
        /// Output only. Update time.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        /// <summary>
        /// The Workload identifier.
        /// </summary>
        [Input("workloadId")]
        public Input<string>? WorkloadId { get; set; }

        [Input("workloadProperties")]
        private InputList<Inputs.WorkloadWorkloadPropertyGetArgs>? _workloadProperties;

        /// <summary>
        /// Properties of an underlying compute resource represented by the Workload.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.WorkloadWorkloadPropertyGetArgs> WorkloadProperties
        {
            get => _workloadProperties ?? (_workloadProperties = new InputList<Inputs.WorkloadWorkloadPropertyGetArgs>());
            set => _workloadProperties = value;
        }

        [Input("workloadReferences")]
        private InputList<Inputs.WorkloadWorkloadReferenceGetArgs>? _workloadReferences;

        /// <summary>
        /// Reference of an underlying compute resource represented by the Workload.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.WorkloadWorkloadReferenceGetArgs> WorkloadReferences
        {
            get => _workloadReferences ?? (_workloadReferences = new InputList<Inputs.WorkloadWorkloadReferenceGetArgs>());
            set => _workloadReferences = value;
        }

        public WorkloadState()
        {
        }
        public static new WorkloadState Empty => new WorkloadState();
    }
}
