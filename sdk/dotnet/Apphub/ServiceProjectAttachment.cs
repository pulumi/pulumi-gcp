// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Apphub
{
    /// <summary>
    /// Represents a Service project attachment to the Host Project.
    /// 
    /// ## Example Usage
    /// 
    /// ### Service Project Attachment Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// using Time = Pulumi.Time;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var serviceProject = new Gcp.Organizations.Project("service_project", new()
    ///     {
    ///         ProjectId = "project-1",
    ///         Name = "Service Project",
    ///         OrgId = "123456789",
    ///         DeletionPolicy = "DELETE",
    ///     });
    /// 
    ///     var wait120s = new Time.Index.Sleep("wait_120s", new()
    ///     {
    ///         CreateDuration = "120s",
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             serviceProject,
    ///         },
    ///     });
    /// 
    ///     var example = new Gcp.Apphub.ServiceProjectAttachment("example", new()
    ///     {
    ///         ServiceProjectAttachmentId = serviceProject.ProjectId,
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             wait120s,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Service Project Attachment Full
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// using Time = Pulumi.Time;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var serviceProjectFull = new Gcp.Organizations.Project("service_project_full", new()
    ///     {
    ///         ProjectId = "project-1",
    ///         Name = "Service Project Full",
    ///         OrgId = "123456789",
    ///         DeletionPolicy = "DELETE",
    ///     });
    /// 
    ///     var wait120s = new Time.Index.Sleep("wait_120s", new()
    ///     {
    ///         CreateDuration = "120s",
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             serviceProjectFull,
    ///         },
    ///     });
    /// 
    ///     var example2 = new Gcp.Apphub.ServiceProjectAttachment("example2", new()
    ///     {
    ///         ServiceProjectAttachmentId = serviceProjectFull.ProjectId,
    ///         ServiceProject = serviceProjectFull.ProjectId,
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             wait120s,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ServiceProjectAttachment can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/locations/global/serviceProjectAttachments/{{service_project_attachment_id}}`
    /// 
    /// * `{{project}}/{{service_project_attachment_id}}`
    /// 
    /// * `{{service_project_attachment_id}}`
    /// 
    /// When using the `pulumi import` command, ServiceProjectAttachment can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:apphub/serviceProjectAttachment:ServiceProjectAttachment default projects/{{project}}/locations/global/serviceProjectAttachments/{{service_project_attachment_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:apphub/serviceProjectAttachment:ServiceProjectAttachment default {{project}}/{{service_project_attachment_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:apphub/serviceProjectAttachment:ServiceProjectAttachment default {{service_project_attachment_id}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:apphub/serviceProjectAttachment:ServiceProjectAttachment")]
    public partial class ServiceProjectAttachment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Output only. Create time.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// "Identifier. The resource name of a ServiceProjectAttachment. Format:\"projects/{host-project-id}/locations/global/serviceProjectAttachments/{service-project-id}.\""
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// "Immutable. Service project name in the format: \"projects/abc\"
        /// or \"projects/123\". As input, project name with either project id or number
        /// are accepted. As output, this field will contain project number."
        /// </summary>
        [Output("serviceProject")]
        public Output<string?> ServiceProject { get; private set; } = null!;

        /// <summary>
        /// Required. The service project attachment identifier must contain the ProjectId of the service project specified in the service_project_attachment.service_project field. Hint: "projects/{project_id}"
        /// </summary>
        [Output("serviceProjectAttachmentId")]
        public Output<string> ServiceProjectAttachmentId { get; private set; } = null!;

        /// <summary>
        /// ServiceProjectAttachment state.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Output only. A globally unique identifier (in UUID4 format) for the `ServiceProjectAttachment`.
        /// </summary>
        [Output("uid")]
        public Output<string> Uid { get; private set; } = null!;


        /// <summary>
        /// Create a ServiceProjectAttachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServiceProjectAttachment(string name, ServiceProjectAttachmentArgs args, CustomResourceOptions? options = null)
            : base("gcp:apphub/serviceProjectAttachment:ServiceProjectAttachment", name, args ?? new ServiceProjectAttachmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServiceProjectAttachment(string name, Input<string> id, ServiceProjectAttachmentState? state = null, CustomResourceOptions? options = null)
            : base("gcp:apphub/serviceProjectAttachment:ServiceProjectAttachment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServiceProjectAttachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServiceProjectAttachment Get(string name, Input<string> id, ServiceProjectAttachmentState? state = null, CustomResourceOptions? options = null)
        {
            return new ServiceProjectAttachment(name, id, state, options);
        }
    }

    public sealed class ServiceProjectAttachmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// "Immutable. Service project name in the format: \"projects/abc\"
        /// or \"projects/123\". As input, project name with either project id or number
        /// are accepted. As output, this field will contain project number."
        /// </summary>
        [Input("serviceProject")]
        public Input<string>? ServiceProject { get; set; }

        /// <summary>
        /// Required. The service project attachment identifier must contain the ProjectId of the service project specified in the service_project_attachment.service_project field. Hint: "projects/{project_id}"
        /// </summary>
        [Input("serviceProjectAttachmentId", required: true)]
        public Input<string> ServiceProjectAttachmentId { get; set; } = null!;

        public ServiceProjectAttachmentArgs()
        {
        }
        public static new ServiceProjectAttachmentArgs Empty => new ServiceProjectAttachmentArgs();
    }

    public sealed class ServiceProjectAttachmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Output only. Create time.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// "Identifier. The resource name of a ServiceProjectAttachment. Format:\"projects/{host-project-id}/locations/global/serviceProjectAttachments/{service-project-id}.\""
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// "Immutable. Service project name in the format: \"projects/abc\"
        /// or \"projects/123\". As input, project name with either project id or number
        /// are accepted. As output, this field will contain project number."
        /// </summary>
        [Input("serviceProject")]
        public Input<string>? ServiceProject { get; set; }

        /// <summary>
        /// Required. The service project attachment identifier must contain the ProjectId of the service project specified in the service_project_attachment.service_project field. Hint: "projects/{project_id}"
        /// </summary>
        [Input("serviceProjectAttachmentId")]
        public Input<string>? ServiceProjectAttachmentId { get; set; }

        /// <summary>
        /// ServiceProjectAttachment state.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// Output only. A globally unique identifier (in UUID4 format) for the `ServiceProjectAttachment`.
        /// </summary>
        [Input("uid")]
        public Input<string>? Uid { get; set; }

        public ServiceProjectAttachmentState()
        {
        }
        public static new ServiceProjectAttachmentState Empty => new ServiceProjectAttachmentState();
    }
}
