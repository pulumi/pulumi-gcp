// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Dns
{
    public static class GetManagedZone
    {
        /// <summary>
        /// Provides access to a zone's attributes within Google Cloud DNS.
        /// For more information see
        /// [the official documentation](https://cloud.google.com/dns/zones/)
        /// and
        /// [API](https://cloud.google.com/dns/api/v1/managedZones).
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var envDnsZone = Gcp.Dns.GetManagedZone.Invoke(new()
        ///     {
        ///         Name = "qa-zone",
        ///     });
        /// 
        ///     var dns = new Gcp.Dns.RecordSet("dns", new()
        ///     {
        ///         Name = $"my-address.{envDnsZone.Apply(getManagedZoneResult =&gt; getManagedZoneResult.DnsName)}",
        ///         Type = "TXT",
        ///         Ttl = 300,
        ///         ManagedZone = envDnsZone.Apply(getManagedZoneResult =&gt; getManagedZoneResult.Name),
        ///         Rrdatas = new[]
        ///         {
        ///             "test",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetManagedZoneResult> InvokeAsync(GetManagedZoneArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedZoneResult>("gcp:dns/getManagedZone:getManagedZone", args ?? new GetManagedZoneArgs(), options.WithDefaults());

        /// <summary>
        /// Provides access to a zone's attributes within Google Cloud DNS.
        /// For more information see
        /// [the official documentation](https://cloud.google.com/dns/zones/)
        /// and
        /// [API](https://cloud.google.com/dns/api/v1/managedZones).
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var envDnsZone = Gcp.Dns.GetManagedZone.Invoke(new()
        ///     {
        ///         Name = "qa-zone",
        ///     });
        /// 
        ///     var dns = new Gcp.Dns.RecordSet("dns", new()
        ///     {
        ///         Name = $"my-address.{envDnsZone.Apply(getManagedZoneResult =&gt; getManagedZoneResult.DnsName)}",
        ///         Type = "TXT",
        ///         Ttl = 300,
        ///         ManagedZone = envDnsZone.Apply(getManagedZoneResult =&gt; getManagedZoneResult.Name),
        ///         Rrdatas = new[]
        ///         {
        ///             "test",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedZoneResult> Invoke(GetManagedZoneInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedZoneResult>("gcp:dns/getManagedZone:getManagedZone", args ?? new GetManagedZoneInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedZoneArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique name for the resource.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The ID of the project for the Google Cloud DNS zone.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        public GetManagedZoneArgs()
        {
        }
        public static new GetManagedZoneArgs Empty => new GetManagedZoneArgs();
    }

    public sealed class GetManagedZoneInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// A unique name for the resource.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The ID of the project for the Google Cloud DNS zone.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetManagedZoneInvokeArgs()
        {
        }
        public static new GetManagedZoneInvokeArgs Empty => new GetManagedZoneInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedZoneResult
    {
        /// <summary>
        /// A textual description field.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The fully qualified DNS name of this zone, e.g. `example.io.`.
        /// </summary>
        public readonly string DnsName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int ManagedZoneId;
        public readonly string Name;
        /// <summary>
        /// The list of nameservers that will be authoritative for this
        /// domain. Use NS records to redirect from your DNS provider to these names,
        /// thus making Google Cloud DNS authoritative for this zone.
        /// </summary>
        public readonly ImmutableArray<string> NameServers;
        public readonly string? Project;
        /// <summary>
        /// The zone's visibility: public zones are exposed to the Internet,
        /// while private zones are visible only to Virtual Private Cloud resources.
        /// </summary>
        public readonly string Visibility;

        [OutputConstructor]
        private GetManagedZoneResult(
            string description,

            string dnsName,

            string id,

            int managedZoneId,

            string name,

            ImmutableArray<string> nameServers,

            string? project,

            string visibility)
        {
            Description = description;
            DnsName = dnsName;
            Id = id;
            ManagedZoneId = managedZoneId;
            Name = name;
            NameServers = nameServers;
            Project = project;
            Visibility = visibility;
        }
    }
}
