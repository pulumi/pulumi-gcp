// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Dns
{
    public static class GetManagedZones
    {
        public static Task<GetManagedZonesResult> InvokeAsync(GetManagedZonesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedZonesResult>("gcp:dns/getManagedZones:getManagedZones", args ?? new GetManagedZonesArgs(), options.WithDefaults());

        public static Output<GetManagedZonesResult> Invoke(GetManagedZonesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedZonesResult>("gcp:dns/getManagedZones:getManagedZones", args ?? new GetManagedZonesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedZonesArgs : global::Pulumi.InvokeArgs
    {
        [Input("managedZones")]
        private List<Inputs.GetManagedZonesManagedZoneArgs>? _managedZones;
        public List<Inputs.GetManagedZonesManagedZoneArgs> ManagedZones
        {
            get => _managedZones ?? (_managedZones = new List<Inputs.GetManagedZonesManagedZoneArgs>());
            set => _managedZones = value;
        }

        [Input("project")]
        public string? Project { get; set; }

        public GetManagedZonesArgs()
        {
        }
        public static new GetManagedZonesArgs Empty => new GetManagedZonesArgs();
    }

    public sealed class GetManagedZonesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("managedZones")]
        private InputList<Inputs.GetManagedZonesManagedZoneInputArgs>? _managedZones;
        public InputList<Inputs.GetManagedZonesManagedZoneInputArgs> ManagedZones
        {
            get => _managedZones ?? (_managedZones = new InputList<Inputs.GetManagedZonesManagedZoneInputArgs>());
            set => _managedZones = value;
        }

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetManagedZonesInvokeArgs()
        {
        }
        public static new GetManagedZonesInvokeArgs Empty => new GetManagedZonesInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedZonesResult
    {
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetManagedZonesManagedZoneResult> ManagedZones;
        public readonly string? Project;

        [OutputConstructor]
        private GetManagedZonesResult(
            string id,

            ImmutableArray<Outputs.GetManagedZonesManagedZoneResult> managedZones,

            string? project)
        {
            Id = id;
            ManagedZones = managedZones;
            Project = project;
        }
    }
}
