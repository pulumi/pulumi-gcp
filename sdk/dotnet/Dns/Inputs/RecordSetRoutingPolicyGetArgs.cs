// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Dns.Inputs
{

    public sealed class RecordSetRoutingPolicyGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether to enable fencing for geo queries.
        /// </summary>
        [Input("enableGeoFencing")]
        public Input<bool>? EnableGeoFencing { get; set; }

        [Input("geos")]
        private InputList<Inputs.RecordSetRoutingPolicyGeoGetArgs>? _geos;

        /// <summary>
        /// The configuration for Geolocation based routing policy.
        /// Structure is document below.
        /// </summary>
        public InputList<Inputs.RecordSetRoutingPolicyGeoGetArgs> Geos
        {
            get => _geos ?? (_geos = new InputList<Inputs.RecordSetRoutingPolicyGeoGetArgs>());
            set => _geos = value;
        }

        /// <summary>
        /// The configuration for a primary-backup policy with global to regional failover. Queries are responded to with the global primary targets, but if none of the primary targets are healthy, then we fallback to a regional failover policy.
        /// Structure is document below.
        /// </summary>
        [Input("primaryBackup")]
        public Input<Inputs.RecordSetRoutingPolicyPrimaryBackupGetArgs>? PrimaryBackup { get; set; }

        [Input("wrrs")]
        private InputList<Inputs.RecordSetRoutingPolicyWrrGetArgs>? _wrrs;

        /// <summary>
        /// The configuration for Weighted Round Robin based routing policy.
        /// Structure is document below.
        /// </summary>
        public InputList<Inputs.RecordSetRoutingPolicyWrrGetArgs> Wrrs
        {
            get => _wrrs ?? (_wrrs = new InputList<Inputs.RecordSetRoutingPolicyWrrGetArgs>());
            set => _wrrs = value;
        }

        public RecordSetRoutingPolicyGetArgs()
        {
        }
        public static new RecordSetRoutingPolicyGetArgs Empty => new RecordSetRoutingPolicyGetArgs();
    }
}
