// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Dns
{
    /// <summary>
    /// ## Example Usage
    /// ### Dns Response Policy Rule Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var network_1 = new Gcp.Compute.Network("network-1", new()
    ///     {
    ///         AutoCreateSubnetworks = false,
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = google_beta,
    ///     });
    /// 
    ///     var network_2 = new Gcp.Compute.Network("network-2", new()
    ///     {
    ///         AutoCreateSubnetworks = false,
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = google_beta,
    ///     });
    /// 
    ///     var response_policy = new Gcp.Dns.ResponsePolicy("response-policy", new()
    ///     {
    ///         ResponsePolicyName = "example-response-policy",
    ///         Networks = new[]
    ///         {
    ///             new Gcp.Dns.Inputs.ResponsePolicyNetworkArgs
    ///             {
    ///                 NetworkUrl = network_1.Id,
    ///             },
    ///             new Gcp.Dns.Inputs.ResponsePolicyNetworkArgs
    ///             {
    ///                 NetworkUrl = network_2.Id,
    ///             },
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = google_beta,
    ///     });
    /// 
    ///     var example_response_policy_rule = new Gcp.Dns.ResponsePolicyRule("example-response-policy-rule", new()
    ///     {
    ///         ResponsePolicy = response_policy.ResponsePolicyName,
    ///         RuleName = "example-rule",
    ///         DnsName = "dns.example.com.",
    ///         LocalData = new Gcp.Dns.Inputs.ResponsePolicyRuleLocalDataArgs
    ///         {
    ///             LocalDatas = new[]
    ///             {
    ///                 new Gcp.Dns.Inputs.ResponsePolicyRuleLocalDataLocalDataArgs
    ///                 {
    ///                     Name = "dns.example.com.",
    ///                     Type = "A",
    ///                     Ttl = 300,
    ///                     Rrdatas = new[]
    ///                     {
    ///                         "192.0.2.91",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         Provider = google_beta,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ResponsePolicyRule can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import gcp:dns/responsePolicyRule:ResponsePolicyRule default projects/{{project}}/responsePolicies/{{response_policy}}/rules/{{rule_name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:dns/responsePolicyRule:ResponsePolicyRule default {{project}}/{{response_policy}}/{{rule_name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:dns/responsePolicyRule:ResponsePolicyRule default {{response_policy}}/{{rule_name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:dns/responsePolicyRule:ResponsePolicyRule")]
    public partial class ResponsePolicyRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The DNS name (wildcard or exact) to apply this rule to. Must be unique within the Response Policy Rule.
        /// </summary>
        [Output("dnsName")]
        public Output<string> DnsName { get; private set; } = null!;

        /// <summary>
        /// Answer this query directly with DNS data. These ResourceRecordSets override any other DNS behavior for the matched name;
        /// in particular they override private zones, the public internet, and GCP internal DNS. No SOA nor NS types are allowed.
        /// Structure is documented below.
        /// </summary>
        [Output("localData")]
        public Output<Outputs.ResponsePolicyRuleLocalData?> LocalData { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Identifies the response policy addressed by this request.
        /// </summary>
        [Output("responsePolicy")]
        public Output<string> ResponsePolicy { get; private set; } = null!;

        /// <summary>
        /// An identifier for this rule. Must be unique with the ResponsePolicy.
        /// </summary>
        [Output("ruleName")]
        public Output<string> RuleName { get; private set; } = null!;


        /// <summary>
        /// Create a ResponsePolicyRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ResponsePolicyRule(string name, ResponsePolicyRuleArgs args, CustomResourceOptions? options = null)
            : base("gcp:dns/responsePolicyRule:ResponsePolicyRule", name, args ?? new ResponsePolicyRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ResponsePolicyRule(string name, Input<string> id, ResponsePolicyRuleState? state = null, CustomResourceOptions? options = null)
            : base("gcp:dns/responsePolicyRule:ResponsePolicyRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ResponsePolicyRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ResponsePolicyRule Get(string name, Input<string> id, ResponsePolicyRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new ResponsePolicyRule(name, id, state, options);
        }
    }

    public sealed class ResponsePolicyRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The DNS name (wildcard or exact) to apply this rule to. Must be unique within the Response Policy Rule.
        /// </summary>
        [Input("dnsName", required: true)]
        public Input<string> DnsName { get; set; } = null!;

        /// <summary>
        /// Answer this query directly with DNS data. These ResourceRecordSets override any other DNS behavior for the matched name;
        /// in particular they override private zones, the public internet, and GCP internal DNS. No SOA nor NS types are allowed.
        /// Structure is documented below.
        /// </summary>
        [Input("localData")]
        public Input<Inputs.ResponsePolicyRuleLocalDataArgs>? LocalData { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Identifies the response policy addressed by this request.
        /// </summary>
        [Input("responsePolicy", required: true)]
        public Input<string> ResponsePolicy { get; set; } = null!;

        /// <summary>
        /// An identifier for this rule. Must be unique with the ResponsePolicy.
        /// </summary>
        [Input("ruleName", required: true)]
        public Input<string> RuleName { get; set; } = null!;

        public ResponsePolicyRuleArgs()
        {
        }
        public static new ResponsePolicyRuleArgs Empty => new ResponsePolicyRuleArgs();
    }

    public sealed class ResponsePolicyRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The DNS name (wildcard or exact) to apply this rule to. Must be unique within the Response Policy Rule.
        /// </summary>
        [Input("dnsName")]
        public Input<string>? DnsName { get; set; }

        /// <summary>
        /// Answer this query directly with DNS data. These ResourceRecordSets override any other DNS behavior for the matched name;
        /// in particular they override private zones, the public internet, and GCP internal DNS. No SOA nor NS types are allowed.
        /// Structure is documented below.
        /// </summary>
        [Input("localData")]
        public Input<Inputs.ResponsePolicyRuleLocalDataGetArgs>? LocalData { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Identifies the response policy addressed by this request.
        /// </summary>
        [Input("responsePolicy")]
        public Input<string>? ResponsePolicy { get; set; }

        /// <summary>
        /// An identifier for this rule. Must be unique with the ResponsePolicy.
        /// </summary>
        [Input("ruleName")]
        public Input<string>? RuleName { get; set; }

        public ResponsePolicyRuleState()
        {
        }
        public static new ResponsePolicyRuleState Empty => new ResponsePolicyRuleState();
    }
}
