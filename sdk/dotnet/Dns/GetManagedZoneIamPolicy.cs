// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Dns
{
    public static class GetManagedZoneIamPolicy
    {
        /// <summary>
        /// Retrieves the current IAM policy data for managedzone
        /// 
        /// 
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Dns.GetManagedZoneIamPolicy.Invoke(new()
        ///     {
        ///         Project = google_dns_managed_zone.Default.Project,
        ///         ManagedZone = google_dns_managed_zone.Default.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetManagedZoneIamPolicyResult> InvokeAsync(GetManagedZoneIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetManagedZoneIamPolicyResult>("gcp:dns/getManagedZoneIamPolicy:getManagedZoneIamPolicy", args ?? new GetManagedZoneIamPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the current IAM policy data for managedzone
        /// 
        /// 
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Dns.GetManagedZoneIamPolicy.Invoke(new()
        ///     {
        ///         Project = google_dns_managed_zone.Default.Project,
        ///         ManagedZone = google_dns_managed_zone.Default.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetManagedZoneIamPolicyResult> Invoke(GetManagedZoneIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetManagedZoneIamPolicyResult>("gcp:dns/getManagedZoneIamPolicy:getManagedZoneIamPolicy", args ?? new GetManagedZoneIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetManagedZoneIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("managedZone", required: true)]
        public string ManagedZone { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        public GetManagedZoneIamPolicyArgs()
        {
        }
        public static new GetManagedZoneIamPolicyArgs Empty => new GetManagedZoneIamPolicyArgs();
    }

    public sealed class GetManagedZoneIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("managedZone", required: true)]
        public Input<string> ManagedZone { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetManagedZoneIamPolicyInvokeArgs()
        {
        }
        public static new GetManagedZoneIamPolicyInvokeArgs Empty => new GetManagedZoneIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetManagedZoneIamPolicyResult
    {
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ManagedZone;
        /// <summary>
        /// (Required only by `gcp.dns.DnsManagedZoneIamPolicy`) The policy data generated by
        /// a `gcp.organizations.getIAMPolicy` data source.
        /// </summary>
        public readonly string PolicyData;
        public readonly string Project;

        [OutputConstructor]
        private GetManagedZoneIamPolicyResult(
            string etag,

            string id,

            string managedZone,

            string policyData,

            string project)
        {
            Etag = etag;
            Id = id;
            ManagedZone = managedZone;
            PolicyData = policyData;
            Project = project;
        }
    }
}
