// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Dns
{
    /// <summary>
    /// A single DNS record that exists on a domain name (i.e. in a managed zone).
    /// This record defines the information about the domain and where the
    /// domain / subdomains direct to.
    /// 
    /// The record will include the domain/subdomain name, a type (i.e. A, AAA,
    /// CAA, MX, CNAME, NS, etc)
    /// 
    /// ## Example Usage
    /// ### Dns Record Set Basic
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var parent_zone = new Gcp.Dns.ManagedZone("parent-zone", new Gcp.Dns.ManagedZoneArgs
    ///         {
    ///             DnsName = "my-zone.hashicorptest.com.",
    ///             Description = "Test Description",
    ///         }, new CustomResourceOptions
    ///         {
    ///             Provider = "google-beta",
    ///         });
    ///         var resource_recordset = new Gcp.Dns.RecordSet("resource-recordset", new Gcp.Dns.RecordSetArgs
    ///         {
    ///             ManagedZone = parent_zone.Name,
    ///             Name = "test-record.my-zone.hashicorptest.com.",
    ///             Type = "A",
    ///             Rrdatas = 
    ///             {
    ///                 "10.0.0.1",
    ///                 "10.1.0.1",
    ///             },
    ///             Ttl = 86400,
    ///         }, new CustomResourceOptions
    ///         {
    ///             Provider = "google-beta",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// ResourceDnsRecordSet can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import gcp:dns/recordSet:RecordSet default projects/{{project}}/managedZones/{{managed_zone}}/rrsets/{{name}}/{{type}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:dns/recordSet:RecordSet default {{project}}/{{managed_zone}}/{{name}}/{{type}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:dns/recordSet:RecordSet default {{managed_zone}}/{{name}}/{{type}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:dns/recordSet:RecordSet")]
    public partial class RecordSet : Pulumi.CustomResource
    {
        /// <summary>
        /// Identifies the managed zone addressed by this request.
        /// </summary>
        [Output("managedZone")]
        public Output<string> ManagedZone { get; private set; } = null!;

        /// <summary>
        /// For example, www.example.com.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The string data for the records in this record set whose meaning depends on the DNS type. For TXT record, if the string
        /// data contains spaces, add surrounding \" if you don't want your string to get split on spaces. To specify a single
        /// record value longer than 255 characters such as a TXT record for DKIM, add \"\" inside the Terraform configuration
        /// string (e.g. "first255characters\"\"morecharacters").
        /// </summary>
        [Output("rrdatas")]
        public Output<ImmutableArray<string>> Rrdatas { get; private set; } = null!;

        /// <summary>
        /// Number of seconds that this ResourceRecordSet can be cached by
        /// resolvers.
        /// </summary>
        [Output("ttl")]
        public Output<int?> Ttl { get; private set; } = null!;

        /// <summary>
        /// One of valid DNS resource types.
        /// Possible values are `A`, `AAAA`, `CAA`, `CNAME`, `DNSKEY`, `DS`, `IPSECVPNKEY`, `MX`, `NAPTR`, `NS`, `PTR`, `SOA`, `SPF`, `SRV`, `SSHFP`, `TLSA`, and `TXT`.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a RecordSet resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RecordSet(string name, RecordSetArgs args, CustomResourceOptions? options = null)
            : base("gcp:dns/recordSet:RecordSet", name, args ?? new RecordSetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RecordSet(string name, Input<string> id, RecordSetState? state = null, CustomResourceOptions? options = null)
            : base("gcp:dns/recordSet:RecordSet", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RecordSet resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RecordSet Get(string name, Input<string> id, RecordSetState? state = null, CustomResourceOptions? options = null)
        {
            return new RecordSet(name, id, state, options);
        }
    }

    public sealed class RecordSetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Identifies the managed zone addressed by this request.
        /// </summary>
        [Input("managedZone", required: true)]
        public Input<string> ManagedZone { get; set; } = null!;

        /// <summary>
        /// For example, www.example.com.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("rrdatas")]
        private InputList<string>? _rrdatas;

        /// <summary>
        /// The string data for the records in this record set whose meaning depends on the DNS type. For TXT record, if the string
        /// data contains spaces, add surrounding \" if you don't want your string to get split on spaces. To specify a single
        /// record value longer than 255 characters such as a TXT record for DKIM, add \"\" inside the Terraform configuration
        /// string (e.g. "first255characters\"\"morecharacters").
        /// </summary>
        public InputList<string> Rrdatas
        {
            get => _rrdatas ?? (_rrdatas = new InputList<string>());
            set => _rrdatas = value;
        }

        /// <summary>
        /// Number of seconds that this ResourceRecordSet can be cached by
        /// resolvers.
        /// </summary>
        [Input("ttl")]
        public Input<int>? Ttl { get; set; }

        /// <summary>
        /// One of valid DNS resource types.
        /// Possible values are `A`, `AAAA`, `CAA`, `CNAME`, `DNSKEY`, `DS`, `IPSECVPNKEY`, `MX`, `NAPTR`, `NS`, `PTR`, `SOA`, `SPF`, `SRV`, `SSHFP`, `TLSA`, and `TXT`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public RecordSetArgs()
        {
        }
    }

    public sealed class RecordSetState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Identifies the managed zone addressed by this request.
        /// </summary>
        [Input("managedZone")]
        public Input<string>? ManagedZone { get; set; }

        /// <summary>
        /// For example, www.example.com.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("rrdatas")]
        private InputList<string>? _rrdatas;

        /// <summary>
        /// The string data for the records in this record set whose meaning depends on the DNS type. For TXT record, if the string
        /// data contains spaces, add surrounding \" if you don't want your string to get split on spaces. To specify a single
        /// record value longer than 255 characters such as a TXT record for DKIM, add \"\" inside the Terraform configuration
        /// string (e.g. "first255characters\"\"morecharacters").
        /// </summary>
        public InputList<string> Rrdatas
        {
            get => _rrdatas ?? (_rrdatas = new InputList<string>());
            set => _rrdatas = value;
        }

        /// <summary>
        /// Number of seconds that this ResourceRecordSet can be cached by
        /// resolvers.
        /// </summary>
        [Input("ttl")]
        public Input<int>? Ttl { get; set; }

        /// <summary>
        /// One of valid DNS resource types.
        /// Possible values are `A`, `AAAA`, `CAA`, `CNAME`, `DNSKEY`, `DS`, `IPSECVPNKEY`, `MX`, `NAPTR`, `NS`, `PTR`, `SOA`, `SPF`, `SRV`, `SSHFP`, `TLSA`, and `TXT`.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public RecordSetState()
        {
        }
    }
}
