// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Dns
{
    public static class GetKeys
    {
        /// <summary>
        /// Get the DNSKEY and DS records of DNSSEC-signed managed zones. For more information see the
        /// [official documentation](https://cloud.google.com/dns/docs/dnskeys/)
        /// and [API](https://cloud.google.com/dns/docs/reference/v1/dnsKeys).
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var foo = new Gcp.Dns.ManagedZone("foo", new Gcp.Dns.ManagedZoneArgs
        ///         {
        ///             DnsName = "foo.bar.",
        ///             DnssecConfig = new Gcp.Dns.Inputs.ManagedZoneDnssecConfigArgs
        ///             {
        ///                 State = "on",
        ///                 NonExistence = "nsec3",
        ///             },
        ///         });
        ///         var fooDnsKeys = foo.Id.Apply(id =&gt; Gcp.Dns.GetKeys.InvokeAsync(new Gcp.Dns.GetKeysArgs
        ///         {
        ///             ManagedZone = id,
        ///         }));
        ///         this.FooDnsDsRecord = fooDnsKeys.Apply(fooDnsKeys =&gt; fooDnsKeys.KeySigningKeys[0].DsRecord);
        ///     }
        /// 
        ///     [Output("fooDnsDsRecord")]
        ///     public Output&lt;string&gt; FooDnsDsRecord { get; set; }
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetKeysResult> InvokeAsync(GetKeysArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetKeysResult>("gcp:dns/getKeys:getKeys", args ?? new GetKeysArgs(), options.WithVersion());
    }


    public sealed class GetKeysArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name or id of the Cloud DNS managed zone.
        /// </summary>
        [Input("managedZone", required: true)]
        public string ManagedZone { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs. If `project` is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        public GetKeysArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetKeysResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of Key-signing key (KSK) records. Structure is documented below. Additionally, the DS record is provided:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetKeysKeySigningKeyResult> KeySigningKeys;
        public readonly string ManagedZone;
        public readonly string Project;
        /// <summary>
        /// A list of Zone-signing key (ZSK) records. Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetKeysZoneSigningKeyResult> ZoneSigningKeys;

        [OutputConstructor]
        private GetKeysResult(
            string id,

            ImmutableArray<Outputs.GetKeysKeySigningKeyResult> keySigningKeys,

            string managedZone,

            string project,

            ImmutableArray<Outputs.GetKeysZoneSigningKeyResult> zoneSigningKeys)
        {
            Id = id;
            KeySigningKeys = keySigningKeys;
            ManagedZone = managedZone;
            Project = project;
            ZoneSigningKeys = zoneSigningKeys;
        }
    }
}
