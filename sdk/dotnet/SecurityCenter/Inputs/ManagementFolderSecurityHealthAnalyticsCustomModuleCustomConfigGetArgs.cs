// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.SecurityCenter.Inputs
{

    public sealed class ManagementFolderSecurityHealthAnalyticsCustomModuleCustomConfigGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Custom output properties.
        /// Structure is documented below.
        /// </summary>
        [Input("customOutput")]
        public Input<Inputs.ManagementFolderSecurityHealthAnalyticsCustomModuleCustomConfigCustomOutputGetArgs>? CustomOutput { get; set; }

        /// <summary>
        /// Text that describes the vulnerability or misconfiguration that the custom
        /// module detects. This explanation is returned with each finding instance to
        /// help investigators understand the detected issue. The text must be enclosed in quotation marks.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The CEL expression to evaluate to produce findings. When the expression evaluates
        /// to true against a resource, a finding is generated.
        /// Structure is documented below.
        /// </summary>
        [Input("predicate")]
        public Input<Inputs.ManagementFolderSecurityHealthAnalyticsCustomModuleCustomConfigPredicateGetArgs>? Predicate { get; set; }

        /// <summary>
        /// An explanation of the recommended steps that security teams can take to resolve
        /// the detected issue. This explanation is returned with each finding generated by
        /// this module in the nextSteps property of the finding JSON.
        /// </summary>
        [Input("recommendation")]
        public Input<string>? Recommendation { get; set; }

        /// <summary>
        /// The resource types that the custom module operates on. Each custom module
        /// can specify up to 5 resource types.
        /// Structure is documented below.
        /// </summary>
        [Input("resourceSelector")]
        public Input<Inputs.ManagementFolderSecurityHealthAnalyticsCustomModuleCustomConfigResourceSelectorGetArgs>? ResourceSelector { get; set; }

        /// <summary>
        /// The severity to assign to findings generated by the module.
        /// Possible values are: `CRITICAL`, `HIGH`, `MEDIUM`, `LOW`.
        /// </summary>
        [Input("severity")]
        public Input<string>? Severity { get; set; }

        public ManagementFolderSecurityHealthAnalyticsCustomModuleCustomConfigGetArgs()
        {
        }
        public static new ManagementFolderSecurityHealthAnalyticsCustomModuleCustomConfigGetArgs Empty => new ManagementFolderSecurityHealthAnalyticsCustomModuleCustomConfigGetArgs();
    }
}
