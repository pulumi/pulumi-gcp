// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.SecretManager
{
    public static class GetRegionalSecrets
    {
        /// <summary>
        /// Use this data source to list the Secret Manager Regional Secrets.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var secrets = Gcp.SecretManager.GetRegionalSecrets.Invoke(new()
        ///     {
        ///         Location = "us-central1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetRegionalSecretsResult> InvokeAsync(GetRegionalSecretsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRegionalSecretsResult>("gcp:secretmanager/getRegionalSecrets:getRegionalSecrets", args ?? new GetRegionalSecretsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to list the Secret Manager Regional Secrets.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var secrets = Gcp.SecretManager.GetRegionalSecrets.Invoke(new()
        ///     {
        ///         Location = "us-central1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRegionalSecretsResult> Invoke(GetRegionalSecretsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRegionalSecretsResult>("gcp:secretmanager/getRegionalSecrets:getRegionalSecrets", args ?? new GetRegionalSecretsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRegionalSecretsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter string, adhering to the rules in [List-operation filtering](https://cloud.google.com/secret-manager/docs/filtering). List only secrets matching the filter. If filter is empty, all regional secrets are listed from the specified location.
        /// </summary>
        [Input("filter")]
        public string? Filter { get; set; }

        /// <summary>
        /// The location of the regional secret.
        /// </summary>
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        /// <summary>
        /// The ID of the project.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        public GetRegionalSecretsArgs()
        {
        }
        public static new GetRegionalSecretsArgs Empty => new GetRegionalSecretsArgs();
    }

    public sealed class GetRegionalSecretsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter string, adhering to the rules in [List-operation filtering](https://cloud.google.com/secret-manager/docs/filtering). List only secrets matching the filter. If filter is empty, all regional secrets are listed from the specified location.
        /// </summary>
        [Input("filter")]
        public Input<string>? Filter { get; set; }

        /// <summary>
        /// The location of the regional secret.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The ID of the project.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetRegionalSecretsInvokeArgs()
        {
        }
        public static new GetRegionalSecretsInvokeArgs Empty => new GetRegionalSecretsInvokeArgs();
    }


    [OutputType]
    public sealed class GetRegionalSecretsResult
    {
        public readonly string? Filter;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The location in which the resource belongs.
        /// </summary>
        public readonly string Location;
        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// </summary>
        public readonly string Project;
        /// <summary>
        /// A list of regional secrets present in the specified location and matching the filter. Structure is defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRegionalSecretsSecretResult> Secrets;

        [OutputConstructor]
        private GetRegionalSecretsResult(
            string? filter,

            string id,

            string location,

            string project,

            ImmutableArray<Outputs.GetRegionalSecretsSecretResult> secrets)
        {
            Filter = filter;
            Id = id;
            Location = location;
            Project = project;
            Secrets = secrets;
        }
    }
}
