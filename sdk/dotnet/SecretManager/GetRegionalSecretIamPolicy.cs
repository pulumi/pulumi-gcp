// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.SecretManager
{
    public static class GetRegionalSecretIamPolicy
    {
        /// <summary>
        /// Retrieves the current IAM policy data for regionalsecret
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.SecretManager.GetRegionalSecretIamPolicy.Invoke(new()
        ///     {
        ///         Project = regional_secret_basic.Project,
        ///         Location = regional_secret_basic.Location,
        ///         SecretId = regional_secret_basic.SecretId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetRegionalSecretIamPolicyResult> InvokeAsync(GetRegionalSecretIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRegionalSecretIamPolicyResult>("gcp:secretmanager/getRegionalSecretIamPolicy:getRegionalSecretIamPolicy", args ?? new GetRegionalSecretIamPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the current IAM policy data for regionalsecret
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.SecretManager.GetRegionalSecretIamPolicy.Invoke(new()
        ///     {
        ///         Project = regional_secret_basic.Project,
        ///         Location = regional_secret_basic.Location,
        ///         SecretId = regional_secret_basic.SecretId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRegionalSecretIamPolicyResult> Invoke(GetRegionalSecretIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRegionalSecretIamPolicyResult>("gcp:secretmanager/getRegionalSecretIamPolicy:getRegionalSecretIamPolicy", args ?? new GetRegionalSecretIamPolicyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the current IAM policy data for regionalsecret
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.SecretManager.GetRegionalSecretIamPolicy.Invoke(new()
        ///     {
        ///         Project = regional_secret_basic.Project,
        ///         Location = regional_secret_basic.Location,
        ///         SecretId = regional_secret_basic.SecretId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRegionalSecretIamPolicyResult> Invoke(GetRegionalSecretIamPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRegionalSecretIamPolicyResult>("gcp:secretmanager/getRegionalSecretIamPolicy:getRegionalSecretIamPolicy", args ?? new GetRegionalSecretIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRegionalSecretIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The location of the regional secret. eg us-central1
        /// Used to find the parent resource to bind the IAM policy to. If not specified,
        /// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
        /// location is specified, it is taken from the provider configuration.
        /// </summary>
        [Input("location")]
        public string? Location { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("secretId", required: true)]
        public string SecretId { get; set; } = null!;

        public GetRegionalSecretIamPolicyArgs()
        {
        }
        public static new GetRegionalSecretIamPolicyArgs Empty => new GetRegionalSecretIamPolicyArgs();
    }

    public sealed class GetRegionalSecretIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The location of the regional secret. eg us-central1
        /// Used to find the parent resource to bind the IAM policy to. If not specified,
        /// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
        /// location is specified, it is taken from the provider configuration.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("secretId", required: true)]
        public Input<string> SecretId { get; set; } = null!;

        public GetRegionalSecretIamPolicyInvokeArgs()
        {
        }
        public static new GetRegionalSecretIamPolicyInvokeArgs Empty => new GetRegionalSecretIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetRegionalSecretIamPolicyResult
    {
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Location;
        /// <summary>
        /// (Required only by `gcp.secretmanager.RegionalSecretIamPolicy`) The policy data generated by
        /// a `gcp.organizations.getIAMPolicy` data source.
        /// </summary>
        public readonly string PolicyData;
        public readonly string Project;
        public readonly string SecretId;

        [OutputConstructor]
        private GetRegionalSecretIamPolicyResult(
            string etag,

            string id,

            string location,

            string policyData,

            string project,

            string secretId)
        {
            Etag = etag;
            Id = id;
            Location = location;
            PolicyData = policyData;
            Project = project;
            SecretId = secretId;
        }
    }
}
