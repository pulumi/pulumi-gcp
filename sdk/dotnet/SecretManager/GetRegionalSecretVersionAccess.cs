// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.SecretManager
{
    public static class GetRegionalSecretVersionAccess
    {
        /// <summary>
        /// subcategory: "Secret Manager"
        /// page_title: "Google: gcp.secretmanager.getRegionalSecretVersionAccess"
        /// description: |-
        ///   Get a payload of Secret Manager regional secret's version.
        /// ---
        /// 
        /// Get the value from a Secret Manager regional secret version. This is similar to the gcp.secretmanager.RegionalSecretVersion datasource, but it only requires the [Secret Manager Secret Accessor](https://cloud.google.com/secret-manager/docs/access-control#secretmanager.secretAccessor) role. For more information see the [official documentation](https://cloud.google.com/secret-manager/docs/regional-secrets-overview) and [API](https://cloud.google.com/secret-manager/docs/reference/rest/v1/projects.locations.secrets.versions/access).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var latest = Gcp.SecretManager.GetRegionalSecretVersionAccess.Invoke(new()
        ///     {
        ///         Secret = "my-secret",
        ///         Location = "us-central1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetRegionalSecretVersionAccessResult> InvokeAsync(GetRegionalSecretVersionAccessArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRegionalSecretVersionAccessResult>("gcp:secretmanager/getRegionalSecretVersionAccess:getRegionalSecretVersionAccess", args ?? new GetRegionalSecretVersionAccessArgs(), options.WithDefaults());

        /// <summary>
        /// subcategory: "Secret Manager"
        /// page_title: "Google: gcp.secretmanager.getRegionalSecretVersionAccess"
        /// description: |-
        ///   Get a payload of Secret Manager regional secret's version.
        /// ---
        /// 
        /// Get the value from a Secret Manager regional secret version. This is similar to the gcp.secretmanager.RegionalSecretVersion datasource, but it only requires the [Secret Manager Secret Accessor](https://cloud.google.com/secret-manager/docs/access-control#secretmanager.secretAccessor) role. For more information see the [official documentation](https://cloud.google.com/secret-manager/docs/regional-secrets-overview) and [API](https://cloud.google.com/secret-manager/docs/reference/rest/v1/projects.locations.secrets.versions/access).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var latest = Gcp.SecretManager.GetRegionalSecretVersionAccess.Invoke(new()
        ///     {
        ///         Secret = "my-secret",
        ///         Location = "us-central1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRegionalSecretVersionAccessResult> Invoke(GetRegionalSecretVersionAccessInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRegionalSecretVersionAccessResult>("gcp:secretmanager/getRegionalSecretVersionAccess:getRegionalSecretVersionAccess", args ?? new GetRegionalSecretVersionAccessInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// subcategory: "Secret Manager"
        /// page_title: "Google: gcp.secretmanager.getRegionalSecretVersionAccess"
        /// description: |-
        ///   Get a payload of Secret Manager regional secret's version.
        /// ---
        /// 
        /// Get the value from a Secret Manager regional secret version. This is similar to the gcp.secretmanager.RegionalSecretVersion datasource, but it only requires the [Secret Manager Secret Accessor](https://cloud.google.com/secret-manager/docs/access-control#secretmanager.secretAccessor) role. For more information see the [official documentation](https://cloud.google.com/secret-manager/docs/regional-secrets-overview) and [API](https://cloud.google.com/secret-manager/docs/reference/rest/v1/projects.locations.secrets.versions/access).
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var latest = Gcp.SecretManager.GetRegionalSecretVersionAccess.Invoke(new()
        ///     {
        ///         Secret = "my-secret",
        ///         Location = "us-central1",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetRegionalSecretVersionAccessResult> Invoke(GetRegionalSecretVersionAccessInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRegionalSecretVersionAccessResult>("gcp:secretmanager/getRegionalSecretVersionAccess:getRegionalSecretVersionAccess", args ?? new GetRegionalSecretVersionAccessInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRegionalSecretVersionAccessArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// If set to 'true', the secret data is
        /// expected to be base64-encoded string.
        /// </summary>
        [Input("isSecretDataBase64")]
        public bool? IsSecretDataBase64 { get; set; }

        /// <summary>
        /// Location of Secret Manager regional secret resource.
        /// It must be provided when the `secret` field provided consists of only the name of the regional secret.
        /// </summary>
        [Input("location")]
        public string? Location { get; set; }

        /// <summary>
        /// The project to get the secret version for. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        /// <summary>
        /// The regional secret to get the secret version for.
        /// This can be either the reference of the regional secret as in `projects/{{project}}/locations/{{location}}/secrets/{{secret_id}}` or only the name of the regional secret as in `{{secret_id}}`. If only the name of the regional secret is provided, the location must also be provided.
        /// </summary>
        [Input("secret", required: true)]
        public string Secret { get; set; } = null!;

        /// <summary>
        /// The version of the regional secret to get. If it
        /// is not provided, the latest version is retrieved.
        /// </summary>
        [Input("version")]
        public string? Version { get; set; }

        public GetRegionalSecretVersionAccessArgs()
        {
        }
        public static new GetRegionalSecretVersionAccessArgs Empty => new GetRegionalSecretVersionAccessArgs();
    }

    public sealed class GetRegionalSecretVersionAccessInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// If set to 'true', the secret data is
        /// expected to be base64-encoded string.
        /// </summary>
        [Input("isSecretDataBase64")]
        public Input<bool>? IsSecretDataBase64 { get; set; }

        /// <summary>
        /// Location of Secret Manager regional secret resource.
        /// It must be provided when the `secret` field provided consists of only the name of the regional secret.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The project to get the secret version for. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The regional secret to get the secret version for.
        /// This can be either the reference of the regional secret as in `projects/{{project}}/locations/{{location}}/secrets/{{secret_id}}` or only the name of the regional secret as in `{{secret_id}}`. If only the name of the regional secret is provided, the location must also be provided.
        /// </summary>
        [Input("secret", required: true)]
        public Input<string> Secret { get; set; } = null!;

        /// <summary>
        /// The version of the regional secret to get. If it
        /// is not provided, the latest version is retrieved.
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public GetRegionalSecretVersionAccessInvokeArgs()
        {
        }
        public static new GetRegionalSecretVersionAccessInvokeArgs Empty => new GetRegionalSecretVersionAccessInvokeArgs();
    }


    [OutputType]
    public sealed class GetRegionalSecretVersionAccessResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? IsSecretDataBase64;
        public readonly string Location;
        /// <summary>
        /// The resource name of the regional SecretVersion. Format:
        /// `projects/{{project}}/locations/{{location}}/secrets/{{secret_id}}/versions/{{version}}`
        /// </summary>
        public readonly string Name;
        public readonly string Project;
        public readonly string Secret;
        /// <summary>
        /// The secret data. No larger than 64KiB.
        /// </summary>
        public readonly string SecretData;
        public readonly string Version;

        [OutputConstructor]
        private GetRegionalSecretVersionAccessResult(
            string id,

            bool? isSecretDataBase64,

            string location,

            string name,

            string project,

            string secret,

            string secretData,

            string version)
        {
            Id = id;
            IsSecretDataBase64 = isSecretDataBase64;
            Location = location;
            Name = name;
            Project = project;
            Secret = secret;
            SecretData = secretData;
            Version = version;
        }
    }
}
