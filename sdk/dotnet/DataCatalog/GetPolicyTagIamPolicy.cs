// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.DataCatalog
{
    public static class GetPolicyTagIamPolicy
    {
        /// <summary>
        /// Retrieves the current IAM policy data for policytag
        /// 
        /// 
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.DataCatalog.GetPolicyTagIamPolicy.Invoke(new()
        ///     {
        ///         PolicyTag = google_data_catalog_policy_tag.Basic_policy_tag.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetPolicyTagIamPolicyResult> InvokeAsync(GetPolicyTagIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPolicyTagIamPolicyResult>("gcp:datacatalog/getPolicyTagIamPolicy:getPolicyTagIamPolicy", args ?? new GetPolicyTagIamPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the current IAM policy data for policytag
        /// 
        /// 
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.DataCatalog.GetPolicyTagIamPolicy.Invoke(new()
        ///     {
        ///         PolicyTag = google_data_catalog_policy_tag.Basic_policy_tag.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetPolicyTagIamPolicyResult> Invoke(GetPolicyTagIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPolicyTagIamPolicyResult>("gcp:datacatalog/getPolicyTagIamPolicy:getPolicyTagIamPolicy", args ?? new GetPolicyTagIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPolicyTagIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("policyTag", required: true)]
        public string PolicyTag { get; set; } = null!;

        public GetPolicyTagIamPolicyArgs()
        {
        }
        public static new GetPolicyTagIamPolicyArgs Empty => new GetPolicyTagIamPolicyArgs();
    }

    public sealed class GetPolicyTagIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("policyTag", required: true)]
        public Input<string> PolicyTag { get; set; } = null!;

        public GetPolicyTagIamPolicyInvokeArgs()
        {
        }
        public static new GetPolicyTagIamPolicyInvokeArgs Empty => new GetPolicyTagIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetPolicyTagIamPolicyResult
    {
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (Required only by `gcp.datacatalog.PolicyTagIamPolicy`) The policy data generated by
        /// a `gcp.organizations.getIAMPolicy` data source.
        /// </summary>
        public readonly string PolicyData;
        public readonly string PolicyTag;

        [OutputConstructor]
        private GetPolicyTagIamPolicyResult(
            string etag,

            string id,

            string policyData,

            string policyTag)
        {
            Etag = etag;
            Id = id;
            PolicyData = policyData;
            PolicyTag = policyTag;
        }
    }
}
