// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.DataCatalog
{
    public static class GetTaxonomyIamPolicy
    {
        /// <summary>
        /// Retrieves the current IAM policy data for taxonomy
        /// </summary>
        public static Task<GetTaxonomyIamPolicyResult> InvokeAsync(GetTaxonomyIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTaxonomyIamPolicyResult>("gcp:datacatalog/getTaxonomyIamPolicy:getTaxonomyIamPolicy", args ?? new GetTaxonomyIamPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the current IAM policy data for taxonomy
        /// </summary>
        public static Output<GetTaxonomyIamPolicyResult> Invoke(GetTaxonomyIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTaxonomyIamPolicyResult>("gcp:datacatalog/getTaxonomyIamPolicy:getTaxonomyIamPolicy", args ?? new GetTaxonomyIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTaxonomyIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("taxonomy", required: true)]
        public string Taxonomy { get; set; } = null!;

        public GetTaxonomyIamPolicyArgs()
        {
        }
        public static new GetTaxonomyIamPolicyArgs Empty => new GetTaxonomyIamPolicyArgs();
    }

    public sealed class GetTaxonomyIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("taxonomy", required: true)]
        public Input<string> Taxonomy { get; set; } = null!;

        public GetTaxonomyIamPolicyInvokeArgs()
        {
        }
        public static new GetTaxonomyIamPolicyInvokeArgs Empty => new GetTaxonomyIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetTaxonomyIamPolicyResult
    {
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (Required only by `gcp.datacatalog.TaxonomyIamPolicy`) The policy data generated by
        /// a `gcp.organizations.getIAMPolicy` data source.
        /// </summary>
        public readonly string PolicyData;
        public readonly string Project;
        public readonly string Region;
        public readonly string Taxonomy;

        [OutputConstructor]
        private GetTaxonomyIamPolicyResult(
            string etag,

            string id,

            string policyData,

            string project,

            string region,

            string taxonomy)
        {
            Etag = etag;
            Id = id;
            PolicyData = policyData;
            Project = project;
            Region = region;
            Taxonomy = taxonomy;
        }
    }
}
