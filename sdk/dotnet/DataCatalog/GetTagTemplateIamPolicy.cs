// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.DataCatalog
{
    public static class GetTagTemplateIamPolicy
    {
        /// <summary>
        /// Retrieves the current IAM policy data for tagtemplate
        /// </summary>
        public static Task<GetTagTemplateIamPolicyResult> InvokeAsync(GetTagTemplateIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTagTemplateIamPolicyResult>("gcp:datacatalog/getTagTemplateIamPolicy:getTagTemplateIamPolicy", args ?? new GetTagTemplateIamPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the current IAM policy data for tagtemplate
        /// </summary>
        public static Output<GetTagTemplateIamPolicyResult> Invoke(GetTagTemplateIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTagTemplateIamPolicyResult>("gcp:datacatalog/getTagTemplateIamPolicy:getTagTemplateIamPolicy", args ?? new GetTagTemplateIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTagTemplateIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("tagTemplate", required: true)]
        public string TagTemplate { get; set; } = null!;

        public GetTagTemplateIamPolicyArgs()
        {
        }
        public static new GetTagTemplateIamPolicyArgs Empty => new GetTagTemplateIamPolicyArgs();
    }

    public sealed class GetTagTemplateIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("tagTemplate", required: true)]
        public Input<string> TagTemplate { get; set; } = null!;

        public GetTagTemplateIamPolicyInvokeArgs()
        {
        }
        public static new GetTagTemplateIamPolicyInvokeArgs Empty => new GetTagTemplateIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetTagTemplateIamPolicyResult
    {
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (Required only by `gcp.datacatalog.TagTemplateIamPolicy`) The policy data generated by
        /// a `gcp.organizations.getIAMPolicy` data source.
        /// </summary>
        public readonly string PolicyData;
        public readonly string Project;
        public readonly string Region;
        public readonly string TagTemplate;

        [OutputConstructor]
        private GetTagTemplateIamPolicyResult(
            string etag,

            string id,

            string policyData,

            string project,

            string region,

            string tagTemplate)
        {
            Etag = etag;
            Id = id;
            PolicyData = policyData;
            Project = project;
            Region = region;
            TagTemplate = tagTemplate;
        }
    }
}
