// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.DataCatalog.Outputs
{

    [OutputType]
    public sealed class TagField
    {
        /// <summary>
        /// Holds the value for a tag field with boolean type.
        /// </summary>
        public readonly bool? BoolValue;
        /// <summary>
        /// The display name of this field
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Holds the value for a tag field with double type.
        /// </summary>
        public readonly double? DoubleValue;
        /// <summary>
        /// Holds the value for a tag field with enum type. This value must be one of the allowed values in the definition of this enum.
        /// </summary>
        public readonly string? EnumValue;
        /// <summary>
        /// The identifier for this object. Format specified above.
        /// </summary>
        public readonly string FieldName;
        /// <summary>
        /// The order of this field with respect to other fields in this tag. For example, a higher value can indicate
        /// a more important field. The value can be negative. Multiple fields can have the same order, and field orders
        /// within a tag do not have to be sequential.
        /// </summary>
        public readonly int? Order;
        /// <summary>
        /// Holds the value for a tag field with string type.
        /// </summary>
        public readonly string? StringValue;
        /// <summary>
        /// Holds the value for a tag field with timestamp type.
        /// </summary>
        public readonly string? TimestampValue;

        [OutputConstructor]
        private TagField(
            bool? boolValue,

            string? displayName,

            double? doubleValue,

            string? enumValue,

            string fieldName,

            int? order,

            string? stringValue,

            string? timestampValue)
        {
            BoolValue = boolValue;
            DisplayName = displayName;
            DoubleValue = doubleValue;
            EnumValue = enumValue;
            FieldName = fieldName;
            Order = order;
            StringValue = stringValue;
            TimestampValue = timestampValue;
        }
    }
}
