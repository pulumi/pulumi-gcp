// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Eventarc.Outputs
{

    [OutputType]
    public sealed class PipelineDestination
    {
        /// <summary>
        /// Represents a config used to authenticate message requests.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.PipelineDestinationAuthenticationConfig? AuthenticationConfig;
        /// <summary>
        /// Represents a HTTP endpoint destination.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.PipelineDestinationHttpEndpoint? HttpEndpoint;
        /// <summary>
        /// The resource name of the Message Bus to which events should be
        /// published. The Message Bus resource should exist in the same project as
        /// the Pipeline. Format:
        /// `projects/{project}/locations/{location}/messageBuses/{message_bus}`
        /// </summary>
        public readonly string? MessageBus;
        /// <summary>
        /// Represents a network config to be used for destination resolution and
        /// connectivity.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.PipelineDestinationNetworkConfig? NetworkConfig;
        /// <summary>
        /// Represents the format of message data.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.PipelineDestinationOutputPayloadFormat? OutputPayloadFormat;
        /// <summary>
        /// The resource name of the Pub/Sub topic to which events should be
        /// published. Format:
        /// `projects/{project}/locations/{location}/topics/{topic}`
        /// </summary>
        public readonly string? Topic;
        /// <summary>
        /// The resource name of the Workflow whose Executions are triggered by
        /// the events. The Workflow resource should be deployed in the same
        /// project as the Pipeline. Format:
        /// `projects/{project}/locations/{location}/workflows/{workflow}`
        /// </summary>
        public readonly string? Workflow;

        [OutputConstructor]
        private PipelineDestination(
            Outputs.PipelineDestinationAuthenticationConfig? authenticationConfig,

            Outputs.PipelineDestinationHttpEndpoint? httpEndpoint,

            string? messageBus,

            Outputs.PipelineDestinationNetworkConfig? networkConfig,

            Outputs.PipelineDestinationOutputPayloadFormat? outputPayloadFormat,

            string? topic,

            string? workflow)
        {
            AuthenticationConfig = authenticationConfig;
            HttpEndpoint = httpEndpoint;
            MessageBus = messageBus;
            NetworkConfig = networkConfig;
            OutputPayloadFormat = outputPayloadFormat;
            Topic = topic;
            Workflow = workflow;
        }
    }
}
