// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.ContainerAnalysis.Outputs
{

    [OutputType]
    public sealed class OccurenceAttestation
    {
        /// <summary>
        /// The serialized payload that is verified by one or
        /// more signatures. A base64-encoded string.
        /// </summary>
        public readonly string SerializedPayload;
        /// <summary>
        /// One or more signatures over serializedPayload.
        /// Verifier implementations should consider this attestation
        /// message verified if at least one signature verifies
        /// serializedPayload. See Signature in common.proto for more
        /// details on signature structure and verification.
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.OccurenceAttestationSignature> Signatures;

        [OutputConstructor]
        private OccurenceAttestation(
            string serializedPayload,

            ImmutableArray<Outputs.OccurenceAttestationSignature> signatures)
        {
            SerializedPayload = serializedPayload;
            Signatures = signatures;
        }
    }
}
