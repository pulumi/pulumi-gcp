// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.OsConfig.Inputs
{

    public sealed class OsPolicyAssignmentOsPolicyGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// This flag determines the OS policy compliance status when none of the resource groups within the policy are applicable for a VM. Set this value to `true` if the policy needs to be reported as compliant even if the policy has nothing to validate or enforce.
        /// </summary>
        [Input("allowNoResourceGroupMatch")]
        public Input<bool>? AllowNoResourceGroupMatch { get; set; }

        /// <summary>
        /// OS policy assignment description. Length of the description is limited to 1024 characters.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Required. A one word, unique name for this repository. This is the `repo id` in the zypper config file and also the `display_name` if `display_name` is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts.
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// Required. Policy mode Possible values: MODE_UNSPECIFIED, VALIDATION, ENFORCEMENT
        /// </summary>
        [Input("mode", required: true)]
        public Input<string> Mode { get; set; } = null!;

        [Input("resourceGroups", required: true)]
        private InputList<Inputs.OsPolicyAssignmentOsPolicyResourceGroupGetArgs>? _resourceGroups;

        /// <summary>
        /// Required. List of resource groups for the policy. For a particular VM, resource groups are evaluated in the order specified and the first resource group that is applicable is selected and the rest are ignored. If none of the resource groups are applicable for a VM, the VM is considered to be non-compliant w.r.t this policy. This behavior can be toggled by the flag `allow_no_resource_group_match`
        /// </summary>
        public InputList<Inputs.OsPolicyAssignmentOsPolicyResourceGroupGetArgs> ResourceGroups
        {
            get => _resourceGroups ?? (_resourceGroups = new InputList<Inputs.OsPolicyAssignmentOsPolicyResourceGroupGetArgs>());
            set => _resourceGroups = value;
        }

        public OsPolicyAssignmentOsPolicyGetArgs()
        {
        }
    }
}
