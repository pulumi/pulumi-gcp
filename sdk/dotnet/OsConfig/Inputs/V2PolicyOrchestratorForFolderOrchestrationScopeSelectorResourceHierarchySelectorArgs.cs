// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.OsConfig.Inputs
{

    public sealed class V2PolicyOrchestratorForFolderOrchestrationScopeSelectorResourceHierarchySelectorArgs : global::Pulumi.ResourceArgs
    {
        [Input("includedFolders")]
        private InputList<string>? _includedFolders;

        /// <summary>
        /// Names of the folders in scope.
        /// Format: `folders/{folder_id}`
        /// </summary>
        public InputList<string> IncludedFolders
        {
            get => _includedFolders ?? (_includedFolders = new InputList<string>());
            set => _includedFolders = value;
        }

        [Input("includedProjects")]
        private InputList<string>? _includedProjects;

        /// <summary>
        /// Names of the projects in scope.
        /// Format: `projects/{project_number}`
        /// </summary>
        public InputList<string> IncludedProjects
        {
            get => _includedProjects ?? (_includedProjects = new InputList<string>());
            set => _includedProjects = value;
        }

        public V2PolicyOrchestratorForFolderOrchestrationScopeSelectorResourceHierarchySelectorArgs()
        {
        }
        public static new V2PolicyOrchestratorForFolderOrchestrationScopeSelectorResourceHierarchySelectorArgs Empty => new V2PolicyOrchestratorForFolderOrchestrationScopeSelectorResourceHierarchySelectorArgs();
    }
}
