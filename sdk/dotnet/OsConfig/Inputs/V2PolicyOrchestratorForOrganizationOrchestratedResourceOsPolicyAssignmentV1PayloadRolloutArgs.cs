// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.OsConfig.Inputs
{

    public sealed class V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadRolloutArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Message encapsulating a value that can be either absolute ("fixed") or
        /// relative ("percent") to a value.
        /// Structure is documented below.
        /// </summary>
        [Input("disruptionBudget", required: true)]
        public Input<Inputs.V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadRolloutDisruptionBudgetArgs> DisruptionBudget { get; set; } = null!;

        /// <summary>
        /// Required. This determines the minimum duration of time to wait after the
        /// configuration changes are applied through the current rollout. A
        /// VM continues to count towards the `DisruptionBudget` at least
        /// until this duration of time has passed after configuration changes are
        /// applied.
        /// </summary>
        [Input("minWaitDuration", required: true)]
        public Input<string> MinWaitDuration { get; set; } = null!;

        public V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadRolloutArgs()
        {
        }
        public static new V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadRolloutArgs Empty => new V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadRolloutArgs();
    }
}
