// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.OsConfig.Inputs
{

    public sealed class V2PolicyOrchestratorForFolderOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourceRepositoryAptArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Type of archive files in this repository.
        /// Possible values are: `DEB`, `DEB_SRC`.
        /// </summary>
        [Input("archiveType", required: true)]
        public Input<string> ArchiveType { get; set; } = null!;

        [Input("components", required: true)]
        private InputList<string>? _components;

        /// <summary>
        /// List of components for this repository. Must contain at least one
        /// item.
        /// </summary>
        public InputList<string> Components
        {
            get => _components ?? (_components = new InputList<string>());
            set => _components = value;
        }

        /// <summary>
        /// Distribution of this repository.
        /// </summary>
        [Input("distribution", required: true)]
        public Input<string> Distribution { get; set; } = null!;

        /// <summary>
        /// URI of the key file for this repository. The agent maintains a
        /// keyring at `/etc/apt/trusted.gpg.d/osconfig_agent_managed.gpg`.
        /// </summary>
        [Input("gpgKey")]
        public Input<string>? GpgKey { get; set; }

        /// <summary>
        /// URI for this repository.
        /// </summary>
        [Input("uri", required: true)]
        public Input<string> Uri { get; set; } = null!;

        public V2PolicyOrchestratorForFolderOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourceRepositoryAptArgs()
        {
        }
        public static new V2PolicyOrchestratorForFolderOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourceRepositoryAptArgs Empty => new V2PolicyOrchestratorForFolderOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourceRepositoryAptArgs();
    }
}
