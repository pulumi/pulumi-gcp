// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.OsConfig.Inputs
{

    public sealed class V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Target all VMs in the project. If true, no other criteria is
        /// permitted.
        /// </summary>
        [Input("all")]
        public Input<bool>? All { get; set; }

        [Input("exclusionLabels")]
        private InputList<Inputs.V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilterExclusionLabelArgs>? _exclusionLabels;

        /// <summary>
        /// List of label sets used for VM exclusion.
        /// If the list has more than one label set, the VM is excluded if any
        /// of the label sets are applicable for the VM.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilterExclusionLabelArgs> ExclusionLabels
        {
            get => _exclusionLabels ?? (_exclusionLabels = new InputList<Inputs.V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilterExclusionLabelArgs>());
            set => _exclusionLabels = value;
        }

        [Input("inclusionLabels")]
        private InputList<Inputs.V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilterInclusionLabelArgs>? _inclusionLabels;

        /// <summary>
        /// List of label sets used for VM inclusion.
        /// If the list has more than one `LabelSet`, the VM is included if any
        /// of the label sets are applicable for the VM.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilterInclusionLabelArgs> InclusionLabels
        {
            get => _inclusionLabels ?? (_inclusionLabels = new InputList<Inputs.V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilterInclusionLabelArgs>());
            set => _inclusionLabels = value;
        }

        [Input("inventories")]
        private InputList<Inputs.V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilterInventoryArgs>? _inventories;

        /// <summary>
        /// List of inventories to select VMs.
        /// A VM is selected if its inventory data matches at least one of the
        /// following inventories.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilterInventoryArgs> Inventories
        {
            get => _inventories ?? (_inventories = new InputList<Inputs.V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilterInventoryArgs>());
            set => _inventories = value;
        }

        public V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilterArgs()
        {
        }
        public static new V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilterArgs Empty => new V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadInstanceFilterArgs();
    }
}
