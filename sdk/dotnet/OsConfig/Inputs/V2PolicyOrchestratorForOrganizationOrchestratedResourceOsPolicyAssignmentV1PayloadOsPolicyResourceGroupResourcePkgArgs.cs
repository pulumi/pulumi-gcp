// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.OsConfig.Inputs
{

    public sealed class V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourcePkgArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A package managed by APT.
        /// - install: `apt-get update &amp;&amp; apt-get -y install [name]`
        /// - remove: `apt-get -y remove [name]`
        /// Structure is documented below.
        /// </summary>
        [Input("apt")]
        public Input<Inputs.V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourcePkgAptArgs>? Apt { get; set; }

        /// <summary>
        /// A deb package file. dpkg packages only support INSTALLED state.
        /// Structure is documented below.
        /// </summary>
        [Input("deb")]
        public Input<Inputs.V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourcePkgDebArgs>? Deb { get; set; }

        /// <summary>
        /// Required. The desired state the agent should maintain for this package.
        /// Possible values:
        /// DESIRED_STATE_UNSPECIFIED
        /// INSTALLED
        /// REMOVED
        /// </summary>
        [Input("desiredState", required: true)]
        public Input<string> DesiredState { get; set; } = null!;

        /// <summary>
        /// A package managed by GooGet.
        /// - install: `googet -noconfirm install package`
        /// - remove: `googet -noconfirm remove package`
        /// Structure is documented below.
        /// </summary>
        [Input("googet")]
        public Input<Inputs.V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourcePkgGoogetArgs>? Googet { get; set; }

        /// <summary>
        /// An MSI package. MSI packages only support INSTALLED state.
        /// Structure is documented below.
        /// </summary>
        [Input("msi")]
        public Input<Inputs.V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourcePkgMsiArgs>? Msi { get; set; }

        /// <summary>
        /// An RPM package file. RPM packages only support INSTALLED state.
        /// Structure is documented below.
        /// </summary>
        [Input("rpm")]
        public Input<Inputs.V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourcePkgRpmArgs>? Rpm { get; set; }

        /// <summary>
        /// A package managed by YUM.
        /// - install: `yum -y install package`
        /// - remove: `yum -y remove package`
        /// Structure is documented below.
        /// </summary>
        [Input("yum")]
        public Input<Inputs.V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourcePkgYumArgs>? Yum { get; set; }

        /// <summary>
        /// A package managed by Zypper.
        /// - install: `zypper -y install package`
        /// - remove: `zypper -y rm package`
        /// Structure is documented below.
        /// </summary>
        [Input("zypper")]
        public Input<Inputs.V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourcePkgZypperArgs>? Zypper { get; set; }

        public V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourcePkgArgs()
        {
        }
        public static new V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourcePkgArgs Empty => new V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadOsPolicyResourceGroupResourcePkgArgs();
    }
}
