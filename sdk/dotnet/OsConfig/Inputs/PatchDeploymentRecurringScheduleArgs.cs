// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.OsConfig.Inputs
{

    public sealed class PatchDeploymentRecurringScheduleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The end time at which a recurring patch deployment schedule is no longer active.
        /// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
        /// </summary>
        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        /// <summary>
        /// The time the last patch job ran successfully.
        /// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
        /// </summary>
        [Input("lastExecuteTime")]
        public Input<string>? LastExecuteTime { get; set; }

        /// <summary>
        /// Schedule with monthly executions.
        /// Structure is documented below.
        /// </summary>
        [Input("monthly")]
        public Input<Inputs.PatchDeploymentRecurringScheduleMonthlyArgs>? Monthly { get; set; }

        /// <summary>
        /// The time the next patch job is scheduled to run.
        /// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
        /// </summary>
        [Input("nextExecuteTime")]
        public Input<string>? NextExecuteTime { get; set; }

        /// <summary>
        /// The time that the recurring schedule becomes effective. Defaults to createTime of the patch deployment.
        /// A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
        /// </summary>
        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        /// <summary>
        /// Time of the day to run a recurring deployment.
        /// Structure is documented below.
        /// </summary>
        [Input("timeOfDay", required: true)]
        public Input<Inputs.PatchDeploymentRecurringScheduleTimeOfDayArgs> TimeOfDay { get; set; } = null!;

        /// <summary>
        /// Defines the time zone that timeOfDay is relative to. The rules for daylight saving time are
        /// determined by the chosen time zone.
        /// Structure is documented below.
        /// </summary>
        [Input("timeZone", required: true)]
        public Input<Inputs.PatchDeploymentRecurringScheduleTimeZoneArgs> TimeZone { get; set; } = null!;

        /// <summary>
        /// Schedule with weekly executions.
        /// Structure is documented below.
        /// </summary>
        [Input("weekly")]
        public Input<Inputs.PatchDeploymentRecurringScheduleWeeklyArgs>? Weekly { get; set; }

        public PatchDeploymentRecurringScheduleArgs()
        {
        }
        public static new PatchDeploymentRecurringScheduleArgs Empty => new PatchDeploymentRecurringScheduleArgs();
    }
}
