// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.OsConfig.Outputs
{

    [OutputType]
    public sealed class V2PolicyOrchestratorForOrganizationOrchestratedResource
    {
        /// <summary>
        /// Optional. ID of the resource to be used while generating set of affected resources.
        /// For UPSERT action the value is auto-generated during PolicyOrchestrator
        /// creation when not set. When the value is set it should following next
        /// restrictions:
        /// * Must contain only lowercase letters, numbers, and hyphens.
        /// * Must start with a letter.
        /// * Must be between 1-63 characters.
        /// * Must end with a number or a letter.
        /// * Must be unique within the project.
        /// For DELETE action, ID must be specified explicitly during
        /// PolicyOrchestrator creation.
        /// 
        /// 
        /// &lt;a name="NestedOrchestratedResourceOsPolicyAssignmentV1Payload"&gt;&lt;/a&gt;The `OsPolicyAssignmentV1Payload` block supports:
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// OS policy assignment is an API resource that is used to
        /// apply a set of OS policies to a dynamically targeted group of Compute Engine
        /// VM instances.
        /// An OS policy is used to define the desired state configuration for a
        /// Compute Engine VM instance through a set of configuration resources that
        /// provide capabilities such as installing or removing software packages, or
        /// executing a script.
        /// For more information about the OS policy resource definitions and examples,
        /// see
        /// [OS policy and OS policy
        /// assignment](https://cloud.google.com/compute/docs/os-configuration-management/working-with-os-policies).
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1Payload? OsPolicyAssignmentV1Payload;

        [OutputConstructor]
        private V2PolicyOrchestratorForOrganizationOrchestratedResource(
            string? id,

            Outputs.V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1Payload? osPolicyAssignmentV1Payload)
        {
            Id = id;
            OsPolicyAssignmentV1Payload = osPolicyAssignmentV1Payload;
        }
    }
}
