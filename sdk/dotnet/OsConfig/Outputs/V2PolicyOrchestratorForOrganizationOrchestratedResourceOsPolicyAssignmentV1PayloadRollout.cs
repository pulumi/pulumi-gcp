// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.OsConfig.Outputs
{

    [OutputType]
    public sealed class V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadRollout
    {
        /// <summary>
        /// Message encapsulating a value that can be either absolute ("fixed") or
        /// relative ("percent") to a value.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadRolloutDisruptionBudget DisruptionBudget;
        /// <summary>
        /// Required. This determines the minimum duration of time to wait after the
        /// configuration changes are applied through the current rollout. A
        /// VM continues to count towards the `disruption_budget` at least
        /// until this duration of time has passed after configuration changes are
        /// applied.
        /// </summary>
        public readonly string MinWaitDuration;

        [OutputConstructor]
        private V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadRollout(
            Outputs.V2PolicyOrchestratorForOrganizationOrchestratedResourceOsPolicyAssignmentV1PayloadRolloutDisruptionBudget disruptionBudget,

            string minWaitDuration)
        {
            DisruptionBudget = disruptionBudget;
            MinWaitDuration = minWaitDuration;
        }
    }
}
