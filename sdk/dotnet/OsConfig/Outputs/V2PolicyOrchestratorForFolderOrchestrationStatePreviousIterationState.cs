// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.OsConfig.Outputs
{

    [OutputType]
    public sealed class V2PolicyOrchestratorForFolderOrchestrationStatePreviousIterationState
    {
        /// <summary>
        /// (Output)
        /// The `Status` type defines a logical error model that is suitable for
        /// different programming environments, including REST APIs and RPC APIs. It is
        /// used by [gRPC](https://github.com/grpc). Each `Status` message contains
        /// three pieces of data: error code, error message, and error details.
        /// You can find out more about this error model and how to work with it in the
        /// [API Design Guide](https://cloud.google.com/apis/design/errors).
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.V2PolicyOrchestratorForFolderOrchestrationStatePreviousIterationStateError> Errors;
        /// <summary>
        /// (Output)
        /// Number of orchestration actions which failed so far. For more details,
        /// query the Cloud Logs.
        /// </summary>
        public readonly string? FailedActions;
        /// <summary>
        /// (Output)
        /// Finish time of the wave iteration.
        /// </summary>
        public readonly string? FinishTime;
        /// <summary>
        /// (Output)
        /// Overall number of actions done by the orchestrator so far.
        /// </summary>
        public readonly string? PerformedActions;
        /// <summary>
        /// (Output)
        /// An estimated percentage of the progress. Number between 0 and 100.
        /// </summary>
        public readonly double? Progress;
        /// <summary>
        /// (Output)
        /// Handle to the Progressive Rollouts API rollout resource, which contains
        /// detailed information about a particular orchestration iteration.
        /// </summary>
        public readonly string? RolloutResource;
        /// <summary>
        /// (Output)
        /// Start time of the wave iteration.
        /// </summary>
        public readonly string? StartTime;
        /// <summary>
        /// (Output)
        /// State of the iteration.
        /// Possible values:
        /// PROCESSING
        /// COMPLETED
        /// FAILED
        /// CANCELLED
        /// UNKNOWN
        /// </summary>
        public readonly string? State;

        [OutputConstructor]
        private V2PolicyOrchestratorForFolderOrchestrationStatePreviousIterationState(
            ImmutableArray<Outputs.V2PolicyOrchestratorForFolderOrchestrationStatePreviousIterationStateError> errors,

            string? failedActions,

            string? finishTime,

            string? performedActions,

            double? progress,

            string? rolloutResource,

            string? startTime,

            string? state)
        {
            Errors = errors;
            FailedActions = failedActions;
            FinishTime = finishTime;
            PerformedActions = performedActions;
            Progress = progress;
            RolloutResource = rolloutResource;
            StartTime = startTime;
            State = state;
        }
    }
}
