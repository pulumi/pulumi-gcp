// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.OsConfig.Outputs
{

    [OutputType]
    public sealed class GuestPoliciesAssignment
    {
        /// <summary>
        /// Targets instances matching at least one of these label sets. This allows an assignment to target disparate groups,
        /// for example "env=prod or env=staging".
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GuestPoliciesAssignmentGroupLabel> GroupLabels;
        /// <summary>
        /// Targets VM instances whose name starts with one of these prefixes.
        /// Like labels, this is another way to group VM instances when targeting configs,
        /// for example prefix="prod-".
        /// Only supported for project-level policies.
        /// </summary>
        public readonly ImmutableArray<string> InstanceNamePrefixes;
        /// <summary>
        /// Targets any of the instances specified. Instances are specified by their URI in the form
        /// zones/[ZONE]/instances/[INSTANCE_NAME].
        /// Instance targeting is uncommon and is supported to facilitate the management of changes
        /// by the instance or to target specific VM instances for development and testing.
        /// Only supported for project-level policies and must reference instances within this project.
        /// </summary>
        public readonly ImmutableArray<string> Instances;
        /// <summary>
        /// Targets VM instances matching at least one of the following OS types.
        /// VM instances must match all supplied criteria for a given OsType to be included.
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GuestPoliciesAssignmentOsType> OsTypes;
        /// <summary>
        /// Targets instances in any of these zones. Leave empty to target instances in any zone.
        /// Zonal targeting is uncommon and is supported to facilitate the management of changes by zone.
        /// </summary>
        public readonly ImmutableArray<string> Zones;

        [OutputConstructor]
        private GuestPoliciesAssignment(
            ImmutableArray<Outputs.GuestPoliciesAssignmentGroupLabel> groupLabels,

            ImmutableArray<string> instanceNamePrefixes,

            ImmutableArray<string> instances,

            ImmutableArray<Outputs.GuestPoliciesAssignmentOsType> osTypes,

            ImmutableArray<string> zones)
        {
            GroupLabels = groupLabels;
            InstanceNamePrefixes = instanceNamePrefixes;
            Instances = instances;
            OsTypes = osTypes;
            Zones = zones;
        }
    }
}
