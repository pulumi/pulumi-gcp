// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Logging.Outputs
{

    [OutputType]
    public sealed class MetricMetricDescriptor
    {
        /// <summary>
        /// A concise name for the metric, which can be displayed in user interfaces. Use sentence case
        /// without an ending period, for example "Request count". This field is optional but it is
        /// recommended to be set for any metrics associated with user-visible concepts, such as Quota.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// The set of labels that can be used to describe a specific instance of this metric type. For
        /// example, the appengine.googleapis.com/http/server/response_latencies metric type has a label
        /// for the HTTP response code, response_code, so you can look at latencies for successful responses
        /// or just for responses that failed.  Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.MetricMetricDescriptorLabel> Labels;
        /// <summary>
        /// Whether the metric records instantaneous values, changes to a value, etc.
        /// Some combinations of metricKind and valueType might not be supported.
        /// For counter metrics, set this to DELTA.
        /// </summary>
        public readonly string MetricKind;
        /// <summary>
        /// The unit in which the metric value is reported. It is only applicable if the valueType is
        /// `INT64`, `DOUBLE`, or `DISTRIBUTION`. The supported units are a subset of
        /// [The Unified Code for Units of Measure](http://unitsofmeasure.org/ucum.html) standard
        /// </summary>
        public readonly string? Unit;
        /// <summary>
        /// The type of data that can be assigned to the label.
        /// </summary>
        public readonly string ValueType;

        [OutputConstructor]
        private MetricMetricDescriptor(
            string? displayName,

            ImmutableArray<Outputs.MetricMetricDescriptorLabel> labels,

            string metricKind,

            string? unit,

            string valueType)
        {
            DisplayName = displayName;
            Labels = labels;
            MetricKind = metricKind;
            Unit = unit;
            ValueType = valueType;
        }
    }
}
