// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Iap
{
    public static class GetWebRegionBackendServiceIamPolicy
    {
        /// <summary>
        /// Retrieves the current IAM policy data for webregionbackendservice
        /// 
        /// 
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Iap.GetWebRegionBackendServiceIamPolicy.Invoke(new()
        ///     {
        ///         Project = google_compute_region_backend_service.Default.Project,
        ///         Region = google_compute_region_backend_service.Default.Region,
        ///         WebRegionBackendService = google_compute_region_backend_service.Default.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetWebRegionBackendServiceIamPolicyResult> InvokeAsync(GetWebRegionBackendServiceIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetWebRegionBackendServiceIamPolicyResult>("gcp:iap/getWebRegionBackendServiceIamPolicy:getWebRegionBackendServiceIamPolicy", args ?? new GetWebRegionBackendServiceIamPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the current IAM policy data for webregionbackendservice
        /// 
        /// 
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Iap.GetWebRegionBackendServiceIamPolicy.Invoke(new()
        ///     {
        ///         Project = google_compute_region_backend_service.Default.Project,
        ///         Region = google_compute_region_backend_service.Default.Region,
        ///         WebRegionBackendService = google_compute_region_backend_service.Default.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetWebRegionBackendServiceIamPolicyResult> Invoke(GetWebRegionBackendServiceIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetWebRegionBackendServiceIamPolicyResult>("gcp:iap/getWebRegionBackendServiceIamPolicy:getWebRegionBackendServiceIamPolicy", args ?? new GetWebRegionBackendServiceIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWebRegionBackendServiceIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("webRegionBackendService", required: true)]
        public string WebRegionBackendService { get; set; } = null!;

        public GetWebRegionBackendServiceIamPolicyArgs()
        {
        }
        public static new GetWebRegionBackendServiceIamPolicyArgs Empty => new GetWebRegionBackendServiceIamPolicyArgs();
    }

    public sealed class GetWebRegionBackendServiceIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("webRegionBackendService", required: true)]
        public Input<string> WebRegionBackendService { get; set; } = null!;

        public GetWebRegionBackendServiceIamPolicyInvokeArgs()
        {
        }
        public static new GetWebRegionBackendServiceIamPolicyInvokeArgs Empty => new GetWebRegionBackendServiceIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetWebRegionBackendServiceIamPolicyResult
    {
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (Required only by `gcp.iap.WebRegionBackendServiceIamPolicy`) The policy data generated by
        /// a `gcp.organizations.getIAMPolicy` data source.
        /// </summary>
        public readonly string PolicyData;
        public readonly string Project;
        public readonly string Region;
        public readonly string WebRegionBackendService;

        [OutputConstructor]
        private GetWebRegionBackendServiceIamPolicyResult(
            string etag,

            string id,

            string policyData,

            string project,

            string region,

            string webRegionBackendService)
        {
            Etag = etag;
            Id = id;
            PolicyData = policyData;
            Project = project;
            Region = region;
            WebRegionBackendService = webRegionBackendService;
        }
    }
}
