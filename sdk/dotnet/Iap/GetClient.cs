// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Iap
{
    public static class GetClient
    {
        /// <summary>
        /// Get info about a Google Cloud IAP Client.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var project = Gcp.Organizations.GetProject.Invoke(new()
        ///     {
        ///         ProjectId = "foobar",
        ///     });
        /// 
        ///     var projectClient = Gcp.Iap.GetClient.Invoke(new()
        ///     {
        ///         Brand = $"projects/{project.Apply(getProjectResult =&gt; getProjectResult.Number)}/brands/[BRAND_NUMBER]",
        ///         ClientId = FOO.Apps.Googleusercontent.Com,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetClientResult> InvokeAsync(GetClientArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetClientResult>("gcp:iap/getClient:getClient", args ?? new GetClientArgs(), options.WithDefaults());

        /// <summary>
        /// Get info about a Google Cloud IAP Client.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var project = Gcp.Organizations.GetProject.Invoke(new()
        ///     {
        ///         ProjectId = "foobar",
        ///     });
        /// 
        ///     var projectClient = Gcp.Iap.GetClient.Invoke(new()
        ///     {
        ///         Brand = $"projects/{project.Apply(getProjectResult =&gt; getProjectResult.Number)}/brands/[BRAND_NUMBER]",
        ///         ClientId = FOO.Apps.Googleusercontent.Com,
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetClientResult> Invoke(GetClientInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetClientResult>("gcp:iap/getClient:getClient", args ?? new GetClientInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClientArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the brand.
        /// </summary>
        [Input("brand", required: true)]
        public string Brand { get; set; } = null!;

        /// <summary>
        /// The client_id of the brand.
        /// </summary>
        [Input("clientId", required: true)]
        public string ClientId { get; set; } = null!;

        public GetClientArgs()
        {
        }
        public static new GetClientArgs Empty => new GetClientArgs();
    }

    public sealed class GetClientInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the brand.
        /// </summary>
        [Input("brand", required: true)]
        public Input<string> Brand { get; set; } = null!;

        /// <summary>
        /// The client_id of the brand.
        /// </summary>
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        public GetClientInvokeArgs()
        {
        }
        public static new GetClientInvokeArgs Empty => new GetClientInvokeArgs();
    }


    [OutputType]
    public sealed class GetClientResult
    {
        public readonly string Brand;
        public readonly string ClientId;
        public readonly string DisplayName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Secret;

        [OutputConstructor]
        private GetClientResult(
            string brand,

            string clientId,

            string displayName,

            string id,

            string secret)
        {
            Brand = brand;
            ClientId = clientId;
            DisplayName = displayName;
            Id = id;
            Secret = secret;
        }
    }
}
