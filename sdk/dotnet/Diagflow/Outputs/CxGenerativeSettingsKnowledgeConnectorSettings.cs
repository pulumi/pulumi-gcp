// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Diagflow.Outputs
{

    [OutputType]
    public sealed class CxGenerativeSettingsKnowledgeConnectorSettings
    {
        /// <summary>
        /// Name of the virtual agent. Used for LLM prompt. Can be left empty.
        /// </summary>
        public readonly string? Agent;
        /// <summary>
        /// Identity of the agent, e.g. "virtual agent", "AI assistant".
        /// </summary>
        public readonly string? AgentIdentity;
        /// <summary>
        /// Agent scope, e.g. "Example company website", "internal Example company website for employees", "manual of car owner".
        /// </summary>
        public readonly string? AgentScope;
        /// <summary>
        /// Name of the company, organization or other entity that the agent represents. Used for knowledge connector LLM prompt and for knowledge search.
        /// </summary>
        public readonly string? Business;
        /// <summary>
        /// Company description, used for LLM prompt, e.g. "a family company selling freshly roasted coffee beans".``
        /// </summary>
        public readonly string? BusinessDescription;
        /// <summary>
        /// Whether to disable fallback to Data Store search results (in case the LLM couldn't pick a proper answer). Per default the feature is enabled.
        /// </summary>
        public readonly bool? DisableDataStoreFallback;

        [OutputConstructor]
        private CxGenerativeSettingsKnowledgeConnectorSettings(
            string? agent,

            string? agentIdentity,

            string? agentScope,

            string? business,

            string? businessDescription,

            bool? disableDataStoreFallback)
        {
            Agent = agent;
            AgentIdentity = agentIdentity;
            AgentScope = agentScope;
            Business = business;
            BusinessDescription = businessDescription;
            DisableDataStoreFallback = disableDataStoreFallback;
        }
    }
}
