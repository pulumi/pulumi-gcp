// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Diagflow.Outputs
{

    [OutputType]
    public sealed class CxPageKnowledgeConnectorSettingsTriggerFulfillment
    {
        /// <summary>
        /// Hierarchical advanced settings for agent/flow/page/fulfillment/parameter. Settings exposed at lower level overrides the settings exposed at higher level. Overriding occurs at the sub-setting level. For example, the playbackInterruptionSettings at fulfillment level only overrides the playbackInterruptionSettings at the agent level, leaving other settings at the agent level unchanged.
        /// DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel.
        /// Hierarchy: Agent-&gt;Flow-&gt;Page-&gt;Fulfillment/Parameter.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.CxPageKnowledgeConnectorSettingsTriggerFulfillmentAdvancedSettings? AdvancedSettings;
        /// <summary>
        /// Conditional cases for this fulfillment.
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.CxPageKnowledgeConnectorSettingsTriggerFulfillmentConditionalCase> ConditionalCases;
        /// <summary>
        /// If the flag is true, the agent will utilize LLM to generate a text response. If LLM generation fails, the defined responses in the fulfillment will be respected. This flag is only useful for fulfillments associated with no-match event handlers.
        /// </summary>
        public readonly bool? EnableGenerativeFallback;
        /// <summary>
        /// The list of rich message responses to present to the user.
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessage> Messages;
        /// <summary>
        /// Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks.
        /// </summary>
        public readonly bool? ReturnPartialResponses;
        /// <summary>
        /// Set parameter values before executing the webhook.
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.CxPageKnowledgeConnectorSettingsTriggerFulfillmentSetParameterAction> SetParameterActions;
        /// <summary>
        /// The tag used by the webhook to identify which fulfillment is being called. This field is required if webhook is specified.
        /// </summary>
        public readonly string? Tag;
        /// <summary>
        /// The webhook to call. Format: projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/agents/&lt;Agent ID&gt;/webhooks/&lt;Webhook ID&gt;.
        /// </summary>
        public readonly string? Webhook;

        [OutputConstructor]
        private CxPageKnowledgeConnectorSettingsTriggerFulfillment(
            Outputs.CxPageKnowledgeConnectorSettingsTriggerFulfillmentAdvancedSettings? advancedSettings,

            ImmutableArray<Outputs.CxPageKnowledgeConnectorSettingsTriggerFulfillmentConditionalCase> conditionalCases,

            bool? enableGenerativeFallback,

            ImmutableArray<Outputs.CxPageKnowledgeConnectorSettingsTriggerFulfillmentMessage> messages,

            bool? returnPartialResponses,

            ImmutableArray<Outputs.CxPageKnowledgeConnectorSettingsTriggerFulfillmentSetParameterAction> setParameterActions,

            string? tag,

            string? webhook)
        {
            AdvancedSettings = advancedSettings;
            ConditionalCases = conditionalCases;
            EnableGenerativeFallback = enableGenerativeFallback;
            Messages = messages;
            ReturnPartialResponses = returnPartialResponses;
            SetParameterActions = setParameterActions;
            Tag = tag;
            Webhook = webhook;
        }
    }
}
