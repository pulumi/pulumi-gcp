// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Diagflow.Outputs
{

    [OutputType]
    public sealed class CxFlowKnowledgeConnectorSettingsDataStoreConnection
    {
        /// <summary>
        /// The full name of the referenced data store. Formats: projects/{project}/locations/{location}/collections/{collection}/dataStores/{dataStore} projects/{project}/locations/{location}/dataStores/{dataStore}
        /// </summary>
        public readonly string? DataStore;
        /// <summary>
        /// The type of the connected data store.
        /// * PUBLIC_WEB: A data store that contains public web content.
        /// * UNSTRUCTURED: A data store that contains unstructured private data.
        /// * STRUCTURED: A data store that contains structured data (for example FAQ).
        /// Possible values are: `PUBLIC_WEB`, `UNSTRUCTURED`, `STRUCTURED`.
        /// </summary>
        public readonly string? DataStoreType;
        /// <summary>
        /// The document processing mode for the data store connection. Should only be set for PUBLIC_WEB and UNSTRUCTURED data stores. If not set it is considered as DOCUMENTS, as this is the legacy mode.
        /// * DOCUMENTS: Documents are processed as documents.
        /// * CHUNKS: Documents are converted to chunks.
        /// Possible values are: `DOCUMENTS`, `CHUNKS`.
        /// </summary>
        public readonly string? DocumentProcessingMode;

        [OutputConstructor]
        private CxFlowKnowledgeConnectorSettingsDataStoreConnection(
            string? dataStore,

            string? dataStoreType,

            string? documentProcessingMode)
        {
            DataStore = dataStore;
            DataStoreType = dataStoreType;
            DocumentProcessingMode = documentProcessingMode;
        }
    }
}
