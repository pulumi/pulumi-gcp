// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Diagflow.Outputs
{

    [OutputType]
    public sealed class CxTestCaseTestCaseConversationTurnUserInput
    {
        /// <summary>
        /// Whether sentiment analysis is enabled.
        /// </summary>
        public readonly bool? EnableSentimentAnalysis;
        /// <summary>
        /// Parameters that need to be injected into the conversation during intent detection.
        /// </summary>
        public readonly string? InjectedParameters;
        /// <summary>
        /// User input. Supports text input, event input, dtmf input in the test case.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.CxTestCaseTestCaseConversationTurnUserInputInput? Input;
        /// <summary>
        /// If webhooks should be allowed to trigger in response to the user utterance. Often if parameters are injected, webhooks should not be enabled.
        /// </summary>
        public readonly bool? IsWebhookEnabled;

        [OutputConstructor]
        private CxTestCaseTestCaseConversationTurnUserInput(
            bool? enableSentimentAnalysis,

            string? injectedParameters,

            Outputs.CxTestCaseTestCaseConversationTurnUserInputInput? input,

            bool? isWebhookEnabled)
        {
            EnableSentimentAnalysis = enableSentimentAnalysis;
            InjectedParameters = injectedParameters;
            Input = input;
            IsWebhookEnabled = isWebhookEnabled;
        }
    }
}
