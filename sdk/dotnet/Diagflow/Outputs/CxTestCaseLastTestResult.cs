// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Diagflow.Outputs
{

    [OutputType]
    public sealed class CxTestCaseLastTestResult
    {
        /// <summary>
        /// The conversation turns uttered during the test case replay in chronological order.
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.CxTestCaseLastTestResultConversationTurn> ConversationTurns;
        /// <summary>
        /// Environment where the test was run. If not set, it indicates the draft environment.
        /// </summary>
        public readonly string? Environment;
        /// <summary>
        /// The unique identifier of the intent.
        /// Format: projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/agents/&lt;Agent ID&gt;/intents/&lt;Intent ID&gt;.
        /// 
        /// (Optional)
        /// The unique identifier of the page.
        /// Format: projects/&lt;Project ID&gt;/locations/&lt;Location ID&gt;/agents/&lt;Agent ID&gt;/flows/&lt;Flow ID&gt;/pages/&lt;Page ID&gt;.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Whether the test case passed in the agent environment.
        /// * PASSED: The test passed.
        /// * FAILED: The test did not pass.
        /// Possible values are: `PASSED`, `FAILED`.
        /// </summary>
        public readonly string? TestResult;
        /// <summary>
        /// The time that the test was run. A timestamp in RFC3339 text format.
        /// </summary>
        public readonly string? TestTime;

        [OutputConstructor]
        private CxTestCaseLastTestResult(
            ImmutableArray<Outputs.CxTestCaseLastTestResultConversationTurn> conversationTurns,

            string? environment,

            string? name,

            string? testResult,

            string? testTime)
        {
            ConversationTurns = conversationTurns;
            Environment = environment;
            Name = name;
            TestResult = testResult;
            TestTime = testTime;
        }
    }
}
