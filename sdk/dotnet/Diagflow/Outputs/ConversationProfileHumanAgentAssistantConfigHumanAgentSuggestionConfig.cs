// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Diagflow.Outputs
{

    [OutputType]
    public sealed class ConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfig
    {
        /// <summary>
        /// When disableHighLatencyFeaturesSyncDelivery is true and using the AnalyzeContent API, we will not deliver the responses from high latency features in the API response. The humanAgentAssistantConfig.notification_config must be configured and enableEventBasedSuggestion must be set to true to receive the responses from high latency features in Pub/Sub. High latency feature(s): KNOWLEDGE_ASSIST
        /// </summary>
        public readonly bool? DisableHighLatencyFeaturesSyncDelivery;
        /// <summary>
        /// Configuration of different suggestion features. One feature can have only one config.
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.ConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfig> FeatureConfigs;
        /// <summary>
        /// List of various generator resource names used in the conversation profile.
        /// </summary>
        public readonly ImmutableArray<string> Generators;
        /// <summary>
        /// If groupSuggestionResponses is false, and there are multiple featureConfigs in event based suggestion or StreamingAnalyzeContent, we will try to deliver suggestions to customers as soon as we get new suggestion. Different type of suggestions based on the same context will be in separate Pub/Sub event or StreamingAnalyzeContentResponse.
        /// If groupSuggestionResponses set to true. All the suggestions to the same participant based on the same context will be grouped into a single Pub/Sub event or StreamingAnalyzeContentResponse.
        /// </summary>
        public readonly bool? GroupSuggestionResponses;

        [OutputConstructor]
        private ConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfig(
            bool? disableHighLatencyFeaturesSyncDelivery,

            ImmutableArray<Outputs.ConversationProfileHumanAgentAssistantConfigHumanAgentSuggestionConfigFeatureConfig> featureConfigs,

            ImmutableArray<string> generators,

            bool? groupSuggestionResponses)
        {
            DisableHighLatencyFeaturesSyncDelivery = disableHighLatencyFeaturesSyncDelivery;
            FeatureConfigs = featureConfigs;
            Generators = generators;
            GroupSuggestionResponses = groupSuggestionResponses;
        }
    }
}
