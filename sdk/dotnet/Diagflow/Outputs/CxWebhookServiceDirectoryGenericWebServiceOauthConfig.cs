// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Diagflow.Outputs
{

    [OutputType]
    public sealed class CxWebhookServiceDirectoryGenericWebServiceOauthConfig
    {
        /// <summary>
        /// The client ID provided by the 3rd party platform.
        /// </summary>
        public readonly string ClientId;
        /// <summary>
        /// The client secret provided by the 3rd party platform.  If the
        /// `SecretVersionForClientSecret` field is set, this field will be
        /// ignored.
        /// </summary>
        public readonly string? ClientSecret;
        /// <summary>
        /// The OAuth scopes to grant.
        /// </summary>
        public readonly ImmutableArray<string> Scopes;
        /// <summary>
        /// The name of the SecretManager secret version resource storing the
        /// client secret. If this field is set, the `ClientSecret` field will be
        /// ignored.
        /// Format: `projects/{project}/secrets/{secret}/versions/{version}`
        /// </summary>
        public readonly string? SecretVersionForClientSecret;
        /// <summary>
        /// The token endpoint provided by the 3rd party platform to exchange an
        /// access token.
        /// </summary>
        public readonly string TokenEndpoint;

        [OutputConstructor]
        private CxWebhookServiceDirectoryGenericWebServiceOauthConfig(
            string clientId,

            string? clientSecret,

            ImmutableArray<string> scopes,

            string? secretVersionForClientSecret,

            string tokenEndpoint)
        {
            ClientId = clientId;
            ClientSecret = clientSecret;
            Scopes = scopes;
            SecretVersionForClientSecret = secretVersionForClientSecret;
            TokenEndpoint = tokenEndpoint;
        }
    }
}
