// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Diagflow
{
    /// <summary>
    /// Initializes a location-level encryption key specification.
    /// 
    /// To get more information about EncryptionSpec, see:
    /// 
    /// * [API documentation](https://cloud.google.com/dialogflow/es/docs/reference/rest/v2/projects.locations.encryptionSpec)
    /// * How-to Guides
    ///     * [Official CX Documentation](https://cloud.google.com/dialogflow/cx/docs)
    ///     * [Official ES Documentation](https://cloud.google.com/dialogflow/es/docs)
    /// 
    /// ## Example Usage
    /// 
    /// ### Dialogflow Encryption Spec Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// using Std = Pulumi.Std;
    /// using Time = Pulumi.Time;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var project = new Gcp.Organizations.Project("project", new()
    ///     {
    ///         ProjectId = "my-proj",
    ///         Name = "my-proj",
    ///         OrgId = "123456789",
    ///         BillingAccount = "000000-0000000-0000000-000000",
    ///         DeletionPolicy = "DELETE",
    ///     });
    /// 
    ///     var cloudkms = new Gcp.Projects.Service("cloudkms", new()
    ///     {
    ///         Project = project.ProjectId,
    ///         ServiceName = "cloudkms.googleapis.com",
    ///     });
    /// 
    ///     var dialogflow = new Gcp.Projects.Service("dialogflow", new()
    ///     {
    ///         Project = project.ProjectId,
    ///         ServiceName = "dialogflow.googleapis.com",
    ///     });
    /// 
    ///     var waitEnableServiceApi = new Time.Index.Sleep("wait_enable_service_api", new()
    ///     {
    ///         CreateDuration = "30s",
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             cloudkms,
    ///             dialogflow,
    ///         },
    ///     });
    /// 
    ///     var gcpSa = new Gcp.Projects.ServiceIdentity("gcp_sa", new()
    ///     {
    ///         Service = "dialogflow.googleapis.com",
    ///         Project = project.ProjectId,
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             waitEnableServiceApi,
    ///         },
    ///     });
    /// 
    ///     var waitCreateSa = new Time.Index.Sleep("wait_create_sa", new()
    ///     {
    ///         CreateDuration = "30s",
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             gcpSa,
    ///         },
    ///     });
    /// 
    ///     var keyring = new Gcp.Kms.KeyRing("keyring", new()
    ///     {
    ///         Name = "my-keyring",
    ///         Location = "us-central1",
    ///         Project = project.ProjectId,
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             waitEnableServiceApi,
    ///         },
    ///     });
    /// 
    ///     var key = new Gcp.Kms.CryptoKey("key", new()
    ///     {
    ///         Name = "my-key",
    ///         KeyRing = keyring.Id,
    ///         Purpose = "ENCRYPT_DECRYPT",
    ///     });
    /// 
    ///     var cryptoKey = new Gcp.Kms.CryptoKeyIAMMember("crypto_key", new()
    ///     {
    ///         CryptoKeyId = key.Id,
    ///         Member = Std.Replace.Invoke(new()
    ///         {
    ///             Text = gcpSa.Member,
    ///             Search = "@gcp-sa-dialogflow.iam",
    ///             Replace = "@gcp-sa-ccai-cmek.iam",
    ///         }).Apply(invoke =&gt; invoke.Result),
    ///         Role = "roles/cloudkms.cryptoKeyEncrypterDecrypter",
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             waitCreateSa,
    ///         },
    ///     });
    /// 
    ///     var my_encryption_spec = new Gcp.Diagflow.EncryptionSpec("my-encryption-spec", new()
    ///     {
    ///         Project = project.ProjectId,
    ///         Location = "us-central1",
    ///         EncryptionSpecName = new Gcp.Diagflow.Inputs.EncryptionSpecEncryptionSpecArgs
    ///         {
    ///             KmsKey = key.Id,
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             cryptoKey,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// This resource does not support import.
    /// </summary>
    [GcpResourceType("gcp:diagflow/encryptionSpec:EncryptionSpec")]
    public partial class EncryptionSpec : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A nested object resource.
        /// Structure is documented below.
        /// </summary>
        [Output("encryptionSpec")]
        public Output<Outputs.EncryptionSpecEncryptionSpec> EncryptionSpecName { get; private set; } = null!;

        /// <summary>
        /// The location in which the encryptionSpec is to be initialized.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;


        /// <summary>
        /// Create a EncryptionSpec resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EncryptionSpec(string name, EncryptionSpecArgs args, CustomResourceOptions? options = null)
            : base("gcp:diagflow/encryptionSpec:EncryptionSpec", name, args ?? new EncryptionSpecArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EncryptionSpec(string name, Input<string> id, EncryptionSpecState? state = null, CustomResourceOptions? options = null)
            : base("gcp:diagflow/encryptionSpec:EncryptionSpec", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EncryptionSpec resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EncryptionSpec Get(string name, Input<string> id, EncryptionSpecState? state = null, CustomResourceOptions? options = null)
        {
            return new EncryptionSpec(name, id, state, options);
        }
    }

    public sealed class EncryptionSpecArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A nested object resource.
        /// Structure is documented below.
        /// </summary>
        [Input("encryptionSpec", required: true)]
        public Input<Inputs.EncryptionSpecEncryptionSpecArgs> EncryptionSpecName { get; set; } = null!;

        /// <summary>
        /// The location in which the encryptionSpec is to be initialized.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public EncryptionSpecArgs()
        {
        }
        public static new EncryptionSpecArgs Empty => new EncryptionSpecArgs();
    }

    public sealed class EncryptionSpecState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A nested object resource.
        /// Structure is documented below.
        /// </summary>
        [Input("encryptionSpec")]
        public Input<Inputs.EncryptionSpecEncryptionSpecGetArgs>? EncryptionSpecName { get; set; }

        /// <summary>
        /// The location in which the encryptionSpec is to be initialized.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        public EncryptionSpecState()
        {
        }
        public static new EncryptionSpecState Empty => new EncryptionSpecState();
    }
}
