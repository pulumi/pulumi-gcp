// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Diagflow.Inputs
{

    public sealed class CxToolOpenApiSpecTlsConfigCaCertGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The allowed custom CA certificates (in DER format) for HTTPS verification. This overrides the default SSL trust store.
        /// If this is empty or unspecified, Dialogflow will use Google's default trust store to verify certificates.
        /// N.B. Make sure the HTTPS server certificates are signed with "subject alt name".
        /// For instance a certificate can be self-signed using the following command:
        /// ```
        /// openssl x509 -req -days 200 -in example.com.csr \
        /// -signkey example.com.key \
        /// -out example.com.crt \
        /// -extfile &lt;(printf "\nsubjectAltName='DNS:www.example.com'")
        /// ```
        /// A base64-encoded string.
        /// </summary>
        [Input("cert", required: true)]
        public Input<string> Cert { get; set; } = null!;

        /// <summary>
        /// The name of the allowed custom CA certificates. This can be used to disambiguate the custom CA certificates.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        public CxToolOpenApiSpecTlsConfigCaCertGetArgs()
        {
        }
        public static new CxToolOpenApiSpecTlsConfigCaCertGetArgs Empty => new CxToolOpenApiSpecTlsConfigCaCertGetArgs();
    }
}
