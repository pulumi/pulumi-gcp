// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Diagflow.Inputs
{

    public sealed class CxTestCaseTestCaseConversationTurnUserInputGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether sentiment analysis is enabled.
        /// </summary>
        [Input("enableSentimentAnalysis")]
        public Input<bool>? EnableSentimentAnalysis { get; set; }

        /// <summary>
        /// Parameters that need to be injected into the conversation during intent detection.
        /// </summary>
        [Input("injectedParameters")]
        public Input<string>? InjectedParameters { get; set; }

        /// <summary>
        /// User input. Supports text input, event input, dtmf input in the test case.
        /// Structure is documented below.
        /// </summary>
        [Input("input")]
        public Input<Inputs.CxTestCaseTestCaseConversationTurnUserInputInputGetArgs>? Input { get; set; }

        /// <summary>
        /// If webhooks should be allowed to trigger in response to the user utterance. Often if parameters are injected, webhooks should not be enabled.
        /// </summary>
        [Input("isWebhookEnabled")]
        public Input<bool>? IsWebhookEnabled { get; set; }

        public CxTestCaseTestCaseConversationTurnUserInputGetArgs()
        {
        }
        public static new CxTestCaseTestCaseConversationTurnUserInputGetArgs Empty => new CxTestCaseTestCaseConversationTurnUserInputGetArgs();
    }
}
