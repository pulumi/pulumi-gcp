// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Diagflow.Inputs
{

    public sealed class CxGenerativeSettingsKnowledgeConnectorSettingsGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the virtual agent. Used for LLM prompt. Can be left empty.
        /// </summary>
        [Input("agent")]
        public Input<string>? Agent { get; set; }

        /// <summary>
        /// Identity of the agent, e.g. "virtual agent", "AI assistant".
        /// </summary>
        [Input("agentIdentity")]
        public Input<string>? AgentIdentity { get; set; }

        /// <summary>
        /// Agent scope, e.g. "Example company website", "internal Example company website for employees", "manual of car owner".
        /// </summary>
        [Input("agentScope")]
        public Input<string>? AgentScope { get; set; }

        /// <summary>
        /// Name of the company, organization or other entity that the agent represents. Used for knowledge connector LLM prompt and for knowledge search.
        /// </summary>
        [Input("business")]
        public Input<string>? Business { get; set; }

        /// <summary>
        /// Company description, used for LLM prompt, e.g. "a family company selling freshly roasted coffee beans".``
        /// </summary>
        [Input("businessDescription")]
        public Input<string>? BusinessDescription { get; set; }

        /// <summary>
        /// Whether to disable fallback to Data Store search results (in case the LLM couldn't pick a proper answer). Per default the feature is enabled.
        /// </summary>
        [Input("disableDataStoreFallback")]
        public Input<bool>? DisableDataStoreFallback { get; set; }

        public CxGenerativeSettingsKnowledgeConnectorSettingsGetArgs()
        {
        }
        public static new CxGenerativeSettingsKnowledgeConnectorSettingsGetArgs Empty => new CxGenerativeSettingsKnowledgeConnectorSettingsGetArgs();
    }
}
