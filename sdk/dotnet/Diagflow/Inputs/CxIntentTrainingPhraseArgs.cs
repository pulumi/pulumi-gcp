// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Diagflow.Inputs
{

    public sealed class CxIntentTrainingPhraseArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The unique identifier of the training phrase.
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("parts", required: true)]
        private InputList<Inputs.CxIntentTrainingPhrasePartArgs>? _parts;

        /// <summary>
        /// The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase.
        /// Note: The API does not automatically annotate training phrases like the Dialogflow Console does.
        /// Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated.
        /// If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set.
        /// If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways:
        /// Part.text is set to a part of the phrase that has no parameters.
        /// Part.text is set to a part of the phrase that you want to annotate, and the parameterId field is set.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.CxIntentTrainingPhrasePartArgs> Parts
        {
            get => _parts ?? (_parts = new InputList<Inputs.CxIntentTrainingPhrasePartArgs>());
            set => _parts = value;
        }

        /// <summary>
        /// Indicates how many times this example was added to the intent.
        /// </summary>
        [Input("repeatCount")]
        public Input<int>? RepeatCount { get; set; }

        public CxIntentTrainingPhraseArgs()
        {
        }
        public static new CxIntentTrainingPhraseArgs Empty => new CxIntentTrainingPhraseArgs();
    }
}
