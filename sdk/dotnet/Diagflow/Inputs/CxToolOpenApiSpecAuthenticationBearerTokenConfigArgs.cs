// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Diagflow.Inputs
{

    public sealed class CxToolOpenApiSpecAuthenticationBearerTokenConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional. The name of the SecretManager secret version resource storing the Bearer token. If this field is set, the `token` field will be ignored.
        /// Format: projects/{project}/secrets/{secret}/versions/{version}
        /// </summary>
        [Input("secretVersionForToken")]
        public Input<string>? SecretVersionForToken { get; set; }

        [Input("token")]
        private Input<string>? _token;

        /// <summary>
        /// Optional. The text token appended to the text Bearer to the request Authorization header.
        /// [Session parameters reference](https://cloud.google.com/dialogflow/cx/docs/concept/parameter#session-ref) can be used to pass the token dynamically, e.g. `$session.params.parameter-id`.
        /// **Note**: This property is sensitive and will not be displayed in the plan.
        /// </summary>
        public Input<string>? Token
        {
            get => _token;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _token = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        public CxToolOpenApiSpecAuthenticationBearerTokenConfigArgs()
        {
        }
        public static new CxToolOpenApiSpecAuthenticationBearerTokenConfigArgs Empty => new CxToolOpenApiSpecAuthenticationBearerTokenConfigArgs();
    }
}
