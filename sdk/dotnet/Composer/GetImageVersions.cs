// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Composer
{
    public static class GetImageVersions
    {
        /// <summary>
        /// Provides access to available Cloud Composer versions in a region for a given project.
        /// 
        /// {{% examples %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetImageVersionsResult> InvokeAsync(GetImageVersionsArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetImageVersionsResult>("gcp:composer/getImageVersions:getImageVersions", args ?? new GetImageVersionsArgs(), options.WithVersion());
    }


    public sealed class GetImageVersionsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the project to list versions in.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        /// <summary>
        /// The location to list versions in.
        /// If it is not provider, the provider region is used.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        public GetImageVersionsArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetImageVersionsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of composer image versions available in the given project and location. Each `image_version` contains:
        /// </summary>
        public readonly ImmutableArray<Outputs.GetImageVersionsImageVersionResult> ImageVersions;
        public readonly string Project;
        public readonly string Region;

        [OutputConstructor]
        private GetImageVersionsResult(
            string id,

            ImmutableArray<Outputs.GetImageVersionsImageVersionResult> imageVersions,

            string project,

            string region)
        {
            Id = id;
            ImageVersions = imageVersions;
            Project = project;
            Region = region;
        }
    }
}
