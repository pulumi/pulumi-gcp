// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Composer
{
    /// <summary>
    /// User workloads ConfigMap used by Airflow tasks that run with Kubernetes Executor or KubernetesPodOperator.
    /// Intended for Composer 3 Environments.
    /// 
    /// To get more information about UserWorkloadsConfigMap, see:
    /// 
    /// * [API documentation](https://cloud.google.com/composer/docs/reference/rest/v1/projects.locations.environments.userWorkloadsConfigMaps)
    /// 
    /// ## Example Usage
    /// 
    /// ### Composer User Workloads Config Map Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var environment = new Gcp.Composer.Environment("environment", new()
    ///     {
    ///         Name = "test-environment",
    ///         Region = "us-central1",
    ///         Config = new Gcp.Composer.Inputs.EnvironmentConfigArgs
    ///         {
    ///             SoftwareConfig = new Gcp.Composer.Inputs.EnvironmentConfigSoftwareConfigArgs
    ///             {
    ///                 ImageVersion = "composer-3-airflow-2",
    ///             },
    ///         },
    ///     });
    /// 
    ///     var configMap = new Gcp.Composer.UserWorkloadsConfigMap("config_map", new()
    ///     {
    ///         Name = "test-config-map",
    ///         Region = "us-central1",
    ///         Environment = environment.Name,
    ///         Data = 
    ///         {
    ///             { "api_host", "apihost:443" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// UserWorkloadsConfigMap can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/locations/{{region}}/environments/{{environment}}/userWorkloadsConfigMaps/{{name}}`
    /// 
    /// * `{{project}}/{{region}}/{{environment}}/{{name}}`
    /// 
    /// * `{{region}}/{{environment}}/{{name}}`
    /// 
    /// * `{{environment}}/{{name}}`
    /// 
    /// When using the `pulumi import` command, UserWorkloadsConfigMap can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:composer/userWorkloadsConfigMap:UserWorkloadsConfigMap default projects/{{project}}/locations/{{region}}/environments/{{environment}}/userWorkloadsConfigMaps/{{name}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:composer/userWorkloadsConfigMap:UserWorkloadsConfigMap default {{project}}/{{region}}/{{environment}}/{{name}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:composer/userWorkloadsConfigMap:UserWorkloadsConfigMap default {{region}}/{{environment}}/{{name}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:composer/userWorkloadsConfigMap:UserWorkloadsConfigMap default {{environment}}/{{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:composer/userWorkloadsConfigMap:UserWorkloadsConfigMap")]
    public partial class UserWorkloadsConfigMap : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The "data" field of Kubernetes ConfigMap, organized in key-value pairs.
        /// For details see: https://kubernetes.io/docs/concepts/configuration/configmap/
        /// </summary>
        [Output("data")]
        public Output<ImmutableDictionary<string, string>?> Data { get; private set; } = null!;

        /// <summary>
        /// Environment where the Kubernetes ConfigMap will be stored and used.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Output("environment")]
        public Output<string> Environment { get; private set; } = null!;

        /// <summary>
        /// Name of the Kubernetes ConfigMap.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The location or Compute Engine region for the environment.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;


        /// <summary>
        /// Create a UserWorkloadsConfigMap resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public UserWorkloadsConfigMap(string name, UserWorkloadsConfigMapArgs args, CustomResourceOptions? options = null)
            : base("gcp:composer/userWorkloadsConfigMap:UserWorkloadsConfigMap", name, args ?? new UserWorkloadsConfigMapArgs(), MakeResourceOptions(options, ""))
        {
        }

        private UserWorkloadsConfigMap(string name, Input<string> id, UserWorkloadsConfigMapState? state = null, CustomResourceOptions? options = null)
            : base("gcp:composer/userWorkloadsConfigMap:UserWorkloadsConfigMap", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing UserWorkloadsConfigMap resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static UserWorkloadsConfigMap Get(string name, Input<string> id, UserWorkloadsConfigMapState? state = null, CustomResourceOptions? options = null)
        {
            return new UserWorkloadsConfigMap(name, id, state, options);
        }
    }

    public sealed class UserWorkloadsConfigMapArgs : global::Pulumi.ResourceArgs
    {
        [Input("data")]
        private InputMap<string>? _data;

        /// <summary>
        /// The "data" field of Kubernetes ConfigMap, organized in key-value pairs.
        /// For details see: https://kubernetes.io/docs/concepts/configuration/configmap/
        /// </summary>
        public InputMap<string> Data
        {
            get => _data ?? (_data = new InputMap<string>());
            set => _data = value;
        }

        /// <summary>
        /// Environment where the Kubernetes ConfigMap will be stored and used.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("environment", required: true)]
        public Input<string> Environment { get; set; } = null!;

        /// <summary>
        /// Name of the Kubernetes ConfigMap.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The location or Compute Engine region for the environment.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public UserWorkloadsConfigMapArgs()
        {
        }
        public static new UserWorkloadsConfigMapArgs Empty => new UserWorkloadsConfigMapArgs();
    }

    public sealed class UserWorkloadsConfigMapState : global::Pulumi.ResourceArgs
    {
        [Input("data")]
        private InputMap<string>? _data;

        /// <summary>
        /// The "data" field of Kubernetes ConfigMap, organized in key-value pairs.
        /// For details see: https://kubernetes.io/docs/concepts/configuration/configmap/
        /// </summary>
        public InputMap<string> Data
        {
            get => _data ?? (_data = new InputMap<string>());
            set => _data = value;
        }

        /// <summary>
        /// Environment where the Kubernetes ConfigMap will be stored and used.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("environment")]
        public Input<string>? Environment { get; set; }

        /// <summary>
        /// Name of the Kubernetes ConfigMap.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The location or Compute Engine region for the environment.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public UserWorkloadsConfigMapState()
        {
        }
        public static new UserWorkloadsConfigMapState Empty => new UserWorkloadsConfigMapState();
    }
}
