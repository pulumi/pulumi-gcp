// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Composer.Outputs
{

    [OutputType]
    public sealed class EnvironmentConfig
    {
        public readonly string? AirflowUri;
        public readonly string? DagGcsPrefix;
        /// <summary>
        /// The configuration settings for Cloud SQL instance used internally
        /// by Apache Airflow software. This field is supported for Cloud
        /// Composer environments in versions composer-1.*.*-airflow-*.*.*.
        /// </summary>
        public readonly Outputs.EnvironmentConfigDatabaseConfig? DatabaseConfig;
        /// <summary>
        /// The encryption options for the Cloud Composer environment and its
        /// dependencies. This field is supported for Cloud Composer environments in
        /// versions composer-1.*.*-airflow-*.*.*.
        /// </summary>
        public readonly Outputs.EnvironmentConfigEncryptionConfig? EncryptionConfig;
        public readonly string? GkeCluster;
        /// <summary>
        /// The configuration settings for Cloud Composer maintenance window.
        /// </summary>
        public readonly Outputs.EnvironmentConfigMaintenanceWindow? MaintenanceWindow;
        /// <summary>
        /// The configuration used for the Kubernetes Engine cluster.  Structure is documented below.
        /// </summary>
        public readonly Outputs.EnvironmentConfigNodeConfig? NodeConfig;
        /// <summary>
        /// The number of nodes in the Kubernetes Engine cluster that
        /// will be used to run this environment. This field is
        /// supported for Cloud Composer environments in versions
        /// composer-1.*.*-airflow-*.*.*.
        /// </summary>
        public readonly int? NodeCount;
        /// <summary>
        /// The configuration used for the Private IP Cloud Composer environment. Structure is documented below.
        /// </summary>
        public readonly Outputs.EnvironmentConfigPrivateEnvironmentConfig? PrivateEnvironmentConfig;
        /// <summary>
        /// The configuration settings for software inside the environment.  Structure is documented below.
        /// </summary>
        public readonly Outputs.EnvironmentConfigSoftwareConfig? SoftwareConfig;
        /// <summary>
        /// The configuration settings for the Airflow web server App Engine instance.
        /// This field is supported for Cloud Composer environments in versions
        /// composer-1.*.*-airflow-*.*.*.
        /// </summary>
        public readonly Outputs.EnvironmentConfigWebServerConfig? WebServerConfig;
        public readonly Outputs.EnvironmentConfigWebServerNetworkAccessControl? WebServerNetworkAccessControl;
        /// <summary>
        /// The Kubernetes workloads configuration for GKE cluster associated with the
        /// Cloud Composer environment. Supported for Cloud Composer environments in
        /// versions composer-2.*.*-airflow-*.*.* and newer.
        /// </summary>
        public readonly Outputs.EnvironmentConfigWorkloadsConfig? WorkloadsConfig;

        [OutputConstructor]
        private EnvironmentConfig(
            string? airflowUri,

            string? dagGcsPrefix,

            Outputs.EnvironmentConfigDatabaseConfig? databaseConfig,

            Outputs.EnvironmentConfigEncryptionConfig? encryptionConfig,

            string? gkeCluster,

            Outputs.EnvironmentConfigMaintenanceWindow? maintenanceWindow,

            Outputs.EnvironmentConfigNodeConfig? nodeConfig,

            int? nodeCount,

            Outputs.EnvironmentConfigPrivateEnvironmentConfig? privateEnvironmentConfig,

            Outputs.EnvironmentConfigSoftwareConfig? softwareConfig,

            Outputs.EnvironmentConfigWebServerConfig? webServerConfig,

            Outputs.EnvironmentConfigWebServerNetworkAccessControl? webServerNetworkAccessControl,

            Outputs.EnvironmentConfigWorkloadsConfig? workloadsConfig)
        {
            AirflowUri = airflowUri;
            DagGcsPrefix = dagGcsPrefix;
            DatabaseConfig = databaseConfig;
            EncryptionConfig = encryptionConfig;
            GkeCluster = gkeCluster;
            MaintenanceWindow = maintenanceWindow;
            NodeConfig = nodeConfig;
            NodeCount = nodeCount;
            PrivateEnvironmentConfig = privateEnvironmentConfig;
            SoftwareConfig = softwareConfig;
            WebServerConfig = webServerConfig;
            WebServerNetworkAccessControl = webServerNetworkAccessControl;
            WorkloadsConfig = workloadsConfig;
        }
    }
}
