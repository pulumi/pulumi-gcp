// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Composer.Outputs
{

    [OutputType]
    public sealed class EnvironmentConfigSoftwareConfig
    {
        public readonly ImmutableDictionary<string, string>? AirflowConfigOverrides;
        public readonly ImmutableDictionary<string, string>? EnvVariables;
        /// <summary>
        /// -
        /// The version of the software running in the environment. This encapsulates both the version of Cloud Composer
        /// functionality and the version of Apache Airflow. It must match the regular expression
        /// `composer-[0-9]+\.[0-9]+(\.[0-9]+)?-airflow-[0-9]+\.[0-9]+(\.[0-9]+.*)?`.
        /// The Cloud Composer portion of the version is a semantic version.
        /// The portion of the image version following 'airflow-' is an official Apache Airflow repository release name.
        /// See [documentation](https://cloud.google.com/composer/docs/reference/rest/v1beta1/projects.locations.environments#softwareconfig)
        /// for allowed release names.
        /// </summary>
        public readonly string? ImageVersion;
        public readonly ImmutableDictionary<string, string>? PypiPackages;
        /// <summary>
        /// -
        /// The major version of Python used to run the Apache Airflow scheduler, worker, and webserver processes.
        /// Can be set to '2' or '3'. If not specified, the default is '2'. Cannot be updated.
        /// </summary>
        public readonly string? PythonVersion;

        [OutputConstructor]
        private EnvironmentConfigSoftwareConfig(
            ImmutableDictionary<string, string>? airflowConfigOverrides,

            ImmutableDictionary<string, string>? envVariables,

            string? imageVersion,

            ImmutableDictionary<string, string>? pypiPackages,

            string? pythonVersion)
        {
            AirflowConfigOverrides = airflowConfigOverrides;
            EnvVariables = envVariables;
            ImageVersion = imageVersion;
            PypiPackages = pypiPackages;
            PythonVersion = pythonVersion;
        }
    }
}
