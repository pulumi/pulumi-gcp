// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Accesscontextmanager
{
    /// <summary>
    /// ServicePerimeter describes a set of GCP resources which can freely import
    /// and export data amongst themselves, but not export outside of the
    /// ServicePerimeter. If a request with a source within this ServicePerimeter
    /// has a target outside of the ServicePerimeter, the request will be blocked.
    /// Otherwise the request is allowed. There are two types of Service Perimeter
    /// - Regular and Bridge. Regular Service Perimeters cannot overlap, a single
    /// GCP project can only belong to a single regular Service Perimeter. Service
    /// Perimeter Bridges can contain only GCP projects as members, a single GCP
    /// project may belong to multiple Service Perimeter Bridges.
    /// 
    /// 
    /// To get more information about ServicePerimeter, see:
    /// 
    /// * [API documentation](https://cloud.google.com/access-context-manager/docs/reference/rest/v1/accessPolicies.servicePerimeters)
    /// * How-to Guides
    ///     * [Service Perimeter Quickstart](https://cloud.google.com/vpc-service-controls/docs/quickstart)
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/access_context_manager_service_perimeter.html.markdown.
    /// </summary>
    public partial class ServicePerimeter : Pulumi.CustomResource
    {
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("parent")]
        public Output<string> Parent { get; private set; } = null!;

        [Output("perimeterType")]
        public Output<string?> PerimeterType { get; private set; } = null!;

        [Output("status")]
        public Output<Outputs.ServicePerimeterStatus?> Status { get; private set; } = null!;

        [Output("title")]
        public Output<string> Title { get; private set; } = null!;

        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a ServicePerimeter resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServicePerimeter(string name, ServicePerimeterArgs args, CustomResourceOptions? options = null)
            : base("gcp:accesscontextmanager/servicePerimeter:ServicePerimeter", name, args, MakeResourceOptions(options, ""))
        {
        }

        private ServicePerimeter(string name, Input<string> id, ServicePerimeterState? state = null, CustomResourceOptions? options = null)
            : base("gcp:accesscontextmanager/servicePerimeter:ServicePerimeter", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServicePerimeter resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServicePerimeter Get(string name, Input<string> id, ServicePerimeterState? state = null, CustomResourceOptions? options = null)
        {
            return new ServicePerimeter(name, id, state, options);
        }
    }

    public sealed class ServicePerimeterArgs : Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("parent", required: true)]
        public Input<string> Parent { get; set; } = null!;

        [Input("perimeterType")]
        public Input<string>? PerimeterType { get; set; }

        [Input("status")]
        public Input<Inputs.ServicePerimeterStatusArgs>? Status { get; set; }

        [Input("title", required: true)]
        public Input<string> Title { get; set; } = null!;

        public ServicePerimeterArgs()
        {
        }
    }

    public sealed class ServicePerimeterState : Pulumi.ResourceArgs
    {
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("parent")]
        public Input<string>? Parent { get; set; }

        [Input("perimeterType")]
        public Input<string>? PerimeterType { get; set; }

        [Input("status")]
        public Input<Inputs.ServicePerimeterStatusGetArgs>? Status { get; set; }

        [Input("title")]
        public Input<string>? Title { get; set; }

        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public ServicePerimeterState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class ServicePerimeterStatusArgs : Pulumi.ResourceArgs
    {
        [Input("accessLevels")]
        private InputList<string>? _accessLevels;
        public InputList<string> AccessLevels
        {
            get => _accessLevels ?? (_accessLevels = new InputList<string>());
            set => _accessLevels = value;
        }

        [Input("resources")]
        private InputList<string>? _resources;
        public InputList<string> Resources
        {
            get => _resources ?? (_resources = new InputList<string>());
            set => _resources = value;
        }

        [Input("restrictedServices")]
        private InputList<string>? _restrictedServices;
        public InputList<string> RestrictedServices
        {
            get => _restrictedServices ?? (_restrictedServices = new InputList<string>());
            set => _restrictedServices = value;
        }

        public ServicePerimeterStatusArgs()
        {
        }
    }

    public sealed class ServicePerimeterStatusGetArgs : Pulumi.ResourceArgs
    {
        [Input("accessLevels")]
        private InputList<string>? _accessLevels;
        public InputList<string> AccessLevels
        {
            get => _accessLevels ?? (_accessLevels = new InputList<string>());
            set => _accessLevels = value;
        }

        [Input("resources")]
        private InputList<string>? _resources;
        public InputList<string> Resources
        {
            get => _resources ?? (_resources = new InputList<string>());
            set => _resources = value;
        }

        [Input("restrictedServices")]
        private InputList<string>? _restrictedServices;
        public InputList<string> RestrictedServices
        {
            get => _restrictedServices ?? (_restrictedServices = new InputList<string>());
            set => _restrictedServices = value;
        }

        public ServicePerimeterStatusGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class ServicePerimeterStatus
    {
        public readonly ImmutableArray<string> AccessLevels;
        public readonly ImmutableArray<string> Resources;
        public readonly ImmutableArray<string> RestrictedServices;

        [OutputConstructor]
        private ServicePerimeterStatus(
            ImmutableArray<string> accessLevels,
            ImmutableArray<string> resources,
            ImmutableArray<string> restrictedServices)
        {
            AccessLevels = accessLevels;
            Resources = resources;
            RestrictedServices = restrictedServices;
        }
    }
    }
}
