// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Dataflow.Outputs
{

    [OutputType]
    public sealed class PipelineWorkloadDataflowLaunchTemplateRequest
    {
        /// <summary>
        /// A Cloud Storage path to the template from which to create the job. Must be a valid Cloud Storage URL, beginning with 'gs://'.
        /// </summary>
        public readonly string? GcsPath;
        /// <summary>
        /// The parameters of the template to launch. This should be part of the body of the POST request.
        /// https://cloud.google.com/dataflow/docs/reference/data-pipelines/rest/v1/projects.locations.pipelines#launchtemplateparameters
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.PipelineWorkloadDataflowLaunchTemplateRequestLaunchParameters? LaunchParameters;
        /// <summary>
        /// The regional endpoint to which to direct the request.
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// The ID of the Cloud Platform project that the job belongs to.
        /// </summary>
        public readonly string ProjectId;
        /// <summary>
        /// (Optional)
        /// </summary>
        public readonly bool? ValidateOnly;

        [OutputConstructor]
        private PipelineWorkloadDataflowLaunchTemplateRequest(
            string? gcsPath,

            Outputs.PipelineWorkloadDataflowLaunchTemplateRequestLaunchParameters? launchParameters,

            string? location,

            string projectId,

            bool? validateOnly)
        {
            GcsPath = gcsPath;
            LaunchParameters = launchParameters;
            Location = location;
            ProjectId = projectId;
            ValidateOnly = validateOnly;
        }
    }
}
