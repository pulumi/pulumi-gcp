// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Beyondcorp
{
    public static class GetApplicationIamPolicy
    {
        /// <summary>
        /// Retrieves the current IAM policy data for application
        /// 
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Beyondcorp.GetApplicationIamPolicy.Invoke(new()
        ///     {
        ///         Project = example.Project,
        ///         SecurityGatewaysId = example.SecurityGatewaysId,
        ///         ApplicationId = example.ApplicationId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetApplicationIamPolicyResult> InvokeAsync(GetApplicationIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApplicationIamPolicyResult>("gcp:beyondcorp/getApplicationIamPolicy:getApplicationIamPolicy", args ?? new GetApplicationIamPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the current IAM policy data for application
        /// 
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Beyondcorp.GetApplicationIamPolicy.Invoke(new()
        ///     {
        ///         Project = example.Project,
        ///         SecurityGatewaysId = example.SecurityGatewaysId,
        ///         ApplicationId = example.ApplicationId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetApplicationIamPolicyResult> Invoke(GetApplicationIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApplicationIamPolicyResult>("gcp:beyondcorp/getApplicationIamPolicy:getApplicationIamPolicy", args ?? new GetApplicationIamPolicyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the current IAM policy data for application
        /// 
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.Beyondcorp.GetApplicationIamPolicy.Invoke(new()
        ///     {
        ///         Project = example.Project,
        ///         SecurityGatewaysId = example.SecurityGatewaysId,
        ///         ApplicationId = example.ApplicationId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetApplicationIamPolicyResult> Invoke(GetApplicationIamPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetApplicationIamPolicyResult>("gcp:beyondcorp/getApplicationIamPolicy:getApplicationIamPolicy", args ?? new GetApplicationIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApplicationIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        [Input("applicationId", required: true)]
        public string ApplicationId { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        [Input("securityGatewaysId", required: true)]
        public string SecurityGatewaysId { get; set; } = null!;

        public GetApplicationIamPolicyArgs()
        {
        }
        public static new GetApplicationIamPolicyArgs Empty => new GetApplicationIamPolicyArgs();
    }

    public sealed class GetApplicationIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("applicationId", required: true)]
        public Input<string> ApplicationId { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("securityGatewaysId", required: true)]
        public Input<string> SecurityGatewaysId { get; set; } = null!;

        public GetApplicationIamPolicyInvokeArgs()
        {
        }
        public static new GetApplicationIamPolicyInvokeArgs Empty => new GetApplicationIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetApplicationIamPolicyResult
    {
        public readonly string ApplicationId;
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (Required only by `gcp.beyondcorp.ApplicationIamPolicy`) The policy data generated by
        /// a `gcp.organizations.getIAMPolicy` data source.
        /// </summary>
        public readonly string PolicyData;
        public readonly string Project;
        public readonly string SecurityGatewaysId;

        [OutputConstructor]
        private GetApplicationIamPolicyResult(
            string applicationId,

            string etag,

            string id,

            string policyData,

            string project,

            string securityGatewaysId)
        {
            ApplicationId = applicationId;
            Etag = etag;
            Id = id;
            PolicyData = policyData;
            Project = project;
            SecurityGatewaysId = securityGatewaysId;
        }
    }
}
