// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Beyondcorp.Outputs
{

    [OutputType]
    public sealed class GetSecurityGatewayProxyProtocolConfigResult
    {
        /// <summary>
        /// The configuration for the proxy.
        /// </summary>
        public readonly ImmutableArray<string> AllowedClientHeaders;
        /// <summary>
        /// Client IP configuration. The client IP address is included if true.
        /// </summary>
        public readonly bool ClientIp;
        /// <summary>
        /// Configuration for the contextual headers.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSecurityGatewayProxyProtocolConfigContextualHeaderResult> ContextualHeaders;
        /// <summary>
        /// Gateway identity configuration. Possible values: ["RESOURCE_NAME"]
        /// </summary>
        public readonly string GatewayIdentity;
        /// <summary>
        /// Custom resource specific headers along with the values.
        /// The names should conform to RFC 9110:
        /// &gt; Field names SHOULD constrain themselves to alphanumeric characters, "-",
        ///   and ".", and SHOULD begin with a letter.
        /// &gt; Field values SHOULD contain only ASCII printable characters and tab.
        /// </summary>
        public readonly ImmutableDictionary<string, string> MetadataHeaders;

        [OutputConstructor]
        private GetSecurityGatewayProxyProtocolConfigResult(
            ImmutableArray<string> allowedClientHeaders,

            bool clientIp,

            ImmutableArray<Outputs.GetSecurityGatewayProxyProtocolConfigContextualHeaderResult> contextualHeaders,

            string gatewayIdentity,

            ImmutableDictionary<string, string> metadataHeaders)
        {
            AllowedClientHeaders = allowedClientHeaders;
            ClientIp = clientIp;
            ContextualHeaders = contextualHeaders;
            GatewayIdentity = gatewayIdentity;
            MetadataHeaders = metadataHeaders;
        }
    }
}
