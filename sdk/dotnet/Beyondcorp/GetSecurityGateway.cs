// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Beyondcorp
{
    public static class GetSecurityGateway
    {
        /// <summary>
        /// Get information about a Google BeyondCorp Security Gateway.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var my_beyondcorp_security_gateway = Gcp.Beyondcorp.GetSecurityGateway.Invoke(new()
        ///     {
        ///         SecurityGatewayId = "my-beyondcorp-security-gateway",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetSecurityGatewayResult> InvokeAsync(GetSecurityGatewayArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSecurityGatewayResult>("gcp:beyondcorp/getSecurityGateway:getSecurityGateway", args ?? new GetSecurityGatewayArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Google BeyondCorp Security Gateway.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var my_beyondcorp_security_gateway = Gcp.Beyondcorp.GetSecurityGateway.Invoke(new()
        ///     {
        ///         SecurityGatewayId = "my-beyondcorp-security-gateway",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSecurityGatewayResult> Invoke(GetSecurityGatewayInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecurityGatewayResult>("gcp:beyondcorp/getSecurityGateway:getSecurityGateway", args ?? new GetSecurityGatewayInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a Google BeyondCorp Security Gateway.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var my_beyondcorp_security_gateway = Gcp.Beyondcorp.GetSecurityGateway.Invoke(new()
        ///     {
        ///         SecurityGatewayId = "my-beyondcorp-security-gateway",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetSecurityGatewayResult> Invoke(GetSecurityGatewayInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecurityGatewayResult>("gcp:beyondcorp/getSecurityGateway:getSecurityGateway", args ?? new GetSecurityGatewayInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecurityGatewayArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The project in which the resource belongs. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        /// <summary>
        /// The name of the Security Gateway resource.
        /// 
        /// - - -
        /// </summary>
        [Input("securityGatewayId", required: true)]
        public string SecurityGatewayId { get; set; } = null!;

        public GetSecurityGatewayArgs()
        {
        }
        public static new GetSecurityGatewayArgs Empty => new GetSecurityGatewayArgs();
    }

    public sealed class GetSecurityGatewayInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The project in which the resource belongs. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The name of the Security Gateway resource.
        /// 
        /// - - -
        /// </summary>
        [Input("securityGatewayId", required: true)]
        public Input<string> SecurityGatewayId { get; set; } = null!;

        public GetSecurityGatewayInvokeArgs()
        {
        }
        public static new GetSecurityGatewayInvokeArgs Empty => new GetSecurityGatewayInvokeArgs();
    }


    [OutputType]
    public sealed class GetSecurityGatewayResult
    {
        public readonly string CreateTime;
        public readonly string DisplayName;
        public readonly ImmutableArray<string> ExternalIps;
        public readonly ImmutableArray<Outputs.GetSecurityGatewayHubResult> Hubs;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Location;
        public readonly string Name;
        public readonly string? Project;
        public readonly string SecurityGatewayId;
        public readonly string State;
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetSecurityGatewayResult(
            string createTime,

            string displayName,

            ImmutableArray<string> externalIps,

            ImmutableArray<Outputs.GetSecurityGatewayHubResult> hubs,

            string id,

            string location,

            string name,

            string? project,

            string securityGatewayId,

            string state,

            string updateTime)
        {
            CreateTime = createTime;
            DisplayName = displayName;
            ExternalIps = externalIps;
            Hubs = hubs;
            Id = id;
            Location = location;
            Name = name;
            Project = project;
            SecurityGatewayId = securityGatewayId;
            State = state;
            UpdateTime = updateTime;
        }
    }
}
