// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Beyondcorp
{
    /// <summary>
    /// Specifies application endpoint(s) to protect behind a Security Gateway.
    /// 
    /// ## Example Usage
    /// 
    /// ### Beyondcorp Security Gateway Application Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @default = new Gcp.Beyondcorp.SecurityGateway("default", new()
    ///     {
    ///         SecurityGatewayId = "default-sg",
    ///         DisplayName = "My Security Gateway resource",
    ///         Hubs = new[]
    ///         {
    ///             new Gcp.Beyondcorp.Inputs.SecurityGatewayHubArgs
    ///             {
    ///                 Region = "us-central1",
    ///             },
    ///         },
    ///     });
    /// 
    ///     var example = new Gcp.Beyondcorp.SecurityGatewayApplication("example", new()
    ///     {
    ///         SecurityGatewayId = @default.SecurityGatewayId,
    ///         ApplicationId = "google-sga",
    ///         EndpointMatchers = new[]
    ///         {
    ///             new Gcp.Beyondcorp.Inputs.SecurityGatewayApplicationEndpointMatcherArgs
    ///             {
    ///                 Hostname = "google.com",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Beyondcorp Security Gateway Application Vpc
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var project = Gcp.Organizations.GetProject.Invoke();
    /// 
    ///     var @default = new Gcp.Beyondcorp.SecurityGateway("default", new()
    ///     {
    ///         SecurityGatewayId = "default-sg",
    ///         DisplayName = "My Security Gateway resource",
    ///         Hubs = new[]
    ///         {
    ///             new Gcp.Beyondcorp.Inputs.SecurityGatewayHubArgs
    ///             {
    ///                 Region = "us-central1",
    ///             },
    ///         },
    ///     });
    /// 
    ///     var example = new Gcp.Beyondcorp.SecurityGatewayApplication("example", new()
    ///     {
    ///         SecurityGatewayId = @default.SecurityGatewayId,
    ///         ApplicationId = "my-vm-service2",
    ///         EndpointMatchers = new[]
    ///         {
    ///             new Gcp.Beyondcorp.Inputs.SecurityGatewayApplicationEndpointMatcherArgs
    ///             {
    ///                 Hostname = "my-vm-service.com",
    ///             },
    ///         },
    ///         Upstreams = new[]
    ///         {
    ///             new Gcp.Beyondcorp.Inputs.SecurityGatewayApplicationUpstreamArgs
    ///             {
    ///                 EgressPolicy = new Gcp.Beyondcorp.Inputs.SecurityGatewayApplicationUpstreamEgressPolicyArgs
    ///                 {
    ///                     Regions = new[]
    ///                     {
    ///                         "us-central1",
    ///                     },
    ///                 },
    ///                 Network = new Gcp.Beyondcorp.Inputs.SecurityGatewayApplicationUpstreamNetworkArgs
    ///                 {
    ///                     Name = $"projects/{project.Apply(getProjectResult =&gt; getProjectResult.ProjectId)}/global/networks/default",
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Beyondcorp Security Gateway Application Spa Api
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @default = new Gcp.Beyondcorp.SecurityGateway("default", new()
    ///     {
    ///         SecurityGatewayId = "default-sg-spa-api",
    ///         DisplayName = "My SPA Security Gateway resource",
    ///     });
    /// 
    ///     var example_spa = new Gcp.Beyondcorp.SecurityGatewayApplication("example-spa", new()
    ///     {
    ///         SecurityGatewayId = @default.SecurityGatewayId,
    ///         ApplicationId = "app-discovery",
    ///         Upstreams = new[]
    ///         {
    ///             new Gcp.Beyondcorp.Inputs.SecurityGatewayApplicationUpstreamArgs
    ///             {
    ///                 External = new Gcp.Beyondcorp.Inputs.SecurityGatewayApplicationUpstreamExternalArgs
    ///                 {
    ///                     Endpoints = new[]
    ///                     {
    ///                         new Gcp.Beyondcorp.Inputs.SecurityGatewayApplicationUpstreamExternalEndpointArgs
    ///                         {
    ///                             Hostname = "my.discovery.service.com",
    ///                             Port = 443,
    ///                         },
    ///                     },
    ///                 },
    ///                 ProxyProtocol = new Gcp.Beyondcorp.Inputs.SecurityGatewayApplicationUpstreamProxyProtocolArgs
    ///                 {
    ///                     AllowedClientHeaders = new[]
    ///                     {
    ///                         "header",
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         Schema = "API_GATEWAY",
    ///     });
    /// 
    /// });
    /// ```
    /// ### Beyondcorp Security Gateway Application Spa Proxy
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @default = new Gcp.Beyondcorp.SecurityGateway("default", new()
    ///     {
    ///         SecurityGatewayId = "default-sg-spa-proxy",
    ///         DisplayName = "My SPA Security Gateway resource",
    ///     });
    /// 
    ///     var example_spa = new Gcp.Beyondcorp.SecurityGatewayApplication("example-spa", new()
    ///     {
    ///         SecurityGatewayId = @default.SecurityGatewayId,
    ///         ApplicationId = "app-proxy",
    ///         EndpointMatchers = new[]
    ///         {
    ///             new Gcp.Beyondcorp.Inputs.SecurityGatewayApplicationEndpointMatcherArgs
    ///             {
    ///                 Hostname = "a.site.com",
    ///                 Ports = new[]
    ///                 {
    ///                     443,
    ///                 },
    ///             },
    ///         },
    ///         Upstreams = new[]
    ///         {
    ///             new Gcp.Beyondcorp.Inputs.SecurityGatewayApplicationUpstreamArgs
    ///             {
    ///                 External = new Gcp.Beyondcorp.Inputs.SecurityGatewayApplicationUpstreamExternalArgs
    ///                 {
    ///                     Endpoints = new[]
    ///                     {
    ///                         new Gcp.Beyondcorp.Inputs.SecurityGatewayApplicationUpstreamExternalEndpointArgs
    ///                         {
    ///                             Hostname = "my.proxy.service.com",
    ///                             Port = 443,
    ///                         },
    ///                     },
    ///                 },
    ///                 ProxyProtocol = new Gcp.Beyondcorp.Inputs.SecurityGatewayApplicationUpstreamProxyProtocolArgs
    ///                 {
    ///                     AllowedClientHeaders = new[]
    ///                     {
    ///                         "header1",
    ///                         "header2",
    ///                     },
    ///                     ContextualHeaders = new Gcp.Beyondcorp.Inputs.SecurityGatewayApplicationUpstreamProxyProtocolContextualHeadersArgs
    ///                     {
    ///                         UserInfo = new Gcp.Beyondcorp.Inputs.SecurityGatewayApplicationUpstreamProxyProtocolContextualHeadersUserInfoArgs
    ///                         {
    ///                             OutputType = "PROTOBUF",
    ///                         },
    ///                         GroupInfo = new Gcp.Beyondcorp.Inputs.SecurityGatewayApplicationUpstreamProxyProtocolContextualHeadersGroupInfoArgs
    ///                         {
    ///                             OutputType = "JSON",
    ///                         },
    ///                         DeviceInfo = new Gcp.Beyondcorp.Inputs.SecurityGatewayApplicationUpstreamProxyProtocolContextualHeadersDeviceInfoArgs
    ///                         {
    ///                             OutputType = "NONE",
    ///                         },
    ///                         OutputType = "JSON",
    ///                     },
    ///                     MetadataHeaders = 
    ///                     {
    ///                         { "metadata-header1", "value1" },
    ///                         { "metadata-header2", "value2" },
    ///                     },
    ///                     GatewayIdentity = "RESOURCE_NAME",
    ///                     ClientIp = true,
    ///                 },
    ///             },
    ///         },
    ///         Schema = "PROXY_GATEWAY",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// SecurityGatewayApplication can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/locations/global/securityGateways/{{security_gateway_id}}/applications/{{application_id}}`
    /// 
    /// * `{{project}}/{{security_gateway_id}}/{{application_id}}`
    /// 
    /// * `{{security_gateway_id}}/{{application_id}}`
    /// 
    /// When using the `pulumi import` command, SecurityGatewayApplication can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:beyondcorp/securityGatewayApplication:SecurityGatewayApplication default projects/{{project}}/locations/global/securityGateways/{{security_gateway_id}}/applications/{{application_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:beyondcorp/securityGatewayApplication:SecurityGatewayApplication default {{project}}/{{security_gateway_id}}/{{application_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:beyondcorp/securityGatewayApplication:SecurityGatewayApplication default {{security_gateway_id}}/{{application_id}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:beyondcorp/securityGatewayApplication:SecurityGatewayApplication")]
    public partial class SecurityGatewayApplication : global::Pulumi.CustomResource
    {
        /// <summary>
        /// User-settable Application resource ID.
        /// * Must start with a letter.
        /// * Must contain between 4-63 characters from `/a-z-/`.
        /// * Must end with a number or letter.
        /// </summary>
        [Output("applicationId")]
        public Output<string> ApplicationId { get; private set; } = null!;

        /// <summary>
        /// Output only. Timestamp when the resource was created.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Optional. An arbitrary user-provided name for the Application resource.
        /// Cannot exceed 64 characters.
        /// </summary>
        [Output("displayName")]
        public Output<string?> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Required. Endpoint matchers associated with an application.
        /// A combination of hostname and ports as endpoint matcher is used to match
        /// the application.
        /// Match conditions for OR logic.
        /// An array of match conditions to allow for multiple matching criteria.
        /// The rule is considered a match if one the conditions are met.
        /// The conditions can be one of the following combination
        /// (Hostname), (Hostname &amp; Ports)
        /// EXAMPLES:
        /// Hostname - ("*.abc.com"), ("xyz.abc.com")
        /// Hostname and Ports - ("abc.com" and "22"), ("abc.com" and "22,33") etc
        /// Structure is documented below.
        /// </summary>
        [Output("endpointMatchers")]
        public Output<ImmutableArray<Outputs.SecurityGatewayApplicationEndpointMatcher>> EndpointMatchers { get; private set; } = null!;

        /// <summary>
        /// Identifier. Name of the resource.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Type of the external application.
        /// Possible values are: `PROXY_GATEWAY`, `API_GATEWAY`.
        /// </summary>
        [Output("schema")]
        public Output<string?> Schema { get; private set; } = null!;

        /// <summary>
        /// ID of the Security Gateway resource this belongs to.
        /// </summary>
        [Output("securityGatewayId")]
        public Output<string> SecurityGatewayId { get; private set; } = null!;

        /// <summary>
        /// Output only. Timestamp when the resource was last modified.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;

        /// <summary>
        /// Optional. List of which upstream resource(s) to forward traffic to.
        /// Structure is documented below.
        /// </summary>
        [Output("upstreams")]
        public Output<ImmutableArray<Outputs.SecurityGatewayApplicationUpstream>> Upstreams { get; private set; } = null!;


        /// <summary>
        /// Create a SecurityGatewayApplication resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SecurityGatewayApplication(string name, SecurityGatewayApplicationArgs args, CustomResourceOptions? options = null)
            : base("gcp:beyondcorp/securityGatewayApplication:SecurityGatewayApplication", name, args ?? new SecurityGatewayApplicationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SecurityGatewayApplication(string name, Input<string> id, SecurityGatewayApplicationState? state = null, CustomResourceOptions? options = null)
            : base("gcp:beyondcorp/securityGatewayApplication:SecurityGatewayApplication", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SecurityGatewayApplication resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SecurityGatewayApplication Get(string name, Input<string> id, SecurityGatewayApplicationState? state = null, CustomResourceOptions? options = null)
        {
            return new SecurityGatewayApplication(name, id, state, options);
        }
    }

    public sealed class SecurityGatewayApplicationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// User-settable Application resource ID.
        /// * Must start with a letter.
        /// * Must contain between 4-63 characters from `/a-z-/`.
        /// * Must end with a number or letter.
        /// </summary>
        [Input("applicationId", required: true)]
        public Input<string> ApplicationId { get; set; } = null!;

        /// <summary>
        /// Optional. An arbitrary user-provided name for the Application resource.
        /// Cannot exceed 64 characters.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("endpointMatchers")]
        private InputList<Inputs.SecurityGatewayApplicationEndpointMatcherArgs>? _endpointMatchers;

        /// <summary>
        /// Required. Endpoint matchers associated with an application.
        /// A combination of hostname and ports as endpoint matcher is used to match
        /// the application.
        /// Match conditions for OR logic.
        /// An array of match conditions to allow for multiple matching criteria.
        /// The rule is considered a match if one the conditions are met.
        /// The conditions can be one of the following combination
        /// (Hostname), (Hostname &amp; Ports)
        /// EXAMPLES:
        /// Hostname - ("*.abc.com"), ("xyz.abc.com")
        /// Hostname and Ports - ("abc.com" and "22"), ("abc.com" and "22,33") etc
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.SecurityGatewayApplicationEndpointMatcherArgs> EndpointMatchers
        {
            get => _endpointMatchers ?? (_endpointMatchers = new InputList<Inputs.SecurityGatewayApplicationEndpointMatcherArgs>());
            set => _endpointMatchers = value;
        }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Type of the external application.
        /// Possible values are: `PROXY_GATEWAY`, `API_GATEWAY`.
        /// </summary>
        [Input("schema")]
        public Input<string>? Schema { get; set; }

        /// <summary>
        /// ID of the Security Gateway resource this belongs to.
        /// </summary>
        [Input("securityGatewayId", required: true)]
        public Input<string> SecurityGatewayId { get; set; } = null!;

        [Input("upstreams")]
        private InputList<Inputs.SecurityGatewayApplicationUpstreamArgs>? _upstreams;

        /// <summary>
        /// Optional. List of which upstream resource(s) to forward traffic to.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.SecurityGatewayApplicationUpstreamArgs> Upstreams
        {
            get => _upstreams ?? (_upstreams = new InputList<Inputs.SecurityGatewayApplicationUpstreamArgs>());
            set => _upstreams = value;
        }

        public SecurityGatewayApplicationArgs()
        {
        }
        public static new SecurityGatewayApplicationArgs Empty => new SecurityGatewayApplicationArgs();
    }

    public sealed class SecurityGatewayApplicationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// User-settable Application resource ID.
        /// * Must start with a letter.
        /// * Must contain between 4-63 characters from `/a-z-/`.
        /// * Must end with a number or letter.
        /// </summary>
        [Input("applicationId")]
        public Input<string>? ApplicationId { get; set; }

        /// <summary>
        /// Output only. Timestamp when the resource was created.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Optional. An arbitrary user-provided name for the Application resource.
        /// Cannot exceed 64 characters.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("endpointMatchers")]
        private InputList<Inputs.SecurityGatewayApplicationEndpointMatcherGetArgs>? _endpointMatchers;

        /// <summary>
        /// Required. Endpoint matchers associated with an application.
        /// A combination of hostname and ports as endpoint matcher is used to match
        /// the application.
        /// Match conditions for OR logic.
        /// An array of match conditions to allow for multiple matching criteria.
        /// The rule is considered a match if one the conditions are met.
        /// The conditions can be one of the following combination
        /// (Hostname), (Hostname &amp; Ports)
        /// EXAMPLES:
        /// Hostname - ("*.abc.com"), ("xyz.abc.com")
        /// Hostname and Ports - ("abc.com" and "22"), ("abc.com" and "22,33") etc
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.SecurityGatewayApplicationEndpointMatcherGetArgs> EndpointMatchers
        {
            get => _endpointMatchers ?? (_endpointMatchers = new InputList<Inputs.SecurityGatewayApplicationEndpointMatcherGetArgs>());
            set => _endpointMatchers = value;
        }

        /// <summary>
        /// Identifier. Name of the resource.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Type of the external application.
        /// Possible values are: `PROXY_GATEWAY`, `API_GATEWAY`.
        /// </summary>
        [Input("schema")]
        public Input<string>? Schema { get; set; }

        /// <summary>
        /// ID of the Security Gateway resource this belongs to.
        /// </summary>
        [Input("securityGatewayId")]
        public Input<string>? SecurityGatewayId { get; set; }

        /// <summary>
        /// Output only. Timestamp when the resource was last modified.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        [Input("upstreams")]
        private InputList<Inputs.SecurityGatewayApplicationUpstreamGetArgs>? _upstreams;

        /// <summary>
        /// Optional. List of which upstream resource(s) to forward traffic to.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.SecurityGatewayApplicationUpstreamGetArgs> Upstreams
        {
            get => _upstreams ?? (_upstreams = new InputList<Inputs.SecurityGatewayApplicationUpstreamGetArgs>());
            set => _upstreams = value;
        }

        public SecurityGatewayApplicationState()
        {
        }
        public static new SecurityGatewayApplicationState Empty => new SecurityGatewayApplicationState();
    }
}
