// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Beyondcorp
{
    /// <summary>
    /// A BeyondCorp AppConnector resource represents an application facing component deployed proximal to
    /// and with direct access to the application instances. It is used to establish connectivity between the
    /// remote enterprise environment and GCP. It initiates connections to the applications and can proxy the
    /// data from users over the connection.
    /// 
    /// To get more information about AppConnector, see:
    /// 
    /// * [API documentation](https://cloud.google.com/beyondcorp/docs/reference/rest#rest-resource:-v1.projects.locations.appconnectors)
    /// * How-to Guides
    ///     * [Official Documentation](https://cloud.google.com/beyondcorp-enterprise/docs/enable-app-connector)
    /// 
    /// ## Example Usage
    /// ### Beyondcorp App Connector Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var serviceAccount = new Gcp.ServiceAccount.Account("serviceAccount", new()
    ///     {
    ///         AccountId = "my-account",
    ///         DisplayName = "Test Service Account",
    ///     });
    /// 
    ///     var appConnector = new Gcp.Beyondcorp.AppConnector("appConnector", new()
    ///     {
    ///         PrincipalInfo = new Gcp.Beyondcorp.Inputs.AppConnectorPrincipalInfoArgs
    ///         {
    ///             ServiceAccount = new Gcp.Beyondcorp.Inputs.AppConnectorPrincipalInfoServiceAccountArgs
    ///             {
    ///                 Email = serviceAccount.Email,
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Beyondcorp App Connector Full
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var serviceAccount = new Gcp.ServiceAccount.Account("serviceAccount", new()
    ///     {
    ///         AccountId = "my-account",
    ///         DisplayName = "Test Service Account",
    ///     });
    /// 
    ///     var appConnector = new Gcp.Beyondcorp.AppConnector("appConnector", new()
    ///     {
    ///         Region = "us-central1",
    ///         DisplayName = "some display name",
    ///         PrincipalInfo = new Gcp.Beyondcorp.Inputs.AppConnectorPrincipalInfoArgs
    ///         {
    ///             ServiceAccount = new Gcp.Beyondcorp.Inputs.AppConnectorPrincipalInfoServiceAccountArgs
    ///             {
    ///                 Email = serviceAccount.Email,
    ///             },
    ///         },
    ///         Labels = 
    ///         {
    ///             { "foo", "bar" },
    ///             { "bar", "baz" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// AppConnector can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import gcp:beyondcorp/appConnector:AppConnector default projects/{{project}}/locations/{{region}}/appConnectors/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:beyondcorp/appConnector:AppConnector default {{project}}/{{region}}/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:beyondcorp/appConnector:AppConnector default {{region}}/{{name}}
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:beyondcorp/appConnector:AppConnector default {{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:beyondcorp/appConnector:AppConnector")]
    public partial class AppConnector : global::Pulumi.CustomResource
    {
        /// <summary>
        /// An arbitrary user-provided name for the AppConnector.
        /// </summary>
        [Output("displayName")]
        public Output<string?> DisplayName { get; private set; } = null!;

        /// <summary>
        /// Resource labels to represent user provided metadata.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// ID of the AppConnector.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Principal information about the Identity of the AppConnector.
        /// Structure is documented below.
        /// </summary>
        [Output("principalInfo")]
        public Output<Outputs.AppConnectorPrincipalInfo> PrincipalInfo { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The region of the AppConnector.
        /// </summary>
        [Output("region")]
        public Output<string?> Region { get; private set; } = null!;

        /// <summary>
        /// Represents the different states of a AppConnector.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;


        /// <summary>
        /// Create a AppConnector resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AppConnector(string name, AppConnectorArgs args, CustomResourceOptions? options = null)
            : base("gcp:beyondcorp/appConnector:AppConnector", name, args ?? new AppConnectorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AppConnector(string name, Input<string> id, AppConnectorState? state = null, CustomResourceOptions? options = null)
            : base("gcp:beyondcorp/appConnector:AppConnector", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AppConnector resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AppConnector Get(string name, Input<string> id, AppConnectorState? state = null, CustomResourceOptions? options = null)
        {
            return new AppConnector(name, id, state, options);
        }
    }

    public sealed class AppConnectorArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// An arbitrary user-provided name for the AppConnector.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Resource labels to represent user provided metadata.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// ID of the AppConnector.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Principal information about the Identity of the AppConnector.
        /// Structure is documented below.
        /// </summary>
        [Input("principalInfo", required: true)]
        public Input<Inputs.AppConnectorPrincipalInfoArgs> PrincipalInfo { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The region of the AppConnector.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public AppConnectorArgs()
        {
        }
        public static new AppConnectorArgs Empty => new AppConnectorArgs();
    }

    public sealed class AppConnectorState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// An arbitrary user-provided name for the AppConnector.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Resource labels to represent user provided metadata.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// ID of the AppConnector.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Principal information about the Identity of the AppConnector.
        /// Structure is documented below.
        /// </summary>
        [Input("principalInfo")]
        public Input<Inputs.AppConnectorPrincipalInfoGetArgs>? PrincipalInfo { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The region of the AppConnector.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Represents the different states of a AppConnector.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        public AppConnectorState()
        {
        }
        public static new AppConnectorState Empty => new AppConnectorState();
    }
}
