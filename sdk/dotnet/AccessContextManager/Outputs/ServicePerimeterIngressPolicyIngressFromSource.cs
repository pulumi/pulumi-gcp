// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.AccessContextManager.Outputs
{

    [OutputType]
    public sealed class ServicePerimeterIngressPolicyIngressFromSource
    {
        /// <summary>
        /// An `AccessLevel` resource name that allow resources within the
        /// `ServicePerimeters` to be accessed from the internet. `AccessLevels` listed
        /// must be in the same policy as this `ServicePerimeter`. Referencing a nonexistent
        /// `AccessLevel` will cause an error. If no `AccessLevel` names are listed,
        /// resources within the perimeter can only be accessed via Google Cloud calls
        /// with request origins within the perimeter.
        /// Example `accessPolicies/MY_POLICY/accessLevels/MY_LEVEL.`
        /// If * is specified, then all IngressSources will be allowed.
        /// </summary>
        public readonly string? AccessLevel;
        /// <summary>
        /// A Google Cloud resource that is allowed to ingress the perimeter.
        /// Requests from these resources will be allowed to access perimeter data.
        /// Currently only projects and VPCs are allowed.
        /// Project format: `projects/{projectNumber}`
        /// VPC network format:
        /// `//compute.googleapis.com/projects/{PROJECT_ID}/global/networks/{NAME}`.
        /// The project may be in any Google Cloud organization, not just the
        /// organization that the perimeter is defined in. `*` is not allowed, the case
        /// of allowing all Google Cloud resources only is not supported.
        /// </summary>
        public readonly string? Resource;

        [OutputConstructor]
        private ServicePerimeterIngressPolicyIngressFromSource(
            string? accessLevel,

            string? resource)
        {
            AccessLevel = accessLevel;
            Resource = resource;
        }
    }
}
