// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.AccessContextManager.Outputs
{

    [OutputType]
    public sealed class GcpUserAccessBindingScopedAccessSetting
    {
        /// <summary>
        /// Optional. Access settings for this scoped access settings. This field may be empty if dryRunSettings is set.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.GcpUserAccessBindingScopedAccessSettingActiveSettings? ActiveSettings;
        /// <summary>
        /// Optional. Dry-run access settings for this scoped access settings. This field may be empty if activeSettings is set. Cannot contain session settings.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.GcpUserAccessBindingScopedAccessSettingDryRunSettings? DryRunSettings;
        /// <summary>
        /// Optional. Application, etc. to which the access settings will be applied to. Implicitly, this is the scoped access settings key; as such, it must be unique and non-empty.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.GcpUserAccessBindingScopedAccessSettingScope? Scope;

        [OutputConstructor]
        private GcpUserAccessBindingScopedAccessSetting(
            Outputs.GcpUserAccessBindingScopedAccessSettingActiveSettings? activeSettings,

            Outputs.GcpUserAccessBindingScopedAccessSettingDryRunSettings? dryRunSettings,

            Outputs.GcpUserAccessBindingScopedAccessSettingScope? scope)
        {
            ActiveSettings = activeSettings;
            DryRunSettings = dryRunSettings;
            Scope = scope;
        }
    }
}
