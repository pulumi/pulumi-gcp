// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.AccessContextManager
{
    /// <summary>
    /// This resource has been deprecated, please refer to ServicePerimeterEgressPolicy.
    /// 
    /// To get more information about EgressPolicy, see:
    /// 
    /// * [API documentation](https://cloud.google.com/access-context-manager/docs/reference/rest/v1/accessPolicies.servicePerimeters#egresspolicy)
    /// 
    /// ## Import
    /// 
    /// EgressPolicy can be imported using any of these accepted formats:
    /// 
    /// * `{{egress_policy_name}}/{{resource}}`
    /// 
    /// When using the `pulumi import` command, EgressPolicy can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:accesscontextmanager/egressPolicy:EgressPolicy default {{egress_policy_name}}/{{resource}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:accesscontextmanager/egressPolicy:EgressPolicy")]
    public partial class EgressPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the Access Policy this resource belongs to.
        /// </summary>
        [Output("accessPolicyId")]
        public Output<string> AccessPolicyId { get; private set; } = null!;

        /// <summary>
        /// The name of the Service Perimeter to add this resource to.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Output("egressPolicyName")]
        public Output<string> EgressPolicyName { get; private set; } = null!;

        /// <summary>
        /// A GCP resource that is inside of the service perimeter.
        /// </summary>
        [Output("resource")]
        public Output<string> Resource { get; private set; } = null!;


        /// <summary>
        /// Create a EgressPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EgressPolicy(string name, EgressPolicyArgs args, CustomResourceOptions? options = null)
            : base("gcp:accesscontextmanager/egressPolicy:EgressPolicy", name, args ?? new EgressPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EgressPolicy(string name, Input<string> id, EgressPolicyState? state = null, CustomResourceOptions? options = null)
            : base("gcp:accesscontextmanager/egressPolicy:EgressPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EgressPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EgressPolicy Get(string name, Input<string> id, EgressPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new EgressPolicy(name, id, state, options);
        }
    }

    public sealed class EgressPolicyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Service Perimeter to add this resource to.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("egressPolicyName", required: true)]
        public Input<string> EgressPolicyName { get; set; } = null!;

        /// <summary>
        /// A GCP resource that is inside of the service perimeter.
        /// </summary>
        [Input("resource", required: true)]
        public Input<string> Resource { get; set; } = null!;

        public EgressPolicyArgs()
        {
        }
        public static new EgressPolicyArgs Empty => new EgressPolicyArgs();
    }

    public sealed class EgressPolicyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Access Policy this resource belongs to.
        /// </summary>
        [Input("accessPolicyId")]
        public Input<string>? AccessPolicyId { get; set; }

        /// <summary>
        /// The name of the Service Perimeter to add this resource to.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("egressPolicyName")]
        public Input<string>? EgressPolicyName { get; set; }

        /// <summary>
        /// A GCP resource that is inside of the service perimeter.
        /// </summary>
        [Input("resource")]
        public Input<string>? Resource { get; set; }

        public EgressPolicyState()
        {
        }
        public static new EgressPolicyState Empty => new EgressPolicyState();
    }
}
