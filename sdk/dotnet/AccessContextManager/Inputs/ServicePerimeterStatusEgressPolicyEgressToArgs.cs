// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.AccessContextManager.Inputs
{

    public sealed class ServicePerimeterStatusEgressPolicyEgressToArgs : global::Pulumi.ResourceArgs
    {
        [Input("externalResources")]
        private InputList<string>? _externalResources;

        /// <summary>
        /// A list of external resources that are allowed to be accessed. A request
        /// matches if it contains an external resource in this list (Example:
        /// s3://bucket/path). Currently '*' is not allowed.
        /// </summary>
        public InputList<string> ExternalResources
        {
            get => _externalResources ?? (_externalResources = new InputList<string>());
            set => _externalResources = value;
        }

        [Input("operations")]
        private InputList<Inputs.ServicePerimeterStatusEgressPolicyEgressToOperationArgs>? _operations;

        /// <summary>
        /// A list of `ApiOperations` that this egress rule applies to. A request matches
        /// if it contains an operation/service in this list.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.ServicePerimeterStatusEgressPolicyEgressToOperationArgs> Operations
        {
            get => _operations ?? (_operations = new InputList<Inputs.ServicePerimeterStatusEgressPolicyEgressToOperationArgs>());
            set => _operations = value;
        }

        [Input("resources")]
        private InputList<string>? _resources;

        /// <summary>
        /// A list of resources, currently only projects in the form
        /// `projects/&lt;projectnumber&gt;`, that match this to stanza. A request matches
        /// if it contains a resource in this list. If * is specified for resources,
        /// then this `EgressTo` rule will authorize access to all resources outside
        /// the perimeter.
        /// </summary>
        public InputList<string> Resources
        {
            get => _resources ?? (_resources = new InputList<string>());
            set => _resources = value;
        }

        public ServicePerimeterStatusEgressPolicyEgressToArgs()
        {
        }
        public static new ServicePerimeterStatusEgressPolicyEgressToArgs Empty => new ServicePerimeterStatusEgressPolicyEgressToArgs();
    }
}
