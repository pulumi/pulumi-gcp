// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.AccessContextManager
{
    /// <summary>
    /// Replace all existing Service Perimeters in an Access Policy with the Service Perimeters provided. This is done atomically.
    /// This is a bulk edit of all Service Perimeters and may override existing Service Perimeters created by `gcp.accesscontextmanager.ServicePerimeter`,
    /// thus causing a permadiff if used alongside `gcp.accesscontextmanager.ServicePerimeter` on the same parent.
    /// 
    /// To get more information about ServicePerimeters, see:
    /// 
    /// * [API documentation](https://cloud.google.com/access-context-manager/docs/reference/rest/v1/accessPolicies.servicePerimeters)
    /// * How-to Guides
    ///     * [Service Perimeter Quickstart](https://cloud.google.com/vpc-service-controls/docs/quickstart)
    /// 
    /// ## Example Usage
    /// ### Access Context Manager Service Perimeters Basic
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var access_policy = new Gcp.AccessContextManager.AccessPolicy("access-policy", new Gcp.AccessContextManager.AccessPolicyArgs
    ///         {
    ///             Parent = "organizations/123456789",
    ///             Title = "my policy",
    ///         });
    ///         var service_perimeter = new Gcp.AccessContextManager.ServicePerimeters("service-perimeter", new Gcp.AccessContextManager.ServicePerimetersArgs
    ///         {
    ///             Parent = access_policy.Name.Apply(name =&gt; $"accessPolicies/{name}"),
    ///             ServicePerimeters = 
    ///             {
    ///                 new Gcp.AccessContextManager.Inputs.ServicePerimetersServicePerimeterArgs
    ///                 {
    ///                     Name = access_policy.Name.Apply(name =&gt; $"accessPolicies/{name}/servicePerimeters/"),
    ///                     Status = new Gcp.AccessContextManager.Inputs.ServicePerimetersServicePerimeterStatusArgs
    ///                     {
    ///                         RestrictedServices = 
    ///                         {
    ///                             "storage.googleapis.com",
    ///                         },
    ///                     },
    ///                     Title = "",
    ///                 },
    ///                 new Gcp.AccessContextManager.Inputs.ServicePerimetersServicePerimeterArgs
    ///                 {
    ///                     Name = access_policy.Name.Apply(name =&gt; $"accessPolicies/{name}/servicePerimeters/"),
    ///                     Status = new Gcp.AccessContextManager.Inputs.ServicePerimetersServicePerimeterStatusArgs
    ///                     {
    ///                         RestrictedServices = 
    ///                         {
    ///                             "bigtable.googleapis.com",
    ///                         },
    ///                     },
    ///                     Title = "",
    ///                 },
    ///             },
    ///         });
    ///         var access_level = new Gcp.AccessContextManager.AccessLevel("access-level", new Gcp.AccessContextManager.AccessLevelArgs
    ///         {
    ///             Basic = new Gcp.AccessContextManager.Inputs.AccessLevelBasicArgs
    ///             {
    ///                 Conditions = 
    ///                 {
    ///                     new Gcp.AccessContextManager.Inputs.AccessLevelBasicConditionArgs
    ///                     {
    ///                         DevicePolicy = new Gcp.AccessContextManager.Inputs.AccessLevelBasicConditionDevicePolicyArgs
    ///                         {
    ///                             OsConstraints = 
    ///                             {
    ///                                 new Gcp.AccessContextManager.Inputs.AccessLevelBasicConditionDevicePolicyOsConstraintArgs
    ///                                 {
    ///                                     OsType = "DESKTOP_CHROME_OS",
    ///                                 },
    ///                             },
    ///                             RequireScreenLock = false,
    ///                         },
    ///                         Regions = 
    ///                         {
    ///                             "CH",
    ///                             "IT",
    ///                             "US",
    ///                         },
    ///                     },
    ///                 },
    ///             },
    ///             Parent = access_policy.Name.Apply(name =&gt; $"accessPolicies/{name}"),
    ///             Title = "chromeos_no_lock",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// ServicePerimeters can be imported using any of these accepted formats
    /// 
    /// ```sh
    ///  $ pulumi import gcp:accesscontextmanager/servicePerimeters:ServicePerimeters default {{parent}}/servicePerimeters
    /// ```
    /// 
    /// ```sh
    ///  $ pulumi import gcp:accesscontextmanager/servicePerimeters:ServicePerimeters default {{parent}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:accesscontextmanager/servicePerimeters:ServicePerimeters")]
    public partial class ServicePerimeters : Pulumi.CustomResource
    {
        /// <summary>
        /// The AccessPolicy this ServicePerimeter lives in.
        /// Format: accessPolicies/{policy_id}
        /// </summary>
        [Output("parent")]
        public Output<string> Parent { get; private set; } = null!;

        /// <summary>
        /// The desired Service Perimeters that should replace all existing Service Perimeters in the Access Policy.
        /// Structure is documented below.
        /// </summary>
        [Output("servicePerimeters")]
        public Output<ImmutableArray<Outputs.ServicePerimetersServicePerimeter>> ServicePerimeterDetails { get; private set; } = null!;


        /// <summary>
        /// Create a ServicePerimeters resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServicePerimeters(string name, ServicePerimetersArgs args, CustomResourceOptions? options = null)
            : base("gcp:accesscontextmanager/servicePerimeters:ServicePerimeters", name, args ?? new ServicePerimetersArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServicePerimeters(string name, Input<string> id, ServicePerimetersState? state = null, CustomResourceOptions? options = null)
            : base("gcp:accesscontextmanager/servicePerimeters:ServicePerimeters", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServicePerimeters resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServicePerimeters Get(string name, Input<string> id, ServicePerimetersState? state = null, CustomResourceOptions? options = null)
        {
            return new ServicePerimeters(name, id, state, options);
        }
    }

    public sealed class ServicePerimetersArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The AccessPolicy this ServicePerimeter lives in.
        /// Format: accessPolicies/{policy_id}
        /// </summary>
        [Input("parent", required: true)]
        public Input<string> Parent { get; set; } = null!;

        [Input("servicePerimeters")]
        private InputList<Inputs.ServicePerimetersServicePerimeterArgs>? _servicePerimeters;

        /// <summary>
        /// The desired Service Perimeters that should replace all existing Service Perimeters in the Access Policy.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.ServicePerimetersServicePerimeterArgs> ServicePerimeterDetails
        {
            get => _servicePerimeters ?? (_servicePerimeters = new InputList<Inputs.ServicePerimetersServicePerimeterArgs>());
            set => _servicePerimeters = value;
        }

        public ServicePerimetersArgs()
        {
        }
    }

    public sealed class ServicePerimetersState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The AccessPolicy this ServicePerimeter lives in.
        /// Format: accessPolicies/{policy_id}
        /// </summary>
        [Input("parent")]
        public Input<string>? Parent { get; set; }

        [Input("servicePerimeters")]
        private InputList<Inputs.ServicePerimetersServicePerimeterGetArgs>? _servicePerimeters;

        /// <summary>
        /// The desired Service Perimeters that should replace all existing Service Perimeters in the Access Policy.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.ServicePerimetersServicePerimeterGetArgs> ServicePerimeterDetails
        {
            get => _servicePerimeters ?? (_servicePerimeters = new InputList<Inputs.ServicePerimetersServicePerimeterGetArgs>());
            set => _servicePerimeters = value;
        }

        public ServicePerimetersState()
        {
        }
    }
}
