// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.MemoryStore
{
    /// <summary>
    /// A Google Cloud Memorystore instance.
    /// 
    /// To get more information about Instance, see:
    /// 
    /// * [API documentation](https://cloud.google.com/memorystore/docs/valkey/reference/rest/v1/projects.locations.instances)
    /// * How-to Guides
    ///     * [Official Documentation](https://cloud.google.com/memorystore/docs/valkey/create-instances)
    /// 
    /// ## Example Usage
    /// 
    /// ### Memorystore Instance Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var producerNet = new Gcp.Compute.Network("producer_net", new()
    ///     {
    ///         Name = "my-network",
    ///         AutoCreateSubnetworks = false,
    ///     });
    /// 
    ///     var producerSubnet = new Gcp.Compute.Subnetwork("producer_subnet", new()
    ///     {
    ///         Name = "my-subnet",
    ///         IpCidrRange = "10.0.0.248/29",
    ///         Region = "us-central1",
    ///         Network = producerNet.Id,
    ///     });
    /// 
    ///     var @default = new Gcp.NetworkConnectivity.ServiceConnectionPolicy("default", new()
    ///     {
    ///         Name = "my-policy",
    ///         Location = "us-central1",
    ///         ServiceClass = "gcp-memorystore",
    ///         Description = "my basic service connection policy",
    ///         Network = producerNet.Id,
    ///         PscConfig = new Gcp.NetworkConnectivity.Inputs.ServiceConnectionPolicyPscConfigArgs
    ///         {
    ///             Subnetworks = new[]
    ///             {
    ///                 producerSubnet.Id,
    ///             },
    ///         },
    ///     });
    /// 
    ///     var project = Gcp.Organizations.GetProject.Invoke();
    /// 
    ///     var instance_basic = new Gcp.MemoryStore.Instance("instance-basic", new()
    ///     {
    ///         InstanceId = "basic-instance",
    ///         ShardCount = 1,
    ///         DesiredAutoCreatedEndpoints = new[]
    ///         {
    ///             new Gcp.MemoryStore.Inputs.InstanceDesiredAutoCreatedEndpointArgs
    ///             {
    ///                 Network = producerNet.Id,
    ///                 ProjectId = project.Apply(getProjectResult =&gt; getProjectResult.ProjectId),
    ///             },
    ///         },
    ///         Location = "us-central1",
    ///         DeletionProtectionEnabled = false,
    ///         MaintenancePolicy = new Gcp.MemoryStore.Inputs.InstanceMaintenancePolicyArgs
    ///         {
    ///             WeeklyMaintenanceWindows = new[]
    ///             {
    ///                 new Gcp.MemoryStore.Inputs.InstanceMaintenancePolicyWeeklyMaintenanceWindowArgs
    ///                 {
    ///                     Day = "MONDAY",
    ///                     StartTime = new Gcp.MemoryStore.Inputs.InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs
    ///                     {
    ///                         Hours = 1,
    ///                         Minutes = 0,
    ///                         Seconds = 0,
    ///                         Nanos = 0,
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             @default,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Memorystore Instance Full
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var producerNet = new Gcp.Compute.Network("producer_net", new()
    ///     {
    ///         Name = "my-network",
    ///         AutoCreateSubnetworks = false,
    ///     });
    /// 
    ///     var producerSubnet = new Gcp.Compute.Subnetwork("producer_subnet", new()
    ///     {
    ///         Name = "my-subnet",
    ///         IpCidrRange = "10.0.0.248/29",
    ///         Region = "us-central1",
    ///         Network = producerNet.Id,
    ///     });
    /// 
    ///     var @default = new Gcp.NetworkConnectivity.ServiceConnectionPolicy("default", new()
    ///     {
    ///         Name = "my-policy",
    ///         Location = "us-central1",
    ///         ServiceClass = "gcp-memorystore",
    ///         Description = "my basic service connection policy",
    ///         Network = producerNet.Id,
    ///         PscConfig = new Gcp.NetworkConnectivity.Inputs.ServiceConnectionPolicyPscConfigArgs
    ///         {
    ///             Subnetworks = new[]
    ///             {
    ///                 producerSubnet.Id,
    ///             },
    ///         },
    ///     });
    /// 
    ///     var project = Gcp.Organizations.GetProject.Invoke();
    /// 
    ///     var instance_full = new Gcp.MemoryStore.Instance("instance-full", new()
    ///     {
    ///         InstanceId = "full-instance",
    ///         ShardCount = 1,
    ///         DesiredAutoCreatedEndpoints = new[]
    ///         {
    ///             new Gcp.MemoryStore.Inputs.InstanceDesiredAutoCreatedEndpointArgs
    ///             {
    ///                 Network = producerNet.Id,
    ///                 ProjectId = project.Apply(getProjectResult =&gt; getProjectResult.ProjectId),
    ///             },
    ///         },
    ///         Location = "us-central1",
    ///         ReplicaCount = 1,
    ///         NodeType = "SHARED_CORE_NANO",
    ///         TransitEncryptionMode = "TRANSIT_ENCRYPTION_DISABLED",
    ///         AuthorizationMode = "AUTH_DISABLED",
    ///         KmsKey = "my-key",
    ///         EngineConfigs = 
    ///         {
    ///             { "maxmemory-policy", "volatile-ttl" },
    ///         },
    ///         ZoneDistributionConfig = new Gcp.MemoryStore.Inputs.InstanceZoneDistributionConfigArgs
    ///         {
    ///             Mode = "SINGLE_ZONE",
    ///             Zone = "us-central1-b",
    ///         },
    ///         MaintenancePolicy = new Gcp.MemoryStore.Inputs.InstanceMaintenancePolicyArgs
    ///         {
    ///             WeeklyMaintenanceWindows = new[]
    ///             {
    ///                 new Gcp.MemoryStore.Inputs.InstanceMaintenancePolicyWeeklyMaintenanceWindowArgs
    ///                 {
    ///                     Day = "MONDAY",
    ///                     StartTime = new Gcp.MemoryStore.Inputs.InstanceMaintenancePolicyWeeklyMaintenanceWindowStartTimeArgs
    ///                     {
    ///                         Hours = 1,
    ///                         Minutes = 0,
    ///                         Seconds = 0,
    ///                         Nanos = 0,
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///         EngineVersion = "VALKEY_7_2",
    ///         DeletionProtectionEnabled = false,
    ///         Mode = "CLUSTER",
    ///         PersistenceConfig = new Gcp.MemoryStore.Inputs.InstancePersistenceConfigArgs
    ///         {
    ///             Mode = "RDB",
    ///             RdbConfig = new Gcp.MemoryStore.Inputs.InstancePersistenceConfigRdbConfigArgs
    ///             {
    ///                 RdbSnapshotPeriod = "ONE_HOUR",
    ///                 RdbSnapshotStartTime = "2024-10-02T15:01:23Z",
    ///             },
    ///         },
    ///         Labels = 
    ///         {
    ///             { "abc", "xyz" },
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             @default,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Memorystore Instance Persistence Aof
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var producerNet = new Gcp.Compute.Network("producer_net", new()
    ///     {
    ///         Name = "my-network",
    ///         AutoCreateSubnetworks = false,
    ///     });
    /// 
    ///     var producerSubnet = new Gcp.Compute.Subnetwork("producer_subnet", new()
    ///     {
    ///         Name = "my-subnet",
    ///         IpCidrRange = "10.0.0.248/29",
    ///         Region = "us-central1",
    ///         Network = producerNet.Id,
    ///     });
    /// 
    ///     var @default = new Gcp.NetworkConnectivity.ServiceConnectionPolicy("default", new()
    ///     {
    ///         Name = "my-policy",
    ///         Location = "us-central1",
    ///         ServiceClass = "gcp-memorystore",
    ///         Description = "my basic service connection policy",
    ///         Network = producerNet.Id,
    ///         PscConfig = new Gcp.NetworkConnectivity.Inputs.ServiceConnectionPolicyPscConfigArgs
    ///         {
    ///             Subnetworks = new[]
    ///             {
    ///                 producerSubnet.Id,
    ///             },
    ///         },
    ///     });
    /// 
    ///     var project = Gcp.Organizations.GetProject.Invoke();
    /// 
    ///     var instance_persistence_aof = new Gcp.MemoryStore.Instance("instance-persistence-aof", new()
    ///     {
    ///         InstanceId = "aof-instance",
    ///         ShardCount = 1,
    ///         DesiredAutoCreatedEndpoints = new[]
    ///         {
    ///             new Gcp.MemoryStore.Inputs.InstanceDesiredAutoCreatedEndpointArgs
    ///             {
    ///                 Network = producerNet.Id,
    ///                 ProjectId = project.Apply(getProjectResult =&gt; getProjectResult.ProjectId),
    ///             },
    ///         },
    ///         Location = "us-central1",
    ///         PersistenceConfig = new Gcp.MemoryStore.Inputs.InstancePersistenceConfigArgs
    ///         {
    ///             Mode = "AOF",
    ///             AofConfig = new Gcp.MemoryStore.Inputs.InstancePersistenceConfigAofConfigArgs
    ///             {
    ///                 AppendFsync = "EVERY_SEC",
    ///             },
    ///         },
    ///         DeletionProtectionEnabled = false,
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             @default,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Memorystore Instance Secondary Instance
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var primaryProducerNet = new Gcp.Compute.Network("primary_producer_net", new()
    ///     {
    ///         Name = "my-network-primary-instance",
    ///         AutoCreateSubnetworks = false,
    ///     });
    /// 
    ///     var primaryProducerSubnet = new Gcp.Compute.Subnetwork("primary_producer_subnet", new()
    ///     {
    ///         Name = "my-subnet-primary-instance",
    ///         IpCidrRange = "10.0.1.0/29",
    ///         Region = "asia-east1",
    ///         Network = primaryProducerNet.Id,
    ///     });
    /// 
    ///     var primaryPolicy = new Gcp.NetworkConnectivity.ServiceConnectionPolicy("primary_policy", new()
    ///     {
    ///         Name = "my-policy-primary-instance",
    ///         Location = "asia-east1",
    ///         ServiceClass = "gcp-memorystore",
    ///         Description = "my basic service connection policy",
    ///         Network = primaryProducerNet.Id,
    ///         PscConfig = new Gcp.NetworkConnectivity.Inputs.ServiceConnectionPolicyPscConfigArgs
    ///         {
    ///             Subnetworks = new[]
    ///             {
    ///                 primaryProducerSubnet.Id,
    ///             },
    ///         },
    ///     });
    /// 
    ///     var project = Gcp.Organizations.GetProject.Invoke();
    /// 
    ///     // Primary instance
    ///     var primaryInstance = new Gcp.MemoryStore.Instance("primary_instance", new()
    ///     {
    ///         InstanceId = "primary-instance",
    ///         ShardCount = 1,
    ///         DesiredAutoCreatedEndpoints = new[]
    ///         {
    ///             new Gcp.MemoryStore.Inputs.InstanceDesiredAutoCreatedEndpointArgs
    ///             {
    ///                 Network = primaryProducerNet.Id,
    ///                 ProjectId = project.Apply(getProjectResult =&gt; getProjectResult.ProjectId),
    ///             },
    ///         },
    ///         Location = "asia-east1",
    ///         ReplicaCount = 1,
    ///         NodeType = "SHARED_CORE_NANO",
    ///         TransitEncryptionMode = "TRANSIT_ENCRYPTION_DISABLED",
    ///         AuthorizationMode = "AUTH_DISABLED",
    ///         EngineConfigs = 
    ///         {
    ///             { "maxmemory-policy", "volatile-ttl" },
    ///         },
    ///         ZoneDistributionConfig = new Gcp.MemoryStore.Inputs.InstanceZoneDistributionConfigArgs
    ///         {
    ///             Mode = "SINGLE_ZONE",
    ///             Zone = "asia-east1-c",
    ///         },
    ///         DeletionProtectionEnabled = true,
    ///         PersistenceConfig = new Gcp.MemoryStore.Inputs.InstancePersistenceConfigArgs
    ///         {
    ///             Mode = "RDB",
    ///             RdbConfig = new Gcp.MemoryStore.Inputs.InstancePersistenceConfigRdbConfigArgs
    ///             {
    ///                 RdbSnapshotPeriod = "ONE_HOUR",
    ///                 RdbSnapshotStartTime = "2024-10-02T15:01:23Z",
    ///             },
    ///         },
    ///         Labels = 
    ///         {
    ///             { "abc", "xyz" },
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             primaryPolicy,
    ///         },
    ///     });
    /// 
    ///     var secondaryProducerNet = new Gcp.Compute.Network("secondary_producer_net", new()
    ///     {
    ///         Name = "my-network-secondary-instance",
    ///         AutoCreateSubnetworks = false,
    ///     });
    /// 
    ///     var secondaryProducerSubnet = new Gcp.Compute.Subnetwork("secondary_producer_subnet", new()
    ///     {
    ///         Name = "my-subnet-secondary-instance",
    ///         IpCidrRange = "10.0.2.0/29",
    ///         Region = "europe-north1",
    ///         Network = secondaryProducerNet.Id,
    ///     });
    /// 
    ///     var secondaryPolicy = new Gcp.NetworkConnectivity.ServiceConnectionPolicy("secondary_policy", new()
    ///     {
    ///         Name = "my-policy-secondary-instance",
    ///         Location = "europe-north1",
    ///         ServiceClass = "gcp-memorystore",
    ///         Description = "my basic service connection policy",
    ///         Network = secondaryProducerNet.Id,
    ///         PscConfig = new Gcp.NetworkConnectivity.Inputs.ServiceConnectionPolicyPscConfigArgs
    ///         {
    ///             Subnetworks = new[]
    ///             {
    ///                 secondaryProducerSubnet.Id,
    ///             },
    ///         },
    ///     });
    /// 
    ///     // Secondary instance
    ///     var secondaryInstance = new Gcp.MemoryStore.Instance("secondary_instance", new()
    ///     {
    ///         InstanceId = "secondary-instance",
    ///         ShardCount = 1,
    ///         DesiredAutoCreatedEndpoints = new[]
    ///         {
    ///             new Gcp.MemoryStore.Inputs.InstanceDesiredAutoCreatedEndpointArgs
    ///             {
    ///                 Network = secondaryProducerNet.Id,
    ///                 ProjectId = project.Apply(getProjectResult =&gt; getProjectResult.ProjectId),
    ///             },
    ///         },
    ///         Location = "europe-north1",
    ///         ReplicaCount = 1,
    ///         NodeType = "SHARED_CORE_NANO",
    ///         TransitEncryptionMode = "TRANSIT_ENCRYPTION_DISABLED",
    ///         AuthorizationMode = "AUTH_DISABLED",
    ///         EngineConfigs = 
    ///         {
    ///             { "maxmemory-policy", "volatile-ttl" },
    ///         },
    ///         ZoneDistributionConfig = new Gcp.MemoryStore.Inputs.InstanceZoneDistributionConfigArgs
    ///         {
    ///             Mode = "SINGLE_ZONE",
    ///             Zone = "europe-north1-c",
    ///         },
    ///         DeletionProtectionEnabled = true,
    ///         CrossInstanceReplicationConfig = new Gcp.MemoryStore.Inputs.InstanceCrossInstanceReplicationConfigArgs
    ///         {
    ///             InstanceRole = "SECONDARY",
    ///             PrimaryInstance = new Gcp.MemoryStore.Inputs.InstanceCrossInstanceReplicationConfigPrimaryInstanceArgs
    ///             {
    ///                 Instance = primaryInstance.Id,
    ///             },
    ///         },
    ///         PersistenceConfig = new Gcp.MemoryStore.Inputs.InstancePersistenceConfigArgs
    ///         {
    ///             Mode = "RDB",
    ///             RdbConfig = new Gcp.MemoryStore.Inputs.InstancePersistenceConfigRdbConfigArgs
    ///             {
    ///                 RdbSnapshotPeriod = "ONE_HOUR",
    ///                 RdbSnapshotStartTime = "2024-10-02T15:01:23Z",
    ///             },
    ///         },
    ///         Labels = 
    ///         {
    ///             { "abc", "xyz" },
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             secondaryPolicy,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Instance can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/locations/{{location}}/instances/{{instance_id}}`
    /// 
    /// * `{{project}}/{{location}}/{{instance_id}}`
    /// 
    /// * `{{location}}/{{instance_id}}`
    /// 
    /// When using the `pulumi import` command, Instance can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:memorystore/instance:Instance default projects/{{project}}/locations/{{location}}/instances/{{instance_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:memorystore/instance:Instance default {{project}}/{{location}}/{{instance_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:memorystore/instance:Instance default {{location}}/{{instance_id}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:memorystore/instance:Instance")]
    public partial class Instance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Optional. Immutable. Authorization mode of the instance. Possible values:
        /// AUTH_DISABLED
        /// IAM_AUTH
        /// </summary>
        [Output("authorizationMode")]
        public Output<string> AuthorizationMode { get; private set; } = null!;

        /// <summary>
        /// The automated backup config for a instance.
        /// Structure is documented below.
        /// </summary>
        [Output("automatedBackupConfig")]
        public Output<Outputs.InstanceAutomatedBackupConfig?> AutomatedBackupConfig { get; private set; } = null!;

        /// <summary>
        /// The backup collection full resource name.
        /// Example: projects/{project}/locations/{location}/backupCollections/{collection}
        /// </summary>
        [Output("backupCollection")]
        public Output<string> BackupCollection { get; private set; } = null!;

        /// <summary>
        /// Output only. Creation timestamp of the instance.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Cross instance replication config
        /// Structure is documented below.
        /// </summary>
        [Output("crossInstanceReplicationConfig")]
        public Output<Outputs.InstanceCrossInstanceReplicationConfig> CrossInstanceReplicationConfig { get; private set; } = null!;

        /// <summary>
        /// Optional. If set to true deletion of the instance will fail.
        /// </summary>
        [Output("deletionProtectionEnabled")]
        public Output<bool?> DeletionProtectionEnabled { get; private set; } = null!;

        /// <summary>
        /// Immutable. User inputs for the auto-created endpoints connections.
        /// </summary>
        [Output("desiredAutoCreatedEndpoints")]
        public Output<ImmutableArray<Outputs.InstanceDesiredAutoCreatedEndpoint>> DesiredAutoCreatedEndpoints { get; private set; } = null!;

        /// <summary>
        /// `desired_psc_auto_connections` is deprecated  Use `desired_auto_created_endpoints` instead.
        /// </summary>
        [Output("desiredPscAutoConnections")]
        public Output<ImmutableArray<Outputs.InstanceDesiredPscAutoConnection>> DesiredPscAutoConnections { get; private set; } = null!;

        /// <summary>
        /// (Deprecated)
        /// Output only. Endpoints clients can connect to the instance through. Currently only one
        /// discovery endpoint is supported.
        /// Structure is documented below.
        /// </summary>
        [Output("discoveryEndpoints")]
        public Output<ImmutableArray<Outputs.InstanceDiscoveryEndpoint>> DiscoveryEndpoints { get; private set; } = null!;

        /// <summary>
        /// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
        /// </summary>
        [Output("effectiveLabels")]
        public Output<ImmutableDictionary<string, string>> EffectiveLabels { get; private set; } = null!;

        /// <summary>
        /// Endpoints for the instance.
        /// Structure is documented below.
        /// </summary>
        [Output("endpoints")]
        public Output<ImmutableArray<Outputs.InstanceEndpoint>> Endpoints { get; private set; } = null!;

        /// <summary>
        /// Optional. User-provided engine configurations for the instance.
        /// </summary>
        [Output("engineConfigs")]
        public Output<ImmutableDictionary<string, string>?> EngineConfigs { get; private set; } = null!;

        /// <summary>
        /// Optional. Engine version of the instance.
        /// </summary>
        [Output("engineVersion")]
        public Output<string> EngineVersion { get; private set; } = null!;

        /// <summary>
        /// GCS source for the instance.
        /// Structure is documented below.
        /// </summary>
        [Output("gcsSource")]
        public Output<Outputs.InstanceGcsSource?> GcsSource { get; private set; } = null!;

        /// <summary>
        /// Required. The ID to use for the instance, which will become the final component of
        /// the instance's resource name.
        /// This value is subject to the following restrictions:
        /// * Must be 4-63 characters in length
        /// * Must begin with a letter or digit
        /// * Must contain only lowercase letters, digits, and hyphens
        /// * Must not end with a hyphen
        /// * Must be unique within a location
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// The KMS key used to encrypt the at-rest data of the cluster
        /// </summary>
        [Output("kmsKey")]
        public Output<string?> KmsKey { get; private set; } = null!;

        /// <summary>
        /// Optional. Labels to represent user-provided metadata.
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `effective_labels` for all of the labels present on the resource.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. See documentation for resource type `memorystore.googleapis.com/CertificateAuthority`.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Maintenance policy for a cluster
        /// Structure is documented below.
        /// </summary>
        [Output("maintenancePolicy")]
        public Output<Outputs.InstanceMaintenancePolicy?> MaintenancePolicy { get; private set; } = null!;

        /// <summary>
        /// Upcoming maintenance schedule.
        /// Structure is documented below.
        /// </summary>
        [Output("maintenanceSchedules")]
        public Output<ImmutableArray<Outputs.InstanceMaintenanceSchedule>> MaintenanceSchedules { get; private set; } = null!;

        /// <summary>
        /// Managed backup source for the instance.
        /// Structure is documented below.
        /// </summary>
        [Output("managedBackupSource")]
        public Output<Outputs.InstanceManagedBackupSource?> ManagedBackupSource { get; private set; } = null!;

        /// <summary>
        /// Instance's Certificate Authority. This field will only be populated if instance's transit_encryption_mode is SERVER_AUTHENTICATION
        /// Structure is documented below.
        /// </summary>
        [Output("managedServerCas")]
        public Output<ImmutableArray<Outputs.InstanceManagedServerCa>> ManagedServerCas { get; private set; } = null!;

        /// <summary>
        /// Optional. cluster or cluster-disabled.
        /// Possible values:
        /// CLUSTER
        /// CLUSTER_DISABLED
        /// Possible values are: `CLUSTER`, `CLUSTER_DISABLED`.
        /// </summary>
        [Output("mode")]
        public Output<string> Mode { get; private set; } = null!;

        /// <summary>
        /// Identifier. Unique name of the instance.
        /// Format: projects/{project}/locations/{location}/instances/{instance}
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Represents configuration for nodes of the instance.
        /// Structure is documented below.
        /// </summary>
        [Output("nodeConfigs")]
        public Output<ImmutableArray<Outputs.InstanceNodeConfig>> NodeConfigs { get; private set; } = null!;

        /// <summary>
        /// Optional. Machine type for individual nodes of the instance.
        /// Possible values:
        /// SHARED_CORE_NANO
        /// HIGHMEM_MEDIUM
        /// HIGHMEM_XLARGE
        /// STANDARD_SMALL
        /// </summary>
        [Output("nodeType")]
        public Output<string> NodeType { get; private set; } = null!;

        /// <summary>
        /// Represents persistence configuration for a instance.
        /// Structure is documented below.
        /// </summary>
        [Output("persistenceConfig")]
        public Output<Outputs.InstancePersistenceConfig> PersistenceConfig { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// Configuration of a service attachment of the cluster, for creating PSC connections.
        /// Structure is documented below.
        /// </summary>
        [Output("pscAttachmentDetails")]
        public Output<ImmutableArray<Outputs.InstancePscAttachmentDetail>> PscAttachmentDetails { get; private set; } = null!;

        /// <summary>
        /// (Deprecated)
        /// Output only. User inputs and resource details of the auto-created PSC connections.
        /// Structure is documented below.
        /// </summary>
        [Output("pscAutoConnections")]
        public Output<ImmutableArray<Outputs.InstancePscAutoConnection>> PscAutoConnections { get; private set; } = null!;

        /// <summary>
        /// The combination of labels configured directly on the resource
        /// and default labels configured on the provider.
        /// </summary>
        [Output("pulumiLabels")]
        public Output<ImmutableDictionary<string, string>> PulumiLabels { get; private set; } = null!;

        /// <summary>
        /// Optional. Number of replica nodes per shard. If omitted the default is 0 replicas.
        /// </summary>
        [Output("replicaCount")]
        public Output<int> ReplicaCount { get; private set; } = null!;

        /// <summary>
        /// Required. Number of shards for the instance.
        /// </summary>
        [Output("shardCount")]
        public Output<int> ShardCount { get; private set; } = null!;

        /// <summary>
        /// Output only. Current state of the instance.
        /// Possible values:
        /// CREATING
        /// ACTIVE
        /// UPDATING
        /// DELETING
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Additional information about the state of the instance.
        /// Structure is documented below.
        /// </summary>
        [Output("stateInfos")]
        public Output<ImmutableArray<Outputs.InstanceStateInfo>> StateInfos { get; private set; } = null!;

        /// <summary>
        /// Optional. Immutable. In-transit encryption mode of the instance.
        /// Possible values:
        /// TRANSIT_ENCRYPTION_DISABLED
        /// SERVER_AUTHENTICATION
        /// </summary>
        [Output("transitEncryptionMode")]
        public Output<string> TransitEncryptionMode { get; private set; } = null!;

        /// <summary>
        /// Output only. System assigned, unique identifier for the instance.
        /// </summary>
        [Output("uid")]
        public Output<string> Uid { get; private set; } = null!;

        /// <summary>
        /// Output only. Latest update timestamp of the instance.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;

        /// <summary>
        /// Zone distribution configuration for allocation of instance resources.
        /// Structure is documented below.
        /// </summary>
        [Output("zoneDistributionConfig")]
        public Output<Outputs.InstanceZoneDistributionConfig> ZoneDistributionConfig { get; private set; } = null!;


        /// <summary>
        /// Create a Instance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Instance(string name, InstanceArgs args, CustomResourceOptions? options = null)
            : base("gcp:memorystore/instance:Instance", name, args ?? new InstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Instance(string name, Input<string> id, InstanceState? state = null, CustomResourceOptions? options = null)
            : base("gcp:memorystore/instance:Instance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "effectiveLabels",
                    "pulumiLabels",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Instance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Instance Get(string name, Input<string> id, InstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new Instance(name, id, state, options);
        }
    }

    public sealed class InstanceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional. Immutable. Authorization mode of the instance. Possible values:
        /// AUTH_DISABLED
        /// IAM_AUTH
        /// </summary>
        [Input("authorizationMode")]
        public Input<string>? AuthorizationMode { get; set; }

        /// <summary>
        /// The automated backup config for a instance.
        /// Structure is documented below.
        /// </summary>
        [Input("automatedBackupConfig")]
        public Input<Inputs.InstanceAutomatedBackupConfigArgs>? AutomatedBackupConfig { get; set; }

        /// <summary>
        /// Cross instance replication config
        /// Structure is documented below.
        /// </summary>
        [Input("crossInstanceReplicationConfig")]
        public Input<Inputs.InstanceCrossInstanceReplicationConfigArgs>? CrossInstanceReplicationConfig { get; set; }

        /// <summary>
        /// Optional. If set to true deletion of the instance will fail.
        /// </summary>
        [Input("deletionProtectionEnabled")]
        public Input<bool>? DeletionProtectionEnabled { get; set; }

        [Input("desiredAutoCreatedEndpoints")]
        private InputList<Inputs.InstanceDesiredAutoCreatedEndpointArgs>? _desiredAutoCreatedEndpoints;

        /// <summary>
        /// Immutable. User inputs for the auto-created endpoints connections.
        /// </summary>
        public InputList<Inputs.InstanceDesiredAutoCreatedEndpointArgs> DesiredAutoCreatedEndpoints
        {
            get => _desiredAutoCreatedEndpoints ?? (_desiredAutoCreatedEndpoints = new InputList<Inputs.InstanceDesiredAutoCreatedEndpointArgs>());
            set => _desiredAutoCreatedEndpoints = value;
        }

        [Input("desiredPscAutoConnections")]
        private InputList<Inputs.InstanceDesiredPscAutoConnectionArgs>? _desiredPscAutoConnections;

        /// <summary>
        /// `desired_psc_auto_connections` is deprecated  Use `desired_auto_created_endpoints` instead.
        /// </summary>
        [Obsolete(@"`desired_psc_auto_connections` is deprecated  Use `desired_auto_created_endpoints` instead.")]
        public InputList<Inputs.InstanceDesiredPscAutoConnectionArgs> DesiredPscAutoConnections
        {
            get => _desiredPscAutoConnections ?? (_desiredPscAutoConnections = new InputList<Inputs.InstanceDesiredPscAutoConnectionArgs>());
            set => _desiredPscAutoConnections = value;
        }

        [Input("engineConfigs")]
        private InputMap<string>? _engineConfigs;

        /// <summary>
        /// Optional. User-provided engine configurations for the instance.
        /// </summary>
        public InputMap<string> EngineConfigs
        {
            get => _engineConfigs ?? (_engineConfigs = new InputMap<string>());
            set => _engineConfigs = value;
        }

        /// <summary>
        /// Optional. Engine version of the instance.
        /// </summary>
        [Input("engineVersion")]
        public Input<string>? EngineVersion { get; set; }

        /// <summary>
        /// GCS source for the instance.
        /// Structure is documented below.
        /// </summary>
        [Input("gcsSource")]
        public Input<Inputs.InstanceGcsSourceArgs>? GcsSource { get; set; }

        /// <summary>
        /// Required. The ID to use for the instance, which will become the final component of
        /// the instance's resource name.
        /// This value is subject to the following restrictions:
        /// * Must be 4-63 characters in length
        /// * Must begin with a letter or digit
        /// * Must contain only lowercase letters, digits, and hyphens
        /// * Must not end with a hyphen
        /// * Must be unique within a location
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// The KMS key used to encrypt the at-rest data of the cluster
        /// </summary>
        [Input("kmsKey")]
        public Input<string>? KmsKey { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Optional. Labels to represent user-provided metadata.
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `effective_labels` for all of the labels present on the resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. See documentation for resource type `memorystore.googleapis.com/CertificateAuthority`.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// Maintenance policy for a cluster
        /// Structure is documented below.
        /// </summary>
        [Input("maintenancePolicy")]
        public Input<Inputs.InstanceMaintenancePolicyArgs>? MaintenancePolicy { get; set; }

        /// <summary>
        /// Managed backup source for the instance.
        /// Structure is documented below.
        /// </summary>
        [Input("managedBackupSource")]
        public Input<Inputs.InstanceManagedBackupSourceArgs>? ManagedBackupSource { get; set; }

        /// <summary>
        /// Optional. cluster or cluster-disabled.
        /// Possible values:
        /// CLUSTER
        /// CLUSTER_DISABLED
        /// Possible values are: `CLUSTER`, `CLUSTER_DISABLED`.
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// Optional. Machine type for individual nodes of the instance.
        /// Possible values:
        /// SHARED_CORE_NANO
        /// HIGHMEM_MEDIUM
        /// HIGHMEM_XLARGE
        /// STANDARD_SMALL
        /// </summary>
        [Input("nodeType")]
        public Input<string>? NodeType { get; set; }

        /// <summary>
        /// Represents persistence configuration for a instance.
        /// Structure is documented below.
        /// </summary>
        [Input("persistenceConfig")]
        public Input<Inputs.InstancePersistenceConfigArgs>? PersistenceConfig { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Optional. Number of replica nodes per shard. If omitted the default is 0 replicas.
        /// </summary>
        [Input("replicaCount")]
        public Input<int>? ReplicaCount { get; set; }

        /// <summary>
        /// Required. Number of shards for the instance.
        /// </summary>
        [Input("shardCount", required: true)]
        public Input<int> ShardCount { get; set; } = null!;

        /// <summary>
        /// Optional. Immutable. In-transit encryption mode of the instance.
        /// Possible values:
        /// TRANSIT_ENCRYPTION_DISABLED
        /// SERVER_AUTHENTICATION
        /// </summary>
        [Input("transitEncryptionMode")]
        public Input<string>? TransitEncryptionMode { get; set; }

        /// <summary>
        /// Zone distribution configuration for allocation of instance resources.
        /// Structure is documented below.
        /// </summary>
        [Input("zoneDistributionConfig")]
        public Input<Inputs.InstanceZoneDistributionConfigArgs>? ZoneDistributionConfig { get; set; }

        public InstanceArgs()
        {
        }
        public static new InstanceArgs Empty => new InstanceArgs();
    }

    public sealed class InstanceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Optional. Immutable. Authorization mode of the instance. Possible values:
        /// AUTH_DISABLED
        /// IAM_AUTH
        /// </summary>
        [Input("authorizationMode")]
        public Input<string>? AuthorizationMode { get; set; }

        /// <summary>
        /// The automated backup config for a instance.
        /// Structure is documented below.
        /// </summary>
        [Input("automatedBackupConfig")]
        public Input<Inputs.InstanceAutomatedBackupConfigGetArgs>? AutomatedBackupConfig { get; set; }

        /// <summary>
        /// The backup collection full resource name.
        /// Example: projects/{project}/locations/{location}/backupCollections/{collection}
        /// </summary>
        [Input("backupCollection")]
        public Input<string>? BackupCollection { get; set; }

        /// <summary>
        /// Output only. Creation timestamp of the instance.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Cross instance replication config
        /// Structure is documented below.
        /// </summary>
        [Input("crossInstanceReplicationConfig")]
        public Input<Inputs.InstanceCrossInstanceReplicationConfigGetArgs>? CrossInstanceReplicationConfig { get; set; }

        /// <summary>
        /// Optional. If set to true deletion of the instance will fail.
        /// </summary>
        [Input("deletionProtectionEnabled")]
        public Input<bool>? DeletionProtectionEnabled { get; set; }

        [Input("desiredAutoCreatedEndpoints")]
        private InputList<Inputs.InstanceDesiredAutoCreatedEndpointGetArgs>? _desiredAutoCreatedEndpoints;

        /// <summary>
        /// Immutable. User inputs for the auto-created endpoints connections.
        /// </summary>
        public InputList<Inputs.InstanceDesiredAutoCreatedEndpointGetArgs> DesiredAutoCreatedEndpoints
        {
            get => _desiredAutoCreatedEndpoints ?? (_desiredAutoCreatedEndpoints = new InputList<Inputs.InstanceDesiredAutoCreatedEndpointGetArgs>());
            set => _desiredAutoCreatedEndpoints = value;
        }

        [Input("desiredPscAutoConnections")]
        private InputList<Inputs.InstanceDesiredPscAutoConnectionGetArgs>? _desiredPscAutoConnections;

        /// <summary>
        /// `desired_psc_auto_connections` is deprecated  Use `desired_auto_created_endpoints` instead.
        /// </summary>
        [Obsolete(@"`desired_psc_auto_connections` is deprecated  Use `desired_auto_created_endpoints` instead.")]
        public InputList<Inputs.InstanceDesiredPscAutoConnectionGetArgs> DesiredPscAutoConnections
        {
            get => _desiredPscAutoConnections ?? (_desiredPscAutoConnections = new InputList<Inputs.InstanceDesiredPscAutoConnectionGetArgs>());
            set => _desiredPscAutoConnections = value;
        }

        [Input("discoveryEndpoints")]
        private InputList<Inputs.InstanceDiscoveryEndpointGetArgs>? _discoveryEndpoints;

        /// <summary>
        /// (Deprecated)
        /// Output only. Endpoints clients can connect to the instance through. Currently only one
        /// discovery endpoint is supported.
        /// Structure is documented below.
        /// </summary>
        [Obsolete(@"`discovery_endpoints` is deprecated  Use `endpoints` instead.")]
        public InputList<Inputs.InstanceDiscoveryEndpointGetArgs> DiscoveryEndpoints
        {
            get => _discoveryEndpoints ?? (_discoveryEndpoints = new InputList<Inputs.InstanceDiscoveryEndpointGetArgs>());
            set => _discoveryEndpoints = value;
        }

        [Input("effectiveLabels")]
        private InputMap<string>? _effectiveLabels;

        /// <summary>
        /// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
        /// </summary>
        public InputMap<string> EffectiveLabels
        {
            get => _effectiveLabels ?? (_effectiveLabels = new InputMap<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableDictionary.Create<string, string>());
                _effectiveLabels = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        [Input("endpoints")]
        private InputList<Inputs.InstanceEndpointGetArgs>? _endpoints;

        /// <summary>
        /// Endpoints for the instance.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.InstanceEndpointGetArgs> Endpoints
        {
            get => _endpoints ?? (_endpoints = new InputList<Inputs.InstanceEndpointGetArgs>());
            set => _endpoints = value;
        }

        [Input("engineConfigs")]
        private InputMap<string>? _engineConfigs;

        /// <summary>
        /// Optional. User-provided engine configurations for the instance.
        /// </summary>
        public InputMap<string> EngineConfigs
        {
            get => _engineConfigs ?? (_engineConfigs = new InputMap<string>());
            set => _engineConfigs = value;
        }

        /// <summary>
        /// Optional. Engine version of the instance.
        /// </summary>
        [Input("engineVersion")]
        public Input<string>? EngineVersion { get; set; }

        /// <summary>
        /// GCS source for the instance.
        /// Structure is documented below.
        /// </summary>
        [Input("gcsSource")]
        public Input<Inputs.InstanceGcsSourceGetArgs>? GcsSource { get; set; }

        /// <summary>
        /// Required. The ID to use for the instance, which will become the final component of
        /// the instance's resource name.
        /// This value is subject to the following restrictions:
        /// * Must be 4-63 characters in length
        /// * Must begin with a letter or digit
        /// * Must contain only lowercase letters, digits, and hyphens
        /// * Must not end with a hyphen
        /// * Must be unique within a location
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// The KMS key used to encrypt the at-rest data of the cluster
        /// </summary>
        [Input("kmsKey")]
        public Input<string>? KmsKey { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Optional. Labels to represent user-provided metadata.
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `effective_labels` for all of the labels present on the resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. See documentation for resource type `memorystore.googleapis.com/CertificateAuthority`.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Maintenance policy for a cluster
        /// Structure is documented below.
        /// </summary>
        [Input("maintenancePolicy")]
        public Input<Inputs.InstanceMaintenancePolicyGetArgs>? MaintenancePolicy { get; set; }

        [Input("maintenanceSchedules")]
        private InputList<Inputs.InstanceMaintenanceScheduleGetArgs>? _maintenanceSchedules;

        /// <summary>
        /// Upcoming maintenance schedule.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.InstanceMaintenanceScheduleGetArgs> MaintenanceSchedules
        {
            get => _maintenanceSchedules ?? (_maintenanceSchedules = new InputList<Inputs.InstanceMaintenanceScheduleGetArgs>());
            set => _maintenanceSchedules = value;
        }

        /// <summary>
        /// Managed backup source for the instance.
        /// Structure is documented below.
        /// </summary>
        [Input("managedBackupSource")]
        public Input<Inputs.InstanceManagedBackupSourceGetArgs>? ManagedBackupSource { get; set; }

        [Input("managedServerCas")]
        private InputList<Inputs.InstanceManagedServerCaGetArgs>? _managedServerCas;

        /// <summary>
        /// Instance's Certificate Authority. This field will only be populated if instance's transit_encryption_mode is SERVER_AUTHENTICATION
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.InstanceManagedServerCaGetArgs> ManagedServerCas
        {
            get => _managedServerCas ?? (_managedServerCas = new InputList<Inputs.InstanceManagedServerCaGetArgs>());
            set => _managedServerCas = value;
        }

        /// <summary>
        /// Optional. cluster or cluster-disabled.
        /// Possible values:
        /// CLUSTER
        /// CLUSTER_DISABLED
        /// Possible values are: `CLUSTER`, `CLUSTER_DISABLED`.
        /// </summary>
        [Input("mode")]
        public Input<string>? Mode { get; set; }

        /// <summary>
        /// Identifier. Unique name of the instance.
        /// Format: projects/{project}/locations/{location}/instances/{instance}
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("nodeConfigs")]
        private InputList<Inputs.InstanceNodeConfigGetArgs>? _nodeConfigs;

        /// <summary>
        /// Represents configuration for nodes of the instance.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.InstanceNodeConfigGetArgs> NodeConfigs
        {
            get => _nodeConfigs ?? (_nodeConfigs = new InputList<Inputs.InstanceNodeConfigGetArgs>());
            set => _nodeConfigs = value;
        }

        /// <summary>
        /// Optional. Machine type for individual nodes of the instance.
        /// Possible values:
        /// SHARED_CORE_NANO
        /// HIGHMEM_MEDIUM
        /// HIGHMEM_XLARGE
        /// STANDARD_SMALL
        /// </summary>
        [Input("nodeType")]
        public Input<string>? NodeType { get; set; }

        /// <summary>
        /// Represents persistence configuration for a instance.
        /// Structure is documented below.
        /// </summary>
        [Input("persistenceConfig")]
        public Input<Inputs.InstancePersistenceConfigGetArgs>? PersistenceConfig { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("pscAttachmentDetails")]
        private InputList<Inputs.InstancePscAttachmentDetailGetArgs>? _pscAttachmentDetails;

        /// <summary>
        /// Configuration of a service attachment of the cluster, for creating PSC connections.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.InstancePscAttachmentDetailGetArgs> PscAttachmentDetails
        {
            get => _pscAttachmentDetails ?? (_pscAttachmentDetails = new InputList<Inputs.InstancePscAttachmentDetailGetArgs>());
            set => _pscAttachmentDetails = value;
        }

        [Input("pscAutoConnections")]
        private InputList<Inputs.InstancePscAutoConnectionGetArgs>? _pscAutoConnections;

        /// <summary>
        /// (Deprecated)
        /// Output only. User inputs and resource details of the auto-created PSC connections.
        /// Structure is documented below.
        /// </summary>
        [Obsolete(@"`psc_auto_connections` is deprecated  Use `endpoints.connections.pscAutoConnections` instead.")]
        public InputList<Inputs.InstancePscAutoConnectionGetArgs> PscAutoConnections
        {
            get => _pscAutoConnections ?? (_pscAutoConnections = new InputList<Inputs.InstancePscAutoConnectionGetArgs>());
            set => _pscAutoConnections = value;
        }

        [Input("pulumiLabels")]
        private InputMap<string>? _pulumiLabels;

        /// <summary>
        /// The combination of labels configured directly on the resource
        /// and default labels configured on the provider.
        /// </summary>
        public InputMap<string> PulumiLabels
        {
            get => _pulumiLabels ?? (_pulumiLabels = new InputMap<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableDictionary.Create<string, string>());
                _pulumiLabels = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        /// <summary>
        /// Optional. Number of replica nodes per shard. If omitted the default is 0 replicas.
        /// </summary>
        [Input("replicaCount")]
        public Input<int>? ReplicaCount { get; set; }

        /// <summary>
        /// Required. Number of shards for the instance.
        /// </summary>
        [Input("shardCount")]
        public Input<int>? ShardCount { get; set; }

        /// <summary>
        /// Output only. Current state of the instance.
        /// Possible values:
        /// CREATING
        /// ACTIVE
        /// UPDATING
        /// DELETING
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("stateInfos")]
        private InputList<Inputs.InstanceStateInfoGetArgs>? _stateInfos;

        /// <summary>
        /// Additional information about the state of the instance.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.InstanceStateInfoGetArgs> StateInfos
        {
            get => _stateInfos ?? (_stateInfos = new InputList<Inputs.InstanceStateInfoGetArgs>());
            set => _stateInfos = value;
        }

        /// <summary>
        /// Optional. Immutable. In-transit encryption mode of the instance.
        /// Possible values:
        /// TRANSIT_ENCRYPTION_DISABLED
        /// SERVER_AUTHENTICATION
        /// </summary>
        [Input("transitEncryptionMode")]
        public Input<string>? TransitEncryptionMode { get; set; }

        /// <summary>
        /// Output only. System assigned, unique identifier for the instance.
        /// </summary>
        [Input("uid")]
        public Input<string>? Uid { get; set; }

        /// <summary>
        /// Output only. Latest update timestamp of the instance.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        /// <summary>
        /// Zone distribution configuration for allocation of instance resources.
        /// Structure is documented below.
        /// </summary>
        [Input("zoneDistributionConfig")]
        public Input<Inputs.InstanceZoneDistributionConfigGetArgs>? ZoneDistributionConfig { get; set; }

        public InstanceState()
        {
        }
        public static new InstanceState Empty => new InstanceState();
    }
}
