// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.CloudRun.Inputs
{

    public sealed class ServiceTemplateSpecGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ContainerConcurrency specifies the maximum allowed in-flight (concurrent)
        /// requests per container of the Revision. If not specified or 0, defaults to 80 when
        /// requested CPU &gt;= 1 and defaults to 1 when requested CPU &lt; 1.
        /// </summary>
        [Input("containerConcurrency")]
        public Input<int>? ContainerConcurrency { get; set; }

        [Input("containers")]
        private InputList<Inputs.ServiceTemplateSpecContainerGetArgs>? _containers;

        /// <summary>
        /// Containers defines the unit of execution for this Revision.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.ServiceTemplateSpecContainerGetArgs> Containers
        {
            get => _containers ?? (_containers = new InputList<Inputs.ServiceTemplateSpecContainerGetArgs>());
            set => _containers = value;
        }

        [Input("nodeSelector")]
        private InputMap<string>? _nodeSelector;

        /// <summary>
        /// Node Selector describes the hardware requirements of the resources.
        /// Use the following node selector keys to configure features on a Revision:
        /// - `run.googleapis.com/accelerator` sets the [type of GPU](https://cloud.google.com/run/docs/configuring/services/gpu) required by the Revision to run.
        /// </summary>
        public InputMap<string> NodeSelector
        {
            get => _nodeSelector ?? (_nodeSelector = new InputMap<string>());
            set => _nodeSelector = value;
        }

        /// <summary>
        /// Email address of the IAM service account associated with the revision of the
        /// service. The service account represents the identity of the running revision,
        /// and determines what permissions the revision has. If not provided, the revision
        /// will use the project's default service account.
        /// </summary>
        [Input("serviceAccountName")]
        public Input<string>? ServiceAccountName { get; set; }

        /// <summary>
        /// (Output, Deprecated)
        /// ServingState holds a value describing the state the resources
        /// are in for this Revision.
        /// It is expected
        /// that the system will manipulate this based on routability and load.
        /// 
        /// &gt; **Warning:** `serving_state` is deprecated and will be removed in a future major release. This field is not supported by the Cloud Run API.
        /// </summary>
        [Input("servingState")]
        public Input<string>? ServingState { get; set; }

        /// <summary>
        /// TimeoutSeconds holds the max duration the instance is allowed for responding to a request.
        /// </summary>
        [Input("timeoutSeconds")]
        public Input<int>? TimeoutSeconds { get; set; }

        [Input("volumes")]
        private InputList<Inputs.ServiceTemplateSpecVolumeGetArgs>? _volumes;

        /// <summary>
        /// Volume represents a named volume in a container.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.ServiceTemplateSpecVolumeGetArgs> Volumes
        {
            get => _volumes ?? (_volumes = new InputList<Inputs.ServiceTemplateSpecVolumeGetArgs>());
            set => _volumes = value;
        }

        public ServiceTemplateSpecGetArgs()
        {
        }
        public static new ServiceTemplateSpecGetArgs Empty => new ServiceTemplateSpecGetArgs();
    }
}
