// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.CloudTasks.Outputs
{

    [OutputType]
    public sealed class QueueHttpTarget
    {
        /// <summary>
        /// HTTP target headers.
        /// This map contains the header field names and values.
        /// Headers will be set when running the CreateTask and/or BufferTask.
        /// These headers represent a subset of the headers that will be configured for the task's HTTP request.
        /// Some HTTP request headers will be ignored or replaced.
        /// Headers which can have multiple values (according to RFC2616) can be specified using comma-separated values.
        /// The size of the headers must be less than 80KB. Queue-level headers to override headers of all the tasks in the queue.
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.QueueHttpTargetHeaderOverride> HeaderOverrides;
        /// <summary>
        /// The HTTP method to use for the request.
        /// When specified, it overrides HttpRequest for the task.
        /// Note that if the value is set to GET the body of the task will be ignored at execution time.
        /// Possible values are: `HTTP_METHOD_UNSPECIFIED`, `POST`, `GET`, `HEAD`, `PUT`, `DELETE`, `PATCH`, `OPTIONS`.
        /// </summary>
        public readonly string? HttpMethod;
        /// <summary>
        /// If specified, an OAuth token is generated and attached as the Authorization header in the HTTP request.
        /// This type of authorization should generally be used only when calling Google APIs hosted on *.googleapis.com.
        /// Note that both the service account email and the scope MUST be specified when using the queue-level authorization override.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.QueueHttpTargetOauthToken? OauthToken;
        /// <summary>
        /// If specified, an OIDC token is generated and attached as an Authorization header in the HTTP request.
        /// This type of authorization can be used for many scenarios, including calling Cloud Run, or endpoints where you intend to validate the token yourself.
        /// Note that both the service account email and the audience MUST be specified when using the queue-level authorization override.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.QueueHttpTargetOidcToken? OidcToken;
        /// <summary>
        /// URI override.
        /// When specified, overrides the execution URI for all the tasks in the queue.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.QueueHttpTargetUriOverride? UriOverride;

        [OutputConstructor]
        private QueueHttpTarget(
            ImmutableArray<Outputs.QueueHttpTargetHeaderOverride> headerOverrides,

            string? httpMethod,

            Outputs.QueueHttpTargetOauthToken? oauthToken,

            Outputs.QueueHttpTargetOidcToken? oidcToken,

            Outputs.QueueHttpTargetUriOverride? uriOverride)
        {
            HeaderOverrides = headerOverrides;
            HttpMethod = httpMethod;
            OauthToken = oauthToken;
            OidcToken = oidcToken;
            UriOverride = uriOverride;
        }
    }
}
