// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.CloudTasks.Inputs
{

    public sealed class QueueRetryConfigGetArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Number of attempts per task.
        /// Cloud Tasks will attempt the task maxAttempts times (that is, if
        /// the first attempt fails, then there will be maxAttempts - 1
        /// retries). Must be &gt;= -1.
        /// If unspecified when the queue is created, Cloud Tasks will pick
        /// the default.
        /// -1 indicates unlimited attempts.
        /// </summary>
        [Input("maxAttempts")]
        public Input<int>? MaxAttempts { get; set; }

        /// <summary>
        /// A task will be scheduled for retry between minBackoff and
        /// maxBackoff duration after it fails, if the queue's RetryConfig
        /// specifies that the task should be retried.
        /// </summary>
        [Input("maxBackoff")]
        public Input<string>? MaxBackoff { get; set; }

        /// <summary>
        /// The time between retries will double maxDoublings times.
        /// A task's retry interval starts at minBackoff, then doubles maxDoublings times,
        /// then increases linearly, and finally retries retries at intervals of maxBackoff
        /// up to maxAttempts times.
        /// </summary>
        [Input("maxDoublings")]
        public Input<int>? MaxDoublings { get; set; }

        /// <summary>
        /// If positive, maxRetryDuration specifies the time limit for
        /// retrying a failed task, measured from when the task was first
        /// attempted. Once maxRetryDuration time has passed and the task has
        /// been attempted maxAttempts times, no further attempts will be
        /// made and the task will be deleted.
        /// If zero, then the task age is unlimited.
        /// </summary>
        [Input("maxRetryDuration")]
        public Input<string>? MaxRetryDuration { get; set; }

        /// <summary>
        /// A task will be scheduled for retry between minBackoff and
        /// maxBackoff duration after it fails, if the queue's RetryConfig
        /// specifies that the task should be retried.
        /// </summary>
        [Input("minBackoff")]
        public Input<string>? MinBackoff { get; set; }

        public QueueRetryConfigGetArgs()
        {
        }
    }
}
