// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.ParallelStore
{
    /// <summary>
    /// A Parallelstore Instance.
    /// 
    /// ## Example Usage
    /// 
    /// ### Parallelstore Instance Basic Beta
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var network = new Gcp.Compute.Network("network", new()
    ///     {
    ///         Name = "network",
    ///         AutoCreateSubnetworks = true,
    ///         Mtu = 8896,
    ///     });
    /// 
    ///     // Create an IP address
    ///     var privateIpAlloc = new Gcp.Compute.GlobalAddress("private_ip_alloc", new()
    ///     {
    ///         Name = "address",
    ///         Purpose = "VPC_PEERING",
    ///         AddressType = "INTERNAL",
    ///         PrefixLength = 24,
    ///         Network = network.Id,
    ///     });
    /// 
    ///     // Create a private connection
    ///     var @default = new Gcp.ServiceNetworking.Connection("default", new()
    ///     {
    ///         Network = network.Id,
    ///         Service = "servicenetworking.googleapis.com",
    ///         ReservedPeeringRanges = new[]
    ///         {
    ///             privateIpAlloc.Name,
    ///         },
    ///     });
    /// 
    ///     var instance = new Gcp.ParallelStore.Instance("instance", new()
    ///     {
    ///         InstanceId = "instance",
    ///         Location = "us-central1-a",
    ///         Description = "test instance",
    ///         CapacityGib = "12000",
    ///         Network = network.Name,
    ///         FileStripeLevel = "FILE_STRIPE_LEVEL_MIN",
    ///         DirectoryStripeLevel = "DIRECTORY_STRIPE_LEVEL_MIN",
    ///         DeploymentType = "SCRATCH",
    ///         Labels = 
    ///         {
    ///             { "test", "value" },
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             @default,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Parallelstore Instance Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var network = new Gcp.Compute.Network("network", new()
    ///     {
    ///         Name = "network",
    ///         AutoCreateSubnetworks = true,
    ///         Mtu = 8896,
    ///     });
    /// 
    ///     // Create an IP address
    ///     var privateIpAlloc = new Gcp.Compute.GlobalAddress("private_ip_alloc", new()
    ///     {
    ///         Name = "address",
    ///         Purpose = "VPC_PEERING",
    ///         AddressType = "INTERNAL",
    ///         PrefixLength = 24,
    ///         Network = network.Id,
    ///     });
    /// 
    ///     // Create a private connection
    ///     var @default = new Gcp.ServiceNetworking.Connection("default", new()
    ///     {
    ///         Network = network.Id,
    ///         Service = "servicenetworking.googleapis.com",
    ///         ReservedPeeringRanges = new[]
    ///         {
    ///             privateIpAlloc.Name,
    ///         },
    ///     });
    /// 
    ///     var instance = new Gcp.ParallelStore.Instance("instance", new()
    ///     {
    ///         InstanceId = "instance",
    ///         Location = "us-central1-a",
    ///         Description = "test instance",
    ///         CapacityGib = "12000",
    ///         Network = network.Name,
    ///         FileStripeLevel = "FILE_STRIPE_LEVEL_MIN",
    ///         DirectoryStripeLevel = "DIRECTORY_STRIPE_LEVEL_MIN",
    ///         DeploymentType = "SCRATCH",
    ///         Labels = 
    ///         {
    ///             { "test", "value" },
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             @default,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Instance can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/locations/{{location}}/instances/{{instance_id}}`
    /// 
    /// * `{{project}}/{{location}}/{{instance_id}}`
    /// 
    /// * `{{location}}/{{instance_id}}`
    /// 
    /// When using the `pulumi import` command, Instance can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:parallelstore/instance:Instance default projects/{{project}}/locations/{{location}}/instances/{{instance_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:parallelstore/instance:Instance default {{project}}/{{location}}/{{instance_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:parallelstore/instance:Instance default {{location}}/{{instance_id}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:parallelstore/instance:Instance")]
    public partial class Instance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Output only. List of access_points.
        /// Contains a list of IPv4 addresses used for client side configuration.
        /// </summary>
        [Output("accessPoints")]
        public Output<ImmutableArray<string>> AccessPoints { get; private set; } = null!;

        /// <summary>
        /// Required. Immutable. Storage capacity of Parallelstore instance in Gibibytes (GiB).
        /// </summary>
        [Output("capacityGib")]
        public Output<string> CapacityGib { get; private set; } = null!;

        /// <summary>
        /// The time when the instance was created.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The version of DAOS software running in the instance.
        /// </summary>
        [Output("daosVersion")]
        public Output<string> DaosVersion { get; private set; } = null!;

        /// <summary>
        /// Parallelstore Instance deployment type.
        /// Possible values:
        /// DEPLOYMENT_TYPE_UNSPECIFIED
        /// SCRATCH
        /// PERSISTENT
        /// </summary>
        [Output("deploymentType")]
        public Output<string?> DeploymentType { get; private set; } = null!;

        /// <summary>
        /// The description of the instance. 2048 characters or less.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Stripe level for directories.
        /// MIN when directory has a small number of files.
        /// MAX when directory has a large number of files.
        /// Possible values:
        /// DIRECTORY_STRIPE_LEVEL_UNSPECIFIED
        /// DIRECTORY_STRIPE_LEVEL_MIN
        /// DIRECTORY_STRIPE_LEVEL_BALANCED
        /// DIRECTORY_STRIPE_LEVEL_MAX
        /// </summary>
        [Output("directoryStripeLevel")]
        public Output<string?> DirectoryStripeLevel { get; private set; } = null!;

        /// <summary>
        /// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
        /// </summary>
        [Output("effectiveLabels")]
        public Output<ImmutableDictionary<string, string>> EffectiveLabels { get; private set; } = null!;

        /// <summary>
        /// Immutable. Contains the id of the allocated IP address
        /// range associated with the private service access connection for example, \"test-default\"
        /// associated with IP range 10.0.0.0/29. This field is populated by the service
        /// and contains the value currently used by the service.
        /// </summary>
        [Output("effectiveReservedIpRange")]
        public Output<string> EffectiveReservedIpRange { get; private set; } = null!;

        /// <summary>
        /// Stripe level for files.
        /// MIN better suited for small size files.
        /// MAX higher throughput performance for larger files.
        /// Possible values:
        /// FILE_STRIPE_LEVEL_UNSPECIFIED
        /// FILE_STRIPE_LEVEL_MIN
        /// FILE_STRIPE_LEVEL_BALANCED
        /// FILE_STRIPE_LEVEL_MAX
        /// </summary>
        [Output("fileStripeLevel")]
        public Output<string?> FileStripeLevel { get; private set; } = null!;

        /// <summary>
        /// The logical name of the Parallelstore instance in the user project with the following restrictions:
        /// * Must contain only lowercase letters, numbers, and hyphens.
        /// * Must start with a letter.
        /// * Must be between 1-63 characters.
        /// * Must end with a number or a letter.
        /// * Must be unique within the customer project/ location
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// Cloud Labels are a flexible and lightweight mechanism for
        /// organizing cloud resources into groups that reflect a customer's organizational
        /// needs and deployment strategies. Cloud Labels can be used to filter collections
        /// of resources. They can be used to control how resource metrics are aggregated.
        /// And they can be used as arguments to policy management rules (e.g. route, firewall,
        /// load balancing, etc.).
        /// * Label keys must be between 1 and 63 characters long and must conform to
        /// the following regular expression: `a-z{0,62}`.
        /// * Label values must be between 0 and 63 characters long and must conform
        /// to the regular expression `[a-z0-9_-]{0,63}`.
        /// * No more than 64 labels can be associated with a given resource.
        /// See https://goo.gl/xmQnxf for more information on and examples of labels.
        /// If you plan to use labels in your own code, please note that additional
        /// characters may be allowed in the future. Therefore, you are advised to use
        /// an internal label representation, such as JSON, which doesn't rely upon
        /// specific characters being disallowed.  For example, representing labels
        /// as the string:  `name + "_" + value` would prove problematic if we were to
        /// allow `"_"` in a future release. "
        /// 
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `effective_labels` for all of the labels present on the resource.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// Part of `parent`. See documentation of `projectsId`.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Identifier. The resource name of the instance, in the format
        /// `projects/{project}/locations/{location}/instances/{instance_id}`
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Immutable. The name of the Google Compute Engine [VPC network](https://cloud.google.com/vpc/docs/vpc)
        /// to which the instance is connected.
        /// </summary>
        [Output("network")]
        public Output<string?> Network { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The combination of labels configured directly on the resource
        /// and default labels configured on the provider.
        /// </summary>
        [Output("pulumiLabels")]
        public Output<ImmutableDictionary<string, string>> PulumiLabels { get; private set; } = null!;

        /// <summary>
        /// Immutable. Contains the id of the allocated IP address range
        /// associated with the private service access connection for example, \"test-default\"
        /// associated with IP range 10.0.0.0/29. If no range id is provided all ranges will
        /// be considered.
        /// </summary>
        [Output("reservedIpRange")]
        public Output<string?> ReservedIpRange { get; private set; } = null!;

        /// <summary>
        /// The instance state.
        /// Possible values:
        /// STATE_UNSPECIFIED
        /// CREATING
        /// ACTIVE
        /// DELETING
        /// FAILED
        /// UPGRADING
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// The time when the instance was updated.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a Instance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Instance(string name, InstanceArgs args, CustomResourceOptions? options = null)
            : base("gcp:parallelstore/instance:Instance", name, args ?? new InstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Instance(string name, Input<string> id, InstanceState? state = null, CustomResourceOptions? options = null)
            : base("gcp:parallelstore/instance:Instance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "effectiveLabels",
                    "pulumiLabels",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Instance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Instance Get(string name, Input<string> id, InstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new Instance(name, id, state, options);
        }
    }

    public sealed class InstanceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Required. Immutable. Storage capacity of Parallelstore instance in Gibibytes (GiB).
        /// </summary>
        [Input("capacityGib", required: true)]
        public Input<string> CapacityGib { get; set; } = null!;

        /// <summary>
        /// Parallelstore Instance deployment type.
        /// Possible values:
        /// DEPLOYMENT_TYPE_UNSPECIFIED
        /// SCRATCH
        /// PERSISTENT
        /// </summary>
        [Input("deploymentType")]
        public Input<string>? DeploymentType { get; set; }

        /// <summary>
        /// The description of the instance. 2048 characters or less.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Stripe level for directories.
        /// MIN when directory has a small number of files.
        /// MAX when directory has a large number of files.
        /// Possible values:
        /// DIRECTORY_STRIPE_LEVEL_UNSPECIFIED
        /// DIRECTORY_STRIPE_LEVEL_MIN
        /// DIRECTORY_STRIPE_LEVEL_BALANCED
        /// DIRECTORY_STRIPE_LEVEL_MAX
        /// </summary>
        [Input("directoryStripeLevel")]
        public Input<string>? DirectoryStripeLevel { get; set; }

        /// <summary>
        /// Stripe level for files.
        /// MIN better suited for small size files.
        /// MAX higher throughput performance for larger files.
        /// Possible values:
        /// FILE_STRIPE_LEVEL_UNSPECIFIED
        /// FILE_STRIPE_LEVEL_MIN
        /// FILE_STRIPE_LEVEL_BALANCED
        /// FILE_STRIPE_LEVEL_MAX
        /// </summary>
        [Input("fileStripeLevel")]
        public Input<string>? FileStripeLevel { get; set; }

        /// <summary>
        /// The logical name of the Parallelstore instance in the user project with the following restrictions:
        /// * Must contain only lowercase letters, numbers, and hyphens.
        /// * Must start with a letter.
        /// * Must be between 1-63 characters.
        /// * Must end with a number or a letter.
        /// * Must be unique within the customer project/ location
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Cloud Labels are a flexible and lightweight mechanism for
        /// organizing cloud resources into groups that reflect a customer's organizational
        /// needs and deployment strategies. Cloud Labels can be used to filter collections
        /// of resources. They can be used to control how resource metrics are aggregated.
        /// And they can be used as arguments to policy management rules (e.g. route, firewall,
        /// load balancing, etc.).
        /// * Label keys must be between 1 and 63 characters long and must conform to
        /// the following regular expression: `a-z{0,62}`.
        /// * Label values must be between 0 and 63 characters long and must conform
        /// to the regular expression `[a-z0-9_-]{0,63}`.
        /// * No more than 64 labels can be associated with a given resource.
        /// See https://goo.gl/xmQnxf for more information on and examples of labels.
        /// If you plan to use labels in your own code, please note that additional
        /// characters may be allowed in the future. Therefore, you are advised to use
        /// an internal label representation, such as JSON, which doesn't rely upon
        /// specific characters being disallowed.  For example, representing labels
        /// as the string:  `name + "_" + value` would prove problematic if we were to
        /// allow `"_"` in a future release. "
        /// 
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `effective_labels` for all of the labels present on the resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Part of `parent`. See documentation of `projectsId`.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// Immutable. The name of the Google Compute Engine [VPC network](https://cloud.google.com/vpc/docs/vpc)
        /// to which the instance is connected.
        /// </summary>
        [Input("network")]
        public Input<string>? Network { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// Immutable. Contains the id of the allocated IP address range
        /// associated with the private service access connection for example, \"test-default\"
        /// associated with IP range 10.0.0.0/29. If no range id is provided all ranges will
        /// be considered.
        /// </summary>
        [Input("reservedIpRange")]
        public Input<string>? ReservedIpRange { get; set; }

        public InstanceArgs()
        {
        }
        public static new InstanceArgs Empty => new InstanceArgs();
    }

    public sealed class InstanceState : global::Pulumi.ResourceArgs
    {
        [Input("accessPoints")]
        private InputList<string>? _accessPoints;

        /// <summary>
        /// Output only. List of access_points.
        /// Contains a list of IPv4 addresses used for client side configuration.
        /// </summary>
        public InputList<string> AccessPoints
        {
            get => _accessPoints ?? (_accessPoints = new InputList<string>());
            set => _accessPoints = value;
        }

        /// <summary>
        /// Required. Immutable. Storage capacity of Parallelstore instance in Gibibytes (GiB).
        /// </summary>
        [Input("capacityGib")]
        public Input<string>? CapacityGib { get; set; }

        /// <summary>
        /// The time when the instance was created.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The version of DAOS software running in the instance.
        /// </summary>
        [Input("daosVersion")]
        public Input<string>? DaosVersion { get; set; }

        /// <summary>
        /// Parallelstore Instance deployment type.
        /// Possible values:
        /// DEPLOYMENT_TYPE_UNSPECIFIED
        /// SCRATCH
        /// PERSISTENT
        /// </summary>
        [Input("deploymentType")]
        public Input<string>? DeploymentType { get; set; }

        /// <summary>
        /// The description of the instance. 2048 characters or less.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Stripe level for directories.
        /// MIN when directory has a small number of files.
        /// MAX when directory has a large number of files.
        /// Possible values:
        /// DIRECTORY_STRIPE_LEVEL_UNSPECIFIED
        /// DIRECTORY_STRIPE_LEVEL_MIN
        /// DIRECTORY_STRIPE_LEVEL_BALANCED
        /// DIRECTORY_STRIPE_LEVEL_MAX
        /// </summary>
        [Input("directoryStripeLevel")]
        public Input<string>? DirectoryStripeLevel { get; set; }

        [Input("effectiveLabels")]
        private InputMap<string>? _effectiveLabels;

        /// <summary>
        /// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
        /// </summary>
        public InputMap<string> EffectiveLabels
        {
            get => _effectiveLabels ?? (_effectiveLabels = new InputMap<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableDictionary.Create<string, string>());
                _effectiveLabels = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        /// <summary>
        /// Immutable. Contains the id of the allocated IP address
        /// range associated with the private service access connection for example, \"test-default\"
        /// associated with IP range 10.0.0.0/29. This field is populated by the service
        /// and contains the value currently used by the service.
        /// </summary>
        [Input("effectiveReservedIpRange")]
        public Input<string>? EffectiveReservedIpRange { get; set; }

        /// <summary>
        /// Stripe level for files.
        /// MIN better suited for small size files.
        /// MAX higher throughput performance for larger files.
        /// Possible values:
        /// FILE_STRIPE_LEVEL_UNSPECIFIED
        /// FILE_STRIPE_LEVEL_MIN
        /// FILE_STRIPE_LEVEL_BALANCED
        /// FILE_STRIPE_LEVEL_MAX
        /// </summary>
        [Input("fileStripeLevel")]
        public Input<string>? FileStripeLevel { get; set; }

        /// <summary>
        /// The logical name of the Parallelstore instance in the user project with the following restrictions:
        /// * Must contain only lowercase letters, numbers, and hyphens.
        /// * Must start with a letter.
        /// * Must be between 1-63 characters.
        /// * Must end with a number or a letter.
        /// * Must be unique within the customer project/ location
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Cloud Labels are a flexible and lightweight mechanism for
        /// organizing cloud resources into groups that reflect a customer's organizational
        /// needs and deployment strategies. Cloud Labels can be used to filter collections
        /// of resources. They can be used to control how resource metrics are aggregated.
        /// And they can be used as arguments to policy management rules (e.g. route, firewall,
        /// load balancing, etc.).
        /// * Label keys must be between 1 and 63 characters long and must conform to
        /// the following regular expression: `a-z{0,62}`.
        /// * Label values must be between 0 and 63 characters long and must conform
        /// to the regular expression `[a-z0-9_-]{0,63}`.
        /// * No more than 64 labels can be associated with a given resource.
        /// See https://goo.gl/xmQnxf for more information on and examples of labels.
        /// If you plan to use labels in your own code, please note that additional
        /// characters may be allowed in the future. Therefore, you are advised to use
        /// an internal label representation, such as JSON, which doesn't rely upon
        /// specific characters being disallowed.  For example, representing labels
        /// as the string:  `name + "_" + value` would prove problematic if we were to
        /// allow `"_"` in a future release. "
        /// 
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `effective_labels` for all of the labels present on the resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Part of `parent`. See documentation of `projectsId`.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Identifier. The resource name of the instance, in the format
        /// `projects/{project}/locations/{location}/instances/{instance_id}`
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Immutable. The name of the Google Compute Engine [VPC network](https://cloud.google.com/vpc/docs/vpc)
        /// to which the instance is connected.
        /// </summary>
        [Input("network")]
        public Input<string>? Network { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("pulumiLabels")]
        private InputMap<string>? _pulumiLabels;

        /// <summary>
        /// The combination of labels configured directly on the resource
        /// and default labels configured on the provider.
        /// </summary>
        public InputMap<string> PulumiLabels
        {
            get => _pulumiLabels ?? (_pulumiLabels = new InputMap<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableDictionary.Create<string, string>());
                _pulumiLabels = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        /// <summary>
        /// Immutable. Contains the id of the allocated IP address range
        /// associated with the private service access connection for example, \"test-default\"
        /// associated with IP range 10.0.0.0/29. If no range id is provided all ranges will
        /// be considered.
        /// </summary>
        [Input("reservedIpRange")]
        public Input<string>? ReservedIpRange { get; set; }

        /// <summary>
        /// The instance state.
        /// Possible values:
        /// STATE_UNSPECIFIED
        /// CREATING
        /// ACTIVE
        /// DELETING
        /// FAILED
        /// UPGRADING
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// The time when the instance was updated.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public InstanceState()
        {
        }
        public static new InstanceState Empty => new InstanceState();
    }
}
