// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.EssentialContacts
{
    /// <summary>
    /// A location is used to initialize a project.
    /// 
    /// To get more information about Location, see:
    /// 
    /// * [API documentation](https://cloud.google.com/document-warehouse/docs/reference/rest/v1/projects.locations)
    /// * How-to Guides
    ///     * [Official Documentation](https://cloud.google.com/document-warehouse/docs/overview)
    /// 
    /// ## Example Usage
    /// ### Document Ai Warehouse Location
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var project = Gcp.Organizations.GetProject.Invoke();
    /// 
    ///     var example = new Gcp.EssentialContacts.DocumentAiWarehouseLocation("example", new()
    ///     {
    ///         Location = "us",
    ///         ProjectNumber = project.Apply(getProjectResult =&gt; getProjectResult.Number),
    ///         AccessControlMode = "ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_GCI",
    ///         DatabaseType = "DB_INFRA_SPANNER",
    ///         KmsKey = "dummy_key",
    ///         DocumentCreatorDefaultRole = "DOCUMENT_ADMIN",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// This resource does not support import.
    /// </summary>
    [GcpResourceType("gcp:essentialcontacts/documentAiWarehouseLocation:DocumentAiWarehouseLocation")]
    public partial class DocumentAiWarehouseLocation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The access control mode for accessing the customer data.
        /// Possible values are: `ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_GCI`, `ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_BYOID`, `ACL_MODE_UNIVERSAL_ACCESS`.
        /// </summary>
        [Output("accessControlMode")]
        public Output<string> AccessControlMode { get; private set; } = null!;

        /// <summary>
        /// The type of database used to store customer data.
        /// Possible values are: `DB_INFRA_SPANNER`, `DB_CLOUD_SQL_POSTGRES`.
        /// </summary>
        [Output("databaseType")]
        public Output<string> DatabaseType { get; private set; } = null!;

        /// <summary>
        /// The default role for the person who create a document.
        /// Possible values are: `DOCUMENT_ADMIN`, `DOCUMENT_EDITOR`, `DOCUMENT_VIEWER`.
        /// </summary>
        [Output("documentCreatorDefaultRole")]
        public Output<string?> DocumentCreatorDefaultRole { get; private set; } = null!;

        /// <summary>
        /// The KMS key used for CMEK encryption. It is required that
        /// the kms key is in the same region as the endpoint. The
        /// same key will be used for all provisioned resources, if
        /// encryption is available. If the kmsKey is left empty, no
        /// encryption will be enforced.
        /// </summary>
        [Output("kmsKey")]
        public Output<string?> KmsKey { get; private set; } = null!;

        /// <summary>
        /// The location in which the instance is to be provisioned. It takes the form projects/{projectNumber}/locations/{location}.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The unique identifier of the project.
        /// </summary>
        [Output("projectNumber")]
        public Output<string> ProjectNumber { get; private set; } = null!;


        /// <summary>
        /// Create a DocumentAiWarehouseLocation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DocumentAiWarehouseLocation(string name, DocumentAiWarehouseLocationArgs args, CustomResourceOptions? options = null)
            : base("gcp:essentialcontacts/documentAiWarehouseLocation:DocumentAiWarehouseLocation", name, args ?? new DocumentAiWarehouseLocationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DocumentAiWarehouseLocation(string name, Input<string> id, DocumentAiWarehouseLocationState? state = null, CustomResourceOptions? options = null)
            : base("gcp:essentialcontacts/documentAiWarehouseLocation:DocumentAiWarehouseLocation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DocumentAiWarehouseLocation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DocumentAiWarehouseLocation Get(string name, Input<string> id, DocumentAiWarehouseLocationState? state = null, CustomResourceOptions? options = null)
        {
            return new DocumentAiWarehouseLocation(name, id, state, options);
        }
    }

    public sealed class DocumentAiWarehouseLocationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The access control mode for accessing the customer data.
        /// Possible values are: `ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_GCI`, `ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_BYOID`, `ACL_MODE_UNIVERSAL_ACCESS`.
        /// </summary>
        [Input("accessControlMode", required: true)]
        public Input<string> AccessControlMode { get; set; } = null!;

        /// <summary>
        /// The type of database used to store customer data.
        /// Possible values are: `DB_INFRA_SPANNER`, `DB_CLOUD_SQL_POSTGRES`.
        /// </summary>
        [Input("databaseType", required: true)]
        public Input<string> DatabaseType { get; set; } = null!;

        /// <summary>
        /// The default role for the person who create a document.
        /// Possible values are: `DOCUMENT_ADMIN`, `DOCUMENT_EDITOR`, `DOCUMENT_VIEWER`.
        /// </summary>
        [Input("documentCreatorDefaultRole")]
        public Input<string>? DocumentCreatorDefaultRole { get; set; }

        /// <summary>
        /// The KMS key used for CMEK encryption. It is required that
        /// the kms key is in the same region as the endpoint. The
        /// same key will be used for all provisioned resources, if
        /// encryption is available. If the kmsKey is left empty, no
        /// encryption will be enforced.
        /// </summary>
        [Input("kmsKey")]
        public Input<string>? KmsKey { get; set; }

        /// <summary>
        /// The location in which the instance is to be provisioned. It takes the form projects/{projectNumber}/locations/{location}.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The unique identifier of the project.
        /// </summary>
        [Input("projectNumber", required: true)]
        public Input<string> ProjectNumber { get; set; } = null!;

        public DocumentAiWarehouseLocationArgs()
        {
        }
        public static new DocumentAiWarehouseLocationArgs Empty => new DocumentAiWarehouseLocationArgs();
    }

    public sealed class DocumentAiWarehouseLocationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The access control mode for accessing the customer data.
        /// Possible values are: `ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_GCI`, `ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_BYOID`, `ACL_MODE_UNIVERSAL_ACCESS`.
        /// </summary>
        [Input("accessControlMode")]
        public Input<string>? AccessControlMode { get; set; }

        /// <summary>
        /// The type of database used to store customer data.
        /// Possible values are: `DB_INFRA_SPANNER`, `DB_CLOUD_SQL_POSTGRES`.
        /// </summary>
        [Input("databaseType")]
        public Input<string>? DatabaseType { get; set; }

        /// <summary>
        /// The default role for the person who create a document.
        /// Possible values are: `DOCUMENT_ADMIN`, `DOCUMENT_EDITOR`, `DOCUMENT_VIEWER`.
        /// </summary>
        [Input("documentCreatorDefaultRole")]
        public Input<string>? DocumentCreatorDefaultRole { get; set; }

        /// <summary>
        /// The KMS key used for CMEK encryption. It is required that
        /// the kms key is in the same region as the endpoint. The
        /// same key will be used for all provisioned resources, if
        /// encryption is available. If the kmsKey is left empty, no
        /// encryption will be enforced.
        /// </summary>
        [Input("kmsKey")]
        public Input<string>? KmsKey { get; set; }

        /// <summary>
        /// The location in which the instance is to be provisioned. It takes the form projects/{projectNumber}/locations/{location}.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The unique identifier of the project.
        /// </summary>
        [Input("projectNumber")]
        public Input<string>? ProjectNumber { get; set; }

        public DocumentAiWarehouseLocationState()
        {
        }
        public static new DocumentAiWarehouseLocationState Empty => new DocumentAiWarehouseLocationState();
    }
}
