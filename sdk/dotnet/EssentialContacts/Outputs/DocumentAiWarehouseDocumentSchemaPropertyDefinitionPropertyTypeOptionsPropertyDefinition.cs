// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.EssentialContacts.Outputs
{

    [OutputType]
    public sealed class DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinition
    {
        /// <summary>
        /// Date time property. Not supported by CMEK compliant deployment.
        /// </summary>
        public readonly Outputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionDateTimeTypeOptions? DateTimeTypeOptions;
        /// <summary>
        /// The display-name for the property, used for front-end.
        /// </summary>
        public readonly string? DisplayName;
        /// <summary>
        /// Enum/categorical property.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionEnumTypeOptions? EnumTypeOptions;
        /// <summary>
        /// Float property.
        /// </summary>
        public readonly Outputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionFloatTypeOptions? FloatTypeOptions;
        /// <summary>
        /// Integer property.
        /// </summary>
        public readonly Outputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionIntegerTypeOptions? IntegerTypeOptions;
        /// <summary>
        /// Whether the property can be filtered. If this is a sub-property, all the parent properties must be marked filterable.
        /// </summary>
        public readonly bool? IsFilterable;
        /// <summary>
        /// Whether the property is user supplied metadata.
        /// </summary>
        public readonly bool? IsMetadata;
        /// <summary>
        /// Whether the property can have multiple values.
        /// </summary>
        public readonly bool? IsRepeatable;
        /// <summary>
        /// Whether the property is mandatory.
        /// </summary>
        public readonly bool? IsRequired;
        /// <summary>
        /// Indicates that the property should be included in a global search.
        /// </summary>
        public readonly bool? IsSearchable;
        /// <summary>
        /// Map property.
        /// </summary>
        public readonly Outputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionMapTypeOptions? MapTypeOptions;
        /// <summary>
        /// The name of the metadata property.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Stores the retrieval importance.
        /// Possible values are: `HIGHEST`, `HIGHER`, `HIGH`, `MEDIUM`, `LOW`, `LOWEST`.
        /// </summary>
        public readonly string? RetrievalImportance;
        /// <summary>
        /// The schema source information.
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionSchemaSource> SchemaSources;
        /// <summary>
        /// Text property.
        /// </summary>
        public readonly Outputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionTextTypeOptions? TextTypeOptions;
        /// <summary>
        /// Timestamp property. Not supported by CMEK compliant deployment.
        /// </summary>
        public readonly Outputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionTimestampTypeOptions? TimestampTypeOptions;

        [OutputConstructor]
        private DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinition(
            Outputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionDateTimeTypeOptions? dateTimeTypeOptions,

            string? displayName,

            Outputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionEnumTypeOptions? enumTypeOptions,

            Outputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionFloatTypeOptions? floatTypeOptions,

            Outputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionIntegerTypeOptions? integerTypeOptions,

            bool? isFilterable,

            bool? isMetadata,

            bool? isRepeatable,

            bool? isRequired,

            bool? isSearchable,

            Outputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionMapTypeOptions? mapTypeOptions,

            string name,

            string? retrievalImportance,

            ImmutableArray<Outputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionSchemaSource> schemaSources,

            Outputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionTextTypeOptions? textTypeOptions,

            Outputs.DocumentAiWarehouseDocumentSchemaPropertyDefinitionPropertyTypeOptionsPropertyDefinitionTimestampTypeOptions? timestampTypeOptions)
        {
            DateTimeTypeOptions = dateTimeTypeOptions;
            DisplayName = displayName;
            EnumTypeOptions = enumTypeOptions;
            FloatTypeOptions = floatTypeOptions;
            IntegerTypeOptions = integerTypeOptions;
            IsFilterable = isFilterable;
            IsMetadata = isMetadata;
            IsRepeatable = isRepeatable;
            IsRequired = isRequired;
            IsSearchable = isSearchable;
            MapTypeOptions = mapTypeOptions;
            Name = name;
            RetrievalImportance = retrievalImportance;
            SchemaSources = schemaSources;
            TextTypeOptions = textTypeOptions;
            TimestampTypeOptions = timestampTypeOptions;
        }
    }
}
