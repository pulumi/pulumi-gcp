// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Lustre
{
    /// <summary>
    /// A Managed Lustre instance
    /// 
    /// To get more information about Instance, see:
    /// 
    /// * [API documentation](https://cloud.google.com/managed-lustre/docs/reference/rest/v1/projects.locations.instances)
    /// * How-to Guides
    ///     * [Official Documentation](https://cloud.google.com/managed-lustre/docs/create-instance)
    /// 
    /// ## Example Usage
    /// 
    /// ### Lustre Instance Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // This example assumes this network already exists.
    ///     // The API creates a tenant network per network authorized for a
    ///     // Lustre instance and that network is not deleted when the user-created
    ///     // network (authorized_network) is deleted, so this prevents issues
    ///     // with tenant network quota.
    ///     // If this network hasn't been created and you are using this example in your
    ///     // config, add an additional network resource or change
    ///     // this from "data"to "resource"
    ///     var lustre_network = Gcp.Compute.GetNetwork.Invoke(new()
    ///     {
    ///         Name = "my-network",
    ///     });
    /// 
    ///     var instance = new Gcp.Lustre.Instance("instance", new()
    ///     {
    ///         InstanceId = "my-instance",
    ///         Location = "us-central1-a",
    ///         Description = "test lustre instance",
    ///         Filesystem = "testfs",
    ///         CapacityGib = "18000",
    ///         Network = lustre_network.Apply(lustre_network =&gt; lustre_network.Apply(getNetworkResult =&gt; getNetworkResult.Id)),
    ///         PerUnitStorageThroughput = "1000",
    ///         Labels = 
    ///         {
    ///             { "test", "value" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Instance can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/locations/{{location}}/instances/{{instance_id}}`
    /// 
    /// * `{{project}}/{{location}}/{{instance_id}}`
    /// 
    /// * `{{location}}/{{instance_id}}`
    /// 
    /// When using the `pulumi import` command, Instance can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:lustre/instance:Instance default projects/{{project}}/locations/{{location}}/instances/{{instance_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:lustre/instance:Instance default {{project}}/{{location}}/{{instance_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:lustre/instance:Instance default {{location}}/{{instance_id}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:lustre/instance:Instance")]
    public partial class Instance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The storage capacity of the instance in gibibytes (GiB). Allowed values
        /// are from `18000` to `954000`, in increments of 9000.
        /// </summary>
        [Output("capacityGib")]
        public Output<string> CapacityGib { get; private set; } = null!;

        /// <summary>
        /// Timestamp when the instance was created.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// A user-readable description of the instance.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
        /// </summary>
        [Output("effectiveLabels")]
        public Output<ImmutableDictionary<string, string>> EffectiveLabels { get; private set; } = null!;

        /// <summary>
        /// The filesystem name for this instance. This name is used by client-side
        /// tools, including when mounting the instance. Must be eight characters or
        /// less and can only contain letters and numbers.
        /// </summary>
        [Output("filesystem")]
        public Output<string> Filesystem { get; private set; } = null!;

        /// <summary>
        /// Indicates whether you want to enable support for GKE clients. By default,
        /// GKE clients are not supported.
        /// </summary>
        [Output("gkeSupportEnabled")]
        public Output<bool?> GkeSupportEnabled { get; private set; } = null!;

        /// <summary>
        /// The name of the Managed Lustre instance.
        /// * Must contain only lowercase letters, numbers, and hyphens.
        /// * Must start with a letter.
        /// * Must be between 1-63 characters.
        /// * Must end with a number or a letter.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// Labels as key value pairs.
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `EffectiveLabels` for all of the labels present on the resource.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// Resource ID segment making up resource `Name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// Mount point of the instance in the format `IP_ADDRESS@tcp:/FILESYSTEM`.
        /// </summary>
        [Output("mountPoint")]
        public Output<string> MountPoint { get; private set; } = null!;

        /// <summary>
        /// Identifier. The name of the instance.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The full name of the VPC network to which the instance is connected.
        /// Must be in the format
        /// `projects/{project_id}/global/networks/{network_name}`.
        /// </summary>
        [Output("network")]
        public Output<string> Network { get; private set; } = null!;

        /// <summary>
        /// The throughput of the instance in MB/s/TiB.
        /// Valid values are 125, 250, 500, 1000.
        /// </summary>
        [Output("perUnitStorageThroughput")]
        public Output<string> PerUnitStorageThroughput { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The combination of labels configured directly on the resource
        /// and default labels configured on the provider.
        /// </summary>
        [Output("pulumiLabels")]
        public Output<ImmutableDictionary<string, string>> PulumiLabels { get; private set; } = null!;

        /// <summary>
        /// The state of the instance.
        /// Possible values:
        /// STATE_UNSPECIFIED
        /// ACTIVE
        /// CREATING
        /// DELETING
        /// UPGRADING
        /// REPAIRING
        /// STOPPED
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Timestamp when the instance was last updated.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a Instance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Instance(string name, InstanceArgs args, CustomResourceOptions? options = null)
            : base("gcp:lustre/instance:Instance", name, args ?? new InstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Instance(string name, Input<string> id, InstanceState? state = null, CustomResourceOptions? options = null)
            : base("gcp:lustre/instance:Instance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "effectiveLabels",
                    "pulumiLabels",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Instance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Instance Get(string name, Input<string> id, InstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new Instance(name, id, state, options);
        }
    }

    public sealed class InstanceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The storage capacity of the instance in gibibytes (GiB). Allowed values
        /// are from `18000` to `954000`, in increments of 9000.
        /// </summary>
        [Input("capacityGib", required: true)]
        public Input<string> CapacityGib { get; set; } = null!;

        /// <summary>
        /// A user-readable description of the instance.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The filesystem name for this instance. This name is used by client-side
        /// tools, including when mounting the instance. Must be eight characters or
        /// less and can only contain letters and numbers.
        /// </summary>
        [Input("filesystem", required: true)]
        public Input<string> Filesystem { get; set; } = null!;

        /// <summary>
        /// Indicates whether you want to enable support for GKE clients. By default,
        /// GKE clients are not supported.
        /// </summary>
        [Input("gkeSupportEnabled")]
        public Input<bool>? GkeSupportEnabled { get; set; }

        /// <summary>
        /// The name of the Managed Lustre instance.
        /// * Must contain only lowercase letters, numbers, and hyphens.
        /// * Must start with a letter.
        /// * Must be between 1-63 characters.
        /// * Must end with a number or a letter.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Labels as key value pairs.
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `EffectiveLabels` for all of the labels present on the resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Resource ID segment making up resource `Name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The full name of the VPC network to which the instance is connected.
        /// Must be in the format
        /// `projects/{project_id}/global/networks/{network_name}`.
        /// </summary>
        [Input("network", required: true)]
        public Input<string> Network { get; set; } = null!;

        /// <summary>
        /// The throughput of the instance in MB/s/TiB.
        /// Valid values are 125, 250, 500, 1000.
        /// </summary>
        [Input("perUnitStorageThroughput", required: true)]
        public Input<string> PerUnitStorageThroughput { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public InstanceArgs()
        {
        }
        public static new InstanceArgs Empty => new InstanceArgs();
    }

    public sealed class InstanceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The storage capacity of the instance in gibibytes (GiB). Allowed values
        /// are from `18000` to `954000`, in increments of 9000.
        /// </summary>
        [Input("capacityGib")]
        public Input<string>? CapacityGib { get; set; }

        /// <summary>
        /// Timestamp when the instance was created.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// A user-readable description of the instance.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("effectiveLabels")]
        private InputMap<string>? _effectiveLabels;

        /// <summary>
        /// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
        /// </summary>
        public InputMap<string> EffectiveLabels
        {
            get => _effectiveLabels ?? (_effectiveLabels = new InputMap<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableDictionary.Create<string, string>());
                _effectiveLabels = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        /// <summary>
        /// The filesystem name for this instance. This name is used by client-side
        /// tools, including when mounting the instance. Must be eight characters or
        /// less and can only contain letters and numbers.
        /// </summary>
        [Input("filesystem")]
        public Input<string>? Filesystem { get; set; }

        /// <summary>
        /// Indicates whether you want to enable support for GKE clients. By default,
        /// GKE clients are not supported.
        /// </summary>
        [Input("gkeSupportEnabled")]
        public Input<bool>? GkeSupportEnabled { get; set; }

        /// <summary>
        /// The name of the Managed Lustre instance.
        /// * Must contain only lowercase letters, numbers, and hyphens.
        /// * Must start with a letter.
        /// * Must be between 1-63 characters.
        /// * Must end with a number or a letter.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// Labels as key value pairs.
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `EffectiveLabels` for all of the labels present on the resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// Resource ID segment making up resource `Name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// Mount point of the instance in the format `IP_ADDRESS@tcp:/FILESYSTEM`.
        /// </summary>
        [Input("mountPoint")]
        public Input<string>? MountPoint { get; set; }

        /// <summary>
        /// Identifier. The name of the instance.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The full name of the VPC network to which the instance is connected.
        /// Must be in the format
        /// `projects/{project_id}/global/networks/{network_name}`.
        /// </summary>
        [Input("network")]
        public Input<string>? Network { get; set; }

        /// <summary>
        /// The throughput of the instance in MB/s/TiB.
        /// Valid values are 125, 250, 500, 1000.
        /// </summary>
        [Input("perUnitStorageThroughput")]
        public Input<string>? PerUnitStorageThroughput { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("pulumiLabels")]
        private InputMap<string>? _pulumiLabels;

        /// <summary>
        /// The combination of labels configured directly on the resource
        /// and default labels configured on the provider.
        /// </summary>
        public InputMap<string> PulumiLabels
        {
            get => _pulumiLabels ?? (_pulumiLabels = new InputMap<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableDictionary.Create<string, string>());
                _pulumiLabels = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        /// <summary>
        /// The state of the instance.
        /// Possible values:
        /// STATE_UNSPECIFIED
        /// ACTIVE
        /// CREATING
        /// DELETING
        /// UPGRADING
        /// REPAIRING
        /// STOPPED
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        /// <summary>
        /// Timestamp when the instance was last updated.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public InstanceState()
        {
        }
        public static new InstanceState Empty => new InstanceState();
    }
}
