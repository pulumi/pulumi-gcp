// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Spanner
{
    /// <summary>
    /// A backup schedule for a Cloud Spanner Database.
    /// This resource is owned by the database it is backing up, and is deleted along with the database.
    /// The actual backups are not though.
    /// 
    /// To get more information about BackupSchedule, see:
    /// 
    /// * [API documentation](https://cloud.google.com/spanner/docs/reference/rest/v1/projects.instances.databases.backupSchedules)
    /// * How-to Guides
    ///     * [Official Documentation](https://cloud.google.com/spanner/docs/backup)
    /// 
    /// &gt; **Warning:** This resource creates a Spanner Backup Schedule on a project that already has
    /// a Spanner database.
    /// This resource is owned by the database it is backing up, and is deleted along
    /// with the database. The actual backups are not though.
    /// 
    /// ## Example Usage
    /// 
    /// ### Spanner Backup Schedule Daily Full
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var main = new Gcp.Spanner.Instance("main", new()
    ///     {
    ///         Name = "instance-id",
    ///         Config = "regional-europe-west1",
    ///         DisplayName = "main-instance",
    ///         NumNodes = 1,
    ///     });
    /// 
    ///     var database = new Gcp.Spanner.Database("database", new()
    ///     {
    ///         Instance = main.Name,
    ///         Name = "database-id",
    ///         VersionRetentionPeriod = "3d",
    ///         Ddls = new[]
    ///         {
    ///             "CREATE TABLE t1 (t1 INT64 NOT NULL,) PRIMARY KEY(t1)",
    ///             "CREATE TABLE t2 (t2 INT64 NOT NULL,) PRIMARY KEY(t2)",
    ///         },
    ///         DeletionProtection = true,
    ///     });
    /// 
    ///     var full_backup = new Gcp.Spanner.BackupSchedule("full-backup", new()
    ///     {
    ///         Instance = main.Name,
    ///         Database = database.Name,
    ///         Name = "backup-schedule-id",
    ///         RetentionDuration = "31620000s",
    ///         Spec = new Gcp.Spanner.Inputs.BackupScheduleSpecArgs
    ///         {
    ///             CronSpec = new Gcp.Spanner.Inputs.BackupScheduleSpecCronSpecArgs
    ///             {
    ///                 Text = "0 12 * * *",
    ///             },
    ///         },
    ///         FullBackupSpec = null,
    ///         EncryptionConfig = new Gcp.Spanner.Inputs.BackupScheduleEncryptionConfigArgs
    ///         {
    ///             EncryptionType = "USE_DATABASE_ENCRYPTION",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// ### Spanner Backup Schedule Daily Incremental
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var main = new Gcp.Spanner.Instance("main", new()
    ///     {
    ///         Name = "instance-id",
    ///         Config = "regional-europe-west1",
    ///         DisplayName = "main-instance",
    ///         NumNodes = 1,
    ///         Edition = "ENTERPRISE",
    ///     });
    /// 
    ///     var database = new Gcp.Spanner.Database("database", new()
    ///     {
    ///         Instance = main.Name,
    ///         Name = "database-id",
    ///         VersionRetentionPeriod = "3d",
    ///         Ddls = new[]
    ///         {
    ///             "CREATE TABLE t1 (t1 INT64 NOT NULL,) PRIMARY KEY(t1)",
    ///             "CREATE TABLE t2 (t2 INT64 NOT NULL,) PRIMARY KEY(t2)",
    ///         },
    ///         DeletionProtection = true,
    ///     });
    /// 
    ///     var incremental_backup = new Gcp.Spanner.BackupSchedule("incremental-backup", new()
    ///     {
    ///         Instance = main.Name,
    ///         Database = database.Name,
    ///         Name = "backup-schedule-id",
    ///         RetentionDuration = "31620000s",
    ///         Spec = new Gcp.Spanner.Inputs.BackupScheduleSpecArgs
    ///         {
    ///             CronSpec = new Gcp.Spanner.Inputs.BackupScheduleSpecCronSpecArgs
    ///             {
    ///                 Text = "0 12 * * *",
    ///             },
    ///         },
    ///         IncrementalBackupSpec = null,
    ///         EncryptionConfig = new Gcp.Spanner.Inputs.BackupScheduleEncryptionConfigArgs
    ///         {
    ///             EncryptionType = "GOOGLE_DEFAULT_ENCRYPTION",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// BackupSchedule can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/instances/{{instance}}/databases/{{database}}/backupSchedules/{{name}}`
    /// 
    /// * `{{project}}/{{instance}}/{{database}}/{{name}}`
    /// 
    /// * `{{instance}}/{{database}}/{{name}}`
    /// 
    /// When using the `pulumi import` command, BackupSchedule can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:spanner/backupSchedule:BackupSchedule default projects/{{project}}/instances/{{instance}}/databases/{{database}}/backupSchedules/{{name}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:spanner/backupSchedule:BackupSchedule default {{project}}/{{instance}}/{{database}}/{{name}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:spanner/backupSchedule:BackupSchedule default {{instance}}/{{database}}/{{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:spanner/backupSchedule:BackupSchedule")]
    public partial class BackupSchedule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The database to create the backup schedule on.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Output("database")]
        public Output<string> Database { get; private set; } = null!;

        /// <summary>
        /// Configuration for the encryption of the backup schedule.
        /// Structure is documented below.
        /// </summary>
        [Output("encryptionConfig")]
        public Output<Outputs.BackupScheduleEncryptionConfig> EncryptionConfig { get; private set; } = null!;

        /// <summary>
        /// The schedule creates only full backups..
        /// </summary>
        [Output("fullBackupSpec")]
        public Output<Outputs.BackupScheduleFullBackupSpec?> FullBackupSpec { get; private set; } = null!;

        /// <summary>
        /// The schedule creates incremental backup chains.
        /// </summary>
        [Output("incrementalBackupSpec")]
        public Output<Outputs.BackupScheduleIncrementalBackupSpec?> IncrementalBackupSpec { get; private set; } = null!;

        /// <summary>
        /// The instance to create the database on.
        /// </summary>
        [Output("instance")]
        public Output<string> Instance { get; private set; } = null!;

        /// <summary>
        /// A unique identifier for the backup schedule, which cannot be changed after
        /// the backup schedule is created. Values are of the form [a-z][-a-z0-9]*[a-z0-9].
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// At what relative time in the future, compared to its creation time, the backup should be deleted, e.g. keep backups for 7 days.
        /// A duration in seconds with up to nine fractional digits, ending with 's'. Example: '3.5s'.
        /// You can set this to a value up to 366 days.
        /// </summary>
        [Output("retentionDuration")]
        public Output<string> RetentionDuration { get; private set; } = null!;

        /// <summary>
        /// Defines specifications of the backup schedule.
        /// Structure is documented below.
        /// </summary>
        [Output("spec")]
        public Output<Outputs.BackupScheduleSpec?> Spec { get; private set; } = null!;


        /// <summary>
        /// Create a BackupSchedule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BackupSchedule(string name, BackupScheduleArgs args, CustomResourceOptions? options = null)
            : base("gcp:spanner/backupSchedule:BackupSchedule", name, args ?? new BackupScheduleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BackupSchedule(string name, Input<string> id, BackupScheduleState? state = null, CustomResourceOptions? options = null)
            : base("gcp:spanner/backupSchedule:BackupSchedule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BackupSchedule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BackupSchedule Get(string name, Input<string> id, BackupScheduleState? state = null, CustomResourceOptions? options = null)
        {
            return new BackupSchedule(name, id, state, options);
        }
    }

    public sealed class BackupScheduleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The database to create the backup schedule on.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("database", required: true)]
        public Input<string> Database { get; set; } = null!;

        /// <summary>
        /// Configuration for the encryption of the backup schedule.
        /// Structure is documented below.
        /// </summary>
        [Input("encryptionConfig")]
        public Input<Inputs.BackupScheduleEncryptionConfigArgs>? EncryptionConfig { get; set; }

        /// <summary>
        /// The schedule creates only full backups..
        /// </summary>
        [Input("fullBackupSpec")]
        public Input<Inputs.BackupScheduleFullBackupSpecArgs>? FullBackupSpec { get; set; }

        /// <summary>
        /// The schedule creates incremental backup chains.
        /// </summary>
        [Input("incrementalBackupSpec")]
        public Input<Inputs.BackupScheduleIncrementalBackupSpecArgs>? IncrementalBackupSpec { get; set; }

        /// <summary>
        /// The instance to create the database on.
        /// </summary>
        [Input("instance", required: true)]
        public Input<string> Instance { get; set; } = null!;

        /// <summary>
        /// A unique identifier for the backup schedule, which cannot be changed after
        /// the backup schedule is created. Values are of the form [a-z][-a-z0-9]*[a-z0-9].
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// At what relative time in the future, compared to its creation time, the backup should be deleted, e.g. keep backups for 7 days.
        /// A duration in seconds with up to nine fractional digits, ending with 's'. Example: '3.5s'.
        /// You can set this to a value up to 366 days.
        /// </summary>
        [Input("retentionDuration", required: true)]
        public Input<string> RetentionDuration { get; set; } = null!;

        /// <summary>
        /// Defines specifications of the backup schedule.
        /// Structure is documented below.
        /// </summary>
        [Input("spec")]
        public Input<Inputs.BackupScheduleSpecArgs>? Spec { get; set; }

        public BackupScheduleArgs()
        {
        }
        public static new BackupScheduleArgs Empty => new BackupScheduleArgs();
    }

    public sealed class BackupScheduleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The database to create the backup schedule on.
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("database")]
        public Input<string>? Database { get; set; }

        /// <summary>
        /// Configuration for the encryption of the backup schedule.
        /// Structure is documented below.
        /// </summary>
        [Input("encryptionConfig")]
        public Input<Inputs.BackupScheduleEncryptionConfigGetArgs>? EncryptionConfig { get; set; }

        /// <summary>
        /// The schedule creates only full backups..
        /// </summary>
        [Input("fullBackupSpec")]
        public Input<Inputs.BackupScheduleFullBackupSpecGetArgs>? FullBackupSpec { get; set; }

        /// <summary>
        /// The schedule creates incremental backup chains.
        /// </summary>
        [Input("incrementalBackupSpec")]
        public Input<Inputs.BackupScheduleIncrementalBackupSpecGetArgs>? IncrementalBackupSpec { get; set; }

        /// <summary>
        /// The instance to create the database on.
        /// </summary>
        [Input("instance")]
        public Input<string>? Instance { get; set; }

        /// <summary>
        /// A unique identifier for the backup schedule, which cannot be changed after
        /// the backup schedule is created. Values are of the form [a-z][-a-z0-9]*[a-z0-9].
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// At what relative time in the future, compared to its creation time, the backup should be deleted, e.g. keep backups for 7 days.
        /// A duration in seconds with up to nine fractional digits, ending with 's'. Example: '3.5s'.
        /// You can set this to a value up to 366 days.
        /// </summary>
        [Input("retentionDuration")]
        public Input<string>? RetentionDuration { get; set; }

        /// <summary>
        /// Defines specifications of the backup schedule.
        /// Structure is documented below.
        /// </summary>
        [Input("spec")]
        public Input<Inputs.BackupScheduleSpecGetArgs>? Spec { get; set; }

        public BackupScheduleState()
        {
        }
        public static new BackupScheduleState Empty => new BackupScheduleState();
    }
}
