// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Spanner.Outputs
{

    [OutputType]
    public sealed class GetInstanceAutoscalingConfigResult
    {
        /// <summary>
        /// Asymmetric autoscaling options for specific replicas.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstanceAutoscalingConfigAsymmetricAutoscalingOptionResult> AsymmetricAutoscalingOptions;
        /// <summary>
        /// Defines scale in controls to reduce the risk of response latency
        /// and outages due to abrupt scale-in events. Users can define the minimum and
        /// maximum compute capacity allocated to the instance, and the autoscaler will
        /// only scale within that range. Users can either use nodes or processing
        /// units to specify the limits, but should use the same unit to set both the
        /// min_limit and max_limit.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstanceAutoscalingConfigAutoscalingLimitResult> AutoscalingLimits;
        /// <summary>
        /// Defines scale in controls to reduce the risk of response latency
        /// and outages due to abrupt scale-in events
        /// </summary>
        public readonly ImmutableArray<Outputs.GetInstanceAutoscalingConfigAutoscalingTargetResult> AutoscalingTargets;

        [OutputConstructor]
        private GetInstanceAutoscalingConfigResult(
            ImmutableArray<Outputs.GetInstanceAutoscalingConfigAsymmetricAutoscalingOptionResult> asymmetricAutoscalingOptions,

            ImmutableArray<Outputs.GetInstanceAutoscalingConfigAutoscalingLimitResult> autoscalingLimits,

            ImmutableArray<Outputs.GetInstanceAutoscalingConfigAutoscalingTargetResult> autoscalingTargets)
        {
            AsymmetricAutoscalingOptions = asymmetricAutoscalingOptions;
            AutoscalingLimits = autoscalingLimits;
            AutoscalingTargets = autoscalingTargets;
        }
    }
}
