// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.Spanner
{
    /// <summary>
    /// A possible configuration for a Cloud Spanner instance. Configurations
    /// define the geographic placement of nodes and their replication.
    /// 
    /// To get more information about InstanceConfig, see:
    /// 
    /// * [API documentation](https://cloud.google.com/spanner/docs/reference/rest/v1/projects.instanceConfigs)
    /// * How-to Guides
    ///     * [Official Documentation](https://cloud.google.com/spanner/)
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// InstanceConfig can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/instanceConfigs/{{name}}`
    /// 
    /// * `{{project}}/{{name}}`
    /// 
    /// * `{{name}}`
    /// 
    /// When using the `pulumi import` command, InstanceConfig can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:spanner/instanceConfig:InstanceConfig default projects/{{project}}/instanceConfigs/{{name}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:spanner/instanceConfig:InstanceConfig default {{project}}/{{name}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:spanner/instanceConfig:InstanceConfig default {{name}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:spanner/instanceConfig:InstanceConfig")]
    public partial class InstanceConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Base configuration name, e.g. nam3, based on which this configuration is created.
        /// Only set for user managed configurations.
        /// baseConfig must refer to a configuration of type GOOGLE_MANAGED in the same project as this configuration.
        /// </summary>
        [Output("baseConfig")]
        public Output<string> BaseConfig { get; private set; } = null!;

        /// <summary>
        /// Output only. Whether this instance config is a Google or User Managed Configuration.
        /// </summary>
        [Output("configType")]
        public Output<string> ConfigType { get; private set; } = null!;

        /// <summary>
        /// The name of this instance configuration as it appears in UIs.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
        /// </summary>
        [Output("effectiveLabels")]
        public Output<ImmutableDictionary<string, string>> EffectiveLabels { get; private set; } = null!;

        /// <summary>
        /// An object containing a list of "key": value pairs.
        /// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
        /// 
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `effective_labels` for all of the labels present on the resource.
        /// </summary>
        [Output("labels")]
        public Output<ImmutableDictionary<string, string>?> Labels { get; private set; } = null!;

        /// <summary>
        /// A unique identifier for the instance configuration. Values are of the
        /// form projects/&lt;project&gt;/instanceConfigs/[a-z][-a-z0-9]*
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The combination of labels configured directly on the resource
        /// and default labels configured on the provider.
        /// </summary>
        [Output("pulumiLabels")]
        public Output<ImmutableDictionary<string, string>> PulumiLabels { get; private set; } = null!;

        /// <summary>
        /// The geographic placement of nodes in this instance configuration and their replication properties.
        /// Structure is documented below.
        /// </summary>
        [Output("replicas")]
        public Output<ImmutableArray<Outputs.InstanceConfigReplica>> Replicas { get; private set; } = null!;


        /// <summary>
        /// Create a InstanceConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InstanceConfig(string name, InstanceConfigArgs args, CustomResourceOptions? options = null)
            : base("gcp:spanner/instanceConfig:InstanceConfig", name, args ?? new InstanceConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InstanceConfig(string name, Input<string> id, InstanceConfigState? state = null, CustomResourceOptions? options = null)
            : base("gcp:spanner/instanceConfig:InstanceConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "effectiveLabels",
                    "pulumiLabels",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InstanceConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InstanceConfig Get(string name, Input<string> id, InstanceConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new InstanceConfig(name, id, state, options);
        }
    }

    public sealed class InstanceConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Base configuration name, e.g. nam3, based on which this configuration is created.
        /// Only set for user managed configurations.
        /// baseConfig must refer to a configuration of type GOOGLE_MANAGED in the same project as this configuration.
        /// </summary>
        [Input("baseConfig")]
        public Input<string>? BaseConfig { get; set; }

        /// <summary>
        /// The name of this instance configuration as it appears in UIs.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// An object containing a list of "key": value pairs.
        /// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
        /// 
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `effective_labels` for all of the labels present on the resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// A unique identifier for the instance configuration. Values are of the
        /// form projects/&lt;project&gt;/instanceConfigs/[a-z][-a-z0-9]*
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("replicas", required: true)]
        private InputList<Inputs.InstanceConfigReplicaArgs>? _replicas;

        /// <summary>
        /// The geographic placement of nodes in this instance configuration and their replication properties.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.InstanceConfigReplicaArgs> Replicas
        {
            get => _replicas ?? (_replicas = new InputList<Inputs.InstanceConfigReplicaArgs>());
            set => _replicas = value;
        }

        public InstanceConfigArgs()
        {
        }
        public static new InstanceConfigArgs Empty => new InstanceConfigArgs();
    }

    public sealed class InstanceConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Base configuration name, e.g. nam3, based on which this configuration is created.
        /// Only set for user managed configurations.
        /// baseConfig must refer to a configuration of type GOOGLE_MANAGED in the same project as this configuration.
        /// </summary>
        [Input("baseConfig")]
        public Input<string>? BaseConfig { get; set; }

        /// <summary>
        /// Output only. Whether this instance config is a Google or User Managed Configuration.
        /// </summary>
        [Input("configType")]
        public Input<string>? ConfigType { get; set; }

        /// <summary>
        /// The name of this instance configuration as it appears in UIs.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        [Input("effectiveLabels")]
        private InputMap<string>? _effectiveLabels;

        /// <summary>
        /// All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
        /// </summary>
        public InputMap<string> EffectiveLabels
        {
            get => _effectiveLabels ?? (_effectiveLabels = new InputMap<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableDictionary.Create<string, string>());
                _effectiveLabels = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        [Input("labels")]
        private InputMap<string>? _labels;

        /// <summary>
        /// An object containing a list of "key": value pairs.
        /// Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
        /// 
        /// **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
        /// Please refer to the field `effective_labels` for all of the labels present on the resource.
        /// </summary>
        public InputMap<string> Labels
        {
            get => _labels ?? (_labels = new InputMap<string>());
            set => _labels = value;
        }

        /// <summary>
        /// A unique identifier for the instance configuration. Values are of the
        /// form projects/&lt;project&gt;/instanceConfigs/[a-z][-a-z0-9]*
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("pulumiLabels")]
        private InputMap<string>? _pulumiLabels;

        /// <summary>
        /// The combination of labels configured directly on the resource
        /// and default labels configured on the provider.
        /// </summary>
        public InputMap<string> PulumiLabels
        {
            get => _pulumiLabels ?? (_pulumiLabels = new InputMap<string>());
            set
            {
                var emptySecret = Output.CreateSecret(ImmutableDictionary.Create<string, string>());
                _pulumiLabels = Output.All(value, emptySecret).Apply(v => v[0]);
            }
        }

        [Input("replicas")]
        private InputList<Inputs.InstanceConfigReplicaGetArgs>? _replicas;

        /// <summary>
        /// The geographic placement of nodes in this instance configuration and their replication properties.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.InstanceConfigReplicaGetArgs> Replicas
        {
            get => _replicas ?? (_replicas = new InputList<Inputs.InstanceConfigReplicaGetArgs>());
            set => _replicas = value;
        }

        public InstanceConfigState()
        {
        }
        public static new InstanceConfigState Empty => new InstanceConfigState();
    }
}
