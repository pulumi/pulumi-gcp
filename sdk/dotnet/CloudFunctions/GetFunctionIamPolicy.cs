// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.CloudFunctions
{
    public static class GetFunctionIamPolicy
    {
        /// <summary>
        /// Retrieves the current IAM policy data for cloudfunction
        /// 
        /// 
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.CloudFunctions.GetFunctionIamPolicy.Invoke(new()
        ///     {
        ///         Project = google_cloudfunctions_function.Function.Project,
        ///         Region = google_cloudfunctions_function.Function.Region,
        ///         CloudFunction = google_cloudfunctions_function.Function.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetFunctionIamPolicyResult> InvokeAsync(GetFunctionIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFunctionIamPolicyResult>("gcp:cloudfunctions/getFunctionIamPolicy:getFunctionIamPolicy", args ?? new GetFunctionIamPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the current IAM policy data for cloudfunction
        /// 
        /// 
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.CloudFunctions.GetFunctionIamPolicy.Invoke(new()
        ///     {
        ///         Project = google_cloudfunctions_function.Function.Project,
        ///         Region = google_cloudfunctions_function.Function.Region,
        ///         CloudFunction = google_cloudfunctions_function.Function.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetFunctionIamPolicyResult> Invoke(GetFunctionIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFunctionIamPolicyResult>("gcp:cloudfunctions/getFunctionIamPolicy:getFunctionIamPolicy", args ?? new GetFunctionIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFunctionIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("cloudFunction", required: true)]
        public string CloudFunction { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        /// <summary>
        /// The location of this cloud function. Used to find the parent resource to bind the IAM policy to. If not specified,
        /// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
        /// region is specified, it is taken from the provider configuration.
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        public GetFunctionIamPolicyArgs()
        {
        }
        public static new GetFunctionIamPolicyArgs Empty => new GetFunctionIamPolicyArgs();
    }

    public sealed class GetFunctionIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("cloudFunction", required: true)]
        public Input<string> CloudFunction { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The location of this cloud function. Used to find the parent resource to bind the IAM policy to. If not specified,
        /// the value will be parsed from the identifier of the parent resource. If no region is provided in the parent identifier and no
        /// region is specified, it is taken from the provider configuration.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        public GetFunctionIamPolicyInvokeArgs()
        {
        }
        public static new GetFunctionIamPolicyInvokeArgs Empty => new GetFunctionIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetFunctionIamPolicyResult
    {
        public readonly string CloudFunction;
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (Required only by `gcp.cloudfunctions.FunctionIamPolicy`) The policy data generated by
        /// a `gcp.organizations.getIAMPolicy` data source.
        /// </summary>
        public readonly string PolicyData;
        public readonly string Project;
        public readonly string Region;

        [OutputConstructor]
        private GetFunctionIamPolicyResult(
            string cloudFunction,

            string etag,

            string id,

            string policyData,

            string project,

            string region)
        {
            CloudFunction = cloudFunction;
            Etag = etag;
            Id = id;
            PolicyData = policyData;
            Project = project;
            Region = region;
        }
    }
}
