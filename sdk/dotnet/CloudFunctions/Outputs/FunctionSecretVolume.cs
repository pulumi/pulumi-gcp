// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.CloudFunctions.Outputs
{

    [OutputType]
    public sealed class FunctionSecretVolume
    {
        /// <summary>
        /// The path within the container to mount the secret volume. For example, setting the mount_path as "/etc/secrets" would mount the secret value files under the "/etc/secrets" directory. This directory will also be completely shadowed and unavailable to mount any other secrets. Recommended mount paths: "/etc/secrets" Restricted mount paths: "/cloudsql", "/dev/log", "/pod", "/proc", "/var/log".
        /// </summary>
        public readonly string MountPath;
        /// <summary>
        /// Project identifier (due to a known limitation, only project number is supported by this field) of the project that contains the secret. If not set, it will be populated with the function's project, assuming that the secret exists in the same project as of the function.
        /// </summary>
        public readonly string? ProjectId;
        /// <summary>
        /// ID of the secret in secret manager (not the full resource name).
        /// </summary>
        public readonly string Secret;
        /// <summary>
        /// List of secret versions to mount for this secret. If empty, the "latest" version of the secret will be made available in a file named after the secret under the mount point. Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.FunctionSecretVolumeVersion> Versions;

        [OutputConstructor]
        private FunctionSecretVolume(
            string mountPath,

            string? projectId,

            string secret,

            ImmutableArray<Outputs.FunctionSecretVolumeVersion> versions)
        {
            MountPath = mountPath;
            ProjectId = projectId;
            Secret = secret;
            Versions = versions;
        }
    }
}
