// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.DataPlex
{
    public static class GetZoneIamPolicy
    {
        /// <summary>
        /// Retrieves the current IAM policy data for zone
        /// 
        /// 
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.DataPlex.GetZoneIamPolicy.Invoke(new()
        ///     {
        ///         Project = google_dataplex_zone.Example.Project,
        ///         Location = google_dataplex_zone.Example.Location,
        ///         Lake = google_dataplex_zone.Example.Lake,
        ///         DataplexZone = google_dataplex_zone.Example.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetZoneIamPolicyResult> InvokeAsync(GetZoneIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetZoneIamPolicyResult>("gcp:dataplex/getZoneIamPolicy:getZoneIamPolicy", args ?? new GetZoneIamPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the current IAM policy data for zone
        /// 
        /// 
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.DataPlex.GetZoneIamPolicy.Invoke(new()
        ///     {
        ///         Project = google_dataplex_zone.Example.Project,
        ///         Location = google_dataplex_zone.Example.Location,
        ///         Lake = google_dataplex_zone.Example.Lake,
        ///         DataplexZone = google_dataplex_zone.Example.Name,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetZoneIamPolicyResult> Invoke(GetZoneIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetZoneIamPolicyResult>("gcp:dataplex/getZoneIamPolicy:getZoneIamPolicy", args ?? new GetZoneIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetZoneIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("dataplexZone", required: true)]
        public string DataplexZone { get; set; } = null!;

        [Input("lake", required: true)]
        public string Lake { get; set; } = null!;

        [Input("location")]
        public string? Location { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        public GetZoneIamPolicyArgs()
        {
        }
        public static new GetZoneIamPolicyArgs Empty => new GetZoneIamPolicyArgs();
    }

    public sealed class GetZoneIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("dataplexZone", required: true)]
        public Input<string> DataplexZone { get; set; } = null!;

        [Input("lake", required: true)]
        public Input<string> Lake { get; set; } = null!;

        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetZoneIamPolicyInvokeArgs()
        {
        }
        public static new GetZoneIamPolicyInvokeArgs Empty => new GetZoneIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetZoneIamPolicyResult
    {
        public readonly string DataplexZone;
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Lake;
        public readonly string Location;
        /// <summary>
        /// (Required only by `gcp.dataplex.ZoneIamPolicy`) The policy data generated by
        /// a `gcp.organizations.getIAMPolicy` data source.
        /// </summary>
        public readonly string PolicyData;
        public readonly string Project;

        [OutputConstructor]
        private GetZoneIamPolicyResult(
            string dataplexZone,

            string etag,

            string id,

            string lake,

            string location,

            string policyData,

            string project)
        {
            DataplexZone = dataplexZone;
            Etag = etag;
            Id = id;
            Lake = lake;
            Location = location;
            PolicyData = policyData;
            Project = project;
        }
    }
}
