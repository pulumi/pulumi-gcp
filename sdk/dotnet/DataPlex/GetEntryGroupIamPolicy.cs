// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.DataPlex
{
    public static class GetEntryGroupIamPolicy
    {
        /// <summary>
        /// Retrieves the current IAM policy data for entrygroup
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.DataPlex.GetEntryGroupIamPolicy.Invoke(new()
        ///     {
        ///         Project = testEntryGroupBasic.Project,
        ///         Location = testEntryGroupBasic.Location,
        ///         EntryGroupId = testEntryGroupBasic.EntryGroupId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetEntryGroupIamPolicyResult> InvokeAsync(GetEntryGroupIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEntryGroupIamPolicyResult>("gcp:dataplex/getEntryGroupIamPolicy:getEntryGroupIamPolicy", args ?? new GetEntryGroupIamPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the current IAM policy data for entrygroup
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.DataPlex.GetEntryGroupIamPolicy.Invoke(new()
        ///     {
        ///         Project = testEntryGroupBasic.Project,
        ///         Location = testEntryGroupBasic.Location,
        ///         EntryGroupId = testEntryGroupBasic.EntryGroupId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetEntryGroupIamPolicyResult> Invoke(GetEntryGroupIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEntryGroupIamPolicyResult>("gcp:dataplex/getEntryGroupIamPolicy:getEntryGroupIamPolicy", args ?? new GetEntryGroupIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEntryGroupIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        [Input("entryGroupId", required: true)]
        public string EntryGroupId { get; set; } = null!;

        /// <summary>
        /// The location where entry group will be created in.
        /// Used to find the parent resource to bind the IAM policy to. If not specified,
        /// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
        /// location is specified, it is taken from the provider configuration.
        /// </summary>
        [Input("location")]
        public string? Location { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        public GetEntryGroupIamPolicyArgs()
        {
        }
        public static new GetEntryGroupIamPolicyArgs Empty => new GetEntryGroupIamPolicyArgs();
    }

    public sealed class GetEntryGroupIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("entryGroupId", required: true)]
        public Input<string> EntryGroupId { get; set; } = null!;

        /// <summary>
        /// The location where entry group will be created in.
        /// Used to find the parent resource to bind the IAM policy to. If not specified,
        /// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
        /// location is specified, it is taken from the provider configuration.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetEntryGroupIamPolicyInvokeArgs()
        {
        }
        public static new GetEntryGroupIamPolicyInvokeArgs Empty => new GetEntryGroupIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetEntryGroupIamPolicyResult
    {
        public readonly string EntryGroupId;
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Location;
        /// <summary>
        /// (Required only by `gcp.dataplex.EntryGroupIamPolicy`) The policy data generated by
        /// a `gcp.organizations.getIAMPolicy` data source.
        /// </summary>
        public readonly string PolicyData;
        public readonly string Project;

        [OutputConstructor]
        private GetEntryGroupIamPolicyResult(
            string entryGroupId,

            string etag,

            string id,

            string location,

            string policyData,

            string project)
        {
            EntryGroupId = entryGroupId;
            Etag = etag;
            Id = id;
            Location = location;
            PolicyData = policyData;
            Project = project;
        }
    }
}
