// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.DataPlex
{
    /// <summary>
    /// An entry represents a data asset for which you capture metadata, such as a BigQuery table.
    /// The primary constituents of an entry are aspects, which provide thematically coherent information.
    /// Examples include a table's schema, sensitive data protection profile, data quality information, or a simple tag.
    /// 
    /// **Important Considerations:**
    /// 
    /// * There is a limit of 99 aspects per entry.
    /// * The entry resource has to use project numbers and not project IDs. Therefore, if
    ///   a dependency was already provisioned using project ID, it needs to be referenced explicitly as a resource name
    ///   containing the project number.
    /// 
    /// To get more information about Entry, see:
    /// 
    /// * [API documentation](https://cloud.google.com/dataplex/docs/reference/rest/v1/projects.locations.entryGroups.entries)
    /// * How-to Guides
    ///     * [Manage entries and ingest custom sources](https://cloud.google.com/dataplex/docs/ingest-custom-sources)
    /// 
    /// ## Example Usage
    /// 
    /// ### Dataplex Entry Basic
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var entry_group_basic = new Gcp.DataPlex.EntryGroup("entry-group-basic", new()
    ///     {
    ///         EntryGroupId = "entry-group-basic",
    ///         Project = "1111111111111",
    ///         Location = "us-central1",
    ///     });
    /// 
    ///     var entry_type_basic = new Gcp.DataPlex.EntryType("entry-type-basic", new()
    ///     {
    ///         EntryTypeId = "entry-type-basic",
    ///         Project = "1111111111111",
    ///         Location = "us-central1",
    ///     });
    /// 
    ///     var testBasic = new Gcp.DataPlex.Entry("test_basic", new()
    ///     {
    ///         EntryGroupId = entry_group_basic.EntryGroupId,
    ///         Project = "1111111111111",
    ///         Location = "us-central1",
    ///         EntryId = "entry-basic",
    ///         EntryType = entry_type_basic.Name,
    ///     });
    /// 
    /// });
    /// ```
    /// ### Dataplex Entry Full
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var aspect_type_full_one = new Gcp.DataPlex.AspectType("aspect-type-full-one", new()
    ///     {
    ///         AspectTypeId = "aspect-type-full-one",
    ///         Location = "us-central1",
    ///         Project = "1111111111111",
    ///         MetadataTemplate = @"{
    ///   ""name"": ""tf-test-template"",
    ///   ""type"": ""record"",
    ///   ""recordFields"": [
    ///     {
    ///       ""name"": ""type"",
    ///       ""type"": ""enum"",
    ///       ""annotations"": {
    ///         ""displayName"": ""Type"",
    ///         ""description"": ""Specifies the type of view represented by the entry.""
    ///       },
    ///       ""index"": 1,
    ///       ""constraints"": {
    ///         ""required"": true
    ///       },
    ///       ""enumValues"": [
    ///         {
    ///           ""name"": ""VIEW"",
    ///           ""index"": 1
    ///         }
    ///       ]
    ///     }
    ///   ]
    /// }
    /// ",
    ///     });
    /// 
    ///     var aspect_type_full_two = new Gcp.DataPlex.AspectType("aspect-type-full-two", new()
    ///     {
    ///         AspectTypeId = "aspect-type-full-two",
    ///         Location = "us-central1",
    ///         Project = "1111111111111",
    ///         MetadataTemplate = @"{
    ///   ""name"": ""tf-test-template"",
    ///   ""type"": ""record"",
    ///   ""recordFields"": [
    ///     {
    ///       ""name"": ""story"",
    ///       ""type"": ""enum"",
    ///       ""annotations"": {
    ///         ""displayName"": ""Story"",
    ///         ""description"": ""Specifies the story of an entry.""
    ///       },
    ///       ""index"": 1,
    ///       ""constraints"": {
    ///         ""required"": true
    ///       },
    ///       ""enumValues"": [
    ///         {
    ///           ""name"": ""SEQUENCE"",
    ///           ""index"": 1
    ///         }
    ///       ]
    ///     }
    ///   ]
    /// }
    /// ",
    ///     });
    /// 
    ///     var entry_group_full = new Gcp.DataPlex.EntryGroup("entry-group-full", new()
    ///     {
    ///         EntryGroupId = "entry-group-full",
    ///         Project = "1111111111111",
    ///         Location = "us-central1",
    ///     });
    /// 
    ///     var entry_type_full = new Gcp.DataPlex.EntryType("entry-type-full", new()
    ///     {
    ///         EntryTypeId = "entry-type-full",
    ///         Project = "1111111111111",
    ///         Location = "us-central1",
    ///         RequiredAspects = new[]
    ///         {
    ///             new Gcp.DataPlex.Inputs.EntryTypeRequiredAspectArgs
    ///             {
    ///                 Type = aspect_type_full_one.Name,
    ///             },
    ///         },
    ///     });
    /// 
    ///     var testEntryFull = new Gcp.DataPlex.Entry("test_entry_full", new()
    ///     {
    ///         EntryGroupId = entry_group_full.EntryGroupId,
    ///         Project = "1111111111111",
    ///         Location = "us-central1",
    ///         EntryId = "entry-full/has/slashes",
    ///         EntryType = entry_type_full.Name,
    ///         FullyQualifiedName = "bigquery:1111111111111.test-dataset",
    ///         ParentEntry = "projects/1111111111111/locations/us-central1/entryGroups/entry-group-full/entries/some-other-entry",
    ///         EntrySource = new Gcp.DataPlex.Inputs.EntryEntrySourceArgs
    ///         {
    ///             Resource = "bigquery:1111111111111.test-dataset",
    ///             System = "System III",
    ///             Platform = "BigQuery",
    ///             DisplayName = "Human readable name",
    ///             Description = "Description from source system",
    ///             Labels = 
    ///             {
    ///                 { "some-label", "some-value" },
    ///             },
    ///             Ancestors = new[]
    ///             {
    ///                 new Gcp.DataPlex.Inputs.EntryEntrySourceAncestorArgs
    ///                 {
    ///                     Name = "ancestor-one",
    ///                     Type = "type-one",
    ///                 },
    ///                 new Gcp.DataPlex.Inputs.EntryEntrySourceAncestorArgs
    ///                 {
    ///                     Name = "ancestor-two",
    ///                     Type = "type-two",
    ///                 },
    ///             },
    ///             CreateTime = "2023-08-03T19:19:00.094Z",
    ///             UpdateTime = "2023-08-03T20:19:00.094Z",
    ///         },
    ///         Aspects = new[]
    ///         {
    ///             new Gcp.DataPlex.Inputs.EntryAspectArgs
    ///             {
    ///                 AspectKey = "1111111111111.us-central1.aspect-type-full-one",
    ///                 Aspect = new Gcp.DataPlex.Inputs.EntryAspectAspectArgs
    ///                 {
    ///                     Data = @"          {""type"": ""VIEW""    }
    /// ",
    ///                 },
    ///             },
    ///             new Gcp.DataPlex.Inputs.EntryAspectArgs
    ///             {
    ///                 AspectKey = "1111111111111.us-central1.aspect-type-full-two",
    ///                 Aspect = new Gcp.DataPlex.Inputs.EntryAspectAspectArgs
    ///                 {
    ///                     Data = @"          {""story"": ""SEQUENCE""    }
    /// ",
    ///                 },
    ///             },
    ///         },
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             aspect_type_full_two,
    ///             aspect_type_full_one,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Entry can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/locations/{{location}}/entryGroups/{{entry_group_id}}/entries/{{entry_id}}`
    /// 
    /// * `{{project}}/{{location}}/{{entry_group_id}}/{{entry_id}}`
    /// 
    /// * `{{location}}/{{entry_group_id}}/{{entry_id}}`
    /// 
    /// When using the `pulumi import` command, Entry can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:dataplex/entry:Entry default projects/{{project}}/locations/{{location}}/entryGroups/{{entry_group_id}}/entries/{{entry_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:dataplex/entry:Entry default {{project}}/{{location}}/{{entry_group_id}}/{{entry_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:dataplex/entry:Entry default {{location}}/{{entry_group_id}}/{{entry_id}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:dataplex/entry:Entry")]
    public partial class Entry : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The aspects that are attached to the entry.
        /// Structure is documented below.
        /// </summary>
        [Output("aspects")]
        public Output<ImmutableArray<Outputs.EntryAspect>> Aspects { get; private set; } = null!;

        /// <summary>
        /// The time when the Entry was created in Dataplex.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The entry group id of the entry group the entry will be created in.
        /// </summary>
        [Output("entryGroupId")]
        public Output<string?> EntryGroupId { get; private set; } = null!;

        /// <summary>
        /// The entry id of the entry.
        /// </summary>
        [Output("entryId")]
        public Output<string?> EntryId { get; private set; } = null!;

        /// <summary>
        /// A nested object resource.
        /// Structure is documented below.
        /// </summary>
        [Output("entrySource")]
        public Output<Outputs.EntryEntrySource> EntrySource { get; private set; } = null!;

        /// <summary>
        /// The relative resource name of the entry type that was used to create this entry, in the format projects/{project_number}/locations/{locationId}/entryTypes/{entryTypeId}.
        /// </summary>
        [Output("entryType")]
        public Output<string> EntryType { get; private set; } = null!;

        /// <summary>
        /// A name for the entry that can be referenced by an external system. For more information, see https://cloud.google.com/dataplex/docs/fully-qualified-names.
        /// The maximum size of the field is 4000 characters.
        /// </summary>
        [Output("fullyQualifiedName")]
        public Output<string?> FullyQualifiedName { get; private set; } = null!;

        /// <summary>
        /// The location where entry will be created.
        /// </summary>
        [Output("location")]
        public Output<string?> Location { get; private set; } = null!;

        /// <summary>
        /// The relative resource name of the entry, in the format projects/{project_number}/locations/{locationId}/entryGroups/{entryGroupId}/entries/{entryId}.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The resource name of the parent entry, in the format projects/{project_number}/locations/{locationId}/entryGroups/{entryGroupId}/entries/{entryId}.
        /// </summary>
        [Output("parentEntry")]
        public Output<string?> ParentEntry { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The time when the entry was last updated in Dataplex.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a Entry resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Entry(string name, EntryArgs args, CustomResourceOptions? options = null)
            : base("gcp:dataplex/entry:Entry", name, args ?? new EntryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Entry(string name, Input<string> id, EntryState? state = null, CustomResourceOptions? options = null)
            : base("gcp:dataplex/entry:Entry", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Entry resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Entry Get(string name, Input<string> id, EntryState? state = null, CustomResourceOptions? options = null)
        {
            return new Entry(name, id, state, options);
        }
    }

    public sealed class EntryArgs : global::Pulumi.ResourceArgs
    {
        [Input("aspects")]
        private InputList<Inputs.EntryAspectArgs>? _aspects;

        /// <summary>
        /// The aspects that are attached to the entry.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.EntryAspectArgs> Aspects
        {
            get => _aspects ?? (_aspects = new InputList<Inputs.EntryAspectArgs>());
            set => _aspects = value;
        }

        /// <summary>
        /// The entry group id of the entry group the entry will be created in.
        /// </summary>
        [Input("entryGroupId")]
        public Input<string>? EntryGroupId { get; set; }

        /// <summary>
        /// The entry id of the entry.
        /// </summary>
        [Input("entryId")]
        public Input<string>? EntryId { get; set; }

        /// <summary>
        /// A nested object resource.
        /// Structure is documented below.
        /// </summary>
        [Input("entrySource")]
        public Input<Inputs.EntryEntrySourceArgs>? EntrySource { get; set; }

        /// <summary>
        /// The relative resource name of the entry type that was used to create this entry, in the format projects/{project_number}/locations/{locationId}/entryTypes/{entryTypeId}.
        /// </summary>
        [Input("entryType", required: true)]
        public Input<string> EntryType { get; set; } = null!;

        /// <summary>
        /// A name for the entry that can be referenced by an external system. For more information, see https://cloud.google.com/dataplex/docs/fully-qualified-names.
        /// The maximum size of the field is 4000 characters.
        /// </summary>
        [Input("fullyQualifiedName")]
        public Input<string>? FullyQualifiedName { get; set; }

        /// <summary>
        /// The location where entry will be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The resource name of the parent entry, in the format projects/{project_number}/locations/{locationId}/entryGroups/{entryGroupId}/entries/{entryId}.
        /// </summary>
        [Input("parentEntry")]
        public Input<string>? ParentEntry { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public EntryArgs()
        {
        }
        public static new EntryArgs Empty => new EntryArgs();
    }

    public sealed class EntryState : global::Pulumi.ResourceArgs
    {
        [Input("aspects")]
        private InputList<Inputs.EntryAspectGetArgs>? _aspects;

        /// <summary>
        /// The aspects that are attached to the entry.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.EntryAspectGetArgs> Aspects
        {
            get => _aspects ?? (_aspects = new InputList<Inputs.EntryAspectGetArgs>());
            set => _aspects = value;
        }

        /// <summary>
        /// The time when the Entry was created in Dataplex.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The entry group id of the entry group the entry will be created in.
        /// </summary>
        [Input("entryGroupId")]
        public Input<string>? EntryGroupId { get; set; }

        /// <summary>
        /// The entry id of the entry.
        /// </summary>
        [Input("entryId")]
        public Input<string>? EntryId { get; set; }

        /// <summary>
        /// A nested object resource.
        /// Structure is documented below.
        /// </summary>
        [Input("entrySource")]
        public Input<Inputs.EntryEntrySourceGetArgs>? EntrySource { get; set; }

        /// <summary>
        /// The relative resource name of the entry type that was used to create this entry, in the format projects/{project_number}/locations/{locationId}/entryTypes/{entryTypeId}.
        /// </summary>
        [Input("entryType")]
        public Input<string>? EntryType { get; set; }

        /// <summary>
        /// A name for the entry that can be referenced by an external system. For more information, see https://cloud.google.com/dataplex/docs/fully-qualified-names.
        /// The maximum size of the field is 4000 characters.
        /// </summary>
        [Input("fullyQualifiedName")]
        public Input<string>? FullyQualifiedName { get; set; }

        /// <summary>
        /// The location where entry will be created.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The relative resource name of the entry, in the format projects/{project_number}/locations/{locationId}/entryGroups/{entryGroupId}/entries/{entryId}.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The resource name of the parent entry, in the format projects/{project_number}/locations/{locationId}/entryGroups/{entryGroupId}/entries/{entryId}.
        /// </summary>
        [Input("parentEntry")]
        public Input<string>? ParentEntry { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The time when the entry was last updated in Dataplex.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public EntryState()
        {
        }
        public static new EntryState Empty => new EntryState();
    }
}
