// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.DataPlex
{
    public static class GetAspectTypeIamPolicy
    {
        /// <summary>
        /// Retrieves the current IAM policy data for aspecttype
        /// 
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.DataPlex.GetAspectTypeIamPolicy.Invoke(new()
        ///     {
        ///         Project = testAspectTypeBasic.Project,
        ///         Location = testAspectTypeBasic.Location,
        ///         AspectTypeId = testAspectTypeBasic.AspectTypeId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetAspectTypeIamPolicyResult> InvokeAsync(GetAspectTypeIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAspectTypeIamPolicyResult>("gcp:dataplex/getAspectTypeIamPolicy:getAspectTypeIamPolicy", args ?? new GetAspectTypeIamPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the current IAM policy data for aspecttype
        /// 
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.DataPlex.GetAspectTypeIamPolicy.Invoke(new()
        ///     {
        ///         Project = testAspectTypeBasic.Project,
        ///         Location = testAspectTypeBasic.Location,
        ///         AspectTypeId = testAspectTypeBasic.AspectTypeId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAspectTypeIamPolicyResult> Invoke(GetAspectTypeIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAspectTypeIamPolicyResult>("gcp:dataplex/getAspectTypeIamPolicy:getAspectTypeIamPolicy", args ?? new GetAspectTypeIamPolicyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the current IAM policy data for aspecttype
        /// 
        /// 
        /// ## example
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.DataPlex.GetAspectTypeIamPolicy.Invoke(new()
        ///     {
        ///         Project = testAspectTypeBasic.Project,
        ///         Location = testAspectTypeBasic.Location,
        ///         AspectTypeId = testAspectTypeBasic.AspectTypeId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetAspectTypeIamPolicyResult> Invoke(GetAspectTypeIamPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAspectTypeIamPolicyResult>("gcp:dataplex/getAspectTypeIamPolicy:getAspectTypeIamPolicy", args ?? new GetAspectTypeIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAspectTypeIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        [Input("aspectTypeId", required: true)]
        public string AspectTypeId { get; set; } = null!;

        /// <summary>
        /// The location where aspect type will be created in.
        /// Used to find the parent resource to bind the IAM policy to. If not specified,
        /// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
        /// location is specified, it is taken from the provider configuration.
        /// </summary>
        [Input("location")]
        public string? Location { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        public GetAspectTypeIamPolicyArgs()
        {
        }
        public static new GetAspectTypeIamPolicyArgs Empty => new GetAspectTypeIamPolicyArgs();
    }

    public sealed class GetAspectTypeIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("aspectTypeId", required: true)]
        public Input<string> AspectTypeId { get; set; } = null!;

        /// <summary>
        /// The location where aspect type will be created in.
        /// Used to find the parent resource to bind the IAM policy to. If not specified,
        /// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
        /// location is specified, it is taken from the provider configuration.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetAspectTypeIamPolicyInvokeArgs()
        {
        }
        public static new GetAspectTypeIamPolicyInvokeArgs Empty => new GetAspectTypeIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetAspectTypeIamPolicyResult
    {
        public readonly string AspectTypeId;
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Location;
        /// <summary>
        /// (Required only by `gcp.dataplex.AspectTypeIamPolicy`) The policy data generated by
        /// a `gcp.organizations.getIAMPolicy` data source.
        /// </summary>
        public readonly string PolicyData;
        public readonly string Project;

        [OutputConstructor]
        private GetAspectTypeIamPolicyResult(
            string aspectTypeId,

            string etag,

            string id,

            string location,

            string policyData,

            string project)
        {
            AspectTypeId = aspectTypeId;
            Etag = etag;
            Id = id;
            Location = location;
            PolicyData = policyData;
            Project = project;
        }
    }
}
