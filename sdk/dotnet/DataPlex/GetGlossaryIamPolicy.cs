// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.DataPlex
{
    public static class GetGlossaryIamPolicy
    {
        /// <summary>
        /// Retrieves the current IAM policy data for glossary
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.DataPlex.GetGlossaryIamPolicy.Invoke(new()
        ///     {
        ///         Project = glossaryTestId.Project,
        ///         Location = glossaryTestId.Location,
        ///         GlossaryId = glossaryTestId.GlossaryId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetGlossaryIamPolicyResult> InvokeAsync(GetGlossaryIamPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGlossaryIamPolicyResult>("gcp:dataplex/getGlossaryIamPolicy:getGlossaryIamPolicy", args ?? new GetGlossaryIamPolicyArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the current IAM policy data for glossary
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.DataPlex.GetGlossaryIamPolicy.Invoke(new()
        ///     {
        ///         Project = glossaryTestId.Project,
        ///         Location = glossaryTestId.Location,
        ///         GlossaryId = glossaryTestId.GlossaryId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetGlossaryIamPolicyResult> Invoke(GetGlossaryIamPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGlossaryIamPolicyResult>("gcp:dataplex/getGlossaryIamPolicy:getGlossaryIamPolicy", args ?? new GetGlossaryIamPolicyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the current IAM policy data for glossary
        /// 
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var policy = Gcp.DataPlex.GetGlossaryIamPolicy.Invoke(new()
        ///     {
        ///         Project = glossaryTestId.Project,
        ///         Location = glossaryTestId.Location,
        ///         GlossaryId = glossaryTestId.GlossaryId,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetGlossaryIamPolicyResult> Invoke(GetGlossaryIamPolicyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetGlossaryIamPolicyResult>("gcp:dataplex/getGlossaryIamPolicy:getGlossaryIamPolicy", args ?? new GetGlossaryIamPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGlossaryIamPolicyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("glossaryId", required: true)]
        public string GlossaryId { get; set; } = null!;

        /// <summary>
        /// The location where the glossary should reside.
        /// Used to find the parent resource to bind the IAM policy to. If not specified,
        /// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
        /// location is specified, it is taken from the provider configuration.
        /// </summary>
        [Input("location")]
        public string? Location { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        public GetGlossaryIamPolicyArgs()
        {
        }
        public static new GetGlossaryIamPolicyArgs Empty => new GetGlossaryIamPolicyArgs();
    }

    public sealed class GetGlossaryIamPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Used to find the parent resource to bind the IAM policy to
        /// </summary>
        [Input("glossaryId", required: true)]
        public Input<string> GlossaryId { get; set; } = null!;

        /// <summary>
        /// The location where the glossary should reside.
        /// Used to find the parent resource to bind the IAM policy to. If not specified,
        /// the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
        /// location is specified, it is taken from the provider configuration.
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetGlossaryIamPolicyInvokeArgs()
        {
        }
        public static new GetGlossaryIamPolicyInvokeArgs Empty => new GetGlossaryIamPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetGlossaryIamPolicyResult
    {
        /// <summary>
        /// (Computed) The etag of the IAM policy.
        /// </summary>
        public readonly string Etag;
        public readonly string GlossaryId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Location;
        /// <summary>
        /// (Required only by `gcp.dataplex.GlossaryIamPolicy`) The policy data generated by
        /// a `gcp.organizations.getIAMPolicy` data source.
        /// </summary>
        public readonly string PolicyData;
        public readonly string Project;

        [OutputConstructor]
        private GetGlossaryIamPolicyResult(
            string etag,

            string glossaryId,

            string id,

            string location,

            string policyData,

            string project)
        {
            Etag = etag;
            GlossaryId = glossaryId;
            Id = id;
            Location = location;
            PolicyData = policyData;
            Project = project;
        }
    }
}
