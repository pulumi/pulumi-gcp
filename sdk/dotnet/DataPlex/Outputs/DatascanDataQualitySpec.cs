// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.DataPlex.Outputs
{

    [OutputType]
    public sealed class DatascanDataQualitySpec
    {
        /// <summary>
        /// If set, the latest DataScan job result will be published to Dataplex Catalog.
        /// </summary>
        public readonly bool? CatalogPublishingEnabled;
        /// <summary>
        /// Actions to take upon job completion.
        /// Structure is documented below.
        /// </summary>
        public readonly Outputs.DatascanDataQualitySpecPostScanActions? PostScanActions;
        /// <summary>
        /// A filter applied to all rows in a single DataScan job. The filter needs to be a valid SQL expression for a WHERE clause in BigQuery standard SQL syntax. Example: col1 &gt;= 0 AND col2 &lt; 10
        /// </summary>
        public readonly string? RowFilter;
        /// <summary>
        /// The list of rules to evaluate against a data source. At least one rule is required.
        /// Structure is documented below.
        /// </summary>
        public readonly ImmutableArray<Outputs.DatascanDataQualitySpecRule> Rules;
        /// <summary>
        /// The percentage of the records to be selected from the dataset for DataScan.
        /// Value can range between 0.0 and 100.0 with up to 3 significant decimal digits.
        /// Sampling is not applied if `sampling_percent` is not specified, 0 or 100.
        /// </summary>
        public readonly double? SamplingPercent;

        [OutputConstructor]
        private DatascanDataQualitySpec(
            bool? catalogPublishingEnabled,

            Outputs.DatascanDataQualitySpecPostScanActions? postScanActions,

            string? rowFilter,

            ImmutableArray<Outputs.DatascanDataQualitySpecRule> rules,

            double? samplingPercent)
        {
            CatalogPublishingEnabled = catalogPublishingEnabled;
            PostScanActions = postScanActions;
            RowFilter = rowFilter;
            Rules = rules;
            SamplingPercent = samplingPercent;
        }
    }
}
