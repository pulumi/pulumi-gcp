// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.BackupDisasterRecovery
{
    public static class GetDataSourceReferences
    {
        /// <summary>
        /// A list of Backup and DR data source references.
        /// </summary>
        public static Task<GetDataSourceReferencesResult> InvokeAsync(GetDataSourceReferencesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDataSourceReferencesResult>("gcp:backupdisasterrecovery/getDataSourceReferences:getDataSourceReferences", args ?? new GetDataSourceReferencesArgs(), options.WithDefaults());

        /// <summary>
        /// A list of Backup and DR data source references.
        /// </summary>
        public static Output<GetDataSourceReferencesResult> Invoke(GetDataSourceReferencesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDataSourceReferencesResult>("gcp:backupdisasterrecovery/getDataSourceReferences:getDataSourceReferences", args ?? new GetDataSourceReferencesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// A list of Backup and DR data source references.
        /// </summary>
        public static Output<GetDataSourceReferencesResult> Invoke(GetDataSourceReferencesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDataSourceReferencesResult>("gcp:backupdisasterrecovery/getDataSourceReferences:getDataSourceReferences", args ?? new GetDataSourceReferencesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDataSourceReferencesArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        /// <summary>
        /// - (Optional) The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        /// <summary>
        /// - (Required) The resource type to get the data source references for. Examples include, "sqladmin.googleapis.com/Instance" , "compute.googleapis.com/Instance" (**right now this service not available for compute Instances and disk , it will be added soon**)
        /// </summary>
        [Input("resourceType", required: true)]
        public string ResourceType { get; set; } = null!;

        public GetDataSourceReferencesArgs()
        {
        }
        public static new GetDataSourceReferencesArgs Empty => new GetDataSourceReferencesArgs();
    }

    public sealed class GetDataSourceReferencesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// - (Optional) The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// - (Required) The resource type to get the data source references for. Examples include, "sqladmin.googleapis.com/Instance" , "compute.googleapis.com/Instance" (**right now this service not available for compute Instances and disk , it will be added soon**)
        /// </summary>
        [Input("resourceType", required: true)]
        public Input<string> ResourceType { get; set; } = null!;

        public GetDataSourceReferencesInvokeArgs()
        {
        }
        public static new GetDataSourceReferencesInvokeArgs Empty => new GetDataSourceReferencesInvokeArgs();
    }


    [OutputType]
    public sealed class GetDataSourceReferencesResult
    {
        public readonly ImmutableArray<Outputs.GetDataSourceReferencesDataSourceReferenceResult> DataSourceReferences;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Location;
        public readonly string Project;
        public readonly string ResourceType;

        [OutputConstructor]
        private GetDataSourceReferencesResult(
            ImmutableArray<Outputs.GetDataSourceReferencesDataSourceReferenceResult> dataSourceReferences,

            string id,

            string location,

            string project,

            string resourceType)
        {
            DataSourceReferences = dataSourceReferences;
            Id = id;
            Location = location;
            Project = project;
            ResourceType = resourceType;
        }
    }
}
