// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.BackupDisasterRecovery
{
    public static class GetBackupPlanAssociations
    {
        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Task<GetBackupPlanAssociationsResult> InvokeAsync(GetBackupPlanAssociationsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBackupPlanAssociationsResult>("gcp:backupdisasterrecovery/getBackupPlanAssociations:getBackupPlanAssociations", args ?? new GetBackupPlanAssociationsArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Output<GetBackupPlanAssociationsResult> Invoke(GetBackupPlanAssociationsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBackupPlanAssociationsResult>("gcp:backupdisasterrecovery/getBackupPlanAssociations:getBackupPlanAssociations", args ?? new GetBackupPlanAssociationsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// </summary>
        public static Output<GetBackupPlanAssociationsResult> Invoke(GetBackupPlanAssociationsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetBackupPlanAssociationsResult>("gcp:backupdisasterrecovery/getBackupPlanAssociations:getBackupPlanAssociations", args ?? new GetBackupPlanAssociationsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBackupPlanAssociationsArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        [Input("resourceType", required: true)]
        public string ResourceType { get; set; } = null!;

        public GetBackupPlanAssociationsArgs()
        {
        }
        public static new GetBackupPlanAssociationsArgs Empty => new GetBackupPlanAssociationsArgs();
    }

    public sealed class GetBackupPlanAssociationsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        [Input("resourceType", required: true)]
        public Input<string> ResourceType { get; set; } = null!;

        public GetBackupPlanAssociationsInvokeArgs()
        {
        }
        public static new GetBackupPlanAssociationsInvokeArgs Empty => new GetBackupPlanAssociationsInvokeArgs();
    }


    [OutputType]
    public sealed class GetBackupPlanAssociationsResult
    {
        public readonly ImmutableArray<Outputs.GetBackupPlanAssociationsAssociationResult> Associations;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Location;
        public readonly string Project;
        public readonly string ResourceType;

        [OutputConstructor]
        private GetBackupPlanAssociationsResult(
            ImmutableArray<Outputs.GetBackupPlanAssociationsAssociationResult> associations,

            string id,

            string location,

            string project,

            string resourceType)
        {
            Associations = associations;
            Id = id;
            Location = location;
            Project = project;
            ResourceType = resourceType;
        }
    }
}
