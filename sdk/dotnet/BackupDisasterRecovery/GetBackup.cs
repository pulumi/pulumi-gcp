// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.BackupDisasterRecovery
{
    public static class GetBackup
    {
        /// <summary>
        /// A Backup and DR Backup.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Gcp.BackupDisasterRecovery.GetBackup.Invoke(new()
        ///     {
        ///         Location = "us-central1",
        ///         Project = "project-test",
        ///         DataSourceId = "ds-test",
        ///         BackupVaultId = "bv-test",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetBackupResult> InvokeAsync(GetBackupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBackupResult>("gcp:backupdisasterrecovery/getBackup:getBackup", args ?? new GetBackupArgs(), options.WithDefaults());

        /// <summary>
        /// A Backup and DR Backup.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Gcp.BackupDisasterRecovery.GetBackup.Invoke(new()
        ///     {
        ///         Location = "us-central1",
        ///         Project = "project-test",
        ///         DataSourceId = "ds-test",
        ///         BackupVaultId = "bv-test",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetBackupResult> Invoke(GetBackupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBackupResult>("gcp:backupdisasterrecovery/getBackup:getBackup", args ?? new GetBackupInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// A Backup and DR Backup.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var foo = Gcp.BackupDisasterRecovery.GetBackup.Invoke(new()
        ///     {
        ///         Location = "us-central1",
        ///         Project = "project-test",
        ///         DataSourceId = "ds-test",
        ///         BackupVaultId = "bv-test",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetBackupResult> Invoke(GetBackupInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetBackupResult>("gcp:backupdisasterrecovery/getBackup:getBackup", args ?? new GetBackupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBackupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Backup Vault of the Data Source in which the Backup belongs.
        /// </summary>
        [Input("backupVaultId", required: true)]
        public string BackupVaultId { get; set; } = null!;

        /// <summary>
        /// The ID of the Data Source in which the Backup belongs.
        /// </summary>
        [Input("dataSourceId", required: true)]
        public string DataSourceId { get; set; } = null!;

        /// <summary>
        /// The location in which the Backup belongs.
        /// </summary>
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        /// <summary>
        /// The Google Cloud Project in which the Backup belongs.
        /// </summary>
        [Input("project", required: true)]
        public string Project { get; set; } = null!;

        public GetBackupArgs()
        {
        }
        public static new GetBackupArgs Empty => new GetBackupArgs();
    }

    public sealed class GetBackupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the Backup Vault of the Data Source in which the Backup belongs.
        /// </summary>
        [Input("backupVaultId", required: true)]
        public Input<string> BackupVaultId { get; set; } = null!;

        /// <summary>
        /// The ID of the Data Source in which the Backup belongs.
        /// </summary>
        [Input("dataSourceId", required: true)]
        public Input<string> DataSourceId { get; set; } = null!;

        /// <summary>
        /// The location in which the Backup belongs.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The Google Cloud Project in which the Backup belongs.
        /// </summary>
        [Input("project", required: true)]
        public Input<string> Project { get; set; } = null!;

        public GetBackupInvokeArgs()
        {
        }
        public static new GetBackupInvokeArgs Empty => new GetBackupInvokeArgs();
    }


    [OutputType]
    public sealed class GetBackupResult
    {
        public readonly string BackupVaultId;
        public readonly ImmutableArray<Outputs.GetBackupBackupResult> Backups;
        public readonly string DataSourceId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Location;
        public readonly string Name;
        public readonly string Project;

        [OutputConstructor]
        private GetBackupResult(
            string backupVaultId,

            ImmutableArray<Outputs.GetBackupBackupResult> backups,

            string dataSourceId,

            string id,

            string location,

            string name,

            string project)
        {
            BackupVaultId = backupVaultId;
            Backups = backups;
            DataSourceId = dataSourceId;
            Id = id;
            Location = location;
            Name = name;
            Project = project;
        }
    }
}
