// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.BackupDisasterRecovery
{
    /// <summary>
    /// A backup plan defines when and how to back up a resource, including the backup's schedule, retention, and location.
    /// 
    /// To get more information about BackupPlan, see:
    /// 
    /// * [API documentation](https://cloud.google.com/backup-disaster-recovery/docs/reference/rest)
    /// * How-to Guides
    ///     * [Official Documentation](https://cloud.google.com/backup-disaster-recovery/docs)
    /// 
    /// ## Example Usage
    /// 
    /// ### Backup Dr Backup Plan Simple
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var myBackupVault = new Gcp.BackupDisasterRecovery.BackupVault("my_backup_vault", new()
    ///     {
    ///         Location = "us-central1",
    ///         BackupVaultId = "backup-vault-simple-test",
    ///         BackupMinimumEnforcedRetentionDuration = "100000s",
    ///     });
    /// 
    ///     var my_backup_plan_1 = new Gcp.BackupDisasterRecovery.BackupPlan("my-backup-plan-1", new()
    ///     {
    ///         Location = "us-central1",
    ///         BackupPlanId = "backup-plan-simple-test",
    ///         ResourceType = "compute.googleapis.com/Instance",
    ///         BackupVault = myBackupVault.Id,
    ///         BackupRules = new[]
    ///         {
    ///             new Gcp.BackupDisasterRecovery.Inputs.BackupPlanBackupRuleArgs
    ///             {
    ///                 RuleId = "rule-1",
    ///                 BackupRetentionDays = 5,
    ///                 StandardSchedule = new Gcp.BackupDisasterRecovery.Inputs.BackupPlanBackupRuleStandardScheduleArgs
    ///                 {
    ///                     RecurrenceType = "HOURLY",
    ///                     HourlyFrequency = 6,
    ///                     TimeZone = "UTC",
    ///                     BackupWindow = new Gcp.BackupDisasterRecovery.Inputs.BackupPlanBackupRuleStandardScheduleBackupWindowArgs
    ///                     {
    ///                         StartHourOfDay = 0,
    ///                         EndHourOfDay = 24,
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// BackupPlan can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/locations/{{location}}/backupPlans/{{backup_plan_id}}`
    /// 
    /// * `{{project}}/{{location}}/{{backup_plan_id}}`
    /// 
    /// * `{{location}}/{{backup_plan_id}}`
    /// 
    /// When using the `pulumi import` command, BackupPlan can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:backupdisasterrecovery/backupPlan:BackupPlan default projects/{{project}}/locations/{{location}}/backupPlans/{{backup_plan_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:backupdisasterrecovery/backupPlan:BackupPlan default {{project}}/{{location}}/{{backup_plan_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:backupdisasterrecovery/backupPlan:BackupPlan default {{location}}/{{backup_plan_id}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:backupdisasterrecovery/backupPlan:BackupPlan")]
    public partial class BackupPlan : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the backup plan
        /// </summary>
        [Output("backupPlanId")]
        public Output<string> BackupPlanId { get; private set; } = null!;

        /// <summary>
        /// The backup rules for this `BackupPlan`. There must be at least one `BackupRule` message.
        /// Structure is documented below.
        /// </summary>
        [Output("backupRules")]
        public Output<ImmutableArray<Outputs.BackupPlanBackupRule>> BackupRules { get; private set; } = null!;

        /// <summary>
        /// Backup vault where the backups gets stored using this Backup plan.
        /// </summary>
        [Output("backupVault")]
        public Output<string> BackupVault { get; private set; } = null!;

        /// <summary>
        /// The Google Cloud Platform Service Account to be used by the BackupVault for taking backups.
        /// </summary>
        [Output("backupVaultServiceAccount")]
        public Output<string> BackupVaultServiceAccount { get; private set; } = null!;

        /// <summary>
        /// When the `BackupPlan` was created.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// The description allows for additional details about 'BackupPlan' and its use cases to be provided.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The location for the backup plan
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of backup plan resource created
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The resource type to which the `BackupPlan` will be applied. Examples include, "compute.googleapis.com/Instance" and "storage.googleapis.com/Bucket".
        /// </summary>
        [Output("resourceType")]
        public Output<string> ResourceType { get; private set; } = null!;

        /// <summary>
        /// When the `BackupPlan` was last updated.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a BackupPlan resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BackupPlan(string name, BackupPlanArgs args, CustomResourceOptions? options = null)
            : base("gcp:backupdisasterrecovery/backupPlan:BackupPlan", name, args ?? new BackupPlanArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BackupPlan(string name, Input<string> id, BackupPlanState? state = null, CustomResourceOptions? options = null)
            : base("gcp:backupdisasterrecovery/backupPlan:BackupPlan", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BackupPlan resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BackupPlan Get(string name, Input<string> id, BackupPlanState? state = null, CustomResourceOptions? options = null)
        {
            return new BackupPlan(name, id, state, options);
        }
    }

    public sealed class BackupPlanArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the backup plan
        /// </summary>
        [Input("backupPlanId", required: true)]
        public Input<string> BackupPlanId { get; set; } = null!;

        [Input("backupRules", required: true)]
        private InputList<Inputs.BackupPlanBackupRuleArgs>? _backupRules;

        /// <summary>
        /// The backup rules for this `BackupPlan`. There must be at least one `BackupRule` message.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.BackupPlanBackupRuleArgs> BackupRules
        {
            get => _backupRules ?? (_backupRules = new InputList<Inputs.BackupPlanBackupRuleArgs>());
            set => _backupRules = value;
        }

        /// <summary>
        /// Backup vault where the backups gets stored using this Backup plan.
        /// </summary>
        [Input("backupVault", required: true)]
        public Input<string> BackupVault { get; set; } = null!;

        /// <summary>
        /// The description allows for additional details about 'BackupPlan' and its use cases to be provided.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The location for the backup plan
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The resource type to which the `BackupPlan` will be applied. Examples include, "compute.googleapis.com/Instance" and "storage.googleapis.com/Bucket".
        /// </summary>
        [Input("resourceType", required: true)]
        public Input<string> ResourceType { get; set; } = null!;

        public BackupPlanArgs()
        {
        }
        public static new BackupPlanArgs Empty => new BackupPlanArgs();
    }

    public sealed class BackupPlanState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the backup plan
        /// </summary>
        [Input("backupPlanId")]
        public Input<string>? BackupPlanId { get; set; }

        [Input("backupRules")]
        private InputList<Inputs.BackupPlanBackupRuleGetArgs>? _backupRules;

        /// <summary>
        /// The backup rules for this `BackupPlan`. There must be at least one `BackupRule` message.
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.BackupPlanBackupRuleGetArgs> BackupRules
        {
            get => _backupRules ?? (_backupRules = new InputList<Inputs.BackupPlanBackupRuleGetArgs>());
            set => _backupRules = value;
        }

        /// <summary>
        /// Backup vault where the backups gets stored using this Backup plan.
        /// </summary>
        [Input("backupVault")]
        public Input<string>? BackupVault { get; set; }

        /// <summary>
        /// The Google Cloud Platform Service Account to be used by the BackupVault for taking backups.
        /// </summary>
        [Input("backupVaultServiceAccount")]
        public Input<string>? BackupVaultServiceAccount { get; set; }

        /// <summary>
        /// When the `BackupPlan` was created.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// The description allows for additional details about 'BackupPlan' and its use cases to be provided.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The location for the backup plan
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of backup plan resource created
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The resource type to which the `BackupPlan` will be applied. Examples include, "compute.googleapis.com/Instance" and "storage.googleapis.com/Bucket".
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        /// <summary>
        /// When the `BackupPlan` was last updated.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public BackupPlanState()
        {
        }
        public static new BackupPlanState Empty => new BackupPlanState();
    }
}
