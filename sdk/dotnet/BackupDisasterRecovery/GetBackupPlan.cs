// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.BackupDisasterRecovery
{
    public static class GetBackupPlan
    {
        public static Task<GetBackupPlanResult> InvokeAsync(GetBackupPlanArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBackupPlanResult>("gcp:backupdisasterrecovery/getBackupPlan:getBackupPlan", args ?? new GetBackupPlanArgs(), options.WithDefaults());

        public static Output<GetBackupPlanResult> Invoke(GetBackupPlanInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBackupPlanResult>("gcp:backupdisasterrecovery/getBackupPlan:getBackupPlan", args ?? new GetBackupPlanInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBackupPlanArgs : global::Pulumi.InvokeArgs
    {
        [Input("backupPlanId", required: true)]
        public string BackupPlanId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetBackupPlanArgs()
        {
        }
        public static new GetBackupPlanArgs Empty => new GetBackupPlanArgs();
    }

    public sealed class GetBackupPlanInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("backupPlanId", required: true)]
        public Input<string> BackupPlanId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetBackupPlanInvokeArgs()
        {
        }
        public static new GetBackupPlanInvokeArgs Empty => new GetBackupPlanInvokeArgs();
    }


    [OutputType]
    public sealed class GetBackupPlanResult
    {
        public readonly string BackupPlanId;
        public readonly ImmutableArray<Outputs.GetBackupPlanBackupRuleResult> BackupRules;
        public readonly string BackupVault;
        public readonly string BackupVaultServiceAccount;
        public readonly string CreateTime;
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Location;
        public readonly string Name;
        public readonly string? Project;
        public readonly string ResourceType;
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetBackupPlanResult(
            string backupPlanId,

            ImmutableArray<Outputs.GetBackupPlanBackupRuleResult> backupRules,

            string backupVault,

            string backupVaultServiceAccount,

            string createTime,

            string description,

            string id,

            string location,

            string name,

            string? project,

            string resourceType,

            string updateTime)
        {
            BackupPlanId = backupPlanId;
            BackupRules = backupRules;
            BackupVault = backupVault;
            BackupVaultServiceAccount = backupVaultServiceAccount;
            CreateTime = createTime;
            Description = description;
            Id = id;
            Location = location;
            Name = name;
            Project = project;
            ResourceType = resourceType;
            UpdateTime = updateTime;
        }
    }
}
