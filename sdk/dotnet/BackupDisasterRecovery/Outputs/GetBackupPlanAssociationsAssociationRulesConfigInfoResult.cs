// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.BackupDisasterRecovery.Outputs
{

    [OutputType]
    public sealed class GetBackupPlanAssociationsAssociationRulesConfigInfoResult
    {
        /// <summary>
        /// A block containing details of the last backup error, if any.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetBackupPlanAssociationsAssociationRulesConfigInfoLastBackupErrorResult> LastBackupErrors;
        /// <summary>
        /// State of last backup taken.
        /// </summary>
        public readonly string LastBackupState;
        /// <summary>
        /// The point in time when the last successful backup was captured from the source.
        /// </summary>
        public readonly string LastSuccessfulBackupConsistencyTime;
        /// <summary>
        /// Backup Rule id fetched from backup plan.
        /// </summary>
        public readonly string RuleId;

        [OutputConstructor]
        private GetBackupPlanAssociationsAssociationRulesConfigInfoResult(
            ImmutableArray<Outputs.GetBackupPlanAssociationsAssociationRulesConfigInfoLastBackupErrorResult> lastBackupErrors,

            string lastBackupState,

            string lastSuccessfulBackupConsistencyTime,

            string ruleId)
        {
            LastBackupErrors = lastBackupErrors;
            LastBackupState = lastBackupState;
            LastSuccessfulBackupConsistencyTime = lastSuccessfulBackupConsistencyTime;
            RuleId = ruleId;
        }
    }
}
