// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.BackupDisasterRecovery
{
    public static class GetBackupPlanAssociation
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var my_backupplan_association = Gcp.BackupDisasterRecovery.GetBackupPlanAssociation.Invoke(new()
        ///     {
        ///         Location = "us-central1",
        ///         BackupPlanAssociationId = "bpa-id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetBackupPlanAssociationResult> InvokeAsync(GetBackupPlanAssociationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBackupPlanAssociationResult>("gcp:backupdisasterrecovery/getBackupPlanAssociation:getBackupPlanAssociation", args ?? new GetBackupPlanAssociationArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var my_backupplan_association = Gcp.BackupDisasterRecovery.GetBackupPlanAssociation.Invoke(new()
        ///     {
        ///         Location = "us-central1",
        ///         BackupPlanAssociationId = "bpa-id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetBackupPlanAssociationResult> Invoke(GetBackupPlanAssociationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBackupPlanAssociationResult>("gcp:backupdisasterrecovery/getBackupPlanAssociation:getBackupPlanAssociation", args ?? new GetBackupPlanAssociationInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var my_backupplan_association = Gcp.BackupDisasterRecovery.GetBackupPlanAssociation.Invoke(new()
        ///     {
        ///         Location = "us-central1",
        ///         BackupPlanAssociationId = "bpa-id",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetBackupPlanAssociationResult> Invoke(GetBackupPlanAssociationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetBackupPlanAssociationResult>("gcp:backupdisasterrecovery/getBackupPlanAssociation:getBackupPlanAssociation", args ?? new GetBackupPlanAssociationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBackupPlanAssociationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of Backupplan association resource.
        /// 
        /// - - -
        /// </summary>
        [Input("backupPlanAssociationId", required: true)]
        public string BackupPlanAssociationId { get; set; } = null!;

        /// <summary>
        /// The location in which the Backupplan association resource belongs.
        /// </summary>
        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        [Input("project")]
        public string? Project { get; set; }

        public GetBackupPlanAssociationArgs()
        {
        }
        public static new GetBackupPlanAssociationArgs Empty => new GetBackupPlanAssociationArgs();
    }

    public sealed class GetBackupPlanAssociationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The id of Backupplan association resource.
        /// 
        /// - - -
        /// </summary>
        [Input("backupPlanAssociationId", required: true)]
        public Input<string> BackupPlanAssociationId { get; set; } = null!;

        /// <summary>
        /// The location in which the Backupplan association resource belongs.
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetBackupPlanAssociationInvokeArgs()
        {
        }
        public static new GetBackupPlanAssociationInvokeArgs Empty => new GetBackupPlanAssociationInvokeArgs();
    }


    [OutputType]
    public sealed class GetBackupPlanAssociationResult
    {
        public readonly string BackupPlan;
        public readonly string BackupPlanAssociationId;
        public readonly string CreateTime;
        public readonly string DataSource;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string LastSuccessfulBackupConsistencyTime;
        public readonly string Location;
        public readonly string Name;
        public readonly string? Project;
        public readonly string Resource;
        public readonly string ResourceType;
        public readonly ImmutableArray<Outputs.GetBackupPlanAssociationRulesConfigInfoResult> RulesConfigInfos;
        public readonly string UpdateTime;

        [OutputConstructor]
        private GetBackupPlanAssociationResult(
            string backupPlan,

            string backupPlanAssociationId,

            string createTime,

            string dataSource,

            string id,

            string lastSuccessfulBackupConsistencyTime,

            string location,

            string name,

            string? project,

            string resource,

            string resourceType,

            ImmutableArray<Outputs.GetBackupPlanAssociationRulesConfigInfoResult> rulesConfigInfos,

            string updateTime)
        {
            BackupPlan = backupPlan;
            BackupPlanAssociationId = backupPlanAssociationId;
            CreateTime = createTime;
            DataSource = dataSource;
            Id = id;
            LastSuccessfulBackupConsistencyTime = lastSuccessfulBackupConsistencyTime;
            Location = location;
            Name = name;
            Project = project;
            Resource = resource;
            ResourceType = resourceType;
            RulesConfigInfos = rulesConfigInfos;
            UpdateTime = updateTime;
        }
    }
}
