// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.BackupDisasterRecovery
{
    public static class GetDataSourceReference
    {
        /// <summary>
        /// Get information about a specific Backup and DR data source reference.
        /// </summary>
        public static Task<GetDataSourceReferenceResult> InvokeAsync(GetDataSourceReferenceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDataSourceReferenceResult>("gcp:backupdisasterrecovery/getDataSourceReference:getDataSourceReference", args ?? new GetDataSourceReferenceArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a specific Backup and DR data source reference.
        /// </summary>
        public static Output<GetDataSourceReferenceResult> Invoke(GetDataSourceReferenceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDataSourceReferenceResult>("gcp:backupdisasterrecovery/getDataSourceReference:getDataSourceReference", args ?? new GetDataSourceReferenceInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a specific Backup and DR data source reference.
        /// </summary>
        public static Output<GetDataSourceReferenceResult> Invoke(GetDataSourceReferenceInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDataSourceReferenceResult>("gcp:backupdisasterrecovery/getDataSourceReference:getDataSourceReference", args ?? new GetDataSourceReferenceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDataSourceReferenceArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// - (Required) The id of the data source reference.
        /// </summary>
        [Input("dataSourceReferenceId", required: true)]
        public string DataSourceReferenceId { get; set; } = null!;

        [Input("location", required: true)]
        public string Location { get; set; } = null!;

        /// <summary>
        /// - (Optional) The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        public GetDataSourceReferenceArgs()
        {
        }
        public static new GetDataSourceReferenceArgs Empty => new GetDataSourceReferenceArgs();
    }

    public sealed class GetDataSourceReferenceInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// - (Required) The id of the data source reference.
        /// </summary>
        [Input("dataSourceReferenceId", required: true)]
        public Input<string> DataSourceReferenceId { get; set; } = null!;

        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// - (Optional) The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetDataSourceReferenceInvokeArgs()
        {
        }
        public static new GetDataSourceReferenceInvokeArgs Empty => new GetDataSourceReferenceInvokeArgs();
    }


    [OutputType]
    public sealed class GetDataSourceReferenceResult
    {
        public readonly string BackupConfigState;
        public readonly int BackupCount;
        public readonly string DataSource;
        public readonly string DataSourceReferenceId;
        public readonly string GcpResourceName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string LastBackupState;
        public readonly string LastSuccessfulBackupTime;
        public readonly string Location;
        public readonly string Name;
        public readonly string Project;
        public readonly string ResourceType;

        [OutputConstructor]
        private GetDataSourceReferenceResult(
            string backupConfigState,

            int backupCount,

            string dataSource,

            string dataSourceReferenceId,

            string gcpResourceName,

            string id,

            string lastBackupState,

            string lastSuccessfulBackupTime,

            string location,

            string name,

            string project,

            string resourceType)
        {
            BackupConfigState = backupConfigState;
            BackupCount = backupCount;
            DataSource = dataSource;
            DataSourceReferenceId = dataSourceReferenceId;
            GcpResourceName = gcpResourceName;
            Id = id;
            LastBackupState = lastBackupState;
            LastSuccessfulBackupTime = lastSuccessfulBackupTime;
            Location = location;
            Name = name;
            Project = project;
            ResourceType = resourceType;
        }
    }
}
