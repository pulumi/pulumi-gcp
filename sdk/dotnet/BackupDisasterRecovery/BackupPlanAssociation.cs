// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.BackupDisasterRecovery
{
    /// <summary>
    /// A Backup and DR BackupPlanAssociation.
    /// 
    /// To get more information about BackupPlanAssociation, see:
    /// 
    /// * [API documentation](https://cloud.google.com/backup-disaster-recovery/docs/reference/rest)
    /// * How-to Guides
    ///     * [Official Documentation](https://cloud.google.com/backup-disaster-recovery/docs)
    /// 
    /// ## Example Usage
    /// 
    /// ### Backup Dr Bpa
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Gcp = Pulumi.Gcp;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var mySA = new Gcp.ServiceAccount.Account("mySA", new()
    ///     {
    ///         AccountId = "my-custom",
    ///         DisplayName = "Custom SA for VM Instance",
    ///     });
    /// 
    ///     var myinstance = new Gcp.Compute.Instance("myinstance", new()
    ///     {
    ///         NetworkInterfaces = new[]
    ///         {
    ///             new Gcp.Compute.Inputs.InstanceNetworkInterfaceArgs
    ///             {
    ///                 AccessConfigs = new[]
    ///                 {
    ///                     null,
    ///                 },
    ///                 Network = "default",
    ///             },
    ///         },
    ///         Name = "test-instance",
    ///         MachineType = "n2-standard-2",
    ///         Zone = "us-central1-a",
    ///         BootDisk = new Gcp.Compute.Inputs.InstanceBootDiskArgs
    ///         {
    ///             InitializeParams = new Gcp.Compute.Inputs.InstanceBootDiskInitializeParamsArgs
    ///             {
    ///                 Image = "debian-cloud/debian-11",
    ///                 Labels = 
    ///                 {
    ///                     { "my_label", "value" },
    ///                 },
    ///             },
    ///         },
    ///         ScratchDisks = new[]
    ///         {
    ///             new Gcp.Compute.Inputs.InstanceScratchDiskArgs
    ///             {
    ///                 Interface = "NVME",
    ///             },
    ///         },
    ///         ServiceAccount = new Gcp.Compute.Inputs.InstanceServiceAccountArgs
    ///         {
    ///             Email = mySA.Email,
    ///             Scopes = new[]
    ///             {
    ///                 "cloud-platform",
    ///             },
    ///         },
    ///     });
    /// 
    ///     var bv1 = new Gcp.BackupDisasterRecovery.BackupVault("bv1", new()
    ///     {
    ///         Location = "us-central1",
    ///         BackupVaultId = "bv-bpa",
    ///         BackupMinimumEnforcedRetentionDuration = "100000s",
    ///         ForceDelete = true,
    ///     });
    /// 
    ///     var bp1 = new Gcp.BackupDisasterRecovery.BackupPlan("bp1", new()
    ///     {
    ///         Location = "us-central1",
    ///         BackupPlanId = "bp-bpa-test",
    ///         ResourceType = "compute.googleapis.com/Instance",
    ///         BackupVault = bv1.Id,
    ///         BackupRules = new[]
    ///         {
    ///             new Gcp.BackupDisasterRecovery.Inputs.BackupPlanBackupRuleArgs
    ///             {
    ///                 RuleId = "rule-1",
    ///                 BackupRetentionDays = 2,
    ///                 StandardSchedule = new Gcp.BackupDisasterRecovery.Inputs.BackupPlanBackupRuleStandardScheduleArgs
    ///                 {
    ///                     RecurrenceType = "HOURLY",
    ///                     HourlyFrequency = 6,
    ///                     TimeZone = "UTC",
    ///                     BackupWindow = new Gcp.BackupDisasterRecovery.Inputs.BackupPlanBackupRuleStandardScheduleBackupWindowArgs
    ///                     {
    ///                         StartHourOfDay = 12,
    ///                         EndHourOfDay = 18,
    ///                     },
    ///                 },
    ///             },
    ///         },
    ///     });
    /// 
    ///     var my_backup_plan_association = new Gcp.BackupDisasterRecovery.BackupPlanAssociation("my-backup-plan-association", new()
    ///     {
    ///         Location = "us-central1",
    ///         ResourceType = "compute.googleapis.com/Instance",
    ///         BackupPlanAssociationId = "my-bpa",
    ///         Resource = myinstance.Id,
    ///         BackupPlan = bp1.Name,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// BackupPlanAssociation can be imported using any of these accepted formats:
    /// 
    /// * `projects/{{project}}/locations/{{location}}/backupPlanAssociations/{{backup_plan_association_id}}`
    /// 
    /// * `{{project}}/{{location}}/{{backup_plan_association_id}}`
    /// 
    /// * `{{location}}/{{backup_plan_association_id}}`
    /// 
    /// When using the `pulumi import` command, BackupPlanAssociation can be imported using one of the formats above. For example:
    /// 
    /// ```sh
    /// $ pulumi import gcp:backupdisasterrecovery/backupPlanAssociation:BackupPlanAssociation default projects/{{project}}/locations/{{location}}/backupPlanAssociations/{{backup_plan_association_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:backupdisasterrecovery/backupPlanAssociation:BackupPlanAssociation default {{project}}/{{location}}/{{backup_plan_association_id}}
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import gcp:backupdisasterrecovery/backupPlanAssociation:BackupPlanAssociation default {{location}}/{{backup_plan_association_id}}
    /// ```
    /// </summary>
    [GcpResourceType("gcp:backupdisasterrecovery/backupPlanAssociation:BackupPlanAssociation")]
    public partial class BackupPlanAssociation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The BP with which resource needs to be created
        /// </summary>
        [Output("backupPlan")]
        public Output<string> BackupPlan { get; private set; } = null!;

        /// <summary>
        /// The id of backupplan association
        /// 
        /// 
        /// - - -
        /// </summary>
        [Output("backupPlanAssociationId")]
        public Output<string> BackupPlanAssociationId { get; private set; } = null!;

        /// <summary>
        /// The time when the instance was created
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Resource name of data source which will be used as storage location for backups taken
        /// </summary>
        [Output("dataSource")]
        public Output<string> DataSource { get; private set; } = null!;

        /// <summary>
        /// The point in time when the last successful backup was captured from the source
        /// </summary>
        [Output("lastSuccessfulBackupConsistencyTime")]
        public Output<string> LastSuccessfulBackupConsistencyTime { get; private set; } = null!;

        /// <summary>
        /// The location for the backupplan association
        /// </summary>
        [Output("location")]
        public Output<string> Location { get; private set; } = null!;

        /// <summary>
        /// The name of backup plan association resource created
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Output("project")]
        public Output<string> Project { get; private set; } = null!;

        /// <summary>
        /// The resource for which BPA needs to be created
        /// </summary>
        [Output("resource")]
        public Output<string> Resource { get; private set; } = null!;

        /// <summary>
        /// The resource type of workload on which backupplan is applied
        /// </summary>
        [Output("resourceType")]
        public Output<string> ResourceType { get; private set; } = null!;

        /// <summary>
        /// Message for rules config info
        /// Structure is documented below.
        /// </summary>
        [Output("rulesConfigInfos")]
        public Output<ImmutableArray<Outputs.BackupPlanAssociationRulesConfigInfo>> RulesConfigInfos { get; private set; } = null!;

        /// <summary>
        /// The time when the instance was updated.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a BackupPlanAssociation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BackupPlanAssociation(string name, BackupPlanAssociationArgs args, CustomResourceOptions? options = null)
            : base("gcp:backupdisasterrecovery/backupPlanAssociation:BackupPlanAssociation", name, args ?? new BackupPlanAssociationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BackupPlanAssociation(string name, Input<string> id, BackupPlanAssociationState? state = null, CustomResourceOptions? options = null)
            : base("gcp:backupdisasterrecovery/backupPlanAssociation:BackupPlanAssociation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BackupPlanAssociation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BackupPlanAssociation Get(string name, Input<string> id, BackupPlanAssociationState? state = null, CustomResourceOptions? options = null)
        {
            return new BackupPlanAssociation(name, id, state, options);
        }
    }

    public sealed class BackupPlanAssociationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The BP with which resource needs to be created
        /// </summary>
        [Input("backupPlan", required: true)]
        public Input<string> BackupPlan { get; set; } = null!;

        /// <summary>
        /// The id of backupplan association
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("backupPlanAssociationId", required: true)]
        public Input<string> BackupPlanAssociationId { get; set; } = null!;

        /// <summary>
        /// The location for the backupplan association
        /// </summary>
        [Input("location", required: true)]
        public Input<string> Location { get; set; } = null!;

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The resource for which BPA needs to be created
        /// </summary>
        [Input("resource", required: true)]
        public Input<string> Resource { get; set; } = null!;

        /// <summary>
        /// The resource type of workload on which backupplan is applied
        /// </summary>
        [Input("resourceType", required: true)]
        public Input<string> ResourceType { get; set; } = null!;

        public BackupPlanAssociationArgs()
        {
        }
        public static new BackupPlanAssociationArgs Empty => new BackupPlanAssociationArgs();
    }

    public sealed class BackupPlanAssociationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The BP with which resource needs to be created
        /// </summary>
        [Input("backupPlan")]
        public Input<string>? BackupPlan { get; set; }

        /// <summary>
        /// The id of backupplan association
        /// 
        /// 
        /// - - -
        /// </summary>
        [Input("backupPlanAssociationId")]
        public Input<string>? BackupPlanAssociationId { get; set; }

        /// <summary>
        /// The time when the instance was created
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Resource name of data source which will be used as storage location for backups taken
        /// </summary>
        [Input("dataSource")]
        public Input<string>? DataSource { get; set; }

        /// <summary>
        /// The point in time when the last successful backup was captured from the source
        /// </summary>
        [Input("lastSuccessfulBackupConsistencyTime")]
        public Input<string>? LastSuccessfulBackupConsistencyTime { get; set; }

        /// <summary>
        /// The location for the backupplan association
        /// </summary>
        [Input("location")]
        public Input<string>? Location { get; set; }

        /// <summary>
        /// The name of backup plan association resource created
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// If it is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        /// <summary>
        /// The resource for which BPA needs to be created
        /// </summary>
        [Input("resource")]
        public Input<string>? Resource { get; set; }

        /// <summary>
        /// The resource type of workload on which backupplan is applied
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        [Input("rulesConfigInfos")]
        private InputList<Inputs.BackupPlanAssociationRulesConfigInfoGetArgs>? _rulesConfigInfos;

        /// <summary>
        /// Message for rules config info
        /// Structure is documented below.
        /// </summary>
        public InputList<Inputs.BackupPlanAssociationRulesConfigInfoGetArgs> RulesConfigInfos
        {
            get => _rulesConfigInfos ?? (_rulesConfigInfos = new InputList<Inputs.BackupPlanAssociationRulesConfigInfoGetArgs>());
            set => _rulesConfigInfos = value;
        }

        /// <summary>
        /// The time when the instance was updated.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public BackupPlanAssociationState()
        {
        }
        public static new BackupPlanAssociationState Empty => new BackupPlanAssociationState();
    }
}
