// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.NetworkManagement.Outputs
{

    [OutputType]
    public sealed class GetConnectivityTestRunReachabilityDetailTraceEndpointInfoResult
    {
        /// <summary>
        /// (Output)
        /// Destination IP address.
        /// </summary>
        public readonly string DestinationIp;
        /// <summary>
        /// (Output)
        /// URI of the network where this packet is sent to.
        /// </summary>
        public readonly string DestinationNetworkUri;
        /// <summary>
        /// (Output)
        /// Destination port. Only valid when protocol is TCP or UDP.
        /// </summary>
        public readonly int DestinationPort;
        /// <summary>
        /// (Output)
        /// IP protocol in string format, for example: "TCP", "UDP", "ICMP".
        /// </summary>
        public readonly string Protocol;
        /// <summary>
        /// (Output)
        /// URI of the source telemetry agent this packet originates from.
        /// </summary>
        public readonly string SourceAgentUri;
        /// <summary>
        /// (Output)
        /// Source IP address.
        /// </summary>
        public readonly string SourceIp;
        /// <summary>
        /// (Output)
        /// URI of the network where this packet originates from.
        /// </summary>
        public readonly string SourceNetworkUri;
        /// <summary>
        /// (Output)
        /// Source port. Only valid when protocol is TCP or UDP.
        /// </summary>
        public readonly int SourcePort;

        [OutputConstructor]
        private GetConnectivityTestRunReachabilityDetailTraceEndpointInfoResult(
            string destinationIp,

            string destinationNetworkUri,

            int destinationPort,

            string protocol,

            string sourceAgentUri,

            string sourceIp,

            string sourceNetworkUri,

            int sourcePort)
        {
            DestinationIp = destinationIp;
            DestinationNetworkUri = destinationNetworkUri;
            DestinationPort = destinationPort;
            Protocol = protocol;
            SourceAgentUri = sourceAgentUri;
            SourceIp = sourceIp;
            SourceNetworkUri = sourceNetworkUri;
            SourcePort = sourcePort;
        }
    }
}
