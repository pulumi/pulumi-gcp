// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.NetworkManagement.Outputs
{

    [OutputType]
    public sealed class ConnectivityTestSource
    {
        /// <summary>
        /// A Compute Engine instance URI.
        /// </summary>
        public readonly string? Instance;
        /// <summary>
        /// The IP address of the endpoint, which can be an external or
        /// internal IP. An IPv6 address is only allowed when the test's
        /// destination is a global load balancer VIP.
        /// </summary>
        public readonly string? IpAddress;
        /// <summary>
        /// A Compute Engine network URI.
        /// </summary>
        public readonly string? Network;
        /// <summary>
        /// Type of the network where the endpoint is located.
        /// Possible values are `GCP_NETWORK` and `NON_GCP_NETWORK`.
        /// </summary>
        public readonly string? NetworkType;
        /// <summary>
        /// The IP protocol port of the endpoint. Only applicable when
        /// protocol is TCP or UDP.
        /// </summary>
        public readonly int? Port;
        /// <summary>
        /// Project ID where the endpoint is located. The Project ID can be
        /// derived from the URI if you provide a VM instance or network URI.
        /// The following are two cases where you must provide the project ID:
        /// 1. Only the IP address is specified, and the IP address is
        /// within a GCP project.
        /// 2. When you are using Shared VPC and the IP address
        /// that you provide is from the service project. In this case,
        /// the network that the IP address resides in is defined in the
        /// host project.
        /// </summary>
        public readonly string? ProjectId;

        [OutputConstructor]
        private ConnectivityTestSource(
            string? instance,

            string? ipAddress,

            string? network,

            string? networkType,

            int? port,

            string? projectId)
        {
            Instance = instance;
            IpAddress = ipAddress;
            Network = network;
            NetworkType = networkType;
            Port = port;
            ProjectId = projectId;
        }
    }
}
