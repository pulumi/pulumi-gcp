// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.NetworkManagement
{
    public static class GetConnectivityTests
    {
        /// <summary>
        /// A connectivity test is a static analysis of your resource configurations
        /// that enables you to evaluate connectivity to and from Google Cloud
        /// resources in your Virtual Private Cloud (VPC) network. This data source allows
        /// you to list connectivity tests in a project.
        /// 
        /// To get more information about connectivity tests, see:
        /// 
        /// * [API documentation](https://cloud.google.com/network-intelligence-center/docs/reference/networkmanagement/rest/v1/projects.locations.global.connectivityTests/rerun)
        /// * How-to Guides
        ///     * [Official Documentation](https://cloud.google.com/network-intelligence-center/docs)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var tests = Gcp.NetworkManagement.GetConnectivityTests.Invoke(new()
        ///     {
        ///         Filter = "name:projects/project-id/locations/global/connectivityTests/my-tests",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetConnectivityTestsResult> InvokeAsync(GetConnectivityTestsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConnectivityTestsResult>("gcp:networkmanagement/getConnectivityTests:getConnectivityTests", args ?? new GetConnectivityTestsArgs(), options.WithDefaults());

        /// <summary>
        /// A connectivity test is a static analysis of your resource configurations
        /// that enables you to evaluate connectivity to and from Google Cloud
        /// resources in your Virtual Private Cloud (VPC) network. This data source allows
        /// you to list connectivity tests in a project.
        /// 
        /// To get more information about connectivity tests, see:
        /// 
        /// * [API documentation](https://cloud.google.com/network-intelligence-center/docs/reference/networkmanagement/rest/v1/projects.locations.global.connectivityTests/rerun)
        /// * How-to Guides
        ///     * [Official Documentation](https://cloud.google.com/network-intelligence-center/docs)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var tests = Gcp.NetworkManagement.GetConnectivityTests.Invoke(new()
        ///     {
        ///         Filter = "name:projects/project-id/locations/global/connectivityTests/my-tests",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetConnectivityTestsResult> Invoke(GetConnectivityTestsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConnectivityTestsResult>("gcp:networkmanagement/getConnectivityTests:getConnectivityTests", args ?? new GetConnectivityTestsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// A connectivity test is a static analysis of your resource configurations
        /// that enables you to evaluate connectivity to and from Google Cloud
        /// resources in your Virtual Private Cloud (VPC) network. This data source allows
        /// you to list connectivity tests in a project.
        /// 
        /// To get more information about connectivity tests, see:
        /// 
        /// * [API documentation](https://cloud.google.com/network-intelligence-center/docs/reference/networkmanagement/rest/v1/projects.locations.global.connectivityTests/rerun)
        /// * How-to Guides
        ///     * [Official Documentation](https://cloud.google.com/network-intelligence-center/docs)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Gcp = Pulumi.Gcp;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var tests = Gcp.NetworkManagement.GetConnectivityTests.Invoke(new()
        ///     {
        ///         Filter = "name:projects/project-id/locations/global/connectivityTests/my-tests",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetConnectivityTestsResult> Invoke(GetConnectivityTestsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetConnectivityTestsResult>("gcp:networkmanagement/getConnectivityTests:getConnectivityTests", args ?? new GetConnectivityTestsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConnectivityTestsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Lists the ConnectivityTests that match the [filter expression](https://cloud.google.com/network-intelligence-center/docs/reference/networkmanagement/rest/v1/projects.locations.global.connectivityTests/list#query-parameters). A filter expression filters the resources listed in the response.
        /// </summary>
        [Input("filter")]
        public string? Filter { get; set; }

        /// <summary>
        /// The ID of the project.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        public GetConnectivityTestsArgs()
        {
        }
        public static new GetConnectivityTestsArgs Empty => new GetConnectivityTestsArgs();
    }

    public sealed class GetConnectivityTestsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Lists the ConnectivityTests that match the [filter expression](https://cloud.google.com/network-intelligence-center/docs/reference/networkmanagement/rest/v1/projects.locations.global.connectivityTests/list#query-parameters). A filter expression filters the resources listed in the response.
        /// </summary>
        [Input("filter")]
        public Input<string>? Filter { get; set; }

        /// <summary>
        /// The ID of the project.
        /// </summary>
        [Input("project")]
        public Input<string>? Project { get; set; }

        public GetConnectivityTestsInvokeArgs()
        {
        }
        public static new GetConnectivityTestsInvokeArgs Empty => new GetConnectivityTestsInvokeArgs();
    }


    [OutputType]
    public sealed class GetConnectivityTestsResult
    {
        /// <summary>
        /// A list of connectivity tests in the selected project matching the filter. Structure is defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetConnectivityTestsConnectivityTestResult> ConnectivityTests;
        public readonly string? Filter;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The ID of the project in which the resource belongs.
        /// </summary>
        public readonly string Project;

        [OutputConstructor]
        private GetConnectivityTestsResult(
            ImmutableArray<Outputs.GetConnectivityTestsConnectivityTestResult> connectivityTests,

            string? filter,

            string id,

            string project)
        {
            ConnectivityTests = connectivityTests;
            Filter = filter;
            Id = id;
            Project = project;
        }
    }
}
