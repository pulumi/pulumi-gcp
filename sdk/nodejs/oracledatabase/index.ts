// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AutonomousDatabaseArgs, AutonomousDatabaseState } from "./autonomousDatabase";
export type AutonomousDatabase = import("./autonomousDatabase").AutonomousDatabase;
export const AutonomousDatabase: typeof import("./autonomousDatabase").AutonomousDatabase = null as any;
utilities.lazyLoad(exports, ["AutonomousDatabase"], () => require("./autonomousDatabase"));

export { CloudExadataInfrastructureArgs, CloudExadataInfrastructureState } from "./cloudExadataInfrastructure";
export type CloudExadataInfrastructure = import("./cloudExadataInfrastructure").CloudExadataInfrastructure;
export const CloudExadataInfrastructure: typeof import("./cloudExadataInfrastructure").CloudExadataInfrastructure = null as any;
utilities.lazyLoad(exports, ["CloudExadataInfrastructure"], () => require("./cloudExadataInfrastructure"));

export { CloudVmClusterArgs, CloudVmClusterState } from "./cloudVmCluster";
export type CloudVmCluster = import("./cloudVmCluster").CloudVmCluster;
export const CloudVmCluster: typeof import("./cloudVmCluster").CloudVmCluster = null as any;
utilities.lazyLoad(exports, ["CloudVmCluster"], () => require("./cloudVmCluster"));

export { GetAutonomousDatabaseArgs, GetAutonomousDatabaseResult, GetAutonomousDatabaseOutputArgs } from "./getAutonomousDatabase";
export const getAutonomousDatabase: typeof import("./getAutonomousDatabase").getAutonomousDatabase = null as any;
export const getAutonomousDatabaseOutput: typeof import("./getAutonomousDatabase").getAutonomousDatabaseOutput = null as any;
utilities.lazyLoad(exports, ["getAutonomousDatabase","getAutonomousDatabaseOutput"], () => require("./getAutonomousDatabase"));

export { GetAutonomousDatabasesArgs, GetAutonomousDatabasesResult, GetAutonomousDatabasesOutputArgs } from "./getAutonomousDatabases";
export const getAutonomousDatabases: typeof import("./getAutonomousDatabases").getAutonomousDatabases = null as any;
export const getAutonomousDatabasesOutput: typeof import("./getAutonomousDatabases").getAutonomousDatabasesOutput = null as any;
utilities.lazyLoad(exports, ["getAutonomousDatabases","getAutonomousDatabasesOutput"], () => require("./getAutonomousDatabases"));

export { GetCloudExadataInfrastructureArgs, GetCloudExadataInfrastructureResult, GetCloudExadataInfrastructureOutputArgs } from "./getCloudExadataInfrastructure";
export const getCloudExadataInfrastructure: typeof import("./getCloudExadataInfrastructure").getCloudExadataInfrastructure = null as any;
export const getCloudExadataInfrastructureOutput: typeof import("./getCloudExadataInfrastructure").getCloudExadataInfrastructureOutput = null as any;
utilities.lazyLoad(exports, ["getCloudExadataInfrastructure","getCloudExadataInfrastructureOutput"], () => require("./getCloudExadataInfrastructure"));

export { GetCloudExadataInfrastructuresArgs, GetCloudExadataInfrastructuresResult, GetCloudExadataInfrastructuresOutputArgs } from "./getCloudExadataInfrastructures";
export const getCloudExadataInfrastructures: typeof import("./getCloudExadataInfrastructures").getCloudExadataInfrastructures = null as any;
export const getCloudExadataInfrastructuresOutput: typeof import("./getCloudExadataInfrastructures").getCloudExadataInfrastructuresOutput = null as any;
utilities.lazyLoad(exports, ["getCloudExadataInfrastructures","getCloudExadataInfrastructuresOutput"], () => require("./getCloudExadataInfrastructures"));

export { GetCloudVmClusterArgs, GetCloudVmClusterResult, GetCloudVmClusterOutputArgs } from "./getCloudVmCluster";
export const getCloudVmCluster: typeof import("./getCloudVmCluster").getCloudVmCluster = null as any;
export const getCloudVmClusterOutput: typeof import("./getCloudVmCluster").getCloudVmClusterOutput = null as any;
utilities.lazyLoad(exports, ["getCloudVmCluster","getCloudVmClusterOutput"], () => require("./getCloudVmCluster"));

export { GetCloudVmClustersArgs, GetCloudVmClustersResult, GetCloudVmClustersOutputArgs } from "./getCloudVmClusters";
export const getCloudVmClusters: typeof import("./getCloudVmClusters").getCloudVmClusters = null as any;
export const getCloudVmClustersOutput: typeof import("./getCloudVmClusters").getCloudVmClustersOutput = null as any;
utilities.lazyLoad(exports, ["getCloudVmClusters","getCloudVmClustersOutput"], () => require("./getCloudVmClusters"));

export { GetDbNodesArgs, GetDbNodesResult, GetDbNodesOutputArgs } from "./getDbNodes";
export const getDbNodes: typeof import("./getDbNodes").getDbNodes = null as any;
export const getDbNodesOutput: typeof import("./getDbNodes").getDbNodesOutput = null as any;
utilities.lazyLoad(exports, ["getDbNodes","getDbNodesOutput"], () => require("./getDbNodes"));

export { GetDbServersArgs, GetDbServersResult, GetDbServersOutputArgs } from "./getDbServers";
export const getDbServers: typeof import("./getDbServers").getDbServers = null as any;
export const getDbServersOutput: typeof import("./getDbServers").getDbServersOutput = null as any;
utilities.lazyLoad(exports, ["getDbServers","getDbServersOutput"], () => require("./getDbServers"));

export { OdbNetworkArgs, OdbNetworkState } from "./odbNetwork";
export type OdbNetwork = import("./odbNetwork").OdbNetwork;
export const OdbNetwork: typeof import("./odbNetwork").OdbNetwork = null as any;
utilities.lazyLoad(exports, ["OdbNetwork"], () => require("./odbNetwork"));

export { OdbSubnetArgs, OdbSubnetState } from "./odbSubnet";
export type OdbSubnet = import("./odbSubnet").OdbSubnet;
export const OdbSubnet: typeof import("./odbSubnet").OdbSubnet = null as any;
utilities.lazyLoad(exports, ["OdbSubnet"], () => require("./odbSubnet"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "gcp:oracledatabase/autonomousDatabase:AutonomousDatabase":
                return new AutonomousDatabase(name, <any>undefined, { urn })
            case "gcp:oracledatabase/cloudExadataInfrastructure:CloudExadataInfrastructure":
                return new CloudExadataInfrastructure(name, <any>undefined, { urn })
            case "gcp:oracledatabase/cloudVmCluster:CloudVmCluster":
                return new CloudVmCluster(name, <any>undefined, { urn })
            case "gcp:oracledatabase/odbNetwork:OdbNetwork":
                return new OdbNetwork(name, <any>undefined, { urn })
            case "gcp:oracledatabase/odbSubnet:OdbSubnet":
                return new OdbSubnet(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "oracledatabase/autonomousDatabase", _module)
pulumi.runtime.registerResourceModule("gcp", "oracledatabase/cloudExadataInfrastructure", _module)
pulumi.runtime.registerResourceModule("gcp", "oracledatabase/cloudVmCluster", _module)
pulumi.runtime.registerResourceModule("gcp", "oracledatabase/odbNetwork", _module)
pulumi.runtime.registerResourceModule("gcp", "oracledatabase/odbSubnet", _module)
