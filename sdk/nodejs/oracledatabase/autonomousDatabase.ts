// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * An AutonomousDatabase resource.
 *
 * To get more information about AutonomousDatabase, see:
 *
 * * [API documentation](https://cloud.google.com/oracle/database/docs/reference/rest/v1/projects.locations.autonomousDatabases)
 * * How-to Guides
 *     * [Create Autonomous databases](https://cloud.google.com/oracle/database/docs/create-databases)
 *
 * ## Example Usage
 *
 * ### Oracledatabase Autonomous Database Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const default = gcp.compute.getNetwork({
 *     name: "new",
 *     project: "my-project",
 * });
 * const myADB = new gcp.oracledatabase.AutonomousDatabase("myADB", {
 *     autonomousDatabaseId: "my-instance",
 *     location: "us-east4",
 *     project: "my-project",
 *     database: "mydatabase",
 *     adminPassword: "123Abpassword",
 *     network: _default.then(_default => _default.id),
 *     cidr: "10.5.0.0/24",
 *     properties: {
 *         computeCount: 2,
 *         dataStorageSizeTb: 1,
 *         dbVersion: "19c",
 *         dbWorkload: "OLTP",
 *         licenseType: "LICENSE_INCLUDED",
 *     },
 *     deletionProtection: true,
 * });
 * ```
 * ### Oracledatabase Autonomous Database Full
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const default = gcp.compute.getNetwork({
 *     name: "new",
 *     project: "my-project",
 * });
 * const myADB = new gcp.oracledatabase.AutonomousDatabase("myADB", {
 *     autonomousDatabaseId: "my-instance",
 *     location: "us-east4",
 *     project: "my-project",
 *     displayName: "autonomousDatabase displayname",
 *     database: "mydatabase",
 *     adminPassword: "123Abpassword",
 *     network: _default.then(_default => _default.id),
 *     cidr: "10.5.0.0/24",
 *     labels: {
 *         "label-one": "value-one",
 *     },
 *     properties: {
 *         computeCount: 2,
 *         dataStorageSizeGb: 48,
 *         dbVersion: "19c",
 *         dbEdition: "STANDARD_EDITION",
 *         dbWorkload: "OLTP",
 *         isAutoScalingEnabled: true,
 *         licenseType: "BRING_YOUR_OWN_LICENSE",
 *         backupRetentionPeriodDays: 60,
 *         characterSet: "AL32UTF8",
 *         isStorageAutoScalingEnabled: false,
 *         maintenanceScheduleType: "REGULAR",
 *         mtlsConnectionRequired: false,
 *         nCharacterSet: "AL16UTF16",
 *         operationsInsightsState: "NOT_ENABLED",
 *         customerContacts: [{
 *             email: "xyz@example.com",
 *         }],
 *         privateEndpointIp: "10.5.0.11",
 *         privateEndpointLabel: "testhost",
 *     },
 *     deletionProtection: true,
 * });
 * ```
 *
 * ## Import
 *
 * AutonomousDatabase can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/locations/{{location}}/autonomousDatabases/{{autonomous_database_id}}`
 *
 * * `{{project}}/{{location}}/{{autonomous_database_id}}`
 *
 * * `{{location}}/{{autonomous_database_id}}`
 *
 * When using the `pulumi import` command, AutonomousDatabase can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:oracledatabase/autonomousDatabase:AutonomousDatabase default projects/{{project}}/locations/{{location}}/autonomousDatabases/{{autonomous_database_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:oracledatabase/autonomousDatabase:AutonomousDatabase default {{project}}/{{location}}/{{autonomous_database_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:oracledatabase/autonomousDatabase:AutonomousDatabase default {{location}}/{{autonomous_database_id}}
 * ```
 */
export class AutonomousDatabase extends pulumi.CustomResource {
    /**
     * Get an existing AutonomousDatabase resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AutonomousDatabaseState, opts?: pulumi.CustomResourceOptions): AutonomousDatabase {
        return new AutonomousDatabase(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:oracledatabase/autonomousDatabase:AutonomousDatabase';

    /**
     * Returns true if the given object is an instance of AutonomousDatabase.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AutonomousDatabase {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AutonomousDatabase.__pulumiType;
    }

    /**
     * The password for the default ADMIN user.
     */
    public readonly adminPassword!: pulumi.Output<string | undefined>;
    /**
     * The ID of the Autonomous Database to create. This value is restricted
     * to (^a-z?$) and must be a maximum of 63
     * characters in length. The value must start with a letter and end with
     * a letter or a number.
     */
    public readonly autonomousDatabaseId!: pulumi.Output<string>;
    /**
     * The subnet CIDR range for the Autonmous Database.
     */
    public readonly cidr!: pulumi.Output<string>;
    /**
     * The date and time that the Autonomous Database was created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The name of the Autonomous Database. The database name must be unique in
     * the project. The name must begin with a letter and can
     * contain a maximum of 30 alphanumeric characters.
     */
    public readonly database!: pulumi.Output<string>;
    public readonly deletionProtection!: pulumi.Output<boolean | undefined>;
    /**
     * The display name for the Autonomous Database. The name does not have to be unique within your project.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     */
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * The ID of the subscription entitlement associated with the Autonomous
     * Database.
     */
    public /*out*/ readonly entitlementId!: pulumi.Output<string>;
    /**
     * The labels or tags associated with the Autonomous Database. **Note**: This field is non-authoritative, and will only
     * manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
     * present on the resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Resource ID segment making up resource `name`. See documentation for resource type `oracledatabase.googleapis.com/AutonomousDatabaseBackup`.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Identifier. The name of the Autonomous Database resource in the following format:
     * projects/{project}/locations/{region}/autonomousDatabases/{autonomous_database}
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The name of the VPC network used by the Autonomous Database.
     * Format: projects/{project}/global/networks/{network}
     */
    public readonly network!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * The properties of an Autonomous Database.
     * Structure is documented below.
     */
    public readonly properties!: pulumi.Output<outputs.oracledatabase.AutonomousDatabaseProperties>;
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     */
    public /*out*/ readonly pulumiLabels!: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a AutonomousDatabase resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AutonomousDatabaseArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AutonomousDatabaseArgs | AutonomousDatabaseState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AutonomousDatabaseState | undefined;
            resourceInputs["adminPassword"] = state ? state.adminPassword : undefined;
            resourceInputs["autonomousDatabaseId"] = state ? state.autonomousDatabaseId : undefined;
            resourceInputs["cidr"] = state ? state.cidr : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["database"] = state ? state.database : undefined;
            resourceInputs["deletionProtection"] = state ? state.deletionProtection : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["entitlementId"] = state ? state.entitlementId : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["network"] = state ? state.network : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["properties"] = state ? state.properties : undefined;
            resourceInputs["pulumiLabels"] = state ? state.pulumiLabels : undefined;
        } else {
            const args = argsOrState as AutonomousDatabaseArgs | undefined;
            if ((!args || args.autonomousDatabaseId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'autonomousDatabaseId'");
            }
            if ((!args || args.cidr === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cidr'");
            }
            if ((!args || args.database === undefined) && !opts.urn) {
                throw new Error("Missing required property 'database'");
            }
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.network === undefined) && !opts.urn) {
                throw new Error("Missing required property 'network'");
            }
            if ((!args || args.properties === undefined) && !opts.urn) {
                throw new Error("Missing required property 'properties'");
            }
            resourceInputs["adminPassword"] = args ? args.adminPassword : undefined;
            resourceInputs["autonomousDatabaseId"] = args ? args.autonomousDatabaseId : undefined;
            resourceInputs["cidr"] = args ? args.cidr : undefined;
            resourceInputs["database"] = args ? args.database : undefined;
            resourceInputs["deletionProtection"] = args ? args.deletionProtection : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["network"] = args ? args.network : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["properties"] = args ? args.properties : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["entitlementId"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["pulumiLabels"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["effectiveLabels", "pulumiLabels"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(AutonomousDatabase.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AutonomousDatabase resources.
 */
export interface AutonomousDatabaseState {
    /**
     * The password for the default ADMIN user.
     */
    adminPassword?: pulumi.Input<string>;
    /**
     * The ID of the Autonomous Database to create. This value is restricted
     * to (^a-z?$) and must be a maximum of 63
     * characters in length. The value must start with a letter and end with
     * a letter or a number.
     */
    autonomousDatabaseId?: pulumi.Input<string>;
    /**
     * The subnet CIDR range for the Autonmous Database.
     */
    cidr?: pulumi.Input<string>;
    /**
     * The date and time that the Autonomous Database was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The name of the Autonomous Database. The database name must be unique in
     * the project. The name must begin with a letter and can
     * contain a maximum of 30 alphanumeric characters.
     */
    database?: pulumi.Input<string>;
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * The display name for the Autonomous Database. The name does not have to be unique within your project.
     */
    displayName?: pulumi.Input<string>;
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     */
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The ID of the subscription entitlement associated with the Autonomous
     * Database.
     */
    entitlementId?: pulumi.Input<string>;
    /**
     * The labels or tags associated with the Autonomous Database. **Note**: This field is non-authoritative, and will only
     * manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
     * present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Resource ID segment making up resource `name`. See documentation for resource type `oracledatabase.googleapis.com/AutonomousDatabaseBackup`.
     */
    location?: pulumi.Input<string>;
    /**
     * Identifier. The name of the Autonomous Database resource in the following format:
     * projects/{project}/locations/{region}/autonomousDatabases/{autonomous_database}
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the VPC network used by the Autonomous Database.
     * Format: projects/{project}/global/networks/{network}
     */
    network?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * The properties of an Autonomous Database.
     * Structure is documented below.
     */
    properties?: pulumi.Input<inputs.oracledatabase.AutonomousDatabaseProperties>;
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     */
    pulumiLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a AutonomousDatabase resource.
 */
export interface AutonomousDatabaseArgs {
    /**
     * The password for the default ADMIN user.
     */
    adminPassword?: pulumi.Input<string>;
    /**
     * The ID of the Autonomous Database to create. This value is restricted
     * to (^a-z?$) and must be a maximum of 63
     * characters in length. The value must start with a letter and end with
     * a letter or a number.
     */
    autonomousDatabaseId: pulumi.Input<string>;
    /**
     * The subnet CIDR range for the Autonmous Database.
     */
    cidr: pulumi.Input<string>;
    /**
     * The name of the Autonomous Database. The database name must be unique in
     * the project. The name must begin with a letter and can
     * contain a maximum of 30 alphanumeric characters.
     */
    database: pulumi.Input<string>;
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * The display name for the Autonomous Database. The name does not have to be unique within your project.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The labels or tags associated with the Autonomous Database. **Note**: This field is non-authoritative, and will only
     * manage the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels
     * present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Resource ID segment making up resource `name`. See documentation for resource type `oracledatabase.googleapis.com/AutonomousDatabaseBackup`.
     */
    location: pulumi.Input<string>;
    /**
     * The name of the VPC network used by the Autonomous Database.
     * Format: projects/{project}/global/networks/{network}
     */
    network: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * The properties of an Autonomous Database.
     * Structure is documented below.
     */
    properties: pulumi.Input<inputs.oracledatabase.AutonomousDatabaseProperties>;
}
