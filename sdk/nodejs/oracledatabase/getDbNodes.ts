// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * List all DbNodes of a Cloud VmCluster.
 *
 * For more information see the
 * [API](https://cloud.google.com/oracle/database/docs/reference/rest/v1/projects.locations.cloudVmClusters.dbNodes).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const myDbNodes = gcp.oracledatabase.getDbNodes({
 *     location: "us-east4",
 *     cloudVmCluster: "vmcluster-id",
 * });
 * ```
 *
 * ## Attributes reference
 *
 * The following attributes are exported:
 *
 * * `dbNodes` - List of dbNodes. Structure is documented below.
 *
 * <a name="nestedDbnodes"></a> The `dbNodes` block supports:
 *
 * * `name` - The name of the database node resource in the following format: projects/{project}/locations/{location}/cloudVmClusters/{cloudVmCluster}/dbNodes/{db_node}
 *
 * * `properties` - Various properties of the database node. Structure is documented below.
 *
 * <a name="nestedProperties"></a> The `properties` block supports:
 *
 * * `ocid`- OCID of database node.
 *
 * * `ocpuCount` - OCPU count per database node.
 *
 * * `memorySizeGb` - The allocated memory in GBs on the database node.
 *
 * * `dbNodeStorageSizeGb` - The allocated local node storage in GBs on the database node.
 *
 * * `dbServerOcid` - The OCID of the Database server associated with the database node.
 *
 * * `hostname` - The host name for the database node.
 *
 * * `state` - State of the database node.
 * <a name="nestedStates"></a>Possible values for `state` are:<br>
 * `PROVISIONING` - Indicates that the resource is being provisioned.<br>
 * `AVAILABLE` - Indicates that the resource is available.<br>
 * `UPDATING` - Indicates that the resource is being updated.<br>
 * `STOPPING` - Indicates that the resource is being stopped.<br>
 * `STOPPED` - Indicates that the resource is stopped.<br>
 * `STARTING` - Indicates that the resource is being started.<br>
 * `TERMINATING` - Indicates that the resource is being terminated.<br>
 * `TERMINATED` - Indicates that the resource is terminated.<br>
 * `FAILED` - Indicates that the resource has failed.<br>
 *
 * * `totalCpuCoreCount` - The total number of CPU cores reserved on the database node.
 */
export function getDbNodes(args: GetDbNodesArgs, opts?: pulumi.InvokeOptions): Promise<GetDbNodesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:oracledatabase/getDbNodes:getDbNodes", {
        "cloudVmCluster": args.cloudVmCluster,
        "location": args.location,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getDbNodes.
 */
export interface GetDbNodesArgs {
    /**
     * The ID of the VM Cluster.
     */
    cloudVmCluster: string;
    /**
     * The location of the resource.
     */
    location: string;
    /**
     * The project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    project?: string;
}

/**
 * A collection of values returned by getDbNodes.
 */
export interface GetDbNodesResult {
    readonly cloudVmCluster: string;
    readonly dbNodes: outputs.oracledatabase.GetDbNodesDbNode[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly location: string;
    readonly project?: string;
}
/**
 * List all DbNodes of a Cloud VmCluster.
 *
 * For more information see the
 * [API](https://cloud.google.com/oracle/database/docs/reference/rest/v1/projects.locations.cloudVmClusters.dbNodes).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const myDbNodes = gcp.oracledatabase.getDbNodes({
 *     location: "us-east4",
 *     cloudVmCluster: "vmcluster-id",
 * });
 * ```
 *
 * ## Attributes reference
 *
 * The following attributes are exported:
 *
 * * `dbNodes` - List of dbNodes. Structure is documented below.
 *
 * <a name="nestedDbnodes"></a> The `dbNodes` block supports:
 *
 * * `name` - The name of the database node resource in the following format: projects/{project}/locations/{location}/cloudVmClusters/{cloudVmCluster}/dbNodes/{db_node}
 *
 * * `properties` - Various properties of the database node. Structure is documented below.
 *
 * <a name="nestedProperties"></a> The `properties` block supports:
 *
 * * `ocid`- OCID of database node.
 *
 * * `ocpuCount` - OCPU count per database node.
 *
 * * `memorySizeGb` - The allocated memory in GBs on the database node.
 *
 * * `dbNodeStorageSizeGb` - The allocated local node storage in GBs on the database node.
 *
 * * `dbServerOcid` - The OCID of the Database server associated with the database node.
 *
 * * `hostname` - The host name for the database node.
 *
 * * `state` - State of the database node.
 * <a name="nestedStates"></a>Possible values for `state` are:<br>
 * `PROVISIONING` - Indicates that the resource is being provisioned.<br>
 * `AVAILABLE` - Indicates that the resource is available.<br>
 * `UPDATING` - Indicates that the resource is being updated.<br>
 * `STOPPING` - Indicates that the resource is being stopped.<br>
 * `STOPPED` - Indicates that the resource is stopped.<br>
 * `STARTING` - Indicates that the resource is being started.<br>
 * `TERMINATING` - Indicates that the resource is being terminated.<br>
 * `TERMINATED` - Indicates that the resource is terminated.<br>
 * `FAILED` - Indicates that the resource has failed.<br>
 *
 * * `totalCpuCoreCount` - The total number of CPU cores reserved on the database node.
 */
export function getDbNodesOutput(args: GetDbNodesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDbNodesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("gcp:oracledatabase/getDbNodes:getDbNodes", {
        "cloudVmCluster": args.cloudVmCluster,
        "location": args.location,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getDbNodes.
 */
export interface GetDbNodesOutputArgs {
    /**
     * The ID of the VM Cluster.
     */
    cloudVmCluster: pulumi.Input<string>;
    /**
     * The location of the resource.
     */
    location: pulumi.Input<string>;
    /**
     * The project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
