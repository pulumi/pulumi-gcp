// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * An OdbSubnet resource which represents a subnet under an OdbNetwork.
 *
 * To get more information about OdbSubnet, see:
 * * How-to Guides
 *     * [OracleDatabase@Google Cloud](https://cloud.google.com/oracle/database/docs/overview')
 *
 * ## Example Usage
 *
 * ### Oracledatabase Odbsubnet
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const my_odbsubnet = new gcp.oracledatabase.OdbSubnet("my-odbsubnet", {
 *     odbSubnetId: "my-odbsubnet",
 *     location: "europe-west2",
 *     project: "my-project",
 *     odbnetwork: "my-odbnetwork",
 *     cidrRange: "10.1.1.0/24",
 *     purpose: "CLIENT_SUBNET",
 *     labels: {
 *         terraform_created: "true",
 *     },
 *     deletionProtection: true,
 * });
 * ```
 *
 * ## Import
 *
 * OdbSubnet can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/locations/{{location}}/odbNetworks/{{odbnetwork}}/odbSubnets/{{odb_subnet_id}}`
 *
 * * `{{project}}/{{location}}/{{odbnetwork}}/{{odb_subnet_id}}`
 *
 * * `{{location}}/{{odbnetwork}}/{{odb_subnet_id}}`
 *
 * When using the `pulumi import` command, OdbSubnet can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:oracledatabase/odbSubnet:OdbSubnet default projects/{{project}}/locations/{{location}}/odbNetworks/{{odbnetwork}}/odbSubnets/{{odb_subnet_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:oracledatabase/odbSubnet:OdbSubnet default {{project}}/{{location}}/{{odbnetwork}}/{{odb_subnet_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:oracledatabase/odbSubnet:OdbSubnet default {{location}}/{{odbnetwork}}/{{odb_subnet_id}}
 * ```
 */
export class OdbSubnet extends pulumi.CustomResource {
    /**
     * Get an existing OdbSubnet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OdbSubnetState, opts?: pulumi.CustomResourceOptions): OdbSubnet {
        return new OdbSubnet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:oracledatabase/odbSubnet:OdbSubnet';

    /**
     * Returns true if the given object is an instance of OdbSubnet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OdbSubnet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OdbSubnet.__pulumiType;
    }

    /**
     * The CIDR range of the subnet.
     */
    declare public readonly cidrRange: pulumi.Output<string>;
    /**
     * The date and time that the OdbNetwork was created.
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    declare public readonly deletionProtection: pulumi.Output<boolean | undefined>;
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     */
    declare public /*out*/ readonly effectiveLabels: pulumi.Output<{[key: string]: string}>;
    /**
     * Labels or tags associated with the resource.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    declare public readonly labels: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * Identifier. The name of the OdbSubnet resource in the following format:
     * projects/{project}/locations/{location}/odbNetworks/{odb_network}/odbSubnets/{odb_subnet}
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    /**
     * The ID of the OdbSubnet to create. This value is restricted
     * to (^a-z?$) and must be a maximum of 63
     * characters in length. The value must start with a letter and end with
     * a letter or a number.
     */
    declare public readonly odbSubnetId: pulumi.Output<string>;
    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     */
    declare public readonly odbnetwork: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    declare public readonly project: pulumi.Output<string>;
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     */
    declare public /*out*/ readonly pulumiLabels: pulumi.Output<{[key: string]: string}>;
    /**
     * Purpose of the subnet.
     * Possible values:
     * CLIENT_SUBNET
     * BACKUP_SUBNET
     */
    declare public readonly purpose: pulumi.Output<string>;
    /**
     * State of the ODB Subnet.
     * Possible values:
     * PROVISIONING
     * AVAILABLE
     * TERMINATING
     * FAILED
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;

    /**
     * Create a OdbSubnet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OdbSubnetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OdbSubnetArgs | OdbSubnetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OdbSubnetState | undefined;
            resourceInputs["cidrRange"] = state?.cidrRange;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["deletionProtection"] = state?.deletionProtection;
            resourceInputs["effectiveLabels"] = state?.effectiveLabels;
            resourceInputs["labels"] = state?.labels;
            resourceInputs["location"] = state?.location;
            resourceInputs["name"] = state?.name;
            resourceInputs["odbSubnetId"] = state?.odbSubnetId;
            resourceInputs["odbnetwork"] = state?.odbnetwork;
            resourceInputs["project"] = state?.project;
            resourceInputs["pulumiLabels"] = state?.pulumiLabels;
            resourceInputs["purpose"] = state?.purpose;
            resourceInputs["state"] = state?.state;
        } else {
            const args = argsOrState as OdbSubnetArgs | undefined;
            if (args?.cidrRange === undefined && !opts.urn) {
                throw new Error("Missing required property 'cidrRange'");
            }
            if (args?.location === undefined && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if (args?.odbSubnetId === undefined && !opts.urn) {
                throw new Error("Missing required property 'odbSubnetId'");
            }
            if (args?.odbnetwork === undefined && !opts.urn) {
                throw new Error("Missing required property 'odbnetwork'");
            }
            if (args?.purpose === undefined && !opts.urn) {
                throw new Error("Missing required property 'purpose'");
            }
            resourceInputs["cidrRange"] = args?.cidrRange;
            resourceInputs["deletionProtection"] = args?.deletionProtection;
            resourceInputs["labels"] = args?.labels;
            resourceInputs["location"] = args?.location;
            resourceInputs["odbSubnetId"] = args?.odbSubnetId;
            resourceInputs["odbnetwork"] = args?.odbnetwork;
            resourceInputs["project"] = args?.project;
            resourceInputs["purpose"] = args?.purpose;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["pulumiLabels"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["effectiveLabels", "pulumiLabels"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(OdbSubnet.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OdbSubnet resources.
 */
export interface OdbSubnetState {
    /**
     * The CIDR range of the subnet.
     */
    cidrRange?: pulumi.Input<string>;
    /**
     * The date and time that the OdbNetwork was created.
     */
    createTime?: pulumi.Input<string>;
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     */
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Labels or tags associated with the resource.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     */
    location?: pulumi.Input<string>;
    /**
     * Identifier. The name of the OdbSubnet resource in the following format:
     * projects/{project}/locations/{location}/odbNetworks/{odb_network}/odbSubnets/{odb_subnet}
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the OdbSubnet to create. This value is restricted
     * to (^a-z?$) and must be a maximum of 63
     * characters in length. The value must start with a letter and end with
     * a letter or a number.
     */
    odbSubnetId?: pulumi.Input<string>;
    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     */
    odbnetwork?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     */
    pulumiLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Purpose of the subnet.
     * Possible values:
     * CLIENT_SUBNET
     * BACKUP_SUBNET
     */
    purpose?: pulumi.Input<string>;
    /**
     * State of the ODB Subnet.
     * Possible values:
     * PROVISIONING
     * AVAILABLE
     * TERMINATING
     * FAILED
     */
    state?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OdbSubnet resource.
 */
export interface OdbSubnetArgs {
    /**
     * The CIDR range of the subnet.
     */
    cidrRange: pulumi.Input<string>;
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * Labels or tags associated with the resource.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     */
    location: pulumi.Input<string>;
    /**
     * The ID of the OdbSubnet to create. This value is restricted
     * to (^a-z?$) and must be a maximum of 63
     * characters in length. The value must start with a letter and end with
     * a letter or a number.
     */
    odbSubnetId: pulumi.Input<string>;
    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     */
    odbnetwork: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * Purpose of the subnet.
     * Possible values:
     * CLIENT_SUBNET
     * BACKUP_SUBNET
     */
    purpose: pulumi.Input<string>;
}
