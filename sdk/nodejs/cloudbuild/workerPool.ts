// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * ## Import
 *
 * WorkerPool can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:cloudbuild/workerPool:WorkerPool default projects/{{project}}/locations/{{location}}/workerPools/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:cloudbuild/workerPool:WorkerPool default {{project}}/{{location}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:cloudbuild/workerPool:WorkerPool default {{location}}/{{name}}
 * ```
 */
export class WorkerPool extends pulumi.CustomResource {
    /**
     * Get an existing WorkerPool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkerPoolState, opts?: pulumi.CustomResourceOptions): WorkerPool {
        return new WorkerPool(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:cloudbuild/workerPool:WorkerPool';

    /**
     * Returns true if the given object is an instance of WorkerPool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WorkerPool {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkerPool.__pulumiType;
    }

    /**
     * Output only. Time at which the request to create the `WorkerPool` was received.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Output only. Time at which the request to delete the `WorkerPool` was received.
     */
    public /*out*/ readonly deleteTime!: pulumi.Output<string>;
    /**
     * The location for the resource
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * User-defined name of the `WorkerPool`.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Network configuration for the `WorkerPool`. Structure is documented below.
     */
    public readonly networkConfig!: pulumi.Output<outputs.cloudbuild.WorkerPoolNetworkConfig | undefined>;
    /**
     * The project for the resource
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * Output only. `WorkerPool` state. Possible values: STATE_UNSPECIFIED, PENDING, APPROVED, REJECTED, CANCELLED
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Output only. Time at which the request to update the `WorkerPool` was received.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * Configuration to be used for a creating workers in the `WorkerPool`. Structure is documented below.
     */
    public readonly workerConfig!: pulumi.Output<outputs.cloudbuild.WorkerPoolWorkerConfig>;

    /**
     * Create a WorkerPool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkerPoolArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkerPoolArgs | WorkerPoolState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WorkerPoolState | undefined;
            inputs["createTime"] = state ? state.createTime : undefined;
            inputs["deleteTime"] = state ? state.deleteTime : undefined;
            inputs["location"] = state ? state.location : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["networkConfig"] = state ? state.networkConfig : undefined;
            inputs["project"] = state ? state.project : undefined;
            inputs["state"] = state ? state.state : undefined;
            inputs["updateTime"] = state ? state.updateTime : undefined;
            inputs["workerConfig"] = state ? state.workerConfig : undefined;
        } else {
            const args = argsOrState as WorkerPoolArgs | undefined;
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            inputs["location"] = args ? args.location : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["networkConfig"] = args ? args.networkConfig : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["workerConfig"] = args ? args.workerConfig : undefined;
            inputs["createTime"] = undefined /*out*/;
            inputs["deleteTime"] = undefined /*out*/;
            inputs["state"] = undefined /*out*/;
            inputs["updateTime"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(WorkerPool.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WorkerPool resources.
 */
export interface WorkerPoolState {
    /**
     * Output only. Time at which the request to create the `WorkerPool` was received.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Output only. Time at which the request to delete the `WorkerPool` was received.
     */
    deleteTime?: pulumi.Input<string>;
    /**
     * The location for the resource
     */
    location?: pulumi.Input<string>;
    /**
     * User-defined name of the `WorkerPool`.
     */
    name?: pulumi.Input<string>;
    /**
     * Network configuration for the `WorkerPool`. Structure is documented below.
     */
    networkConfig?: pulumi.Input<inputs.cloudbuild.WorkerPoolNetworkConfig>;
    /**
     * The project for the resource
     */
    project?: pulumi.Input<string>;
    /**
     * Output only. `WorkerPool` state. Possible values: STATE_UNSPECIFIED, PENDING, APPROVED, REJECTED, CANCELLED
     */
    state?: pulumi.Input<string>;
    /**
     * Output only. Time at which the request to update the `WorkerPool` was received.
     */
    updateTime?: pulumi.Input<string>;
    /**
     * Configuration to be used for a creating workers in the `WorkerPool`. Structure is documented below.
     */
    workerConfig?: pulumi.Input<inputs.cloudbuild.WorkerPoolWorkerConfig>;
}

/**
 * The set of arguments for constructing a WorkerPool resource.
 */
export interface WorkerPoolArgs {
    /**
     * The location for the resource
     */
    location: pulumi.Input<string>;
    /**
     * User-defined name of the `WorkerPool`.
     */
    name?: pulumi.Input<string>;
    /**
     * Network configuration for the `WorkerPool`. Structure is documented below.
     */
    networkConfig?: pulumi.Input<inputs.cloudbuild.WorkerPoolNetworkConfig>;
    /**
     * The project for the resource
     */
    project?: pulumi.Input<string>;
    /**
     * Configuration to be used for a creating workers in the `WorkerPool`. Structure is documented below.
     */
    workerConfig?: pulumi.Input<inputs.cloudbuild.WorkerPoolWorkerConfig>;
}
