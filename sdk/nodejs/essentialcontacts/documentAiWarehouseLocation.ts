// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * A location is used to initialize a project.
 *
 * To get more information about Location, see:
 *
 * * [API documentation](https://cloud.google.com/document-warehouse/docs/reference/rest/v1/projects.locations)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/document-warehouse/docs/overview)
 *
 * ## Example Usage
 * ### Document Ai Warehouse Location
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const project = gcp.organizations.getProject({});
 * const example = new gcp.essentialcontacts.DocumentAiWarehouseLocation("example", {
 *     location: "us",
 *     projectNumber: project.then(project => project.number),
 *     accessControlMode: "ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_GCI",
 *     databaseType: "DB_INFRA_SPANNER",
 *     kmsKey: "dummy_key",
 *     documentCreatorDefaultRole: "DOCUMENT_ADMIN",
 * });
 * ```
 *
 * ## Import
 *
 * This resource does not support import.
 */
export class DocumentAiWarehouseLocation extends pulumi.CustomResource {
    /**
     * Get an existing DocumentAiWarehouseLocation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DocumentAiWarehouseLocationState, opts?: pulumi.CustomResourceOptions): DocumentAiWarehouseLocation {
        return new DocumentAiWarehouseLocation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:essentialcontacts/documentAiWarehouseLocation:DocumentAiWarehouseLocation';

    /**
     * Returns true if the given object is an instance of DocumentAiWarehouseLocation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DocumentAiWarehouseLocation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DocumentAiWarehouseLocation.__pulumiType;
    }

    /**
     * The access control mode for accessing the customer data.
     * Possible values are: `ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_GCI`, `ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_BYOID`, `ACL_MODE_UNIVERSAL_ACCESS`.
     */
    public readonly accessControlMode!: pulumi.Output<string>;
    /**
     * The type of database used to store customer data.
     * Possible values are: `DB_INFRA_SPANNER`, `DB_CLOUD_SQL_POSTGRES`.
     */
    public readonly databaseType!: pulumi.Output<string>;
    /**
     * The default role for the person who create a document.
     * Possible values are: `DOCUMENT_ADMIN`, `DOCUMENT_EDITOR`, `DOCUMENT_VIEWER`.
     */
    public readonly documentCreatorDefaultRole!: pulumi.Output<string | undefined>;
    /**
     * The KMS key used for CMEK encryption. It is required that
     * the kms key is in the same region as the endpoint. The
     * same key will be used for all provisioned resources, if
     * encryption is available. If the kmsKey is left empty, no
     * encryption will be enforced.
     */
    public readonly kmsKey!: pulumi.Output<string | undefined>;
    /**
     * The location in which the instance is to be provisioned. It takes the form projects/{projectNumber}/locations/{location}.
     *
     *
     * - - -
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The unique identifier of the project.
     */
    public readonly projectNumber!: pulumi.Output<string>;

    /**
     * Create a DocumentAiWarehouseLocation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DocumentAiWarehouseLocationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DocumentAiWarehouseLocationArgs | DocumentAiWarehouseLocationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DocumentAiWarehouseLocationState | undefined;
            resourceInputs["accessControlMode"] = state ? state.accessControlMode : undefined;
            resourceInputs["databaseType"] = state ? state.databaseType : undefined;
            resourceInputs["documentCreatorDefaultRole"] = state ? state.documentCreatorDefaultRole : undefined;
            resourceInputs["kmsKey"] = state ? state.kmsKey : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["projectNumber"] = state ? state.projectNumber : undefined;
        } else {
            const args = argsOrState as DocumentAiWarehouseLocationArgs | undefined;
            if ((!args || args.accessControlMode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accessControlMode'");
            }
            if ((!args || args.databaseType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'databaseType'");
            }
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.projectNumber === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectNumber'");
            }
            resourceInputs["accessControlMode"] = args ? args.accessControlMode : undefined;
            resourceInputs["databaseType"] = args ? args.databaseType : undefined;
            resourceInputs["documentCreatorDefaultRole"] = args ? args.documentCreatorDefaultRole : undefined;
            resourceInputs["kmsKey"] = args ? args.kmsKey : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["projectNumber"] = args ? args.projectNumber : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DocumentAiWarehouseLocation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DocumentAiWarehouseLocation resources.
 */
export interface DocumentAiWarehouseLocationState {
    /**
     * The access control mode for accessing the customer data.
     * Possible values are: `ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_GCI`, `ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_BYOID`, `ACL_MODE_UNIVERSAL_ACCESS`.
     */
    accessControlMode?: pulumi.Input<string>;
    /**
     * The type of database used to store customer data.
     * Possible values are: `DB_INFRA_SPANNER`, `DB_CLOUD_SQL_POSTGRES`.
     */
    databaseType?: pulumi.Input<string>;
    /**
     * The default role for the person who create a document.
     * Possible values are: `DOCUMENT_ADMIN`, `DOCUMENT_EDITOR`, `DOCUMENT_VIEWER`.
     */
    documentCreatorDefaultRole?: pulumi.Input<string>;
    /**
     * The KMS key used for CMEK encryption. It is required that
     * the kms key is in the same region as the endpoint. The
     * same key will be used for all provisioned resources, if
     * encryption is available. If the kmsKey is left empty, no
     * encryption will be enforced.
     */
    kmsKey?: pulumi.Input<string>;
    /**
     * The location in which the instance is to be provisioned. It takes the form projects/{projectNumber}/locations/{location}.
     *
     *
     * - - -
     */
    location?: pulumi.Input<string>;
    /**
     * The unique identifier of the project.
     */
    projectNumber?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DocumentAiWarehouseLocation resource.
 */
export interface DocumentAiWarehouseLocationArgs {
    /**
     * The access control mode for accessing the customer data.
     * Possible values are: `ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_GCI`, `ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_BYOID`, `ACL_MODE_UNIVERSAL_ACCESS`.
     */
    accessControlMode: pulumi.Input<string>;
    /**
     * The type of database used to store customer data.
     * Possible values are: `DB_INFRA_SPANNER`, `DB_CLOUD_SQL_POSTGRES`.
     */
    databaseType: pulumi.Input<string>;
    /**
     * The default role for the person who create a document.
     * Possible values are: `DOCUMENT_ADMIN`, `DOCUMENT_EDITOR`, `DOCUMENT_VIEWER`.
     */
    documentCreatorDefaultRole?: pulumi.Input<string>;
    /**
     * The KMS key used for CMEK encryption. It is required that
     * the kms key is in the same region as the endpoint. The
     * same key will be used for all provisioned resources, if
     * encryption is available. If the kmsKey is left empty, no
     * encryption will be enforced.
     */
    kmsKey?: pulumi.Input<string>;
    /**
     * The location in which the instance is to be provisioned. It takes the form projects/{projectNumber}/locations/{location}.
     *
     *
     * - - -
     */
    location: pulumi.Input<string>;
    /**
     * The unique identifier of the project.
     */
    projectNumber: pulumi.Input<string>;
}
