// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { BareMetalClusterArgs, BareMetalClusterState } from "./bareMetalCluster";
export type BareMetalCluster = import("./bareMetalCluster").BareMetalCluster;
export const BareMetalCluster: typeof import("./bareMetalCluster").BareMetalCluster = null as any;
utilities.lazyLoad(exports, ["BareMetalCluster"], () => require("./bareMetalCluster"));

export { BareMetalNodePoolArgs, BareMetalNodePoolState } from "./bareMetalNodePool";
export type BareMetalNodePool = import("./bareMetalNodePool").BareMetalNodePool;
export const BareMetalNodePool: typeof import("./bareMetalNodePool").BareMetalNodePool = null as any;
utilities.lazyLoad(exports, ["BareMetalNodePool"], () => require("./bareMetalNodePool"));

export { VMwareClusterArgs, VMwareClusterState } from "./vmwareCluster";
export type VMwareCluster = import("./vmwareCluster").VMwareCluster;
export const VMwareCluster: typeof import("./vmwareCluster").VMwareCluster = null as any;
utilities.lazyLoad(exports, ["VMwareCluster"], () => require("./vmwareCluster"));

export { VMwareNodePoolArgs, VMwareNodePoolState } from "./vmwareNodePool";
export type VMwareNodePool = import("./vmwareNodePool").VMwareNodePool;
export const VMwareNodePool: typeof import("./vmwareNodePool").VMwareNodePool = null as any;
utilities.lazyLoad(exports, ["VMwareNodePool"], () => require("./vmwareNodePool"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "gcp:gkeonprem/bareMetalCluster:BareMetalCluster":
                return new BareMetalCluster(name, <any>undefined, { urn })
            case "gcp:gkeonprem/bareMetalNodePool:BareMetalNodePool":
                return new BareMetalNodePool(name, <any>undefined, { urn })
            case "gcp:gkeonprem/vMwareCluster:VMwareCluster":
                return new VMwareCluster(name, <any>undefined, { urn })
            case "gcp:gkeonprem/vMwareNodePool:VMwareNodePool":
                return new VMwareNodePool(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "gkeonprem/bareMetalCluster", _module)
pulumi.runtime.registerResourceModule("gcp", "gkeonprem/bareMetalNodePool", _module)
pulumi.runtime.registerResourceModule("gcp", "gkeonprem/vMwareCluster", _module)
pulumi.runtime.registerResourceModule("gcp", "gkeonprem/vMwareNodePool", _module)
