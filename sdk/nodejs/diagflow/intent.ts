// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Represents a Dialogflow intent. Intents convert a number of user expressions or patterns into an action. An action
 * is an extraction of a user command or sentence semantics.
 *
 * To get more information about Intent, see:
 *
 * * [API documentation](https://cloud.google.com/dialogflow/docs/reference/rest/v2/projects.agent.intents)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/dialogflow/docs/)
 *
 * ## Example Usage
 * ### Dialogflow Intent Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const basicAgent = new gcp.diagflow.Agent("basicAgent", {
 *     displayName: "example_agent",
 *     defaultLanguageCode: "en",
 *     timeZone: "America/New_York",
 * });
 * const basicIntent = new gcp.diagflow.Intent("basicIntent", {displayName: "basic-intent"}, {
 *     dependsOn: [basicAgent],
 * });
 * ```
 *
 * ## Import
 *
 * Intent can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:diagflow/intent:Intent default {{name}}
 * ```
 */
export class Intent extends pulumi.CustomResource {
    /**
     * Get an existing Intent resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IntentState, opts?: pulumi.CustomResourceOptions): Intent {
        return new Intent(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:diagflow/intent:Intent';

    /**
     * Returns true if the given object is an instance of Intent.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Intent {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Intent.__pulumiType;
    }

    /**
     * The name of the action associated with the intent.
     * Note: The action name must not contain whitespaces.
     */
    public readonly action!: pulumi.Output<string>;
    /**
     * The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED
     * (i.e. default platform).
     * Each value may be one of `FACEBOOK`, `SLACK`, `TELEGRAM`, `KIK`, `SKYPE`, `LINE`, `VIBER`, `ACTIONS_ON_GOOGLE`, and `GOOGLE_HANGOUTS`.
     */
    public readonly defaultResponsePlatforms!: pulumi.Output<string[] | undefined>;
    /**
     * The name of this intent to be displayed on the console.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of
     * the contexts must be present in the active user session for an event to trigger this intent. See the
     * [events reference](https://cloud.google.com/dialogflow/docs/events-overview) for more details.
     */
    public readonly events!: pulumi.Output<string[] | undefined>;
    /**
     * Information about all followup intents that have this intent as a direct or indirect parent. We populate this field only
     * in the output.
     */
    public /*out*/ readonly followupIntentInfos!: pulumi.Output<outputs.diagflow.IntentFollowupIntentInfo[]>;
    /**
     * The list of context names required for this intent to be triggered.
     * Format: projects/<Project ID>/agent/sessions/-/contexts/<Context ID>.
     */
    public readonly inputContextNames!: pulumi.Output<string[] | undefined>;
    /**
     * Indicates whether this is a fallback intent.
     */
    public readonly isFallback!: pulumi.Output<boolean>;
    /**
     * Indicates whether Machine Learning is disabled for the intent.
     * Note: If mlDisabled setting is set to true, then this intent is not taken into account during inference in ML
     * ONLY match mode. Also, auto-markup in the UI is turned off.
     */
    public readonly mlDisabled!: pulumi.Output<boolean>;
    /**
     * The unique identifier of this intent. Format: projects/<Project ID>/agent/intents/<Intent ID>.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The unique identifier of the parent intent in the chain of followup intents.
     * Format: projects/<Project ID>/agent/intents/<Intent ID>.
     */
    public readonly parentFollowupIntentName!: pulumi.Output<string>;
    /**
     * The priority of this intent. Higher numbers represent higher priorities.
     * - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds
     * to the Normal priority in the console.
     * - If the supplied value is negative, the intent is ignored in runtime detect intent requests.
     */
    public readonly priority!: pulumi.Output<number>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * Indicates whether to delete all contexts in the current session when this intent is matched.
     */
    public readonly resetContexts!: pulumi.Output<boolean>;
    /**
     * The unique identifier of the root intent in the chain of followup intents. It identifies the correct followup intents
     * chain for this intent. Format: projects/<Project ID>/agent/intents/<Intent ID>.
     */
    public /*out*/ readonly rootFollowupIntentName!: pulumi.Output<string>;
    /**
     * Indicates whether webhooks are enabled for the intent.
     * * WEBHOOK_STATE_ENABLED: Webhook is enabled in the agent and in the intent.
     * * WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING: Webhook is enabled in the agent and in the intent. Also, each slot
     * filling prompt is forwarded to the webhook.
     * Possible values are `WEBHOOK_STATE_ENABLED` and `WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING`.
     */
    public readonly webhookState!: pulumi.Output<string>;

    /**
     * Create a Intent resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IntentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IntentArgs | IntentState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IntentState | undefined;
            inputs["action"] = state ? state.action : undefined;
            inputs["defaultResponsePlatforms"] = state ? state.defaultResponsePlatforms : undefined;
            inputs["displayName"] = state ? state.displayName : undefined;
            inputs["events"] = state ? state.events : undefined;
            inputs["followupIntentInfos"] = state ? state.followupIntentInfos : undefined;
            inputs["inputContextNames"] = state ? state.inputContextNames : undefined;
            inputs["isFallback"] = state ? state.isFallback : undefined;
            inputs["mlDisabled"] = state ? state.mlDisabled : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["parentFollowupIntentName"] = state ? state.parentFollowupIntentName : undefined;
            inputs["priority"] = state ? state.priority : undefined;
            inputs["project"] = state ? state.project : undefined;
            inputs["resetContexts"] = state ? state.resetContexts : undefined;
            inputs["rootFollowupIntentName"] = state ? state.rootFollowupIntentName : undefined;
            inputs["webhookState"] = state ? state.webhookState : undefined;
        } else {
            const args = argsOrState as IntentArgs | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            inputs["action"] = args ? args.action : undefined;
            inputs["defaultResponsePlatforms"] = args ? args.defaultResponsePlatforms : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["events"] = args ? args.events : undefined;
            inputs["inputContextNames"] = args ? args.inputContextNames : undefined;
            inputs["isFallback"] = args ? args.isFallback : undefined;
            inputs["mlDisabled"] = args ? args.mlDisabled : undefined;
            inputs["parentFollowupIntentName"] = args ? args.parentFollowupIntentName : undefined;
            inputs["priority"] = args ? args.priority : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["resetContexts"] = args ? args.resetContexts : undefined;
            inputs["webhookState"] = args ? args.webhookState : undefined;
            inputs["followupIntentInfos"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["rootFollowupIntentName"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(Intent.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Intent resources.
 */
export interface IntentState {
    /**
     * The name of the action associated with the intent.
     * Note: The action name must not contain whitespaces.
     */
    readonly action?: pulumi.Input<string>;
    /**
     * The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED
     * (i.e. default platform).
     * Each value may be one of `FACEBOOK`, `SLACK`, `TELEGRAM`, `KIK`, `SKYPE`, `LINE`, `VIBER`, `ACTIONS_ON_GOOGLE`, and `GOOGLE_HANGOUTS`.
     */
    readonly defaultResponsePlatforms?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of this intent to be displayed on the console.
     */
    readonly displayName?: pulumi.Input<string>;
    /**
     * The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of
     * the contexts must be present in the active user session for an event to trigger this intent. See the
     * [events reference](https://cloud.google.com/dialogflow/docs/events-overview) for more details.
     */
    readonly events?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Information about all followup intents that have this intent as a direct or indirect parent. We populate this field only
     * in the output.
     */
    readonly followupIntentInfos?: pulumi.Input<pulumi.Input<inputs.diagflow.IntentFollowupIntentInfo>[]>;
    /**
     * The list of context names required for this intent to be triggered.
     * Format: projects/<Project ID>/agent/sessions/-/contexts/<Context ID>.
     */
    readonly inputContextNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether this is a fallback intent.
     */
    readonly isFallback?: pulumi.Input<boolean>;
    /**
     * Indicates whether Machine Learning is disabled for the intent.
     * Note: If mlDisabled setting is set to true, then this intent is not taken into account during inference in ML
     * ONLY match mode. Also, auto-markup in the UI is turned off.
     */
    readonly mlDisabled?: pulumi.Input<boolean>;
    /**
     * The unique identifier of this intent. Format: projects/<Project ID>/agent/intents/<Intent ID>.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The unique identifier of the parent intent in the chain of followup intents.
     * Format: projects/<Project ID>/agent/intents/<Intent ID>.
     */
    readonly parentFollowupIntentName?: pulumi.Input<string>;
    /**
     * The priority of this intent. Higher numbers represent higher priorities.
     * - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds
     * to the Normal priority in the console.
     * - If the supplied value is negative, the intent is ignored in runtime detect intent requests.
     */
    readonly priority?: pulumi.Input<number>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
    /**
     * Indicates whether to delete all contexts in the current session when this intent is matched.
     */
    readonly resetContexts?: pulumi.Input<boolean>;
    /**
     * The unique identifier of the root intent in the chain of followup intents. It identifies the correct followup intents
     * chain for this intent. Format: projects/<Project ID>/agent/intents/<Intent ID>.
     */
    readonly rootFollowupIntentName?: pulumi.Input<string>;
    /**
     * Indicates whether webhooks are enabled for the intent.
     * * WEBHOOK_STATE_ENABLED: Webhook is enabled in the agent and in the intent.
     * * WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING: Webhook is enabled in the agent and in the intent. Also, each slot
     * filling prompt is forwarded to the webhook.
     * Possible values are `WEBHOOK_STATE_ENABLED` and `WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING`.
     */
    readonly webhookState?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Intent resource.
 */
export interface IntentArgs {
    /**
     * The name of the action associated with the intent.
     * Note: The action name must not contain whitespaces.
     */
    readonly action?: pulumi.Input<string>;
    /**
     * The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED
     * (i.e. default platform).
     * Each value may be one of `FACEBOOK`, `SLACK`, `TELEGRAM`, `KIK`, `SKYPE`, `LINE`, `VIBER`, `ACTIONS_ON_GOOGLE`, and `GOOGLE_HANGOUTS`.
     */
    readonly defaultResponsePlatforms?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of this intent to be displayed on the console.
     */
    readonly displayName: pulumi.Input<string>;
    /**
     * The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of
     * the contexts must be present in the active user session for an event to trigger this intent. See the
     * [events reference](https://cloud.google.com/dialogflow/docs/events-overview) for more details.
     */
    readonly events?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The list of context names required for this intent to be triggered.
     * Format: projects/<Project ID>/agent/sessions/-/contexts/<Context ID>.
     */
    readonly inputContextNames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether this is a fallback intent.
     */
    readonly isFallback?: pulumi.Input<boolean>;
    /**
     * Indicates whether Machine Learning is disabled for the intent.
     * Note: If mlDisabled setting is set to true, then this intent is not taken into account during inference in ML
     * ONLY match mode. Also, auto-markup in the UI is turned off.
     */
    readonly mlDisabled?: pulumi.Input<boolean>;
    /**
     * The unique identifier of the parent intent in the chain of followup intents.
     * Format: projects/<Project ID>/agent/intents/<Intent ID>.
     */
    readonly parentFollowupIntentName?: pulumi.Input<string>;
    /**
     * The priority of this intent. Higher numbers represent higher priorities.
     * - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds
     * to the Normal priority in the console.
     * - If the supplied value is negative, the intent is ignored in runtime detect intent requests.
     */
    readonly priority?: pulumi.Input<number>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
    /**
     * Indicates whether to delete all contexts in the current session when this intent is matched.
     */
    readonly resetContexts?: pulumi.Input<boolean>;
    /**
     * Indicates whether webhooks are enabled for the intent.
     * * WEBHOOK_STATE_ENABLED: Webhook is enabled in the agent and in the intent.
     * * WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING: Webhook is enabled in the agent and in the intent. Also, each slot
     * filling prompt is forwarded to the webhook.
     * Possible values are `WEBHOOK_STATE_ENABLED` and `WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING`.
     */
    readonly webhookState?: pulumi.Input<string>;
}
