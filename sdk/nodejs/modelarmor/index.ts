// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { FloorsettingArgs, FloorsettingState } from "./floorsetting";
export type Floorsetting = import("./floorsetting").Floorsetting;
export const Floorsetting: typeof import("./floorsetting").Floorsetting = null as any;
utilities.lazyLoad(exports, ["Floorsetting"], () => require("./floorsetting"));

export { TemplateArgs, TemplateState } from "./template";
export type Template = import("./template").Template;
export const Template: typeof import("./template").Template = null as any;
utilities.lazyLoad(exports, ["Template"], () => require("./template"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "gcp:modelarmor/floorsetting:Floorsetting":
                return new Floorsetting(name, <any>undefined, { urn })
            case "gcp:modelarmor/template:Template":
                return new Template(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "modelarmor/floorsetting", _module)
pulumi.runtime.registerResourceModule("gcp", "modelarmor/template", _module)
