// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ### Cloudquotas Quota Adjuster Settings Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const adjusterSettings = new gcp.cloudquota.SQuotaAdjusterSettings("adjuster_settings", {
 *     parent: "projects/104740170505",
 *     enablement: "ENABLED",
 * });
 * ```
 *
 * ## Import
 *
 * QuotaAdjusterSettings can be imported using any of these accepted formats:
 *
 * * `{{parent}}/locations/global/quotaAdjusterSettings`
 *
 * When using the `pulumi import` command, QuotaAdjusterSettings can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:cloudquota/sQuotaAdjusterSettings:SQuotaAdjusterSettings default {{parent}}/locations/global/quotaAdjusterSettings
 * ```
 */
export class SQuotaAdjusterSettings extends pulumi.CustomResource {
    /**
     * Get an existing SQuotaAdjusterSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SQuotaAdjusterSettingsState, opts?: pulumi.CustomResourceOptions): SQuotaAdjusterSettings {
        return new SQuotaAdjusterSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:cloudquota/sQuotaAdjusterSettings:SQuotaAdjusterSettings';

    /**
     * Returns true if the given object is an instance of SQuotaAdjusterSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SQuotaAdjusterSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SQuotaAdjusterSettings.__pulumiType;
    }

    /**
     * The resource container that determines if the quota adjuster is set for this project.
     * Expect this field to be empty currently.
     */
    public /*out*/ readonly effectiveContainer!: pulumi.Output<string>;
    /**
     * Based on the effective container`s setting above, determines Whether this resource container has the quota adjuster enabled.
     * Expect this field to be empty currently.
     */
    public /*out*/ readonly effectiveEnablement!: pulumi.Output<string>;
    /**
     * Required. The configured value of the enablement at the given resource.
     * Possible values are: `ENABLED`, `DISABLED`.
     */
    public readonly enablement!: pulumi.Output<string>;
    /**
     * The parent of the quota preference. Allowed parent format is "projects/[project-id / number]".
     *
     *
     * - - -
     */
    public readonly parent!: pulumi.Output<string>;

    /**
     * Create a SQuotaAdjusterSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SQuotaAdjusterSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SQuotaAdjusterSettingsArgs | SQuotaAdjusterSettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SQuotaAdjusterSettingsState | undefined;
            resourceInputs["effectiveContainer"] = state ? state.effectiveContainer : undefined;
            resourceInputs["effectiveEnablement"] = state ? state.effectiveEnablement : undefined;
            resourceInputs["enablement"] = state ? state.enablement : undefined;
            resourceInputs["parent"] = state ? state.parent : undefined;
        } else {
            const args = argsOrState as SQuotaAdjusterSettingsArgs | undefined;
            if ((!args || args.enablement === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enablement'");
            }
            resourceInputs["enablement"] = args ? args.enablement : undefined;
            resourceInputs["parent"] = args ? args.parent : undefined;
            resourceInputs["effectiveContainer"] = undefined /*out*/;
            resourceInputs["effectiveEnablement"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SQuotaAdjusterSettings.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SQuotaAdjusterSettings resources.
 */
export interface SQuotaAdjusterSettingsState {
    /**
     * The resource container that determines if the quota adjuster is set for this project.
     * Expect this field to be empty currently.
     */
    effectiveContainer?: pulumi.Input<string>;
    /**
     * Based on the effective container`s setting above, determines Whether this resource container has the quota adjuster enabled.
     * Expect this field to be empty currently.
     */
    effectiveEnablement?: pulumi.Input<string>;
    /**
     * Required. The configured value of the enablement at the given resource.
     * Possible values are: `ENABLED`, `DISABLED`.
     */
    enablement?: pulumi.Input<string>;
    /**
     * The parent of the quota preference. Allowed parent format is "projects/[project-id / number]".
     *
     *
     * - - -
     */
    parent?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SQuotaAdjusterSettings resource.
 */
export interface SQuotaAdjusterSettingsArgs {
    /**
     * Required. The configured value of the enablement at the given resource.
     * Possible values are: `ENABLED`, `DISABLED`.
     */
    enablement: pulumi.Input<string>;
    /**
     * The parent of the quota preference. Allowed parent format is "projects/[project-id / number]".
     *
     *
     * - - -
     */
    parent?: pulumi.Input<string>;
}
