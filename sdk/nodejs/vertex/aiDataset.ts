// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * A collection of DataItems and Annotations on them.
 *
 * To get more information about Dataset, see:
 *
 * * [API documentation](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.datasets)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/vertex-ai/docs)
 *
 * ## Example Usage
 * ### Vertex Ai Dataset
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const dataset = new gcp.vertex.AiDataset("dataset", {
 *     displayName: "terraform",
 *     metadataSchemaUri: "gs://google-cloud-aiplatform/schema/dataset/metadata/image_1.0.0.yaml",
 *     region: "us-central1",
 * });
 * ```
 *
 * ## Import
 *
 * This resource does not support import.
 */
export class AiDataset extends pulumi.CustomResource {
    /**
     * Get an existing AiDataset resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AiDatasetState, opts?: pulumi.CustomResourceOptions): AiDataset {
        return new AiDataset(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:vertex/aiDataset:AiDataset';

    /**
     * Returns true if the given object is an instance of AiDataset.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AiDataset {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AiDataset.__pulumiType;
    }

    /**
     * The timestamp of when the workflow was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
     * fractional digits.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The user-defined name of the Dataset. The name can be up to 128 characters long and can be consist of any UTF-8 characters.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Customer-managed encryption key spec for a Dataset. If set, this Dataset and all sub-resources of this Dataset will be secured by this key.
     * Structure is documented below.
     */
    public readonly encryptionSpec!: pulumi.Output<outputs.vertex.AiDatasetEncryptionSpec | undefined>;
    /**
     * A set of key/value label pairs to assign to this Workflow.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/metadata/.
     */
    public readonly metadataSchemaUri!: pulumi.Output<string>;
    /**
     * The resource name of the Dataset. This value is set by Google.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * The region of the dataset. eg us-central1
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * The timestamp of when the workflow was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to
     * nine fractional digits.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a AiDataset resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AiDatasetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AiDatasetArgs | AiDatasetState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AiDatasetState | undefined;
            inputs["createTime"] = state ? state.createTime : undefined;
            inputs["displayName"] = state ? state.displayName : undefined;
            inputs["encryptionSpec"] = state ? state.encryptionSpec : undefined;
            inputs["labels"] = state ? state.labels : undefined;
            inputs["metadataSchemaUri"] = state ? state.metadataSchemaUri : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["project"] = state ? state.project : undefined;
            inputs["region"] = state ? state.region : undefined;
            inputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as AiDatasetArgs | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.metadataSchemaUri === undefined) && !opts.urn) {
                throw new Error("Missing required property 'metadataSchemaUri'");
            }
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["encryptionSpec"] = args ? args.encryptionSpec : undefined;
            inputs["labels"] = args ? args.labels : undefined;
            inputs["metadataSchemaUri"] = args ? args.metadataSchemaUri : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["region"] = args ? args.region : undefined;
            inputs["createTime"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["updateTime"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(AiDataset.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AiDataset resources.
 */
export interface AiDatasetState {
    /**
     * The timestamp of when the workflow was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
     * fractional digits.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The user-defined name of the Dataset. The name can be up to 128 characters long and can be consist of any UTF-8 characters.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Customer-managed encryption key spec for a Dataset. If set, this Dataset and all sub-resources of this Dataset will be secured by this key.
     * Structure is documented below.
     */
    encryptionSpec?: pulumi.Input<inputs.vertex.AiDatasetEncryptionSpec>;
    /**
     * A set of key/value label pairs to assign to this Workflow.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/metadata/.
     */
    metadataSchemaUri?: pulumi.Input<string>;
    /**
     * The resource name of the Dataset. This value is set by Google.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The region of the dataset. eg us-central1
     */
    region?: pulumi.Input<string>;
    /**
     * The timestamp of when the workflow was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to
     * nine fractional digits.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AiDataset resource.
 */
export interface AiDatasetArgs {
    /**
     * The user-defined name of the Dataset. The name can be up to 128 characters long and can be consist of any UTF-8 characters.
     */
    displayName: pulumi.Input<string>;
    /**
     * Customer-managed encryption key spec for a Dataset. If set, this Dataset and all sub-resources of this Dataset will be secured by this key.
     * Structure is documented below.
     */
    encryptionSpec?: pulumi.Input<inputs.vertex.AiDatasetEncryptionSpec>;
    /**
     * A set of key/value label pairs to assign to this Workflow.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Points to a YAML file stored on Google Cloud Storage describing additional information about the Dataset. The schema is defined as an OpenAPI 3.0.2 Schema Object. The schema files that can be used here are found in gs://google-cloud-aiplatform/schema/dataset/metadata/.
     */
    metadataSchemaUri: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The region of the dataset. eg us-central1
     */
    region?: pulumi.Input<string>;
}
