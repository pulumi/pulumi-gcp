// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * A representation of a collection of database items organized in a way that allows for approximate nearest neighbor (a.k.a ANN) algorithms search.
 */
export function getAiIndex(args: GetAiIndexArgs, opts?: pulumi.InvokeOptions): Promise<GetAiIndexResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:vertex/getAiIndex:getAiIndex", {
        "name": args.name,
        "project": args.project,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getAiIndex.
 */
export interface GetAiIndexArgs {
    /**
     * The name of the index.
     */
    name: string;
    /**
     * The ID of the project in which the resource belongs.
     */
    project?: string;
    /**
     * The region of the index.
     *
     * - - -
     */
    region: string;
}

/**
 * A collection of values returned by getAiIndex.
 */
export interface GetAiIndexResult {
    readonly createTime: string;
    readonly deployedIndexes: outputs.vertex.GetAiIndexDeployedIndex[];
    readonly description: string;
    readonly displayName: string;
    readonly effectiveLabels: {[key: string]: string};
    readonly etag: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly indexStats: outputs.vertex.GetAiIndexIndexStat[];
    readonly indexUpdateMethod: string;
    readonly labels: {[key: string]: string};
    readonly metadataSchemaUri: string;
    readonly metadatas: outputs.vertex.GetAiIndexMetadata[];
    readonly name: string;
    readonly project?: string;
    readonly pulumiLabels: {[key: string]: string};
    readonly region: string;
    readonly updateTime: string;
}
/**
 * A representation of a collection of database items organized in a way that allows for approximate nearest neighbor (a.k.a ANN) algorithms search.
 */
export function getAiIndexOutput(args: GetAiIndexOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAiIndexResult> {
    return pulumi.output(args).apply((a: any) => getAiIndex(a, opts))
}

/**
 * A collection of arguments for invoking getAiIndex.
 */
export interface GetAiIndexOutputArgs {
    /**
     * The name of the index.
     */
    name: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     */
    project?: pulumi.Input<string>;
    /**
     * The region of the index.
     *
     * - - -
     */
    region: pulumi.Input<string>;
}
