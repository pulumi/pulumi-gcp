// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * An endpoint indexes are deployed into. An index endpoint can have multiple deployed indexes.
 *
 * To get more information about IndexEndpoint, see:
 *
 * * [API documentation](https://cloud.google.com/vertex-ai/docs/reference/rest/v1/projects.locations.indexEndpoints/)
 *
 * ## Example Usage
 *
 * ## Import
 *
 * IndexEndpoint can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:vertex/aiIndexEndpoint:AiIndexEndpoint default projects/{{project}}/locations/{{region}}/indexEndpoints/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:vertex/aiIndexEndpoint:AiIndexEndpoint default {{project}}/{{region}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:vertex/aiIndexEndpoint:AiIndexEndpoint default {{region}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:vertex/aiIndexEndpoint:AiIndexEndpoint default {{name}}
 * ```
 */
export class AiIndexEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing AiIndexEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AiIndexEndpointState, opts?: pulumi.CustomResourceOptions): AiIndexEndpoint {
        return new AiIndexEndpoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:vertex/aiIndexEndpoint:AiIndexEndpoint';

    /**
     * Returns true if the given object is an instance of AiIndexEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AiIndexEndpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AiIndexEndpoint.__pulumiType;
    }

    /**
     * The timestamp of when the Index was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The description of the Index.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The display name of the Index. The name can be up to 128 characters long and can consist of any UTF-8 characters.
     *
     *
     * - - -
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Used to perform consistent read-modify-write updates.
     */
    public /*out*/ readonly etag!: pulumi.Output<string>;
    /**
     * The labels with user-defined metadata to organize your Indexes.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The resource name of the Index.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The full name of the Google Compute Engine [network](https://cloud.google.com//compute/docs/networks-and-firewalls#networks) to which the index endpoint should be peered.
     * Private services access must already be configured for the network. If left unspecified, the index endpoint is not peered with any network.
     * [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert): `projects/{project}/global/networks/{network}`.
     * Where `{project}` is a project number, as in `12345`, and `{network}` is network name.
     */
    public readonly network!: pulumi.Output<string | undefined>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * If publicEndpointEnabled is true, this field will be populated with the domain name to use for this index endpoint.
     */
    public /*out*/ readonly publicEndpointDomainName!: pulumi.Output<string>;
    /**
     * If true, the deployed index will be accessible through public endpoint.
     */
    public readonly publicEndpointEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The region of the index endpoint. eg us-central1
     */
    public readonly region!: pulumi.Output<string | undefined>;
    /**
     * The timestamp of when the Index was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a AiIndexEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AiIndexEndpointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AiIndexEndpointArgs | AiIndexEndpointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AiIndexEndpointState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["etag"] = state ? state.etag : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["network"] = state ? state.network : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["publicEndpointDomainName"] = state ? state.publicEndpointDomainName : undefined;
            resourceInputs["publicEndpointEnabled"] = state ? state.publicEndpointEnabled : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as AiIndexEndpointArgs | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["network"] = args ? args.network : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["publicEndpointEnabled"] = args ? args.publicEndpointEnabled : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["publicEndpointDomainName"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AiIndexEndpoint.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AiIndexEndpoint resources.
 */
export interface AiIndexEndpointState {
    /**
     * The timestamp of when the Index was created in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The description of the Index.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of the Index. The name can be up to 128 characters long and can consist of any UTF-8 characters.
     *
     *
     * - - -
     */
    displayName?: pulumi.Input<string>;
    /**
     * Used to perform consistent read-modify-write updates.
     */
    etag?: pulumi.Input<string>;
    /**
     * The labels with user-defined metadata to organize your Indexes.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The resource name of the Index.
     */
    name?: pulumi.Input<string>;
    /**
     * The full name of the Google Compute Engine [network](https://cloud.google.com//compute/docs/networks-and-firewalls#networks) to which the index endpoint should be peered.
     * Private services access must already be configured for the network. If left unspecified, the index endpoint is not peered with any network.
     * [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert): `projects/{project}/global/networks/{network}`.
     * Where `{project}` is a project number, as in `12345`, and `{network}` is network name.
     */
    network?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * If publicEndpointEnabled is true, this field will be populated with the domain name to use for this index endpoint.
     */
    publicEndpointDomainName?: pulumi.Input<string>;
    /**
     * If true, the deployed index will be accessible through public endpoint.
     */
    publicEndpointEnabled?: pulumi.Input<boolean>;
    /**
     * The region of the index endpoint. eg us-central1
     */
    region?: pulumi.Input<string>;
    /**
     * The timestamp of when the Index was last updated in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AiIndexEndpoint resource.
 */
export interface AiIndexEndpointArgs {
    /**
     * The description of the Index.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of the Index. The name can be up to 128 characters long and can consist of any UTF-8 characters.
     *
     *
     * - - -
     */
    displayName: pulumi.Input<string>;
    /**
     * The labels with user-defined metadata to organize your Indexes.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The full name of the Google Compute Engine [network](https://cloud.google.com//compute/docs/networks-and-firewalls#networks) to which the index endpoint should be peered.
     * Private services access must already be configured for the network. If left unspecified, the index endpoint is not peered with any network.
     * [Format](https://cloud.google.com/compute/docs/reference/rest/v1/networks/insert): `projects/{project}/global/networks/{network}`.
     * Where `{project}` is a project number, as in `12345`, and `{network}` is network name.
     */
    network?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * If true, the deployed index will be accessible through public endpoint.
     */
    publicEndpointEnabled?: pulumi.Input<boolean>;
    /**
     * The region of the index endpoint. eg us-central1
     */
    region?: pulumi.Input<string>;
}
