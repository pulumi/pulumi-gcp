// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Vertex AI RAG Engine lets you scale your RagManagedDb instance based on your usage and performance requirements using a choice of two tiers, and optionally, lets you delete your Vertex AI RAG Engine data using a third tier. The tier is a project-level setting that's available in the RagEngineConfig resource that impacts all RAG corpora using RagManagedDb. The following tiers are available in RagEngineConfig: Basic, Scaled and Unprovisioned.
 *
 * To get more information about RagEngineConfig, see:
 *
 * * [API documentation](https://cloud.google.com/vertex-ai/generative-ai/docs/reference/rest/v1/RagEngineConfig)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/vertex-ai/generative-ai/docs/rag-engine/understanding-ragmanageddb)
 *
 * ## Example Usage
 *
 * ## Import
 *
 * RagEngineConfig can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/locations/{{region}}/ragEngineConfig`
 *
 * * `{{project}}/{{region}}`
 *
 * * `{{region}}`
 *
 * When using the `pulumi import` command, RagEngineConfig can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:vertex/aiRagEngineConfig:AiRagEngineConfig default projects/{{project}}/locations/{{region}}/ragEngineConfig
 * ```
 *
 * ```sh
 * $ pulumi import gcp:vertex/aiRagEngineConfig:AiRagEngineConfig default {{project}}/{{region}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:vertex/aiRagEngineConfig:AiRagEngineConfig default {{region}}
 * ```
 */
export class AiRagEngineConfig extends pulumi.CustomResource {
    /**
     * Get an existing AiRagEngineConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AiRagEngineConfigState, opts?: pulumi.CustomResourceOptions): AiRagEngineConfig {
        return new AiRagEngineConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:vertex/aiRagEngineConfig:AiRagEngineConfig';

    /**
     * Returns true if the given object is an instance of AiRagEngineConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AiRagEngineConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AiRagEngineConfig.__pulumiType;
    }

    /**
     * The resource name of the Dataset. This value is set by Google.
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    declare public readonly project: pulumi.Output<string>;
    /**
     * Required. The config of the RagManagedDb used by RagEngine.
     * Structure is documented below.
     */
    declare public readonly ragManagedDbConfig: pulumi.Output<outputs.vertex.AiRagEngineConfigRagManagedDbConfig>;
    /**
     * The region of the RagEngineConfig. eg us-central1
     */
    declare public readonly region: pulumi.Output<string>;

    /**
     * Create a AiRagEngineConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AiRagEngineConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AiRagEngineConfigArgs | AiRagEngineConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AiRagEngineConfigState | undefined;
            resourceInputs["name"] = state?.name;
            resourceInputs["project"] = state?.project;
            resourceInputs["ragManagedDbConfig"] = state?.ragManagedDbConfig;
            resourceInputs["region"] = state?.region;
        } else {
            const args = argsOrState as AiRagEngineConfigArgs | undefined;
            if (args?.ragManagedDbConfig === undefined && !opts.urn) {
                throw new Error("Missing required property 'ragManagedDbConfig'");
            }
            resourceInputs["project"] = args?.project;
            resourceInputs["ragManagedDbConfig"] = args?.ragManagedDbConfig;
            resourceInputs["region"] = args?.region;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AiRagEngineConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AiRagEngineConfig resources.
 */
export interface AiRagEngineConfigState {
    /**
     * The resource name of the Dataset. This value is set by Google.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * Required. The config of the RagManagedDb used by RagEngine.
     * Structure is documented below.
     */
    ragManagedDbConfig?: pulumi.Input<inputs.vertex.AiRagEngineConfigRagManagedDbConfig>;
    /**
     * The region of the RagEngineConfig. eg us-central1
     */
    region?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AiRagEngineConfig resource.
 */
export interface AiRagEngineConfigArgs {
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * Required. The config of the RagManagedDb used by RagEngine.
     * Structure is documented below.
     */
    ragManagedDbConfig: pulumi.Input<inputs.vertex.AiRagEngineConfigRagManagedDbConfig>;
    /**
     * The region of the RagEngineConfig. eg us-central1
     */
    region?: pulumi.Input<string>;
}
