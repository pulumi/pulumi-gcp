// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const my_backupplan_association = gcp.backupdisasterrecovery.getBackupPlanAssociation({
 *     location: "us-central1",
 *     backupPlanAssociationId: "bpa-id",
 * });
 * ```
 */
export function getBackupPlanAssociation(args: GetBackupPlanAssociationArgs, opts?: pulumi.InvokeOptions): Promise<GetBackupPlanAssociationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:backupdisasterrecovery/getBackupPlanAssociation:getBackupPlanAssociation", {
        "backupPlanAssociationId": args.backupPlanAssociationId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getBackupPlanAssociation.
 */
export interface GetBackupPlanAssociationArgs {
    /**
     * The id of Backupplan association resource.
     *
     * - - -
     */
    backupPlanAssociationId: string;
    /**
     * The location in which the Backupplan association resource belongs.
     */
    location: string;
    project?: string;
}

/**
 * A collection of values returned by getBackupPlanAssociation.
 */
export interface GetBackupPlanAssociationResult {
    readonly backupPlan: string;
    readonly backupPlanAssociationId: string;
    readonly createTime: string;
    readonly dataSource: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly lastSuccessfulBackupConsistencyTime: string;
    readonly location: string;
    readonly name: string;
    readonly project?: string;
    readonly resource: string;
    readonly resourceType: string;
    readonly rulesConfigInfos: outputs.backupdisasterrecovery.GetBackupPlanAssociationRulesConfigInfo[];
    readonly updateTime: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const my_backupplan_association = gcp.backupdisasterrecovery.getBackupPlanAssociation({
 *     location: "us-central1",
 *     backupPlanAssociationId: "bpa-id",
 * });
 * ```
 */
export function getBackupPlanAssociationOutput(args: GetBackupPlanAssociationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetBackupPlanAssociationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("gcp:backupdisasterrecovery/getBackupPlanAssociation:getBackupPlanAssociation", {
        "backupPlanAssociationId": args.backupPlanAssociationId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getBackupPlanAssociation.
 */
export interface GetBackupPlanAssociationOutputArgs {
    /**
     * The id of Backupplan association resource.
     *
     * - - -
     */
    backupPlanAssociationId: pulumi.Input<string>;
    /**
     * The location in which the Backupplan association resource belongs.
     */
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
