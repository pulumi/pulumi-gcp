// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ### Backup Dr Backup Plan Simple
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const myBackupVault = new gcp.backupdisasterrecovery.BackupVault("my_backup_vault", {
 *     location: "us-central1",
 *     backupVaultId: "backup-vault-simple-test",
 *     backupMinimumEnforcedRetentionDuration: "100000s",
 * });
 * const my_backup_plan_1 = new gcp.backupdisasterrecovery.BackupPlan("my-backup-plan-1", {
 *     location: "us-central1",
 *     backupPlanId: "backup-plan-simple-test",
 *     resourceType: "compute.googleapis.com/Instance",
 *     backupVault: myBackupVault.id,
 *     backupRules: [{
 *         ruleId: "rule-1",
 *         backupRetentionDays: 5,
 *         standardSchedule: {
 *             recurrenceType: "HOURLY",
 *             hourlyFrequency: 6,
 *             timeZone: "UTC",
 *             backupWindow: {
 *                 startHourOfDay: 0,
 *                 endHourOfDay: 24,
 *             },
 *         },
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * BackupPlan can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/locations/{{location}}/backupPlans/{{backup_plan_id}}`
 *
 * * `{{project}}/{{location}}/{{backup_plan_id}}`
 *
 * * `{{location}}/{{backup_plan_id}}`
 *
 * When using the `pulumi import` command, BackupPlan can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:backupdisasterrecovery/backupPlan:BackupPlan default projects/{{project}}/locations/{{location}}/backupPlans/{{backup_plan_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:backupdisasterrecovery/backupPlan:BackupPlan default {{project}}/{{location}}/{{backup_plan_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:backupdisasterrecovery/backupPlan:BackupPlan default {{location}}/{{backup_plan_id}}
 * ```
 */
export class BackupPlan extends pulumi.CustomResource {
    /**
     * Get an existing BackupPlan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BackupPlanState, opts?: pulumi.CustomResourceOptions): BackupPlan {
        return new BackupPlan(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:backupdisasterrecovery/backupPlan:BackupPlan';

    /**
     * Returns true if the given object is an instance of BackupPlan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BackupPlan {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BackupPlan.__pulumiType;
    }

    /**
     * The ID of the backup plan
     */
    public readonly backupPlanId!: pulumi.Output<string>;
    /**
     * The backup rules for this `BackupPlan`. There must be at least one `BackupRule` message.
     * Structure is documented below.
     */
    public readonly backupRules!: pulumi.Output<outputs.backupdisasterrecovery.BackupPlanBackupRule[]>;
    /**
     * Backup vault where the backups gets stored using this Backup plan.
     */
    public readonly backupVault!: pulumi.Output<string>;
    /**
     * The Google Cloud Platform Service Account to be used by the BackupVault for taking backups.
     */
    public /*out*/ readonly backupVaultServiceAccount!: pulumi.Output<string>;
    /**
     * When the `BackupPlan` was created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The description allows for additional details about 'BackupPlan' and its use cases to be provided.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The location for the backup plan
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The name of backup plan resource created
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * The resource type to which the `BackupPlan` will be applied. Examples include, "compute.googleapis.com/Instance" and "storage.googleapis.com/Bucket".
     */
    public readonly resourceType!: pulumi.Output<string>;
    /**
     * When the `BackupPlan` was last updated.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a BackupPlan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BackupPlanArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BackupPlanArgs | BackupPlanState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BackupPlanState | undefined;
            resourceInputs["backupPlanId"] = state ? state.backupPlanId : undefined;
            resourceInputs["backupRules"] = state ? state.backupRules : undefined;
            resourceInputs["backupVault"] = state ? state.backupVault : undefined;
            resourceInputs["backupVaultServiceAccount"] = state ? state.backupVaultServiceAccount : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["resourceType"] = state ? state.resourceType : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as BackupPlanArgs | undefined;
            if ((!args || args.backupPlanId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'backupPlanId'");
            }
            if ((!args || args.backupRules === undefined) && !opts.urn) {
                throw new Error("Missing required property 'backupRules'");
            }
            if ((!args || args.backupVault === undefined) && !opts.urn) {
                throw new Error("Missing required property 'backupVault'");
            }
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.resourceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceType'");
            }
            resourceInputs["backupPlanId"] = args ? args.backupPlanId : undefined;
            resourceInputs["backupRules"] = args ? args.backupRules : undefined;
            resourceInputs["backupVault"] = args ? args.backupVault : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["resourceType"] = args ? args.resourceType : undefined;
            resourceInputs["backupVaultServiceAccount"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BackupPlan.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BackupPlan resources.
 */
export interface BackupPlanState {
    /**
     * The ID of the backup plan
     */
    backupPlanId?: pulumi.Input<string>;
    /**
     * The backup rules for this `BackupPlan`. There must be at least one `BackupRule` message.
     * Structure is documented below.
     */
    backupRules?: pulumi.Input<pulumi.Input<inputs.backupdisasterrecovery.BackupPlanBackupRule>[]>;
    /**
     * Backup vault where the backups gets stored using this Backup plan.
     */
    backupVault?: pulumi.Input<string>;
    /**
     * The Google Cloud Platform Service Account to be used by the BackupVault for taking backups.
     */
    backupVaultServiceAccount?: pulumi.Input<string>;
    /**
     * When the `BackupPlan` was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The description allows for additional details about 'BackupPlan' and its use cases to be provided.
     */
    description?: pulumi.Input<string>;
    /**
     * The location for the backup plan
     */
    location?: pulumi.Input<string>;
    /**
     * The name of backup plan resource created
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * The resource type to which the `BackupPlan` will be applied. Examples include, "compute.googleapis.com/Instance" and "storage.googleapis.com/Bucket".
     */
    resourceType?: pulumi.Input<string>;
    /**
     * When the `BackupPlan` was last updated.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BackupPlan resource.
 */
export interface BackupPlanArgs {
    /**
     * The ID of the backup plan
     */
    backupPlanId: pulumi.Input<string>;
    /**
     * The backup rules for this `BackupPlan`. There must be at least one `BackupRule` message.
     * Structure is documented below.
     */
    backupRules: pulumi.Input<pulumi.Input<inputs.backupdisasterrecovery.BackupPlanBackupRule>[]>;
    /**
     * Backup vault where the backups gets stored using this Backup plan.
     */
    backupVault: pulumi.Input<string>;
    /**
     * The description allows for additional details about 'BackupPlan' and its use cases to be provided.
     */
    description?: pulumi.Input<string>;
    /**
     * The location for the backup plan
     */
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * The resource type to which the `BackupPlan` will be applied. Examples include, "compute.googleapis.com/Instance" and "storage.googleapis.com/Bucket".
     */
    resourceType: pulumi.Input<string>;
}
