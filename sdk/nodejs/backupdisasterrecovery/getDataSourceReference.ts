// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Get information about a specific Backup and DR data source reference.
 */
export function getDataSourceReference(args: GetDataSourceReferenceArgs, opts?: pulumi.InvokeOptions): Promise<GetDataSourceReferenceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:backupdisasterrecovery/getDataSourceReference:getDataSourceReference", {
        "dataSourceReferenceId": args.dataSourceReferenceId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getDataSourceReference.
 */
export interface GetDataSourceReferenceArgs {
    /**
     * - (Required) The id of the data source reference.
     */
    dataSourceReferenceId: string;
    location: string;
    /**
     * - (Optional) The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
     */
    project?: string;
}

/**
 * A collection of values returned by getDataSourceReference.
 */
export interface GetDataSourceReferenceResult {
    readonly backupConfigState: string;
    readonly backupCount: number;
    readonly dataSource: string;
    readonly dataSourceReferenceId: string;
    readonly gcpResourceName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly lastBackupState: string;
    readonly lastSuccessfulBackupTime: string;
    readonly location: string;
    readonly name: string;
    readonly project: string;
    readonly resourceType: string;
}
/**
 * Get information about a specific Backup and DR data source reference.
 */
export function getDataSourceReferenceOutput(args: GetDataSourceReferenceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDataSourceReferenceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("gcp:backupdisasterrecovery/getDataSourceReference:getDataSourceReference", {
        "dataSourceReferenceId": args.dataSourceReferenceId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getDataSourceReference.
 */
export interface GetDataSourceReferenceOutputArgs {
    /**
     * - (Required) The id of the data source reference.
     */
    dataSourceReferenceId: pulumi.Input<string>;
    location: pulumi.Input<string>;
    /**
     * - (Optional) The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
