// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const my-backup-dr-management-server = gcp.backupdisasterrecovery.getManagementServer({
 *     location: "us-central1",
 * });
 * ```
 */
export function getManagementServer(args: GetManagementServerArgs, opts?: pulumi.InvokeOptions): Promise<GetManagementServerResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:backupdisasterrecovery/getManagementServer:getManagementServer", {
        "location": args.location,
    }, opts);
}

/**
 * A collection of arguments for invoking getManagementServer.
 */
export interface GetManagementServerArgs {
    location: string;
}

/**
 * A collection of values returned by getManagementServer.
 */
export interface GetManagementServerResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly location: string;
    readonly managementUris: outputs.backupdisasterrecovery.GetManagementServerManagementUri[];
    readonly name: string;
    readonly networks: outputs.backupdisasterrecovery.GetManagementServerNetwork[];
    readonly oauth2ClientId: string;
    readonly project: string;
    readonly type: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const my-backup-dr-management-server = gcp.backupdisasterrecovery.getManagementServer({
 *     location: "us-central1",
 * });
 * ```
 */
export function getManagementServerOutput(args: GetManagementServerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagementServerResult> {
    return pulumi.output(args).apply((a: any) => getManagementServer(a, opts))
}

/**
 * A collection of arguments for invoking getManagementServer.
 */
export interface GetManagementServerOutputArgs {
    location: pulumi.Input<string>;
}
