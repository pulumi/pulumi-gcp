// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 * ### Tpu V2 Vm Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const available = gcp.tpu.getV2RuntimeVersions({});
 * const tpu = new gcp.tpu.V2Vm("tpu", {
 *     zone: "us-central1-c",
 *     runtimeVersion: "tpu-vm-tf-2.13.0",
 * }, {
 *     provider: google_beta,
 * });
 * ```
 * ### Tpu V2 Vm Full
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const availableV2RuntimeVersions = gcp.tpu.getV2RuntimeVersions({});
 * const availableV2AcceleratorTypes = gcp.tpu.getV2AcceleratorTypes({});
 * const tpu = new gcp.tpu.V2Vm("tpu", {
 *     zone: "us-central1-c",
 *     description: "Text description of the TPU.",
 *     runtimeVersion: "tpu-vm-tf-2.13.0",
 *     acceleratorType: "v2-8",
 * }, {
 *     provider: google_beta,
 * });
 * ```
 *
 * ## Import
 *
 * Vm can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:tpu/v2Vm:V2Vm default projects/{{project}}/locations/{{zone}}/nodes/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:tpu/v2Vm:V2Vm default {{project}}/{{zone}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:tpu/v2Vm:V2Vm default {{zone}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:tpu/v2Vm:V2Vm default {{name}}
 * ```
 */
export class V2Vm extends pulumi.CustomResource {
    /**
     * Get an existing V2Vm resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: V2VmState, opts?: pulumi.CustomResourceOptions): V2Vm {
        return new V2Vm(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:tpu/v2Vm:V2Vm';

    /**
     * Returns true if the given object is an instance of V2Vm.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is V2Vm {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === V2Vm.__pulumiType;
    }

    /**
     * TPU accelerator type for the TPU. If not specified, this defaults to 'v2-8'.
     */
    public readonly acceleratorType!: pulumi.Output<string | undefined>;
    /**
     * Text description of the TPU.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The immutable name of the TPU.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * Runtime version for the TPU.
     *
     *
     * - - -
     */
    public readonly runtimeVersion!: pulumi.Output<string>;
    /**
     * The GCP location for the TPU. If it is not provided, the provider zone is used.
     */
    public readonly zone!: pulumi.Output<string>;

    /**
     * Create a V2Vm resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: V2VmArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: V2VmArgs | V2VmState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as V2VmState | undefined;
            resourceInputs["acceleratorType"] = state ? state.acceleratorType : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["runtimeVersion"] = state ? state.runtimeVersion : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as V2VmArgs | undefined;
            if ((!args || args.runtimeVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'runtimeVersion'");
            }
            resourceInputs["acceleratorType"] = args ? args.acceleratorType : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["runtimeVersion"] = args ? args.runtimeVersion : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(V2Vm.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering V2Vm resources.
 */
export interface V2VmState {
    /**
     * TPU accelerator type for the TPU. If not specified, this defaults to 'v2-8'.
     */
    acceleratorType?: pulumi.Input<string>;
    /**
     * Text description of the TPU.
     */
    description?: pulumi.Input<string>;
    /**
     * The immutable name of the TPU.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * Runtime version for the TPU.
     *
     *
     * - - -
     */
    runtimeVersion?: pulumi.Input<string>;
    /**
     * The GCP location for the TPU. If it is not provided, the provider zone is used.
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a V2Vm resource.
 */
export interface V2VmArgs {
    /**
     * TPU accelerator type for the TPU. If not specified, this defaults to 'v2-8'.
     */
    acceleratorType?: pulumi.Input<string>;
    /**
     * Text description of the TPU.
     */
    description?: pulumi.Input<string>;
    /**
     * The immutable name of the TPU.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * Runtime version for the TPU.
     *
     *
     * - - -
     */
    runtimeVersion: pulumi.Input<string>;
    /**
     * The GCP location for the TPU. If it is not provided, the provider zone is used.
     */
    zone?: pulumi.Input<string>;
}
