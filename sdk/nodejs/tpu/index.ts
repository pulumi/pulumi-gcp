// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetTensorflowVersionsArgs, GetTensorflowVersionsResult, GetTensorflowVersionsOutputArgs } from "./getTensorflowVersions";
export const getTensorflowVersions: typeof import("./getTensorflowVersions").getTensorflowVersions = null as any;
export const getTensorflowVersionsOutput: typeof import("./getTensorflowVersions").getTensorflowVersionsOutput = null as any;
utilities.lazyLoad(exports, ["getTensorflowVersions","getTensorflowVersionsOutput"], () => require("./getTensorflowVersions"));

export { GetV2AcceleratorTypesArgs, GetV2AcceleratorTypesResult, GetV2AcceleratorTypesOutputArgs } from "./getV2AcceleratorTypes";
export const getV2AcceleratorTypes: typeof import("./getV2AcceleratorTypes").getV2AcceleratorTypes = null as any;
export const getV2AcceleratorTypesOutput: typeof import("./getV2AcceleratorTypes").getV2AcceleratorTypesOutput = null as any;
utilities.lazyLoad(exports, ["getV2AcceleratorTypes","getV2AcceleratorTypesOutput"], () => require("./getV2AcceleratorTypes"));

export { GetV2RuntimeVersionsArgs, GetV2RuntimeVersionsResult, GetV2RuntimeVersionsOutputArgs } from "./getV2RuntimeVersions";
export const getV2RuntimeVersions: typeof import("./getV2RuntimeVersions").getV2RuntimeVersions = null as any;
export const getV2RuntimeVersionsOutput: typeof import("./getV2RuntimeVersions").getV2RuntimeVersionsOutput = null as any;
utilities.lazyLoad(exports, ["getV2RuntimeVersions","getV2RuntimeVersionsOutput"], () => require("./getV2RuntimeVersions"));

export { NodeArgs, NodeState } from "./node";
export type Node = import("./node").Node;
export const Node: typeof import("./node").Node = null as any;
utilities.lazyLoad(exports, ["Node"], () => require("./node"));

export { V2VmArgs, V2VmState } from "./v2vm";
export type V2Vm = import("./v2vm").V2Vm;
export const V2Vm: typeof import("./v2vm").V2Vm = null as any;
utilities.lazyLoad(exports, ["V2Vm"], () => require("./v2vm"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "gcp:tpu/node:Node":
                return new Node(name, <any>undefined, { urn })
            case "gcp:tpu/v2Vm:V2Vm":
                return new V2Vm(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "tpu/node", _module)
pulumi.runtime.registerResourceModule("gcp", "tpu/v2Vm", _module)
