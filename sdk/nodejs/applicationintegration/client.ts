// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Application Integration Client.
 *
 * To get more information about Client, see:
 *
 * * [API documentation](https://cloud.google.com/application-integration/docs/reference/rest/v1/projects.locations.clients)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/application-integration/docs/overview)
 *     * [Set up Application Integration](https://cloud.google.com/application-integration/docs/setup-application-integration)
 *
 * ## Example Usage
 *
 * ### Integrations Client Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const example = new gcp.applicationintegration.Client("example", {location: "us-central1"});
 * ```
 * ### Integrations Client Full
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * import * as std from "@pulumi/std";
 *
 * const _default = gcp.organizations.getProject({});
 * const keyring = gcp.kms.getKMSKeyRing({
 *     name: "my-keyring",
 *     location: "us-east1",
 * });
 * const cryptokey = keyring.then(keyring => gcp.kms.getKMSCryptoKey({
 *     name: "my-crypto-key",
 *     keyRing: keyring.id,
 * }));
 * const testKey = cryptokey.then(cryptokey => gcp.kms.getKMSCryptoKeyVersion({
 *     cryptoKey: cryptokey.id,
 * }));
 * const example = new gcp.applicationintegration.Client("example", {
 *     location: "us-east1",
 *     createSampleIntegrations: true,
 *     cloudKmsConfig: {
 *         kmsLocation: "us-east1",
 *         kmsRing: keyring.then(keyring => std.basename({
 *             input: keyring.id,
 *         })).then(invoke => invoke.result),
 *         key: cryptokey.then(cryptokey => std.basename({
 *             input: cryptokey.id,
 *         })).then(invoke => invoke.result),
 *         keyVersion: testKey.then(testKey => std.basename({
 *             input: testKey.id,
 *         })).then(invoke => invoke.result),
 *         kmsProjectId: _default.then(_default => _default.projectId),
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Client can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/locations/{{location}}/clients`
 *
 * * `{{project}}/{{location}}`
 *
 * * `{{location}}`
 *
 * When using the `pulumi import` command, Client can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:applicationintegration/client:Client default projects/{{project}}/locations/{{location}}/clients
 * ```
 *
 * ```sh
 * $ pulumi import gcp:applicationintegration/client:Client default {{project}}/{{location}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:applicationintegration/client:Client default {{location}}
 * ```
 */
export class Client extends pulumi.CustomResource {
    /**
     * Get an existing Client resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClientState, opts?: pulumi.CustomResourceOptions): Client {
        return new Client(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:applicationintegration/client:Client';

    /**
     * Returns true if the given object is an instance of Client.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Client {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Client.__pulumiType;
    }

    /**
     * Cloud KMS config for AuthModule to encrypt/decrypt credentials.
     * Structure is documented below.
     */
    public readonly cloudKmsConfig!: pulumi.Output<outputs.applicationintegration.ClientCloudKmsConfig | undefined>;
    /**
     * Indicates if sample integrations should be created along with provisioning.
     */
    public readonly createSampleIntegrations!: pulumi.Output<boolean | undefined>;
    /**
     * Location in which client needs to be provisioned.
     *
     *
     * - - -
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * (Optional, Deprecated)
     * User input run-as service account, if empty, will bring up a new default service account.
     *
     * > **Warning:** `runAsServiceAccount` is deprecated and will be removed in a future major release.
     *
     * @deprecated `runAsServiceAccount` is deprecated and will be removed in a future major release.
     */
    public readonly runAsServiceAccount!: pulumi.Output<string | undefined>;

    /**
     * Create a Client resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClientArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClientArgs | ClientState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClientState | undefined;
            resourceInputs["cloudKmsConfig"] = state ? state.cloudKmsConfig : undefined;
            resourceInputs["createSampleIntegrations"] = state ? state.createSampleIntegrations : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["runAsServiceAccount"] = state ? state.runAsServiceAccount : undefined;
        } else {
            const args = argsOrState as ClientArgs | undefined;
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            resourceInputs["cloudKmsConfig"] = args ? args.cloudKmsConfig : undefined;
            resourceInputs["createSampleIntegrations"] = args ? args.createSampleIntegrations : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["runAsServiceAccount"] = args ? args.runAsServiceAccount : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Client.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Client resources.
 */
export interface ClientState {
    /**
     * Cloud KMS config for AuthModule to encrypt/decrypt credentials.
     * Structure is documented below.
     */
    cloudKmsConfig?: pulumi.Input<inputs.applicationintegration.ClientCloudKmsConfig>;
    /**
     * Indicates if sample integrations should be created along with provisioning.
     */
    createSampleIntegrations?: pulumi.Input<boolean>;
    /**
     * Location in which client needs to be provisioned.
     *
     *
     * - - -
     */
    location?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * (Optional, Deprecated)
     * User input run-as service account, if empty, will bring up a new default service account.
     *
     * > **Warning:** `runAsServiceAccount` is deprecated and will be removed in a future major release.
     *
     * @deprecated `runAsServiceAccount` is deprecated and will be removed in a future major release.
     */
    runAsServiceAccount?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Client resource.
 */
export interface ClientArgs {
    /**
     * Cloud KMS config for AuthModule to encrypt/decrypt credentials.
     * Structure is documented below.
     */
    cloudKmsConfig?: pulumi.Input<inputs.applicationintegration.ClientCloudKmsConfig>;
    /**
     * Indicates if sample integrations should be created along with provisioning.
     */
    createSampleIntegrations?: pulumi.Input<boolean>;
    /**
     * Location in which client needs to be provisioned.
     *
     *
     * - - -
     */
    location: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * (Optional, Deprecated)
     * User input run-as service account, if empty, will bring up a new default service account.
     *
     * > **Warning:** `runAsServiceAccount` is deprecated and will be removed in a future major release.
     *
     * @deprecated `runAsServiceAccount` is deprecated and will be removed in a future major release.
     */
    runAsServiceAccount?: pulumi.Input<string>;
}
