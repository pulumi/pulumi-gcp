// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Represents a Data Fusion instance.
 *
 * To get more information about Instance, see:
 *
 * * [API documentation](https://cloud.google.com/data-fusion/docs/reference/rest/v1beta1/projects.locations.instances)
 * * How-to Guides
 *   * [Official Documentation](https://cloud.google.com/data-fusion/docs/)
 *
 * ## Example Usage
 * ### Data Fusion Instance Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const basicInstance = new gcp.datafusion.Instance("basic_instance", {
 *     // Mark for testing to avoid service networking connection usage that is not cleaned up
 *     options: {
 *         prober_test_run: "true",
 *     },
 *     region: "us-central1",
 *     type: "BASIC",
 * });
 * ```
 * ### Data Fusion Instance Full
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const default = gcp.appengine.getDefaultServiceAccount({});
 * const network = new gcp.compute.Network("network", {});
 * const privateIpAlloc = new gcp.compute.GlobalAddress("privateIpAlloc", {
 *     addressType: "INTERNAL",
 *     purpose: "VPC_PEERING",
 *     prefixLength: 22,
 *     network: network.id,
 * });
 * const extendedInstance = new gcp.datafusion.Instance("extendedInstance", {
 *     description: "My Data Fusion instance",
 *     displayName: "My Data Fusion instance",
 *     region: "us-central1",
 *     type: "BASIC",
 *     enableStackdriverLogging: true,
 *     enableStackdriverMonitoring: true,
 *     privateInstance: true,
 *     version: "6.6.0",
 *     dataprocServiceAccount: _default.then(_default => _default.email),
 *     labels: {
 *         example_key: "example_value",
 *     },
 *     networkConfig: {
 *         network: "default",
 *         ipAllocation: pulumi.all([privateIpAlloc.address, privateIpAlloc.prefixLength]).apply(([address, prefixLength]) => `${address}/${prefixLength}`),
 *     },
 *     options: {
 *         prober_test_run: "true",
 *     },
 * });
 * ```
 * ### Data Fusion Instance Cmek
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const keyRing = new gcp.kms.KeyRing("keyRing", {location: "us-central1"});
 * const cryptoKey = new gcp.kms.CryptoKey("cryptoKey", {keyRing: keyRing.id});
 * const project = gcp.organizations.getProject({});
 * const cryptoKeyBinding = new gcp.kms.CryptoKeyIAMBinding("cryptoKeyBinding", {
 *     cryptoKeyId: cryptoKey.id,
 *     role: "roles/cloudkms.cryptoKeyEncrypterDecrypter",
 *     members: [project.then(project => `serviceAccount:service-${project.number}@gcp-sa-datafusion.iam.gserviceaccount.com`)],
 * });
 * const cmek = new gcp.datafusion.Instance("cmek", {
 *     region: "us-central1",
 *     type: "BASIC",
 *     cryptoKeyConfig: {
 *         keyReference: cryptoKey.id,
 *     },
 * }, {
 *     dependsOn: [cryptoKeyBinding],
 * });
 * ```
 * ### Data Fusion Instance Enterprise
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const enterpriseInstance = new gcp.datafusion.Instance("enterprise_instance", {
 *     enableRbac: true,
 *     // Mark for testing to avoid service networking connection usage that is not cleaned up
 *     options: {
 *         prober_test_run: "true",
 *     },
 *     region: "us-central1",
 *     type: "ENTERPRISE",
 * });
 * ```
 * ### Data Fusion Instance Event
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const eventTopic = new gcp.pubsub.Topic("eventTopic", {});
 * const eventInstance = new gcp.datafusion.Instance("eventInstance", {
 *     region: "us-central1",
 *     type: "BASIC",
 *     version: "6.7.0",
 *     eventPublishConfig: {
 *         enabled: true,
 *         topic: eventTopic.id,
 *     },
 * });
 * ```
 * ### Data Fusion Instance Zone
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const zone = new gcp.datafusion.Instance("zone", {
 *     region: "us-central1",
 *     type: "DEVELOPER",
 *     zone: "us-central1-a",
 * });
 * ```
 *
 * ## Import
 *
 * Instance can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:datafusion/instance:Instance default projects/{{project}}/locations/{{region}}/instances/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:datafusion/instance:Instance default {{project}}/{{region}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:datafusion/instance:Instance default {{region}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:datafusion/instance:Instance default {{name}}
 * ```
 */
export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceState, opts?: pulumi.CustomResourceOptions): Instance {
        return new Instance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:datafusion/instance:Instance';

    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Instance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }

    /**
     * Endpoint on which the REST APIs is accessible.
     */
    public /*out*/ readonly apiEndpoint!: pulumi.Output<string>;
    /**
     * The time the instance was created in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The crypto key configuration. This field is used by the Customer-Managed Encryption Keys (CMEK) feature.
     * Structure is documented below.
     */
    public readonly cryptoKeyConfig!: pulumi.Output<outputs.datafusion.InstanceCryptoKeyConfig | undefined>;
    /**
     * User-managed service account to set on Dataproc when Cloud Data Fusion creates Dataproc to run data processing pipelines.
     */
    public readonly dataprocServiceAccount!: pulumi.Output<string | undefined>;
    /**
     * An optional description of the instance.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Display name for an instance.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * Option to enable granular role-based access control.
     */
    public readonly enableRbac!: pulumi.Output<boolean | undefined>;
    /**
     * Option to enable Stackdriver Logging.
     */
    public readonly enableStackdriverLogging!: pulumi.Output<boolean | undefined>;
    /**
     * Option to enable Stackdriver Monitoring.
     */
    public readonly enableStackdriverMonitoring!: pulumi.Output<boolean | undefined>;
    /**
     * Option to enable and pass metadata for event publishing.
     * Structure is documented below.
     */
    public readonly eventPublishConfig!: pulumi.Output<outputs.datafusion.InstanceEventPublishConfig | undefined>;
    /**
     * Cloud Storage bucket generated by Data Fusion in the customer project.
     */
    public /*out*/ readonly gcsBucket!: pulumi.Output<string>;
    /**
     * The resource labels for instance to use to annotate any related underlying resources,
     * such as Compute Engine VMs.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The ID of the instance or a fully qualified identifier for the instance.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Network configuration options. These are required when a private Data Fusion instance is to be created.
     * Structure is documented below.
     */
    public readonly networkConfig!: pulumi.Output<outputs.datafusion.InstanceNetworkConfig | undefined>;
    /**
     * Map of additional options used to configure the behavior of Data Fusion instance.
     */
    public readonly options!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * P4 service account for the customer project.
     */
    public /*out*/ readonly p4ServiceAccount!: pulumi.Output<string>;
    /**
     * Specifies whether the Data Fusion instance should be private. If set to
     * true, all Data Fusion nodes will have private IP addresses and will not be
     * able to access the public internet.
     */
    public readonly privateInstance!: pulumi.Output<boolean | undefined>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * The region of the Data Fusion instance.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * Deprecated. Use 'tenant_project_id' instead to extract the tenant project ID.
     *
     * @deprecated Use `tenant_project_id` instead to extract the tenant project ID.
     */
    public /*out*/ readonly serviceAccount!: pulumi.Output<string>;
    /**
     * Endpoint on which the Data Fusion UI and REST APIs are accessible.
     */
    public /*out*/ readonly serviceEndpoint!: pulumi.Output<string>;
    /**
     * The current state of this Data Fusion instance. - CREATING: Instance is being created - RUNNING: Instance is running and
     * ready for requests - FAILED: Instance creation failed - DELETING: Instance is being deleted - UPGRADING: Instance is
     * being upgraded - RESTARTING: Instance is being restarted
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Additional information about the current state of this Data Fusion instance if available.
     */
    public /*out*/ readonly stateMessage!: pulumi.Output<string>;
    /**
     * The name of the tenant project.
     */
    public /*out*/ readonly tenantProjectId!: pulumi.Output<string>;
    /**
     * Represents the type of Data Fusion instance. Each type is configured with
     * the default settings for processing and memory.
     * * BASIC: Basic Data Fusion instance. In Basic type, the user will be able to create data pipelines
     * using point and click UI. However, there are certain limitations, such as fewer number
     * of concurrent pipelines, no support for streaming pipelines, etc.
     * * ENTERPRISE: Enterprise Data Fusion instance. In Enterprise type, the user will have more features
     * available, such as support for streaming pipelines, higher number of concurrent pipelines, etc.
     * * DEVELOPER: Developer Data Fusion instance. In Developer type, the user will have all features available but
     * with restrictive capabilities. This is to help enterprises design and develop their data ingestion and integration
     * pipelines at low cost.
     * Possible values are `BASIC`, `ENTERPRISE`, and `DEVELOPER`.
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * The time the instance was last updated in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * Current version of the Data Fusion.
     */
    public readonly version!: pulumi.Output<string>;
    /**
     * Name of the zone in which the Data Fusion instance will be created. Only DEVELOPER instances use this field.
     */
    public readonly zone!: pulumi.Output<string>;

    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceArgs | InstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceState | undefined;
            resourceInputs["apiEndpoint"] = state ? state.apiEndpoint : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["cryptoKeyConfig"] = state ? state.cryptoKeyConfig : undefined;
            resourceInputs["dataprocServiceAccount"] = state ? state.dataprocServiceAccount : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["enableRbac"] = state ? state.enableRbac : undefined;
            resourceInputs["enableStackdriverLogging"] = state ? state.enableStackdriverLogging : undefined;
            resourceInputs["enableStackdriverMonitoring"] = state ? state.enableStackdriverMonitoring : undefined;
            resourceInputs["eventPublishConfig"] = state ? state.eventPublishConfig : undefined;
            resourceInputs["gcsBucket"] = state ? state.gcsBucket : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkConfig"] = state ? state.networkConfig : undefined;
            resourceInputs["options"] = state ? state.options : undefined;
            resourceInputs["p4ServiceAccount"] = state ? state.p4ServiceAccount : undefined;
            resourceInputs["privateInstance"] = state ? state.privateInstance : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["serviceAccount"] = state ? state.serviceAccount : undefined;
            resourceInputs["serviceEndpoint"] = state ? state.serviceEndpoint : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["stateMessage"] = state ? state.stateMessage : undefined;
            resourceInputs["tenantProjectId"] = state ? state.tenantProjectId : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as InstanceArgs | undefined;
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["cryptoKeyConfig"] = args ? args.cryptoKeyConfig : undefined;
            resourceInputs["dataprocServiceAccount"] = args ? args.dataprocServiceAccount : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["enableRbac"] = args ? args.enableRbac : undefined;
            resourceInputs["enableStackdriverLogging"] = args ? args.enableStackdriverLogging : undefined;
            resourceInputs["enableStackdriverMonitoring"] = args ? args.enableStackdriverMonitoring : undefined;
            resourceInputs["eventPublishConfig"] = args ? args.eventPublishConfig : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkConfig"] = args ? args.networkConfig : undefined;
            resourceInputs["options"] = args ? args.options : undefined;
            resourceInputs["privateInstance"] = args ? args.privateInstance : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
            resourceInputs["apiEndpoint"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["gcsBucket"] = undefined /*out*/;
            resourceInputs["p4ServiceAccount"] = undefined /*out*/;
            resourceInputs["serviceAccount"] = undefined /*out*/;
            resourceInputs["serviceEndpoint"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["stateMessage"] = undefined /*out*/;
            resourceInputs["tenantProjectId"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Instance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Instance resources.
 */
export interface InstanceState {
    /**
     * Endpoint on which the REST APIs is accessible.
     */
    apiEndpoint?: pulumi.Input<string>;
    /**
     * The time the instance was created in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The crypto key configuration. This field is used by the Customer-Managed Encryption Keys (CMEK) feature.
     * Structure is documented below.
     */
    cryptoKeyConfig?: pulumi.Input<inputs.datafusion.InstanceCryptoKeyConfig>;
    /**
     * User-managed service account to set on Dataproc when Cloud Data Fusion creates Dataproc to run data processing pipelines.
     */
    dataprocServiceAccount?: pulumi.Input<string>;
    /**
     * An optional description of the instance.
     */
    description?: pulumi.Input<string>;
    /**
     * Display name for an instance.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Option to enable granular role-based access control.
     */
    enableRbac?: pulumi.Input<boolean>;
    /**
     * Option to enable Stackdriver Logging.
     */
    enableStackdriverLogging?: pulumi.Input<boolean>;
    /**
     * Option to enable Stackdriver Monitoring.
     */
    enableStackdriverMonitoring?: pulumi.Input<boolean>;
    /**
     * Option to enable and pass metadata for event publishing.
     * Structure is documented below.
     */
    eventPublishConfig?: pulumi.Input<inputs.datafusion.InstanceEventPublishConfig>;
    /**
     * Cloud Storage bucket generated by Data Fusion in the customer project.
     */
    gcsBucket?: pulumi.Input<string>;
    /**
     * The resource labels for instance to use to annotate any related underlying resources,
     * such as Compute Engine VMs.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The ID of the instance or a fully qualified identifier for the instance.
     */
    name?: pulumi.Input<string>;
    /**
     * Network configuration options. These are required when a private Data Fusion instance is to be created.
     * Structure is documented below.
     */
    networkConfig?: pulumi.Input<inputs.datafusion.InstanceNetworkConfig>;
    /**
     * Map of additional options used to configure the behavior of Data Fusion instance.
     */
    options?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * P4 service account for the customer project.
     */
    p4ServiceAccount?: pulumi.Input<string>;
    /**
     * Specifies whether the Data Fusion instance should be private. If set to
     * true, all Data Fusion nodes will have private IP addresses and will not be
     * able to access the public internet.
     */
    privateInstance?: pulumi.Input<boolean>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The region of the Data Fusion instance.
     */
    region?: pulumi.Input<string>;
    /**
     * Deprecated. Use 'tenant_project_id' instead to extract the tenant project ID.
     *
     * @deprecated Use `tenant_project_id` instead to extract the tenant project ID.
     */
    serviceAccount?: pulumi.Input<string>;
    /**
     * Endpoint on which the Data Fusion UI and REST APIs are accessible.
     */
    serviceEndpoint?: pulumi.Input<string>;
    /**
     * The current state of this Data Fusion instance. - CREATING: Instance is being created - RUNNING: Instance is running and
     * ready for requests - FAILED: Instance creation failed - DELETING: Instance is being deleted - UPGRADING: Instance is
     * being upgraded - RESTARTING: Instance is being restarted
     */
    state?: pulumi.Input<string>;
    /**
     * Additional information about the current state of this Data Fusion instance if available.
     */
    stateMessage?: pulumi.Input<string>;
    /**
     * The name of the tenant project.
     */
    tenantProjectId?: pulumi.Input<string>;
    /**
     * Represents the type of Data Fusion instance. Each type is configured with
     * the default settings for processing and memory.
     * * BASIC: Basic Data Fusion instance. In Basic type, the user will be able to create data pipelines
     * using point and click UI. However, there are certain limitations, such as fewer number
     * of concurrent pipelines, no support for streaming pipelines, etc.
     * * ENTERPRISE: Enterprise Data Fusion instance. In Enterprise type, the user will have more features
     * available, such as support for streaming pipelines, higher number of concurrent pipelines, etc.
     * * DEVELOPER: Developer Data Fusion instance. In Developer type, the user will have all features available but
     * with restrictive capabilities. This is to help enterprises design and develop their data ingestion and integration
     * pipelines at low cost.
     * Possible values are `BASIC`, `ENTERPRISE`, and `DEVELOPER`.
     */
    type?: pulumi.Input<string>;
    /**
     * The time the instance was last updated in RFC3339 UTC "Zulu" format, accurate to nanoseconds.
     */
    updateTime?: pulumi.Input<string>;
    /**
     * Current version of the Data Fusion.
     */
    version?: pulumi.Input<string>;
    /**
     * Name of the zone in which the Data Fusion instance will be created. Only DEVELOPER instances use this field.
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * The crypto key configuration. This field is used by the Customer-Managed Encryption Keys (CMEK) feature.
     * Structure is documented below.
     */
    cryptoKeyConfig?: pulumi.Input<inputs.datafusion.InstanceCryptoKeyConfig>;
    /**
     * User-managed service account to set on Dataproc when Cloud Data Fusion creates Dataproc to run data processing pipelines.
     */
    dataprocServiceAccount?: pulumi.Input<string>;
    /**
     * An optional description of the instance.
     */
    description?: pulumi.Input<string>;
    /**
     * Display name for an instance.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Option to enable granular role-based access control.
     */
    enableRbac?: pulumi.Input<boolean>;
    /**
     * Option to enable Stackdriver Logging.
     */
    enableStackdriverLogging?: pulumi.Input<boolean>;
    /**
     * Option to enable Stackdriver Monitoring.
     */
    enableStackdriverMonitoring?: pulumi.Input<boolean>;
    /**
     * Option to enable and pass metadata for event publishing.
     * Structure is documented below.
     */
    eventPublishConfig?: pulumi.Input<inputs.datafusion.InstanceEventPublishConfig>;
    /**
     * The resource labels for instance to use to annotate any related underlying resources,
     * such as Compute Engine VMs.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The ID of the instance or a fully qualified identifier for the instance.
     */
    name?: pulumi.Input<string>;
    /**
     * Network configuration options. These are required when a private Data Fusion instance is to be created.
     * Structure is documented below.
     */
    networkConfig?: pulumi.Input<inputs.datafusion.InstanceNetworkConfig>;
    /**
     * Map of additional options used to configure the behavior of Data Fusion instance.
     */
    options?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies whether the Data Fusion instance should be private. If set to
     * true, all Data Fusion nodes will have private IP addresses and will not be
     * able to access the public internet.
     */
    privateInstance?: pulumi.Input<boolean>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The region of the Data Fusion instance.
     */
    region?: pulumi.Input<string>;
    /**
     * Represents the type of Data Fusion instance. Each type is configured with
     * the default settings for processing and memory.
     * * BASIC: Basic Data Fusion instance. In Basic type, the user will be able to create data pipelines
     * using point and click UI. However, there are certain limitations, such as fewer number
     * of concurrent pipelines, no support for streaming pipelines, etc.
     * * ENTERPRISE: Enterprise Data Fusion instance. In Enterprise type, the user will have more features
     * available, such as support for streaming pipelines, higher number of concurrent pipelines, etc.
     * * DEVELOPER: Developer Data Fusion instance. In Developer type, the user will have all features available but
     * with restrictive capabilities. This is to help enterprises design and develop their data ingestion and integration
     * pipelines at low cost.
     * Possible values are `BASIC`, `ENTERPRISE`, and `DEVELOPER`.
     */
    type: pulumi.Input<string>;
    /**
     * Current version of the Data Fusion.
     */
    version?: pulumi.Input<string>;
    /**
     * Name of the zone in which the Data Fusion instance will be created. Only DEVELOPER instances use this field.
     */
    zone?: pulumi.Input<string>;
}
