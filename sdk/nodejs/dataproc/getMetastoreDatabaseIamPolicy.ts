// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Retrieves the current IAM policy data for database
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const policy = gcp.dataproc.getMetastoreDatabaseIamPolicy({
 *     project: dpmsService.project,
 *     location: dpmsService.location,
 *     serviceId: dpmsService.serviceId,
 *     database: hive.hiveConfig[0].properties.database,
 * });
 * ```
 */
export function getMetastoreDatabaseIamPolicy(args: GetMetastoreDatabaseIamPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetMetastoreDatabaseIamPolicyResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:dataproc/getMetastoreDatabaseIamPolicy:getMetastoreDatabaseIamPolicy", {
        "database": args.database,
        "location": args.location,
        "project": args.project,
        "serviceId": args.serviceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getMetastoreDatabaseIamPolicy.
 */
export interface GetMetastoreDatabaseIamPolicyArgs {
    /**
     * Used to find the parent resource to bind the IAM policy to
     */
    database: string;
    /**
     * Used to find the parent resource to bind the IAM policy to. If not specified,
     * the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
     * location is specified, it is taken from the provider configuration.
     */
    location?: string;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     */
    project?: string;
    /**
     * Used to find the parent resource to bind the IAM policy to
     */
    serviceId: string;
}

/**
 * A collection of values returned by getMetastoreDatabaseIamPolicy.
 */
export interface GetMetastoreDatabaseIamPolicyResult {
    readonly database: string;
    /**
     * (Computed) The etag of the IAM policy.
     */
    readonly etag: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly location: string;
    /**
     * (Required only by `gcp.dataproc.MetastoreDatabaseIamPolicy`) The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     */
    readonly policyData: string;
    readonly project: string;
    readonly serviceId: string;
}
/**
 * Retrieves the current IAM policy data for database
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const policy = gcp.dataproc.getMetastoreDatabaseIamPolicy({
 *     project: dpmsService.project,
 *     location: dpmsService.location,
 *     serviceId: dpmsService.serviceId,
 *     database: hive.hiveConfig[0].properties.database,
 * });
 * ```
 */
export function getMetastoreDatabaseIamPolicyOutput(args: GetMetastoreDatabaseIamPolicyOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMetastoreDatabaseIamPolicyResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("gcp:dataproc/getMetastoreDatabaseIamPolicy:getMetastoreDatabaseIamPolicy", {
        "database": args.database,
        "location": args.location,
        "project": args.project,
        "serviceId": args.serviceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getMetastoreDatabaseIamPolicy.
 */
export interface GetMetastoreDatabaseIamPolicyOutputArgs {
    /**
     * Used to find the parent resource to bind the IAM policy to
     */
    database: pulumi.Input<string>;
    /**
     * Used to find the parent resource to bind the IAM policy to. If not specified,
     * the value will be parsed from the identifier of the parent resource. If no location is provided in the parent identifier and no
     * location is specified, it is taken from the provider configuration.
     */
    location?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * Used to find the parent resource to bind the IAM policy to
     */
    serviceId: pulumi.Input<string>;
}
