// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Retrieves the current IAM policy data for a Dataproc cluster.
 */
export function getClusterIamPolicy(args: GetClusterIamPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetClusterIamPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:dataproc/getClusterIamPolicy:getClusterIamPolicy", {
        "cluster": args.cluster,
        "project": args.project,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getClusterIamPolicy.
 */
export interface GetClusterIamPolicyArgs {
    /**
     * The name or relative resource id of the cluster to manage IAM policies for.
     */
    cluster: string;
    project?: string;
    region?: string;
}

/**
 * A collection of values returned by getClusterIamPolicy.
 */
export interface GetClusterIamPolicyResult {
    readonly cluster: string;
    /**
     * (Computed) The etag of the IAM policy.
     */
    readonly etag: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * (Computed) The policy data
     */
    readonly policyData: string;
    readonly project: string;
    readonly region: string;
}
/**
 * Retrieves the current IAM policy data for a Dataproc cluster.
 */
export function getClusterIamPolicyOutput(args: GetClusterIamPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetClusterIamPolicyResult> {
    return pulumi.output(args).apply((a: any) => getClusterIamPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getClusterIamPolicy.
 */
export interface GetClusterIamPolicyOutputArgs {
    /**
     * The name or relative resource id of the cluster to manage IAM policies for.
     */
    cluster: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
}
