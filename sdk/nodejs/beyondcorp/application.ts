// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * > **Warning:** `gcp.beyondcorp.Application` is deprecated. Use `googleBeyondcorpSecurityGatewayApplication` instead.
 *
 * Specifies application endpoint(s) to protect behind a Security Gateway.
 *
 * ## Example Usage
 *
 * ### Beyondcorp Application Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const _default = new gcp.beyondcorp.SecurityGateway("default", {
 *     securityGatewayId: "default",
 *     displayName: "My Security Gateway resource",
 *     hubs: [{
 *         region: "us-central1",
 *     }],
 * });
 * const example = new gcp.beyondcorp.Application("example", {
 *     securityGatewaysId: _default.securityGatewayId,
 *     applicationId: "google",
 *     endpointMatchers: [{
 *         hostname: "google.com",
 *     }],
 * });
 * ```
 * ### Beyondcorp Application Vpc
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const project = gcp.organizations.getProject({});
 * const _default = new gcp.beyondcorp.SecurityGateway("default", {
 *     securityGatewayId: "default",
 *     displayName: "My Security Gateway resource",
 *     hubs: [{
 *         region: "us-central1",
 *     }],
 * });
 * const example = new gcp.beyondcorp.Application("example", {
 *     securityGatewaysId: _default.securityGatewayId,
 *     applicationId: "my-vm-service",
 *     endpointMatchers: [{
 *         hostname: "my-vm-service.com",
 *     }],
 *     upstreams: [{
 *         egressPolicy: {
 *             regions: ["us-central1"],
 *         },
 *         network: {
 *             name: project.then(project => `projects/${project.projectId}/global/networks/default`),
 *         },
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Application can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/locations/global/securityGateways/{{security_gateways_id}}/applications/{{application_id}}`
 *
 * * `{{project}}/{{security_gateways_id}}/{{application_id}}`
 *
 * * `{{security_gateways_id}}/{{application_id}}`
 *
 * When using the `pulumi import` command, Application can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:beyondcorp/application:Application default projects/{{project}}/locations/global/securityGateways/{{security_gateways_id}}/applications/{{application_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:beyondcorp/application:Application default {{project}}/{{security_gateways_id}}/{{application_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:beyondcorp/application:Application default {{security_gateways_id}}/{{application_id}}
 * ```
 */
export class Application extends pulumi.CustomResource {
    /**
     * Get an existing Application resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplicationState, opts?: pulumi.CustomResourceOptions): Application {
        return new Application(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:beyondcorp/application:Application';

    /**
     * Returns true if the given object is an instance of Application.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Application {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Application.__pulumiType;
    }

    /**
     * Optional. User-settable Application resource ID.
     * * Must start with a letter.
     * * Must contain between 4-63 characters from `/a-z-/`.
     * * Must end with a number or letter.
     */
    public readonly applicationId!: pulumi.Output<string>;
    /**
     * Output only. Timestamp when the resource was created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Optional. An arbitrary user-provided name for the Application resource. Cannot exceed 64 characters.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * Required. Endpoint matchers associated with an application.
     * A combination of hostname and ports as endpoint matcher is used to match
     * the application.
     * Match conditions for OR logic.
     * An array of match conditions to allow for multiple matching criteria.
     * The rule is considered a match if one the conditions are met.
     * The conditions can be one of the following combination
     * (Hostname), (Hostname & Ports)
     * EXAMPLES:
     * Hostname - ("*.abc.com"), ("xyz.abc.com")
     * Hostname and Ports - ("abc.com" and "22"), ("abc.com" and "22,33") etc
     * Structure is documented below.
     */
    public readonly endpointMatchers!: pulumi.Output<outputs.beyondcorp.ApplicationEndpointMatcher[]>;
    /**
     * Identifier. Name of the resource.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * Part of `parent`. See documentation of `projectsId`.
     */
    public readonly securityGatewaysId!: pulumi.Output<string>;
    /**
     * Output only. Timestamp when the resource was last modified.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * Optional. List of which upstream resource(s) to forward traffic to.
     */
    public readonly upstreams!: pulumi.Output<outputs.beyondcorp.ApplicationUpstream[] | undefined>;

    /**
     * Create a Application resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApplicationArgs | ApplicationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApplicationState | undefined;
            resourceInputs["applicationId"] = state ? state.applicationId : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["endpointMatchers"] = state ? state.endpointMatchers : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["securityGatewaysId"] = state ? state.securityGatewaysId : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
            resourceInputs["upstreams"] = state ? state.upstreams : undefined;
        } else {
            const args = argsOrState as ApplicationArgs | undefined;
            if ((!args || args.applicationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationId'");
            }
            if ((!args || args.endpointMatchers === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endpointMatchers'");
            }
            if ((!args || args.securityGatewaysId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityGatewaysId'");
            }
            resourceInputs["applicationId"] = args ? args.applicationId : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["endpointMatchers"] = args ? args.endpointMatchers : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["securityGatewaysId"] = args ? args.securityGatewaysId : undefined;
            resourceInputs["upstreams"] = args ? args.upstreams : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Application.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Application resources.
 */
export interface ApplicationState {
    /**
     * Optional. User-settable Application resource ID.
     * * Must start with a letter.
     * * Must contain between 4-63 characters from `/a-z-/`.
     * * Must end with a number or letter.
     */
    applicationId?: pulumi.Input<string>;
    /**
     * Output only. Timestamp when the resource was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Optional. An arbitrary user-provided name for the Application resource. Cannot exceed 64 characters.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Required. Endpoint matchers associated with an application.
     * A combination of hostname and ports as endpoint matcher is used to match
     * the application.
     * Match conditions for OR logic.
     * An array of match conditions to allow for multiple matching criteria.
     * The rule is considered a match if one the conditions are met.
     * The conditions can be one of the following combination
     * (Hostname), (Hostname & Ports)
     * EXAMPLES:
     * Hostname - ("*.abc.com"), ("xyz.abc.com")
     * Hostname and Ports - ("abc.com" and "22"), ("abc.com" and "22,33") etc
     * Structure is documented below.
     */
    endpointMatchers?: pulumi.Input<pulumi.Input<inputs.beyondcorp.ApplicationEndpointMatcher>[]>;
    /**
     * Identifier. Name of the resource.
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * Part of `parent`. See documentation of `projectsId`.
     */
    securityGatewaysId?: pulumi.Input<string>;
    /**
     * Output only. Timestamp when the resource was last modified.
     */
    updateTime?: pulumi.Input<string>;
    /**
     * Optional. List of which upstream resource(s) to forward traffic to.
     */
    upstreams?: pulumi.Input<pulumi.Input<inputs.beyondcorp.ApplicationUpstream>[]>;
}

/**
 * The set of arguments for constructing a Application resource.
 */
export interface ApplicationArgs {
    /**
     * Optional. User-settable Application resource ID.
     * * Must start with a letter.
     * * Must contain between 4-63 characters from `/a-z-/`.
     * * Must end with a number or letter.
     */
    applicationId: pulumi.Input<string>;
    /**
     * Optional. An arbitrary user-provided name for the Application resource. Cannot exceed 64 characters.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Required. Endpoint matchers associated with an application.
     * A combination of hostname and ports as endpoint matcher is used to match
     * the application.
     * Match conditions for OR logic.
     * An array of match conditions to allow for multiple matching criteria.
     * The rule is considered a match if one the conditions are met.
     * The conditions can be one of the following combination
     * (Hostname), (Hostname & Ports)
     * EXAMPLES:
     * Hostname - ("*.abc.com"), ("xyz.abc.com")
     * Hostname and Ports - ("abc.com" and "22"), ("abc.com" and "22,33") etc
     * Structure is documented below.
     */
    endpointMatchers: pulumi.Input<pulumi.Input<inputs.beyondcorp.ApplicationEndpointMatcher>[]>;
    project?: pulumi.Input<string>;
    /**
     * Part of `parent`. See documentation of `projectsId`.
     */
    securityGatewaysId: pulumi.Input<string>;
    /**
     * Optional. List of which upstream resource(s) to forward traffic to.
     */
    upstreams?: pulumi.Input<pulumi.Input<inputs.beyondcorp.ApplicationUpstream>[]>;
}
