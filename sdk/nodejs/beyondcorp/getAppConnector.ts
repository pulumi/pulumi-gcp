// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Get information about a Google BeyondCorp App Connector.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const my_beyondcorp_app_connector = pulumi.output(gcp.beyondcorp.getAppConnector({
 *     name: "my-beyondcorp-app-connector",
 * }));
 * ```
 */
export function getAppConnector(args: GetAppConnectorArgs, opts?: pulumi.InvokeOptions): Promise<GetAppConnectorResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("gcp:beyondcorp/getAppConnector:getAppConnector", {
        "name": args.name,
        "project": args.project,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getAppConnector.
 */
export interface GetAppConnectorArgs {
    /**
     * The name of the App Connector.
     */
    name: string;
    /**
     * The project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    project?: string;
    /**
     * The region in which the resource belongs. If it
     * is not provided, the provider region is used.
     */
    region?: string;
}

/**
 * A collection of values returned by getAppConnector.
 */
export interface GetAppConnectorResult {
    readonly displayName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly labels: {[key: string]: string};
    readonly name: string;
    readonly principalInfos: outputs.beyondcorp.GetAppConnectorPrincipalInfo[];
    readonly project?: string;
    readonly region?: string;
    readonly state: string;
}

export function getAppConnectorOutput(args: GetAppConnectorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAppConnectorResult> {
    return pulumi.output(args).apply(a => getAppConnector(a, opts))
}

/**
 * A collection of arguments for invoking getAppConnector.
 */
export interface GetAppConnectorOutputArgs {
    /**
     * The name of the App Connector.
     */
    name: pulumi.Input<string>;
    /**
     * The project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The region in which the resource belongs. If it
     * is not provided, the provider region is used.
     */
    region?: pulumi.Input<string>;
}
