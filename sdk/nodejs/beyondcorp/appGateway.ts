// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * A BeyondCorp AppGateway resource represents a BeyondCorp protected AppGateway to a remote application. It creates
 * all the necessary GCP components needed for creating a BeyondCorp protected AppGateway. Multiple connectors can be
 * authorised for a single AppGateway.
 *
 * To get more information about AppGateway, see:
 *
 * * [API documentation](https://cloud.google.com/beyondcorp/docs/reference/rest#rest-resource:-v1.projects.locations.appgateways)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/beyondcorp-enterprise/docs/enable-app-connector)
 *
 * ## Example Usage
 * ### Beyondcorp App Gateway Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const appGateway = new gcp.beyondcorp.AppGateway("app_gateway", {
 *     hostType: "GCP_REGIONAL_MIG",
 *     region: "us-central1",
 *     type: "TCP_PROXY",
 * });
 * ```
 * ### Beyondcorp App Gateway Full
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const appGateway = new gcp.beyondcorp.AppGateway("app_gateway", {
 *     displayName: "some display name",
 *     hostType: "GCP_REGIONAL_MIG",
 *     labels: {
 *         bar: "baz",
 *         foo: "bar",
 *     },
 *     region: "us-central1",
 *     type: "TCP_PROXY",
 * });
 * ```
 *
 * ## Import
 *
 * AppGateway can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:beyondcorp/appGateway:AppGateway default projects/{{project}}/locations/{{region}}/appGateways/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:beyondcorp/appGateway:AppGateway default {{project}}/{{region}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:beyondcorp/appGateway:AppGateway default {{region}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:beyondcorp/appGateway:AppGateway default {{name}}
 * ```
 */
export class AppGateway extends pulumi.CustomResource {
    /**
     * Get an existing AppGateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppGatewayState, opts?: pulumi.CustomResourceOptions): AppGateway {
        return new AppGateway(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:beyondcorp/appGateway:AppGateway';

    /**
     * Returns true if the given object is an instance of AppGateway.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AppGateway {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppGateway.__pulumiType;
    }

    /**
     * A list of connections allocated for the Gateway.
     */
    public /*out*/ readonly allocatedConnections!: pulumi.Output<outputs.beyondcorp.AppGatewayAllocatedConnection[]>;
    /**
     * An arbitrary user-provided name for the AppGateway.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * The type of hosting used by the AppGateway.
     * Default value is `HOST_TYPE_UNSPECIFIED`.
     * Possible values are `HOST_TYPE_UNSPECIFIED` and `GCP_REGIONAL_MIG`.
     */
    public readonly hostType!: pulumi.Output<string | undefined>;
    /**
     * Resource labels to represent user provided metadata.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * ID of the AppGateway.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * The region of the AppGateway.
     */
    public readonly region!: pulumi.Output<string | undefined>;
    /**
     * Represents the different states of a AppGateway.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The type of network connectivity used by the AppGateway.
     * Default value is `TYPE_UNSPECIFIED`.
     * Possible values are `TYPE_UNSPECIFIED` and `TCP_PROXY`.
     */
    public readonly type!: pulumi.Output<string | undefined>;
    /**
     * Server-defined URI for this resource.
     */
    public /*out*/ readonly uri!: pulumi.Output<string>;

    /**
     * Create a AppGateway resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AppGatewayArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppGatewayArgs | AppGatewayState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppGatewayState | undefined;
            resourceInputs["allocatedConnections"] = state ? state.allocatedConnections : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["hostType"] = state ? state.hostType : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["uri"] = state ? state.uri : undefined;
        } else {
            const args = argsOrState as AppGatewayArgs | undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["hostType"] = args ? args.hostType : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["allocatedConnections"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["uri"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AppGateway.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AppGateway resources.
 */
export interface AppGatewayState {
    /**
     * A list of connections allocated for the Gateway.
     */
    allocatedConnections?: pulumi.Input<pulumi.Input<inputs.beyondcorp.AppGatewayAllocatedConnection>[]>;
    /**
     * An arbitrary user-provided name for the AppGateway.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The type of hosting used by the AppGateway.
     * Default value is `HOST_TYPE_UNSPECIFIED`.
     * Possible values are `HOST_TYPE_UNSPECIFIED` and `GCP_REGIONAL_MIG`.
     */
    hostType?: pulumi.Input<string>;
    /**
     * Resource labels to represent user provided metadata.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * ID of the AppGateway.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The region of the AppGateway.
     */
    region?: pulumi.Input<string>;
    /**
     * Represents the different states of a AppGateway.
     */
    state?: pulumi.Input<string>;
    /**
     * The type of network connectivity used by the AppGateway.
     * Default value is `TYPE_UNSPECIFIED`.
     * Possible values are `TYPE_UNSPECIFIED` and `TCP_PROXY`.
     */
    type?: pulumi.Input<string>;
    /**
     * Server-defined URI for this resource.
     */
    uri?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AppGateway resource.
 */
export interface AppGatewayArgs {
    /**
     * An arbitrary user-provided name for the AppGateway.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The type of hosting used by the AppGateway.
     * Default value is `HOST_TYPE_UNSPECIFIED`.
     * Possible values are `HOST_TYPE_UNSPECIFIED` and `GCP_REGIONAL_MIG`.
     */
    hostType?: pulumi.Input<string>;
    /**
     * Resource labels to represent user provided metadata.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * ID of the AppGateway.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The region of the AppGateway.
     */
    region?: pulumi.Input<string>;
    /**
     * The type of network connectivity used by the AppGateway.
     * Default value is `TYPE_UNSPECIFIED`.
     * Possible values are `TYPE_UNSPECIFIED` and `TCP_PROXY`.
     */
    type?: pulumi.Input<string>;
}
