// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * A Distributed Cloud Edge interconnect attachment, which connects routers to the northbound network.
 *
 * To get more information about InterconnectAttachment, see:
 *
 * * [API documentation](https://cloud.google.com/distributed-cloud/edge/latest/docs/reference/network/rest/v1/projects.locations.zones.interconnectAttachments)
 * * How-to Guides
 *     * [Create and manage interconnect attachments](https://cloud.google.com/distributed-cloud/edge/latest/docs/attachments#api)
 *
 * ## Example Usage
 *
 * ### Edgenetwork Interconnect Attachment
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const exampleNetwork = new gcp.edgenetwork.Network("example_network", {
 *     networkId: "example-network",
 *     location: "us-west1",
 *     zone: "",
 *     description: "Example network.",
 *     mtu: 9000,
 * });
 * const exampleInterconnectAttachment = new gcp.edgenetwork.InterconnectAttachment("example_interconnect_attachment", {
 *     interconnectAttachmentId: "example-interconnect-attachment",
 *     location: "us-west1",
 *     zone: "",
 *     description: "Example interconnect attachment.",
 *     network: exampleNetwork.id,
 *     interconnect: "11111111-2222-3333-4444-555555555555",
 *     vlanId: 55,
 *     mtu: 9000,
 *     labels: {
 *         environment: "dev",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * InterconnectAttachment can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/locations/{{location}}/zones/{{zone}}/interconnectAttachment/{{interconnect_attachment_id}}`
 *
 * * `{{project}}/{{location}}/{{zone}}/{{interconnect_attachment_id}}`
 *
 * * `{{location}}/{{zone}}/{{interconnect_attachment_id}}`
 *
 * * `{{location}}/{{interconnect_attachment_id}}`
 *
 * * `{{name}}`
 *
 * When using the `pulumi import` command, InterconnectAttachment can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:edgenetwork/interconnectAttachment:InterconnectAttachment default projects/{{project}}/locations/{{location}}/zones/{{zone}}/interconnectAttachment/{{interconnect_attachment_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:edgenetwork/interconnectAttachment:InterconnectAttachment default {{project}}/{{location}}/{{zone}}/{{interconnect_attachment_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:edgenetwork/interconnectAttachment:InterconnectAttachment default {{location}}/{{zone}}/{{interconnect_attachment_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:edgenetwork/interconnectAttachment:InterconnectAttachment default {{location}}/{{interconnect_attachment_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:edgenetwork/interconnectAttachment:InterconnectAttachment default {{name}}
 * ```
 */
export class InterconnectAttachment extends pulumi.CustomResource {
    /**
     * Get an existing InterconnectAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InterconnectAttachmentState, opts?: pulumi.CustomResourceOptions): InterconnectAttachment {
        return new InterconnectAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:edgenetwork/interconnectAttachment:InterconnectAttachment';

    /**
     * Returns true if the given object is an instance of InterconnectAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InterconnectAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InterconnectAttachment.__pulumiType;
    }

    /**
     * The time when the resource was created.
     * A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
     * fractional digits. Examples: `2014-10-02T15:01:23Z` and `2014-10-02T15:01:23.045123456Z`.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * A free-text description of the resource. Max length 1024 characters.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     */
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * The ID of the underlying interconnect that this attachment's traffic will traverse through.
     */
    public readonly interconnect!: pulumi.Output<string>;
    /**
     * A unique ID that identifies this interconnect attachment.
     */
    public readonly interconnectAttachmentId!: pulumi.Output<string>;
    /**
     * Labels associated with this resource.
     *
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The Google Cloud region to which the target Distributed Cloud Edge zone belongs.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * IP (L3) MTU value of the virtual edge cloud. Default value is `1500`. Possible values are: `1500`, `9000`.
     */
    public readonly mtu!: pulumi.Output<number | undefined>;
    /**
     * The canonical name of this resource, with format
     * `projects/{{project}}/locations/{{location}}/zones/{{zone}}/interconnectAttachments/{{interconnect_attachment_id}}`
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The ID of the network to which this interconnect attachment belongs.
     * Must be of the form: `projects/{{project}}/locations/{{location}}/zones/{{zone}}/networks/{{network_id}}`
     */
    public readonly network!: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     */
    public /*out*/ readonly pulumiLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * The time when the resource was last updated.
     * A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
     * fractional digits. Examples: `2014-10-02T15:01:23Z` and `2014-10-02T15:01:23.045123456Z`.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * VLAN ID provided by user. Must be site-wise unique.
     */
    public readonly vlanId!: pulumi.Output<number>;
    /**
     * The name of the target Distributed Cloud Edge zone.
     */
    public readonly zone!: pulumi.Output<string>;

    /**
     * Create a InterconnectAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InterconnectAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InterconnectAttachmentArgs | InterconnectAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InterconnectAttachmentState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["interconnect"] = state ? state.interconnect : undefined;
            resourceInputs["interconnectAttachmentId"] = state ? state.interconnectAttachmentId : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["mtu"] = state ? state.mtu : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["network"] = state ? state.network : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["pulumiLabels"] = state ? state.pulumiLabels : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
            resourceInputs["vlanId"] = state ? state.vlanId : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as InterconnectAttachmentArgs | undefined;
            if ((!args || args.interconnect === undefined) && !opts.urn) {
                throw new Error("Missing required property 'interconnect'");
            }
            if ((!args || args.interconnectAttachmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'interconnectAttachmentId'");
            }
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.network === undefined) && !opts.urn) {
                throw new Error("Missing required property 'network'");
            }
            if ((!args || args.vlanId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vlanId'");
            }
            if ((!args || args.zone === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zone'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["interconnect"] = args ? args.interconnect : undefined;
            resourceInputs["interconnectAttachmentId"] = args ? args.interconnectAttachmentId : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["mtu"] = args ? args.mtu : undefined;
            resourceInputs["network"] = args ? args.network : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["vlanId"] = args ? args.vlanId : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["pulumiLabels"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["effectiveLabels", "pulumiLabels"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(InterconnectAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering InterconnectAttachment resources.
 */
export interface InterconnectAttachmentState {
    /**
     * The time when the resource was created.
     * A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
     * fractional digits. Examples: `2014-10-02T15:01:23Z` and `2014-10-02T15:01:23.045123456Z`.
     */
    createTime?: pulumi.Input<string>;
    /**
     * A free-text description of the resource. Max length 1024 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     */
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The ID of the underlying interconnect that this attachment's traffic will traverse through.
     */
    interconnect?: pulumi.Input<string>;
    /**
     * A unique ID that identifies this interconnect attachment.
     */
    interconnectAttachmentId?: pulumi.Input<string>;
    /**
     * Labels associated with this resource.
     *
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The Google Cloud region to which the target Distributed Cloud Edge zone belongs.
     */
    location?: pulumi.Input<string>;
    /**
     * IP (L3) MTU value of the virtual edge cloud. Default value is `1500`. Possible values are: `1500`, `9000`.
     */
    mtu?: pulumi.Input<number>;
    /**
     * The canonical name of this resource, with format
     * `projects/{{project}}/locations/{{location}}/zones/{{zone}}/interconnectAttachments/{{interconnect_attachment_id}}`
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the network to which this interconnect attachment belongs.
     * Must be of the form: `projects/{{project}}/locations/{{location}}/zones/{{zone}}/networks/{{network_id}}`
     */
    network?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     */
    pulumiLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The time when the resource was last updated.
     * A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
     * fractional digits. Examples: `2014-10-02T15:01:23Z` and `2014-10-02T15:01:23.045123456Z`.
     */
    updateTime?: pulumi.Input<string>;
    /**
     * VLAN ID provided by user. Must be site-wise unique.
     */
    vlanId?: pulumi.Input<number>;
    /**
     * The name of the target Distributed Cloud Edge zone.
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a InterconnectAttachment resource.
 */
export interface InterconnectAttachmentArgs {
    /**
     * A free-text description of the resource. Max length 1024 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the underlying interconnect that this attachment's traffic will traverse through.
     */
    interconnect: pulumi.Input<string>;
    /**
     * A unique ID that identifies this interconnect attachment.
     */
    interconnectAttachmentId: pulumi.Input<string>;
    /**
     * Labels associated with this resource.
     *
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The Google Cloud region to which the target Distributed Cloud Edge zone belongs.
     */
    location: pulumi.Input<string>;
    /**
     * IP (L3) MTU value of the virtual edge cloud. Default value is `1500`. Possible values are: `1500`, `9000`.
     */
    mtu?: pulumi.Input<number>;
    /**
     * The ID of the network to which this interconnect attachment belongs.
     * Must be of the form: `projects/{{project}}/locations/{{location}}/zones/{{zone}}/networks/{{network_id}}`
     */
    network: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * VLAN ID provided by user. Must be site-wise unique.
     */
    vlanId: pulumi.Input<number>;
    /**
     * The name of the target Distributed Cloud Edge zone.
     */
    zone: pulumi.Input<string>;
}
