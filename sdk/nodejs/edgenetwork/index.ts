// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { InterconnectAttachmentArgs, InterconnectAttachmentState } from "./interconnectAttachment";
export type InterconnectAttachment = import("./interconnectAttachment").InterconnectAttachment;
export const InterconnectAttachment: typeof import("./interconnectAttachment").InterconnectAttachment = null as any;
utilities.lazyLoad(exports, ["InterconnectAttachment"], () => require("./interconnectAttachment"));

export { NetworkArgs, NetworkState } from "./network";
export type Network = import("./network").Network;
export const Network: typeof import("./network").Network = null as any;
utilities.lazyLoad(exports, ["Network"], () => require("./network"));

export { SubnetArgs, SubnetState } from "./subnet";
export type Subnet = import("./subnet").Subnet;
export const Subnet: typeof import("./subnet").Subnet = null as any;
utilities.lazyLoad(exports, ["Subnet"], () => require("./subnet"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "gcp:edgenetwork/interconnectAttachment:InterconnectAttachment":
                return new InterconnectAttachment(name, <any>undefined, { urn })
            case "gcp:edgenetwork/network:Network":
                return new Network(name, <any>undefined, { urn })
            case "gcp:edgenetwork/subnet:Subnet":
                return new Subnet(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "edgenetwork/interconnectAttachment", _module)
pulumi.runtime.registerResourceModule("gcp", "edgenetwork/network", _module)
pulumi.runtime.registerResourceModule("gcp", "edgenetwork/subnet", _module)
