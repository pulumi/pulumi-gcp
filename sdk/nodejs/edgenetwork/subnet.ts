// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * A Distributed Cloud Edge subnet, which provides L2 isolation within a network.
 *
 * To get more information about Subnet, see:
 *
 * * [API documentation](https://cloud.google.com/distributed-cloud/edge/latest/docs/reference/network/rest/v1/projects.locations.zones.subnets)
 * * How-to Guides
 *     * [Create and manage subnetworks](https://cloud.google.com/distributed-cloud/edge/latest/docs/subnetworks#api)
 *
 * ## Example Usage
 *
 * ### Edgenetwork Subnet
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const exampleNetwork = new gcp.edgenetwork.Network("example_network", {
 *     networkId: "example-network",
 *     location: "us-west1",
 *     zone: "",
 *     description: "Example network.",
 *     mtu: 9000,
 * });
 * const exampleSubnet = new gcp.edgenetwork.Subnet("example_subnet", {
 *     subnetId: "example-subnet",
 *     location: "us-west1",
 *     zone: "",
 *     description: "Example subnet.",
 *     network: exampleNetwork.id,
 *     ipv4Cidrs: ["4.4.4.1/24"],
 *     labels: {
 *         environment: "dev",
 *     },
 * });
 * ```
 * ### Edgenetwork Subnet With Vlan Id
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const exampleNetwork = new gcp.edgenetwork.Network("example_network", {
 *     networkId: "example-network",
 *     location: "us-west1",
 *     zone: "",
 *     description: "Example network.",
 *     mtu: 9000,
 * });
 * const exampleSubnetWithVlanId = new gcp.edgenetwork.Subnet("example_subnet_with_vlan_id", {
 *     subnetId: "example-subnet-with-vlan-id",
 *     location: "us-west1",
 *     zone: "",
 *     description: "Example subnet with VLAN ID.",
 *     network: exampleNetwork.id,
 *     ipv6Cidrs: ["4444:4444:4444:4444::1/64"],
 *     vlanId: 44,
 *     labels: {
 *         environment: "dev",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Subnet can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/locations/{{location}}/zones/{{zone}}/subnets/{{subnet_id}}`
 *
 * * `{{project}}/{{location}}/{{zone}}/{{subnet_id}}`
 *
 * * `{{location}}/{{zone}}/{{subnet_id}}`
 *
 * * `{{location}}/{{subnet_id}}`
 *
 * * `{{name}}`
 *
 * When using the `pulumi import` command, Subnet can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:edgenetwork/subnet:Subnet default projects/{{project}}/locations/{{location}}/zones/{{zone}}/subnets/{{subnet_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:edgenetwork/subnet:Subnet default {{project}}/{{location}}/{{zone}}/{{subnet_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:edgenetwork/subnet:Subnet default {{location}}/{{zone}}/{{subnet_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:edgenetwork/subnet:Subnet default {{location}}/{{subnet_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:edgenetwork/subnet:Subnet default {{name}}
 * ```
 */
export class Subnet extends pulumi.CustomResource {
    /**
     * Get an existing Subnet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SubnetState, opts?: pulumi.CustomResourceOptions): Subnet {
        return new Subnet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:edgenetwork/subnet:Subnet';

    /**
     * Returns true if the given object is an instance of Subnet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Subnet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Subnet.__pulumiType;
    }

    /**
     * The time when the subnet was created.
     * A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
     * fractional digits. Examples: `2014-10-02T15:01:23Z` and `2014-10-02T15:01:23.045123456Z`.
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * A free-text description of the resource. Max length 1024 characters.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     */
    declare public /*out*/ readonly effectiveLabels: pulumi.Output<{[key: string]: string}>;
    /**
     * The ranges of ipv4 addresses that are owned by this subnetwork, in CIDR format.
     */
    declare public readonly ipv4Cidrs: pulumi.Output<string[] | undefined>;
    /**
     * The ranges of ipv6 addresses that are owned by this subnetwork, in CIDR format.
     */
    declare public readonly ipv6Cidrs: pulumi.Output<string[] | undefined>;
    /**
     * Labels associated with this resource.
     *
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    declare public readonly labels: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The Google Cloud region to which the target Distributed Cloud Edge zone belongs.
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * The canonical name of this resource, with format
     * `projects/{{project}}/locations/{{location}}/zones/{{zone}}/subnets/{{subnet_id}}`
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    /**
     * The ID of the network to which this router belongs.
     * Must be of the form: `projects/{{project}}/locations/{{location}}/zones/{{zone}}/networks/{{network_id}}`
     */
    declare public readonly network: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    declare public readonly project: pulumi.Output<string>;
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     */
    declare public /*out*/ readonly pulumiLabels: pulumi.Output<{[key: string]: string}>;
    /**
     * Current stage of the resource to the device by config push.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * A unique ID that identifies this subnet.
     */
    declare public readonly subnetId: pulumi.Output<string>;
    /**
     * The time when the subnet was last updated.
     * A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
     * fractional digits. Examples: `2014-10-02T15:01:23Z` and `2014-10-02T15:01:23.045123456Z`.
     */
    declare public /*out*/ readonly updateTime: pulumi.Output<string>;
    /**
     * VLAN ID for this subnetwork. If not specified, one is assigned automatically.
     */
    declare public readonly vlanId: pulumi.Output<number>;
    /**
     * The name of the target Distributed Cloud Edge zone.
     */
    declare public readonly zone: pulumi.Output<string>;

    /**
     * Create a Subnet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SubnetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SubnetArgs | SubnetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SubnetState | undefined;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["description"] = state?.description;
            resourceInputs["effectiveLabels"] = state?.effectiveLabels;
            resourceInputs["ipv4Cidrs"] = state?.ipv4Cidrs;
            resourceInputs["ipv6Cidrs"] = state?.ipv6Cidrs;
            resourceInputs["labels"] = state?.labels;
            resourceInputs["location"] = state?.location;
            resourceInputs["name"] = state?.name;
            resourceInputs["network"] = state?.network;
            resourceInputs["project"] = state?.project;
            resourceInputs["pulumiLabels"] = state?.pulumiLabels;
            resourceInputs["state"] = state?.state;
            resourceInputs["subnetId"] = state?.subnetId;
            resourceInputs["updateTime"] = state?.updateTime;
            resourceInputs["vlanId"] = state?.vlanId;
            resourceInputs["zone"] = state?.zone;
        } else {
            const args = argsOrState as SubnetArgs | undefined;
            if (args?.location === undefined && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if (args?.network === undefined && !opts.urn) {
                throw new Error("Missing required property 'network'");
            }
            if (args?.subnetId === undefined && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            if (args?.zone === undefined && !opts.urn) {
                throw new Error("Missing required property 'zone'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["ipv4Cidrs"] = args?.ipv4Cidrs;
            resourceInputs["ipv6Cidrs"] = args?.ipv6Cidrs;
            resourceInputs["labels"] = args?.labels;
            resourceInputs["location"] = args?.location;
            resourceInputs["network"] = args?.network;
            resourceInputs["project"] = args?.project;
            resourceInputs["subnetId"] = args?.subnetId;
            resourceInputs["vlanId"] = args?.vlanId;
            resourceInputs["zone"] = args?.zone;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["pulumiLabels"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["effectiveLabels", "pulumiLabels"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Subnet.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Subnet resources.
 */
export interface SubnetState {
    /**
     * The time when the subnet was created.
     * A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
     * fractional digits. Examples: `2014-10-02T15:01:23Z` and `2014-10-02T15:01:23.045123456Z`.
     */
    createTime?: pulumi.Input<string>;
    /**
     * A free-text description of the resource. Max length 1024 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     */
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The ranges of ipv4 addresses that are owned by this subnetwork, in CIDR format.
     */
    ipv4Cidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ranges of ipv6 addresses that are owned by this subnetwork, in CIDR format.
     */
    ipv6Cidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Labels associated with this resource.
     *
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The Google Cloud region to which the target Distributed Cloud Edge zone belongs.
     */
    location?: pulumi.Input<string>;
    /**
     * The canonical name of this resource, with format
     * `projects/{{project}}/locations/{{location}}/zones/{{zone}}/subnets/{{subnet_id}}`
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the network to which this router belongs.
     * Must be of the form: `projects/{{project}}/locations/{{location}}/zones/{{zone}}/networks/{{network_id}}`
     */
    network?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     */
    pulumiLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Current stage of the resource to the device by config push.
     */
    state?: pulumi.Input<string>;
    /**
     * A unique ID that identifies this subnet.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * The time when the subnet was last updated.
     * A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
     * fractional digits. Examples: `2014-10-02T15:01:23Z` and `2014-10-02T15:01:23.045123456Z`.
     */
    updateTime?: pulumi.Input<string>;
    /**
     * VLAN ID for this subnetwork. If not specified, one is assigned automatically.
     */
    vlanId?: pulumi.Input<number>;
    /**
     * The name of the target Distributed Cloud Edge zone.
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Subnet resource.
 */
export interface SubnetArgs {
    /**
     * A free-text description of the resource. Max length 1024 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * The ranges of ipv4 addresses that are owned by this subnetwork, in CIDR format.
     */
    ipv4Cidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ranges of ipv6 addresses that are owned by this subnetwork, in CIDR format.
     */
    ipv6Cidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Labels associated with this resource.
     *
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The Google Cloud region to which the target Distributed Cloud Edge zone belongs.
     */
    location: pulumi.Input<string>;
    /**
     * The ID of the network to which this router belongs.
     * Must be of the form: `projects/{{project}}/locations/{{location}}/zones/{{zone}}/networks/{{network_id}}`
     */
    network: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * A unique ID that identifies this subnet.
     */
    subnetId: pulumi.Input<string>;
    /**
     * VLAN ID for this subnetwork. If not specified, one is assigned automatically.
     */
    vlanId?: pulumi.Input<number>;
    /**
     * The name of the target Distributed Cloud Edge zone.
     */
    zone: pulumi.Input<string>;
}
