// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * A regional secret version resource.
 *
 * To get more information about RegionalSecretVersion, see:
 *
 * * [API documentation](https://cloud.google.com/secret-manager/docs/reference/rest/v1/projects.locations.secrets.versions)
 * * How-to Guides
 *     * [Create and deploy a Regional Secret Version](https://cloud.google.com/secret-manager/regional-secrets/add-secret-version-rs)
 *
 * ## Example Usage
 *
 * ### Regional Secret Version Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const secret_basic = new gcp.secretmanager.RegionalSecret("secret-basic", {
 *     secretId: "secret-version",
 *     location: "us-central1",
 * });
 * const regionalSecretVersionBasic = new gcp.secretmanager.RegionalSecretVersion("regional_secret_version_basic", {
 *     secret: secret_basic.id,
 *     secretData: "secret-data",
 * });
 * ```
 * ### Regional Secret Version With Base64 Data
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * import * as std from "@pulumi/std";
 *
 * const secret_basic = new gcp.secretmanager.RegionalSecret("secret-basic", {
 *     secretId: "secret-version",
 *     location: "us-central1",
 * });
 * const regionalSecretVersionBase64 = new gcp.secretmanager.RegionalSecretVersion("regional_secret_version_base64", {
 *     secret: secret_basic.id,
 *     secretData: std.filebase64({
 *         input: "secret-data.pfx",
 *     }).then(invoke => invoke.result),
 *     isSecretDataBase64: true,
 * });
 * ```
 * ### Regional Secret Version Disabled
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const secret_basic = new gcp.secretmanager.RegionalSecret("secret-basic", {
 *     secretId: "secret-version",
 *     location: "us-central1",
 * });
 * const regionalSecretVersionDisabled = new gcp.secretmanager.RegionalSecretVersion("regional_secret_version_disabled", {
 *     secret: secret_basic.id,
 *     secretData: "secret-data",
 *     enabled: false,
 * });
 * ```
 * ### Regional Secret Version Deletion Policy Abandon
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const secret_basic = new gcp.secretmanager.RegionalSecret("secret-basic", {
 *     secretId: "secret-version",
 *     location: "us-central1",
 * });
 * const regionalSecretVersionDeletionPolicy = new gcp.secretmanager.RegionalSecretVersion("regional_secret_version_deletion_policy", {
 *     secret: secret_basic.id,
 *     secretData: "secret-data",
 *     deletionPolicy: "ABANDON",
 * });
 * ```
 * ### Regional Secret Version Deletion Policy Disable
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const secret_basic = new gcp.secretmanager.RegionalSecret("secret-basic", {
 *     secretId: "secret-version",
 *     location: "us-central1",
 * });
 * const regionalSecretVersionDeletionPolicy = new gcp.secretmanager.RegionalSecretVersion("regional_secret_version_deletion_policy", {
 *     secret: secret_basic.id,
 *     secretData: "secret-data",
 *     deletionPolicy: "DISABLE",
 * });
 * ```
 *
 * ## Import
 *
 * RegionalSecretVersion can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/locations/{{location}}/secrets/{{secret_id}}/versions/{{version}}`
 *
 * When using the `pulumi import` command, RegionalSecretVersion can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:secretmanager/regionalSecretVersion:RegionalSecretVersion default projects/{{project}}/locations/{{location}}/secrets/{{secret_id}}/versions/{{version}}
 * ```
 */
export class RegionalSecretVersion extends pulumi.CustomResource {
    /**
     * Get an existing RegionalSecretVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RegionalSecretVersionState, opts?: pulumi.CustomResourceOptions): RegionalSecretVersion {
        return new RegionalSecretVersion(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:secretmanager/regionalSecretVersion:RegionalSecretVersion';

    /**
     * Returns true if the given object is an instance of RegionalSecretVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RegionalSecretVersion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RegionalSecretVersion.__pulumiType;
    }

    /**
     * The time at which the regional secret version was created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The customer-managed encryption configuration of the regional secret.
     * Structure is documented below.
     */
    public /*out*/ readonly customerManagedEncryptions!: pulumi.Output<outputs.secretmanager.RegionalSecretVersionCustomerManagedEncryption[]>;
    /**
     * The deletion policy for the regional secret version. Setting `ABANDON` allows the resource
     * to be abandoned rather than deleted. Setting `DISABLE` allows the resource to be
     * disabled rather than deleted. Default is `DELETE`. Possible values are:
     * * DELETE
     * * DISABLE
     * * ABANDON
     */
    public readonly deletionPolicy!: pulumi.Output<string | undefined>;
    /**
     * The time at which the regional secret version was destroyed. Only present if state is DESTROYED.
     */
    public /*out*/ readonly destroyTime!: pulumi.Output<string>;
    /**
     * The current state of the regional secret version.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * If set to 'true', the secret data is expected to be base64-encoded string and would be sent as is.
     */
    public readonly isSecretDataBase64!: pulumi.Output<boolean | undefined>;
    /**
     * Location of Secret Manager regional secret resource.
     */
    public /*out*/ readonly location!: pulumi.Output<string>;
    /**
     * The resource name of the regional secret version. Format:
     * `projects/{{project}}/locations/{{location}}/secrets/{{secret_id}}/versions/{{version}}`
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Secret Manager regional secret resource.
     *
     *
     * - - -
     */
    public readonly secret!: pulumi.Output<string>;
    /**
     * The secret data. Must be no larger than 64KiB.
     * **Note**: This property is sensitive and will not be displayed in the plan.
     */
    public readonly secretData!: pulumi.Output<string>;
    /**
     * The version of the Regional Secret.
     */
    public /*out*/ readonly version!: pulumi.Output<string>;

    /**
     * Create a RegionalSecretVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RegionalSecretVersionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RegionalSecretVersionArgs | RegionalSecretVersionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RegionalSecretVersionState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["customerManagedEncryptions"] = state ? state.customerManagedEncryptions : undefined;
            resourceInputs["deletionPolicy"] = state ? state.deletionPolicy : undefined;
            resourceInputs["destroyTime"] = state ? state.destroyTime : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["isSecretDataBase64"] = state ? state.isSecretDataBase64 : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["secret"] = state ? state.secret : undefined;
            resourceInputs["secretData"] = state ? state.secretData : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as RegionalSecretVersionArgs | undefined;
            if ((!args || args.secret === undefined) && !opts.urn) {
                throw new Error("Missing required property 'secret'");
            }
            if ((!args || args.secretData === undefined) && !opts.urn) {
                throw new Error("Missing required property 'secretData'");
            }
            resourceInputs["deletionPolicy"] = args ? args.deletionPolicy : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["isSecretDataBase64"] = args ? args.isSecretDataBase64 : undefined;
            resourceInputs["secret"] = args ? args.secret : undefined;
            resourceInputs["secretData"] = args?.secretData ? pulumi.secret(args.secretData) : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["customerManagedEncryptions"] = undefined /*out*/;
            resourceInputs["destroyTime"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["secretData"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(RegionalSecretVersion.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RegionalSecretVersion resources.
 */
export interface RegionalSecretVersionState {
    /**
     * The time at which the regional secret version was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The customer-managed encryption configuration of the regional secret.
     * Structure is documented below.
     */
    customerManagedEncryptions?: pulumi.Input<pulumi.Input<inputs.secretmanager.RegionalSecretVersionCustomerManagedEncryption>[]>;
    /**
     * The deletion policy for the regional secret version. Setting `ABANDON` allows the resource
     * to be abandoned rather than deleted. Setting `DISABLE` allows the resource to be
     * disabled rather than deleted. Default is `DELETE`. Possible values are:
     * * DELETE
     * * DISABLE
     * * ABANDON
     */
    deletionPolicy?: pulumi.Input<string>;
    /**
     * The time at which the regional secret version was destroyed. Only present if state is DESTROYED.
     */
    destroyTime?: pulumi.Input<string>;
    /**
     * The current state of the regional secret version.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * If set to 'true', the secret data is expected to be base64-encoded string and would be sent as is.
     */
    isSecretDataBase64?: pulumi.Input<boolean>;
    /**
     * Location of Secret Manager regional secret resource.
     */
    location?: pulumi.Input<string>;
    /**
     * The resource name of the regional secret version. Format:
     * `projects/{{project}}/locations/{{location}}/secrets/{{secret_id}}/versions/{{version}}`
     */
    name?: pulumi.Input<string>;
    /**
     * Secret Manager regional secret resource.
     *
     *
     * - - -
     */
    secret?: pulumi.Input<string>;
    /**
     * The secret data. Must be no larger than 64KiB.
     * **Note**: This property is sensitive and will not be displayed in the plan.
     */
    secretData?: pulumi.Input<string>;
    /**
     * The version of the Regional Secret.
     */
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RegionalSecretVersion resource.
 */
export interface RegionalSecretVersionArgs {
    /**
     * The deletion policy for the regional secret version. Setting `ABANDON` allows the resource
     * to be abandoned rather than deleted. Setting `DISABLE` allows the resource to be
     * disabled rather than deleted. Default is `DELETE`. Possible values are:
     * * DELETE
     * * DISABLE
     * * ABANDON
     */
    deletionPolicy?: pulumi.Input<string>;
    /**
     * The current state of the regional secret version.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * If set to 'true', the secret data is expected to be base64-encoded string and would be sent as is.
     */
    isSecretDataBase64?: pulumi.Input<boolean>;
    /**
     * Secret Manager regional secret resource.
     *
     *
     * - - -
     */
    secret: pulumi.Input<string>;
    /**
     * The secret data. Must be no larger than 64KiB.
     * **Note**: This property is sensitive and will not be displayed in the plan.
     */
    secretData: pulumi.Input<string>;
}
