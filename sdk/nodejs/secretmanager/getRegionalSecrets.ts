// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * subcategory: "Secret Manager"
 * description: |-
 *   List the Secret Manager Regional Secrets.
 * ---
 *
 * Use this data source to list the Secret Manager Regional Secrets.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const secrets = gcp.secretmanager.getRegionalSecrets({
 *     location: "us-central1",
 * });
 * ```
 */
export function getRegionalSecrets(args: GetRegionalSecretsArgs, opts?: pulumi.InvokeOptions): Promise<GetRegionalSecretsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:secretmanager/getRegionalSecrets:getRegionalSecrets", {
        "filter": args.filter,
        "location": args.location,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getRegionalSecrets.
 */
export interface GetRegionalSecretsArgs {
    /**
     * Filter string, adhering to the rules in [List-operation filtering](https://cloud.google.com/secret-manager/docs/filtering). List only secrets matching the filter. If filter is empty, all regional secrets are listed from the specified location.
     */
    filter?: string;
    /**
     * The location of the regional secret.
     */
    location: string;
    /**
     * The ID of the project.
     */
    project?: string;
}

/**
 * A collection of values returned by getRegionalSecrets.
 */
export interface GetRegionalSecretsResult {
    readonly filter?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The location in which the resource belongs.
     */
    readonly location: string;
    /**
     * The ID of the project in which the resource belongs.
     */
    readonly project: string;
    /**
     * A list of regional secrets present in the specified location and matching the filter. Structure is defined below.
     */
    readonly secrets: outputs.secretmanager.GetRegionalSecretsSecret[];
}
/**
 * subcategory: "Secret Manager"
 * description: |-
 *   List the Secret Manager Regional Secrets.
 * ---
 *
 * Use this data source to list the Secret Manager Regional Secrets.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const secrets = gcp.secretmanager.getRegionalSecrets({
 *     location: "us-central1",
 * });
 * ```
 */
export function getRegionalSecretsOutput(args: GetRegionalSecretsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRegionalSecretsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("gcp:secretmanager/getRegionalSecrets:getRegionalSecrets", {
        "filter": args.filter,
        "location": args.location,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getRegionalSecrets.
 */
export interface GetRegionalSecretsOutputArgs {
    /**
     * Filter string, adhering to the rules in [List-operation filtering](https://cloud.google.com/secret-manager/docs/filtering). List only secrets matching the filter. If filter is empty, all regional secrets are listed from the specified location.
     */
    filter?: pulumi.Input<string>;
    /**
     * The location of the regional secret.
     */
    location: pulumi.Input<string>;
    /**
     * The ID of the project.
     */
    project?: pulumi.Input<string>;
}
