// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to get information about a Secret Manager Secret
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const qa = pulumi.output(gcp.secretmanager.getSecret({
 *     secretId: "foobar",
 * }));
 * ```
 */
export function getSecret(args: GetSecretArgs, opts?: pulumi.InvokeOptions): Promise<GetSecretResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("gcp:secretmanager/getSecret:getSecret", {
        "project": args.project,
        "secretId": args.secretId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSecret.
 */
export interface GetSecretArgs {
    /**
     * The ID of the project in which the resource belongs.
     */
    project?: string;
    /**
     * The name of the secret.
     */
    secretId: string;
}

/**
 * A collection of values returned by getSecret.
 */
export interface GetSecretResult {
    readonly createTime: string;
    readonly expireTime: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly labels: {[key: string]: string};
    readonly name: string;
    readonly project?: string;
    readonly replications: outputs.secretmanager.GetSecretReplication[];
    readonly rotations: outputs.secretmanager.GetSecretRotation[];
    readonly secretId: string;
    readonly topics: outputs.secretmanager.GetSecretTopic[];
    readonly ttl: string;
}
