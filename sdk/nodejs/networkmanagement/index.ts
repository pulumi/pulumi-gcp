// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ConnectivityTestArgs, ConnectivityTestState } from "./connectivityTest";
export type ConnectivityTest = import("./connectivityTest").ConnectivityTest;
export const ConnectivityTest: typeof import("./connectivityTest").ConnectivityTest = null as any;
utilities.lazyLoad(exports, ["ConnectivityTest"], () => require("./connectivityTest"));

export { GetConnectivityTestRunArgs, GetConnectivityTestRunResult, GetConnectivityTestRunOutputArgs } from "./getConnectivityTestRun";
export const getConnectivityTestRun: typeof import("./getConnectivityTestRun").getConnectivityTestRun = null as any;
export const getConnectivityTestRunOutput: typeof import("./getConnectivityTestRun").getConnectivityTestRunOutput = null as any;
utilities.lazyLoad(exports, ["getConnectivityTestRun","getConnectivityTestRunOutput"], () => require("./getConnectivityTestRun"));

export { GetConnectivityTestsArgs, GetConnectivityTestsResult, GetConnectivityTestsOutputArgs } from "./getConnectivityTests";
export const getConnectivityTests: typeof import("./getConnectivityTests").getConnectivityTests = null as any;
export const getConnectivityTestsOutput: typeof import("./getConnectivityTests").getConnectivityTestsOutput = null as any;
utilities.lazyLoad(exports, ["getConnectivityTests","getConnectivityTestsOutput"], () => require("./getConnectivityTests"));

export { OrganizationVpcFlowLogsConfigArgs, OrganizationVpcFlowLogsConfigState } from "./organizationVpcFlowLogsConfig";
export type OrganizationVpcFlowLogsConfig = import("./organizationVpcFlowLogsConfig").OrganizationVpcFlowLogsConfig;
export const OrganizationVpcFlowLogsConfig: typeof import("./organizationVpcFlowLogsConfig").OrganizationVpcFlowLogsConfig = null as any;
utilities.lazyLoad(exports, ["OrganizationVpcFlowLogsConfig"], () => require("./organizationVpcFlowLogsConfig"));

export { VpcFlowLogsConfigArgs, VpcFlowLogsConfigState } from "./vpcFlowLogsConfig";
export type VpcFlowLogsConfig = import("./vpcFlowLogsConfig").VpcFlowLogsConfig;
export const VpcFlowLogsConfig: typeof import("./vpcFlowLogsConfig").VpcFlowLogsConfig = null as any;
utilities.lazyLoad(exports, ["VpcFlowLogsConfig"], () => require("./vpcFlowLogsConfig"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "gcp:networkmanagement/connectivityTest:ConnectivityTest":
                return new ConnectivityTest(name, <any>undefined, { urn })
            case "gcp:networkmanagement/organizationVpcFlowLogsConfig:OrganizationVpcFlowLogsConfig":
                return new OrganizationVpcFlowLogsConfig(name, <any>undefined, { urn })
            case "gcp:networkmanagement/vpcFlowLogsConfig:VpcFlowLogsConfig":
                return new VpcFlowLogsConfig(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "networkmanagement/connectivityTest", _module)
pulumi.runtime.registerResourceModule("gcp", "networkmanagement/organizationVpcFlowLogsConfig", _module)
pulumi.runtime.registerResourceModule("gcp", "networkmanagement/vpcFlowLogsConfig", _module)
