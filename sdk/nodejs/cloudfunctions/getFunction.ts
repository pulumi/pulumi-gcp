// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";

/**
 * Get information about a Google Cloud Function. For more information see
 * the [official documentation](https://cloud.google.com/functions/docs/)
 * and [API](https://cloud.google.com/functions/docs/apis).
 */
export function getFunction(args: GetFunctionArgs, opts?: pulumi.InvokeOptions): Promise<GetFunctionResult> {
    return pulumi.runtime.invoke("gcp:cloudfunctions/getFunction:getFunction", {
        "name": args.name,
        "project": args.project,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getFunction.
 */
export interface GetFunctionArgs {
    /**
     * The name of a Cloud Function.
     */
    readonly name: string;
    /**
     * The project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    readonly project?: string;
    /**
     * The region in which the resource belongs. If it
     * is not provided, the provider region is used.
     */
    readonly region?: string;
}

/**
 * A collection of values returned by getFunction.
 */
export interface GetFunctionResult {
    /**
     * Available memory (in MB) to the function.
     */
    readonly availableMemoryMb: number;
    /**
     * Description of the function.
     */
    readonly description: string;
    /**
     * Name of a JavaScript function that will be executed when the Google Cloud Function is triggered.
     */
    readonly entryPoint: string;
    /**
     * If function is triggered by HTTP, trigger URL is set here.
     */
    readonly httpsTriggerUrl: string;
    /**
     * A map of labels applied to this function.
     */
    readonly labels: {[key: string]: any};
    readonly retryOnFailure: boolean;
    /**
     * The GCS bucket containing the zip archive which contains the function.
     */
    readonly sourceArchiveBucket: string;
    /**
     * The source archive object (file) in archive bucket.
     */
    readonly sourceArchiveObject: string;
    /**
     * Function execution timeout (in seconds).
     */
    readonly timeout: number;
    /**
     * If function is triggered by bucket, bucket name is set here.
     */
    readonly triggerBucket: string;
    /**
     * If function is triggered by HTTP, this boolean is set.
     */
    readonly triggerHttp: boolean;
    /**
     * If function is triggered by Pub/Sub topic, name of topic is set here.
     */
    readonly triggerTopic: string;
    /**
     * id is the provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
