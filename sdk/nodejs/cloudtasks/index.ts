// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { QueueArgs, QueueState } from "./queue";
export type Queue = import("./queue").Queue;
export const Queue: typeof import("./queue").Queue = null as any;
utilities.lazyLoad(exports, ["Queue"], () => require("./queue"));

export { QueueIamBindingArgs, QueueIamBindingState } from "./queueIamBinding";
export type QueueIamBinding = import("./queueIamBinding").QueueIamBinding;
export const QueueIamBinding: typeof import("./queueIamBinding").QueueIamBinding = null as any;
utilities.lazyLoad(exports, ["QueueIamBinding"], () => require("./queueIamBinding"));

export { QueueIamMemberArgs, QueueIamMemberState } from "./queueIamMember";
export type QueueIamMember = import("./queueIamMember").QueueIamMember;
export const QueueIamMember: typeof import("./queueIamMember").QueueIamMember = null as any;
utilities.lazyLoad(exports, ["QueueIamMember"], () => require("./queueIamMember"));

export { QueueIamPolicyArgs, QueueIamPolicyState } from "./queueIamPolicy";
export type QueueIamPolicy = import("./queueIamPolicy").QueueIamPolicy;
export const QueueIamPolicy: typeof import("./queueIamPolicy").QueueIamPolicy = null as any;
utilities.lazyLoad(exports, ["QueueIamPolicy"], () => require("./queueIamPolicy"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "gcp:cloudtasks/queue:Queue":
                return new Queue(name, <any>undefined, { urn })
            case "gcp:cloudtasks/queueIamBinding:QueueIamBinding":
                return new QueueIamBinding(name, <any>undefined, { urn })
            case "gcp:cloudtasks/queueIamMember:QueueIamMember":
                return new QueueIamMember(name, <any>undefined, { urn })
            case "gcp:cloudtasks/queueIamPolicy:QueueIamPolicy":
                return new QueueIamPolicy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "cloudtasks/queue", _module)
pulumi.runtime.registerResourceModule("gcp", "cloudtasks/queueIamBinding", _module)
pulumi.runtime.registerResourceModule("gcp", "cloudtasks/queueIamMember", _module)
pulumi.runtime.registerResourceModule("gcp", "cloudtasks/queueIamPolicy", _module)
