// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Get a list of datasets in a GCP project. For more information see
 * the [official documentation](https://cloud.google.com/bigquery/docs)
 * and [API](https://cloud.google.com/bigquery/docs/reference/rest/v2/datasets/list).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const datasets = gcp.bigquery.getDatasets({
 *     project: "my-project",
 * });
 * ```
 */
export function getDatasets(args?: GetDatasetsArgs, opts?: pulumi.InvokeOptions): Promise<GetDatasetsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:bigquery/getDatasets:getDatasets", {
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getDatasets.
 */
export interface GetDatasetsArgs {
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: string;
}

/**
 * A collection of values returned by getDatasets.
 */
export interface GetDatasetsResult {
    /**
     * A list of all retrieved BigQuery datasets. Structure is defined below.
     */
    readonly datasets: outputs.bigquery.GetDatasetsDataset[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly project?: string;
}
/**
 * Get a list of datasets in a GCP project. For more information see
 * the [official documentation](https://cloud.google.com/bigquery/docs)
 * and [API](https://cloud.google.com/bigquery/docs/reference/rest/v2/datasets/list).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const datasets = gcp.bigquery.getDatasets({
 *     project: "my-project",
 * });
 * ```
 */
export function getDatasetsOutput(args?: GetDatasetsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDatasetsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("gcp:bigquery/getDatasets:getDatasets", {
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getDatasets.
 */
export interface GetDatasetsOutputArgs {
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
