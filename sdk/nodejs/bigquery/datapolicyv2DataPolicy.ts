// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * BigQuery Data Policy
 *
 * To get more information about DataPolicy, see:
 *
 * * [API documentation](https://cloud.google.com/bigquery/docs/reference/bigquerydatapolicy/rest/v2/projects.locations.dataPolicies)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/bigquery/docs/column-data-masking-intro)
 *
 * ## Example Usage
 *
 * ### Bigquery Datapolicyv2 Datapolicy Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const basicDataPolicy = new gcp.bigquery.Datapolicyv2DataPolicy("basic_data_policy", {
 *     location: "us-central1",
 *     dataPolicyType: "RAW_DATA_ACCESS_POLICY",
 *     dataPolicyId: "basic_data_policy",
 * });
 * ```
 * ### Bigquery Datapolicyv2 Datapolicy Predefined Masking
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const predefinedMaskingDataPolicy = new gcp.bigquery.Datapolicyv2DataPolicy("predefined_masking_data_policy", {
 *     location: "us-central1",
 *     dataPolicyType: "DATA_MASKING_POLICY",
 *     dataMaskingPolicy: {
 *         predefinedExpression: "SHA256",
 *     },
 *     dataPolicyId: "predefined_masking_data_policy",
 * });
 * ```
 * ### Bigquery Datapolicyv2 Datapolicy Routine
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const test = new gcp.bigquery.Dataset("test", {
 *     datasetId: "dataset_id",
 *     location: "us-central1",
 * });
 * const customMaskingRoutine = new gcp.bigquery.Routine("custom_masking_routine", {
 *     datasetId: test.datasetId,
 *     routineId: "custom_masking_routine",
 *     routineType: "SCALAR_FUNCTION",
 *     language: "SQL",
 *     dataGovernanceType: "DATA_MASKING",
 *     definitionBody: "SAFE.REGEXP_REPLACE(ssn, '[0-9]', 'X')",
 *     returnType: "{\"typeKind\" :  \"STRING\"}",
 *     arguments: [{
 *         name: "ssn",
 *         dataType: "{\"typeKind\" :  \"STRING\"}",
 *     }],
 * });
 * const routineDataPolicy = new gcp.bigquery.Datapolicyv2DataPolicy("routine_data_policy", {
 *     location: "us-central1",
 *     dataPolicyId: "routine_data_policy",
 *     dataPolicyType: "DATA_MASKING_POLICY",
 *     dataMaskingPolicy: {
 *         routine: customMaskingRoutine.id,
 *     },
 * });
 * ```
 * ### Bigquery Datapolicyv2 Datapolicy Withgrantees
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const dataPolicyWithGrantees = new gcp.bigquery.Datapolicyv2DataPolicy("data_policy_with_grantees", {
 *     location: "us-central1",
 *     dataPolicyType: "RAW_DATA_ACCESS_POLICY",
 *     grantees: ["principal://goog/subject/jane@example.com"],
 *     dataPolicyId: "data_policy_with_grantees",
 * });
 * ```
 *
 * ## Import
 *
 * DataPolicy can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/locations/{{location}}/dataPolicies/{{data_policy_id}}`
 *
 * * `{{project}}/{{location}}/{{data_policy_id}}`
 *
 * * `{{location}}/{{data_policy_id}}`
 *
 * When using the `pulumi import` command, DataPolicy can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:bigquery/datapolicyv2DataPolicy:Datapolicyv2DataPolicy default projects/{{project}}/locations/{{location}}/dataPolicies/{{data_policy_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:bigquery/datapolicyv2DataPolicy:Datapolicyv2DataPolicy default {{project}}/{{location}}/{{data_policy_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:bigquery/datapolicyv2DataPolicy:Datapolicyv2DataPolicy default {{location}}/{{data_policy_id}}
 * ```
 */
export class Datapolicyv2DataPolicy extends pulumi.CustomResource {
    /**
     * Get an existing Datapolicyv2DataPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Datapolicyv2DataPolicyState, opts?: pulumi.CustomResourceOptions): Datapolicyv2DataPolicy {
        return new Datapolicyv2DataPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:bigquery/datapolicyv2DataPolicy:Datapolicyv2DataPolicy';

    /**
     * Returns true if the given object is an instance of Datapolicyv2DataPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Datapolicyv2DataPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Datapolicyv2DataPolicy.__pulumiType;
    }

    /**
     * The policy used to specify data masking rule.
     * Structure is documented below.
     */
    declare public readonly dataMaskingPolicy: pulumi.Output<outputs.bigquery.Datapolicyv2DataPolicyDataMaskingPolicy | undefined>;
    /**
     * User-assigned (human readable) ID of the data policy that needs to be
     * unique within a project. Used as {data_policy_id} in part of the resource
     * name.
     */
    declare public readonly dataPolicyId: pulumi.Output<string>;
    /**
     * Type of data policy.
     * Possible values:
     * DATA_MASKING_POLICY
     * RAW_DATA_ACCESS_POLICY
     * COLUMN_LEVEL_SECURITY_POLICY
     */
    declare public readonly dataPolicyType: pulumi.Output<string>;
    /**
     * The etag for this Data Policy.
     * This field is used for UpdateDataPolicy calls. If Data Policy exists, this
     * field is required and must match the server's etag. It will also be
     * populated in the response of GetDataPolicy, CreateDataPolicy, and
     * UpdateDataPolicy calls.
     */
    declare public readonly etag: pulumi.Output<string>;
    /**
     * The list of IAM principals that have Fine Grained Access to the underlying
     * data goverened by this data policy.
     * Uses the [IAM V2 principal
     * syntax](https://cloud.google.com/iam/docs/principal-identifiers#v2) Only
     * supports principal types users, groups, serviceaccounts, cloudidentity.
     * This field is supported in V2 Data Policy only. In case of V1 data policies
     * (i.e. verion = 1 and policyTag is set), this field is not populated.
     */
    declare public readonly grantees: pulumi.Output<string[]>;
    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * Identifier. Resource name of this data policy, in the format of
     * `projects/{project_number}/locations/{location_id}/dataPolicies/{data_policy_id}`.
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    /**
     * Policy tag resource name, in the format of
     * `projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{policyTag_id}`.
     * policyTag is supported only for V1 data policies.
     */
    declare public /*out*/ readonly policyTag: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    declare public readonly project: pulumi.Output<string>;
    /**
     * The version of the Data Policy resource.
     * Possible values:
     * V1
     * V2
     */
    declare public /*out*/ readonly version: pulumi.Output<string>;

    /**
     * Create a Datapolicyv2DataPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Datapolicyv2DataPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Datapolicyv2DataPolicyArgs | Datapolicyv2DataPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Datapolicyv2DataPolicyState | undefined;
            resourceInputs["dataMaskingPolicy"] = state?.dataMaskingPolicy;
            resourceInputs["dataPolicyId"] = state?.dataPolicyId;
            resourceInputs["dataPolicyType"] = state?.dataPolicyType;
            resourceInputs["etag"] = state?.etag;
            resourceInputs["grantees"] = state?.grantees;
            resourceInputs["location"] = state?.location;
            resourceInputs["name"] = state?.name;
            resourceInputs["policyTag"] = state?.policyTag;
            resourceInputs["project"] = state?.project;
            resourceInputs["version"] = state?.version;
        } else {
            const args = argsOrState as Datapolicyv2DataPolicyArgs | undefined;
            if (args?.dataPolicyId === undefined && !opts.urn) {
                throw new Error("Missing required property 'dataPolicyId'");
            }
            if (args?.dataPolicyType === undefined && !opts.urn) {
                throw new Error("Missing required property 'dataPolicyType'");
            }
            if (args?.location === undefined && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            resourceInputs["dataMaskingPolicy"] = args?.dataMaskingPolicy;
            resourceInputs["dataPolicyId"] = args?.dataPolicyId;
            resourceInputs["dataPolicyType"] = args?.dataPolicyType;
            resourceInputs["etag"] = args?.etag;
            resourceInputs["grantees"] = args?.grantees;
            resourceInputs["location"] = args?.location;
            resourceInputs["project"] = args?.project;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["policyTag"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Datapolicyv2DataPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Datapolicyv2DataPolicy resources.
 */
export interface Datapolicyv2DataPolicyState {
    /**
     * The policy used to specify data masking rule.
     * Structure is documented below.
     */
    dataMaskingPolicy?: pulumi.Input<inputs.bigquery.Datapolicyv2DataPolicyDataMaskingPolicy>;
    /**
     * User-assigned (human readable) ID of the data policy that needs to be
     * unique within a project. Used as {data_policy_id} in part of the resource
     * name.
     */
    dataPolicyId?: pulumi.Input<string>;
    /**
     * Type of data policy.
     * Possible values:
     * DATA_MASKING_POLICY
     * RAW_DATA_ACCESS_POLICY
     * COLUMN_LEVEL_SECURITY_POLICY
     */
    dataPolicyType?: pulumi.Input<string>;
    /**
     * The etag for this Data Policy.
     * This field is used for UpdateDataPolicy calls. If Data Policy exists, this
     * field is required and must match the server's etag. It will also be
     * populated in the response of GetDataPolicy, CreateDataPolicy, and
     * UpdateDataPolicy calls.
     */
    etag?: pulumi.Input<string>;
    /**
     * The list of IAM principals that have Fine Grained Access to the underlying
     * data goverened by this data policy.
     * Uses the [IAM V2 principal
     * syntax](https://cloud.google.com/iam/docs/principal-identifiers#v2) Only
     * supports principal types users, groups, serviceaccounts, cloudidentity.
     * This field is supported in V2 Data Policy only. In case of V1 data policies
     * (i.e. verion = 1 and policyTag is set), this field is not populated.
     */
    grantees?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     */
    location?: pulumi.Input<string>;
    /**
     * Identifier. Resource name of this data policy, in the format of
     * `projects/{project_number}/locations/{location_id}/dataPolicies/{data_policy_id}`.
     */
    name?: pulumi.Input<string>;
    /**
     * Policy tag resource name, in the format of
     * `projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{policyTag_id}`.
     * policyTag is supported only for V1 data policies.
     */
    policyTag?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The version of the Data Policy resource.
     * Possible values:
     * V1
     * V2
     */
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Datapolicyv2DataPolicy resource.
 */
export interface Datapolicyv2DataPolicyArgs {
    /**
     * The policy used to specify data masking rule.
     * Structure is documented below.
     */
    dataMaskingPolicy?: pulumi.Input<inputs.bigquery.Datapolicyv2DataPolicyDataMaskingPolicy>;
    /**
     * User-assigned (human readable) ID of the data policy that needs to be
     * unique within a project. Used as {data_policy_id} in part of the resource
     * name.
     */
    dataPolicyId: pulumi.Input<string>;
    /**
     * Type of data policy.
     * Possible values:
     * DATA_MASKING_POLICY
     * RAW_DATA_ACCESS_POLICY
     * COLUMN_LEVEL_SECURITY_POLICY
     */
    dataPolicyType: pulumi.Input<string>;
    /**
     * The etag for this Data Policy.
     * This field is used for UpdateDataPolicy calls. If Data Policy exists, this
     * field is required and must match the server's etag. It will also be
     * populated in the response of GetDataPolicy, CreateDataPolicy, and
     * UpdateDataPolicy calls.
     */
    etag?: pulumi.Input<string>;
    /**
     * The list of IAM principals that have Fine Grained Access to the underlying
     * data goverened by this data policy.
     * Uses the [IAM V2 principal
     * syntax](https://cloud.google.com/iam/docs/principal-identifiers#v2) Only
     * supports principal types users, groups, serviceaccounts, cloudidentity.
     * This field is supported in V2 Data Policy only. In case of V1 data policies
     * (i.e. verion = 1 and policyTag is set), this field is not populated.
     */
    grantees?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     */
    location: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
