// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * An ApiHubInstance represents the instance resources of the API Hub.
 * Currently, only one ApiHub instance is allowed for each project.
 * Currently, updation/deletion of ApiHub instance is not allowed.
 *
 * ## Example Usage
 *
 * ### Apihub Api Hub Instance Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const apihub_instance_without_search = new gcp.apihub.ApiHubInstance("apihub-instance-without-search", {
 *     location: "us-central1",
 *     config: {
 *         disableSearch: true,
 *     },
 * });
 * ```
 * ### Apihub Api Hub Instance Full
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const apihub_instance_search = new gcp.apihub.ApiHubInstance("apihub-instance-search", {
 *     project: "my-project",
 *     apiHubInstanceId: "test-instance-full",
 *     description: "Test API hub instance",
 *     location: "us-central1",
 *     config: {
 *         encryptionType: "CMEK",
 *         cmekKeyName: "projects/my-project/locations/us-central1/keyRings/apihub/cryptoKeys/apihub-key",
 *         disableSearch: false,
 *         vertexLocation: "us",
 *     },
 *     labels: {
 *         environment: "dev",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * ApiHubInstance can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/locations/{{location}}/apiHubInstances/{{api_hub_instance_id}}`
 *
 * * `{{project}}/{{location}}/{{api_hub_instance_id}}`
 *
 * * `{{location}}/{{api_hub_instance_id}}`
 *
 * When using the `pulumi import` command, ApiHubInstance can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:apihub/apiHubInstance:ApiHubInstance default projects/{{project}}/locations/{{location}}/apiHubInstances/{{api_hub_instance_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:apihub/apiHubInstance:ApiHubInstance default {{project}}/{{location}}/{{api_hub_instance_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:apihub/apiHubInstance:ApiHubInstance default {{location}}/{{api_hub_instance_id}}
 * ```
 */
export class ApiHubInstance extends pulumi.CustomResource {
    /**
     * Get an existing ApiHubInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApiHubInstanceState, opts?: pulumi.CustomResourceOptions): ApiHubInstance {
        return new ApiHubInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:apihub/apiHubInstance:ApiHubInstance';

    /**
     * Returns true if the given object is an instance of ApiHubInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApiHubInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApiHubInstance.__pulumiType;
    }

    /**
     * Optional. Identifier to assign to the Api Hub instance. Must be unique within scope of the parent resource. If the field
     * is not provided, system generated id will be used. This value should be 4-40 characters, and valid characters are
     * '/a-z[0-9]-_/'.
     */
    public readonly apiHubInstanceId!: pulumi.Output<string | undefined>;
    /**
     * Available configurations to provision an ApiHub Instance.
     * Structure is documented below.
     */
    public readonly config!: pulumi.Output<outputs.apihub.ApiHubInstanceConfig>;
    /**
     * Output only. Creation timestamp.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Optional. Description of the ApiHub instance.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     */
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Optional. Instance labels to represent user-provided metadata. Refer to cloud documentation on labels for more details.
     * https://cloud.google.com/compute/docs/labeling-resources **Note**: This field is non-authoritative, and will only manage
     * the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
     * the resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Identifier. Format:
     * `projects/{project}/locations/{location}/apiHubInstances/{apiHubInstance}`.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    public readonly project!: pulumi.Output<string>;
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     */
    public /*out*/ readonly pulumiLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Output only. The current state of the ApiHub instance.
     * Possible values:
     * STATE_UNSPECIFIED
     * INACTIVE
     * CREATING
     * ACTIVE
     * UPDATING
     * DELETING
     * FAILED
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Output only. Extra information about ApiHub instance state. Currently the message
     * would be populated when state is `FAILED`.
     */
    public /*out*/ readonly stateMessage!: pulumi.Output<string>;
    /**
     * Output only. Last update timestamp.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a ApiHubInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApiHubInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApiHubInstanceArgs | ApiHubInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApiHubInstanceState | undefined;
            resourceInputs["apiHubInstanceId"] = state ? state.apiHubInstanceId : undefined;
            resourceInputs["config"] = state ? state.config : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["pulumiLabels"] = state ? state.pulumiLabels : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["stateMessage"] = state ? state.stateMessage : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as ApiHubInstanceArgs | undefined;
            if ((!args || args.config === undefined) && !opts.urn) {
                throw new Error("Missing required property 'config'");
            }
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            resourceInputs["apiHubInstanceId"] = args ? args.apiHubInstanceId : undefined;
            resourceInputs["config"] = args ? args.config : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["pulumiLabels"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["stateMessage"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["effectiveLabels", "pulumiLabels"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ApiHubInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ApiHubInstance resources.
 */
export interface ApiHubInstanceState {
    /**
     * Optional. Identifier to assign to the Api Hub instance. Must be unique within scope of the parent resource. If the field
     * is not provided, system generated id will be used. This value should be 4-40 characters, and valid characters are
     * '/a-z[0-9]-_/'.
     */
    apiHubInstanceId?: pulumi.Input<string>;
    /**
     * Available configurations to provision an ApiHub Instance.
     * Structure is documented below.
     */
    config?: pulumi.Input<inputs.apihub.ApiHubInstanceConfig>;
    /**
     * Output only. Creation timestamp.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Optional. Description of the ApiHub instance.
     */
    description?: pulumi.Input<string>;
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     */
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Optional. Instance labels to represent user-provided metadata. Refer to cloud documentation on labels for more details.
     * https://cloud.google.com/compute/docs/labeling-resources **Note**: This field is non-authoritative, and will only manage
     * the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
     * the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     */
    location?: pulumi.Input<string>;
    /**
     * Identifier. Format:
     * `projects/{project}/locations/{location}/apiHubInstances/{apiHubInstance}`.
     */
    name?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     */
    pulumiLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Output only. The current state of the ApiHub instance.
     * Possible values:
     * STATE_UNSPECIFIED
     * INACTIVE
     * CREATING
     * ACTIVE
     * UPDATING
     * DELETING
     * FAILED
     */
    state?: pulumi.Input<string>;
    /**
     * Output only. Extra information about ApiHub instance state. Currently the message
     * would be populated when state is `FAILED`.
     */
    stateMessage?: pulumi.Input<string>;
    /**
     * Output only. Last update timestamp.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ApiHubInstance resource.
 */
export interface ApiHubInstanceArgs {
    /**
     * Optional. Identifier to assign to the Api Hub instance. Must be unique within scope of the parent resource. If the field
     * is not provided, system generated id will be used. This value should be 4-40 characters, and valid characters are
     * '/a-z[0-9]-_/'.
     */
    apiHubInstanceId?: pulumi.Input<string>;
    /**
     * Available configurations to provision an ApiHub Instance.
     * Structure is documented below.
     */
    config: pulumi.Input<inputs.apihub.ApiHubInstanceConfig>;
    /**
     * Optional. Description of the ApiHub instance.
     */
    description?: pulumi.Input<string>;
    /**
     * Optional. Instance labels to represent user-provided metadata. Refer to cloud documentation on labels for more details.
     * https://cloud.google.com/compute/docs/labeling-resources **Note**: This field is non-authoritative, and will only manage
     * the labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on
     * the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     */
    location: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
