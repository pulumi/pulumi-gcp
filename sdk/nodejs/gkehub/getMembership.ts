// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Retrieves the details of a specific GKE Hub Membership. Use this data source to retrieve the membership's configuration and state.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const example = gcp.gkehub.getMembership({
 *     project: "my-project-id",
 *     location: "global",
 *     membershipId: "my-membership-id",
 * });
 * ```
 */
export function getMembership(args: GetMembershipArgs, opts?: pulumi.InvokeOptions): Promise<GetMembershipResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:gkehub/getMembership:getMembership", {
        "location": args.location,
        "membershipId": args.membershipId,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getMembership.
 */
export interface GetMembershipArgs {
    /**
     * The location for the GKE Hub Membership.
     * Currently only `global` is supported.
     */
    location: string;
    /**
     * The GKE Hub Membership id or GKE Cluster's name.
     */
    membershipId: string;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: string;
}

/**
 * A collection of values returned by getMembership.
 */
export interface GetMembershipResult {
    readonly authorities: outputs.gkehub.GetMembershipAuthority[];
    readonly description: string;
    readonly effectiveLabels: {[key: string]: string};
    readonly endpoints: outputs.gkehub.GetMembershipEndpoint[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly labels: {[key: string]: string};
    readonly location: string;
    readonly membershipId: string;
    readonly name: string;
    readonly project?: string;
    readonly pulumiLabels: {[key: string]: string};
}
/**
 * Retrieves the details of a specific GKE Hub Membership. Use this data source to retrieve the membership's configuration and state.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const example = gcp.gkehub.getMembership({
 *     project: "my-project-id",
 *     location: "global",
 *     membershipId: "my-membership-id",
 * });
 * ```
 */
export function getMembershipOutput(args: GetMembershipOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetMembershipResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("gcp:gkehub/getMembership:getMembership", {
        "location": args.location,
        "membershipId": args.membershipId,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getMembership.
 */
export interface GetMembershipOutputArgs {
    /**
     * The location for the GKE Hub Membership.
     * Currently only `global` is supported.
     */
    location: pulumi.Input<string>;
    /**
     * The GKE Hub Membership id or GKE Cluster's name.
     */
    membershipId: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
