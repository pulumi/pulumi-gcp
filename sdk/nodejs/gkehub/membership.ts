// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * ## Import
 *
 * Membership can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:gkehub/membership:Membership default {{name}}
 * ```
 */
export class Membership extends pulumi.CustomResource {
    /**
     * Get an existing Membership resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MembershipState, opts?: pulumi.CustomResourceOptions): Membership {
        return new Membership(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:gkehub/membership:Membership';

    /**
     * Returns true if the given object is an instance of Membership.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Membership {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Membership.__pulumiType;
    }

    /**
     * Authority encodes how Google will recognize identities from this Membership.
     * See the workload identity documentation for more details:
     * https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
     * Structure is documented below.
     */
    public readonly authority!: pulumi.Output<outputs.gkehub.MembershipAuthority | undefined>;
    /**
     * The name of this entity type to be displayed on the console.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * If this Membership is a Kubernetes API server hosted on GKE, this is a self link to its GCP resource.
     * Structure is documented below.
     */
    public readonly endpoint!: pulumi.Output<outputs.gkehub.MembershipEndpoint | undefined>;
    /**
     * Labels to apply to this membership.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The client-provided identifier of the membership.
     */
    public readonly membershipId!: pulumi.Output<string>;
    /**
     * The unique identifier of the membership.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    public readonly project!: pulumi.Output<string>;

    /**
     * Create a Membership resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MembershipArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MembershipArgs | MembershipState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MembershipState | undefined;
            inputs["authority"] = state ? state.authority : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["endpoint"] = state ? state.endpoint : undefined;
            inputs["labels"] = state ? state.labels : undefined;
            inputs["membershipId"] = state ? state.membershipId : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["project"] = state ? state.project : undefined;
        } else {
            const args = argsOrState as MembershipArgs | undefined;
            if ((!args || args.membershipId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'membershipId'");
            }
            inputs["authority"] = args ? args.authority : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["endpoint"] = args ? args.endpoint : undefined;
            inputs["labels"] = args ? args.labels : undefined;
            inputs["membershipId"] = args ? args.membershipId : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["name"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(Membership.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Membership resources.
 */
export interface MembershipState {
    /**
     * Authority encodes how Google will recognize identities from this Membership.
     * See the workload identity documentation for more details:
     * https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
     * Structure is documented below.
     */
    authority?: pulumi.Input<inputs.gkehub.MembershipAuthority>;
    /**
     * The name of this entity type to be displayed on the console.
     */
    description?: pulumi.Input<string>;
    /**
     * If this Membership is a Kubernetes API server hosted on GKE, this is a self link to its GCP resource.
     * Structure is documented below.
     */
    endpoint?: pulumi.Input<inputs.gkehub.MembershipEndpoint>;
    /**
     * Labels to apply to this membership.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The client-provided identifier of the membership.
     */
    membershipId?: pulumi.Input<string>;
    /**
     * The unique identifier of the membership.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Membership resource.
 */
export interface MembershipArgs {
    /**
     * Authority encodes how Google will recognize identities from this Membership.
     * See the workload identity documentation for more details:
     * https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity
     * Structure is documented below.
     */
    authority?: pulumi.Input<inputs.gkehub.MembershipAuthority>;
    /**
     * The name of this entity type to be displayed on the console.
     */
    description?: pulumi.Input<string>;
    /**
     * If this Membership is a Kubernetes API server hosted on GKE, this is a self link to its GCP resource.
     * Structure is documented below.
     */
    endpoint?: pulumi.Input<inputs.gkehub.MembershipEndpoint>;
    /**
     * Labels to apply to this membership.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The client-provided identifier of the membership.
     */
    membershipId: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
