// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Retrieves the details of a specific GKE Hub Feature. Use this data source to retrieve the feature's configuration and state.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const example = gcp.gkehub.getFeature({
 *     location: "global",
 *     name: "servicemesh",
 * });
 * ```
 */
export function getFeature(args: GetFeatureArgs, opts?: pulumi.InvokeOptions): Promise<GetFeatureResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:gkehub/getFeature:getFeature", {
        "location": args.location,
        "name": args.name,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getFeature.
 */
export interface GetFeatureArgs {
    /**
     * The location for the GKE Hub Feature.
     */
    location: string;
    /**
     * The name of the feature you want to know the status of.
     */
    name: string;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: string;
}

/**
 * A collection of values returned by getFeature.
 */
export interface GetFeatureResult {
    readonly createTime: string;
    readonly deleteTime: string;
    readonly effectiveLabels: {[key: string]: string};
    readonly fleetDefaultMemberConfigs: outputs.gkehub.GetFeatureFleetDefaultMemberConfig[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly labels: {[key: string]: string};
    readonly location: string;
    readonly name: string;
    readonly project?: string;
    readonly pulumiLabels: {[key: string]: string};
    readonly resourceStates: outputs.gkehub.GetFeatureResourceState[];
    readonly specs: outputs.gkehub.GetFeatureSpec[];
    readonly states: outputs.gkehub.GetFeatureState[];
    readonly updateTime: string;
}
/**
 * Retrieves the details of a specific GKE Hub Feature. Use this data source to retrieve the feature's configuration and state.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const example = gcp.gkehub.getFeature({
 *     location: "global",
 *     name: "servicemesh",
 * });
 * ```
 */
export function getFeatureOutput(args: GetFeatureOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetFeatureResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("gcp:gkehub/getFeature:getFeature", {
        "location": args.location,
        "name": args.name,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getFeature.
 */
export interface GetFeatureOutputArgs {
    /**
     * The location for the GKE Hub Feature.
     */
    location: pulumi.Input<string>;
    /**
     * The name of the feature you want to know the status of.
     */
    name: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
