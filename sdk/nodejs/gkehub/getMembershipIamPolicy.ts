// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Retrieves the current IAM policy data for membership
 */
export function getMembershipIamPolicy(args: GetMembershipIamPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetMembershipIamPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:gkehub/getMembershipIamPolicy:getMembershipIamPolicy", {
        "membershipId": args.membershipId,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getMembershipIamPolicy.
 */
export interface GetMembershipIamPolicyArgs {
    membershipId: string;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     */
    project?: string;
}

/**
 * A collection of values returned by getMembershipIamPolicy.
 */
export interface GetMembershipIamPolicyResult {
    /**
     * (Computed) The etag of the IAM policy.
     */
    readonly etag: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly membershipId: string;
    /**
     * (Required only by `gcp.gkehub.MembershipIamPolicy`) The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     */
    readonly policyData: string;
    readonly project: string;
}
/**
 * Retrieves the current IAM policy data for membership
 */
export function getMembershipIamPolicyOutput(args: GetMembershipIamPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMembershipIamPolicyResult> {
    return pulumi.output(args).apply((a: any) => getMembershipIamPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getMembershipIamPolicy.
 */
export interface GetMembershipIamPolicyOutputArgs {
    membershipId: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
