// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Returns the list of IP addresses that Datastream connects from. For more information see
 * the [official documentation](https://cloud.google.com/datastream/docs/ip-allowlists-and-regions).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const datastreamIps = gcp.datastream.getStaticIps({
 *     location: "us-west1",
 *     project: "my-project",
 * });
 * export const ipList = datastreamIps.then(datastreamIps => datastreamIps.staticIps);
 * ```
 */
export function getStaticIps(args: GetStaticIpsArgs, opts?: pulumi.InvokeOptions): Promise<GetStaticIpsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:datastream/getStaticIps:getStaticIps", {
        "location": args.location,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getStaticIps.
 */
export interface GetStaticIpsArgs {
    /**
     * The location to list Datastream IPs for. For example: `us-east1`.
     */
    location: string;
    /**
     * Project from which to list static IP addresses. Defaults to project declared in the provider.
     */
    project?: string;
}

/**
 * A collection of values returned by getStaticIps.
 */
export interface GetStaticIpsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly location: string;
    readonly project?: string;
    /**
     * A list of static IP addresses that Datastream will connect from.
     */
    readonly staticIps: string[];
}
/**
 * Returns the list of IP addresses that Datastream connects from. For more information see
 * the [official documentation](https://cloud.google.com/datastream/docs/ip-allowlists-and-regions).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const datastreamIps = gcp.datastream.getStaticIps({
 *     location: "us-west1",
 *     project: "my-project",
 * });
 * export const ipList = datastreamIps.then(datastreamIps => datastreamIps.staticIps);
 * ```
 */
export function getStaticIpsOutput(args: GetStaticIpsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetStaticIpsResult> {
    return pulumi.output(args).apply((a: any) => getStaticIps(a, opts))
}

/**
 * A collection of arguments for invoking getStaticIps.
 */
export interface GetStaticIpsOutputArgs {
    /**
     * The location to list Datastream IPs for. For example: `us-east1`.
     */
    location: pulumi.Input<string>;
    /**
     * Project from which to list static IP addresses. Defaults to project declared in the provider.
     */
    project?: pulumi.Input<string>;
}
