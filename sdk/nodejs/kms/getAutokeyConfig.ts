// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides access to Google Cloud Platform KMS AutokeyConfig. A AutokeyConfig is a Cloud KMS resource that helps you safely span the separation of duties to create new Cloud KMS keys for CMEK using Autokey.
 *
 * For more information see
 * [the official documentation](https://cloud.google.com/kms/docs/reference/rest/v1/folders)
 * and
 * [API](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyHandles).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const myAutokeyConfig = gcp.kms.getAutokeyConfig({
 *     folder: "folders/123",
 * });
 * ```
 */
export function getAutokeyConfig(args: GetAutokeyConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetAutokeyConfigResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:kms/getAutokeyConfig:getAutokeyConfig", {
        "folder": args.folder,
    }, opts);
}

/**
 * A collection of arguments for invoking getAutokeyConfig.
 */
export interface GetAutokeyConfigArgs {
    /**
     * The folder in which the AutokeyConfig is configured. If it
     * is not provided, the provider folder is used.
     */
    folder: string;
}

/**
 * A collection of values returned by getAutokeyConfig.
 */
export interface GetAutokeyConfigResult {
    readonly etag: string;
    readonly folder: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The identifier of the project hosting KMS KeyRings and Keys generated by Autokey. Its format is `projects/{projectId}`.
     */
    readonly keyProject: string;
}
/**
 * Provides access to Google Cloud Platform KMS AutokeyConfig. A AutokeyConfig is a Cloud KMS resource that helps you safely span the separation of duties to create new Cloud KMS keys for CMEK using Autokey.
 *
 * For more information see
 * [the official documentation](https://cloud.google.com/kms/docs/reference/rest/v1/folders)
 * and
 * [API](https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyHandles).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const myAutokeyConfig = gcp.kms.getAutokeyConfig({
 *     folder: "folders/123",
 * });
 * ```
 */
export function getAutokeyConfigOutput(args: GetAutokeyConfigOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAutokeyConfigResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("gcp:kms/getAutokeyConfig:getAutokeyConfig", {
        "folder": args.folder,
    }, opts);
}

/**
 * A collection of arguments for invoking getAutokeyConfig.
 */
export interface GetAutokeyConfigOutputArgs {
    /**
     * The folder in which the AutokeyConfig is configured. If it
     * is not provided, the provider folder is used.
     */
    folder: pulumi.Input<string>;
}
