// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./cryptoKey";
export * from "./cryptoKeyIAMBinding";
export * from "./cryptoKeyIAMMember";
export * from "./cryptoKeyIAMPolicy";
export * from "./getKMSCryptoKey";
export * from "./getKMSCryptoKeyVersion";
export * from "./getKMSKeyRing";
export * from "./getKMSSecret";
export * from "./getKMSSecretCiphertext";
export * from "./keyRing";
export * from "./keyRingIAMBinding";
export * from "./keyRingIAMMember";
export * from "./keyRingIAMPolicy";
export * from "./keyRingImportJob";
export * from "./registry";
export * from "./secretCiphertext";

// Import resources to register:
import { CryptoKey } from "./cryptoKey";
import { CryptoKeyIAMBinding } from "./cryptoKeyIAMBinding";
import { CryptoKeyIAMMember } from "./cryptoKeyIAMMember";
import { CryptoKeyIAMPolicy } from "./cryptoKeyIAMPolicy";
import { KeyRing } from "./keyRing";
import { KeyRingIAMBinding } from "./keyRingIAMBinding";
import { KeyRingIAMMember } from "./keyRingIAMMember";
import { KeyRingIAMPolicy } from "./keyRingIAMPolicy";
import { KeyRingImportJob } from "./keyRingImportJob";
import { Registry } from "./registry";
import { SecretCiphertext } from "./secretCiphertext";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "gcp:kms/cryptoKey:CryptoKey":
                return new CryptoKey(name, <any>undefined, { urn })
            case "gcp:kms/cryptoKeyIAMBinding:CryptoKeyIAMBinding":
                return new CryptoKeyIAMBinding(name, <any>undefined, { urn })
            case "gcp:kms/cryptoKeyIAMMember:CryptoKeyIAMMember":
                return new CryptoKeyIAMMember(name, <any>undefined, { urn })
            case "gcp:kms/cryptoKeyIAMPolicy:CryptoKeyIAMPolicy":
                return new CryptoKeyIAMPolicy(name, <any>undefined, { urn })
            case "gcp:kms/keyRing:KeyRing":
                return new KeyRing(name, <any>undefined, { urn })
            case "gcp:kms/keyRingIAMBinding:KeyRingIAMBinding":
                return new KeyRingIAMBinding(name, <any>undefined, { urn })
            case "gcp:kms/keyRingIAMMember:KeyRingIAMMember":
                return new KeyRingIAMMember(name, <any>undefined, { urn })
            case "gcp:kms/keyRingIAMPolicy:KeyRingIAMPolicy":
                return new KeyRingIAMPolicy(name, <any>undefined, { urn })
            case "gcp:kms/keyRingImportJob:KeyRingImportJob":
                return new KeyRingImportJob(name, <any>undefined, { urn })
            case "gcp:kms/registry:Registry":
                return new Registry(name, <any>undefined, { urn })
            case "gcp:kms/secretCiphertext:SecretCiphertext":
                return new SecretCiphertext(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "kms/cryptoKey", _module)
pulumi.runtime.registerResourceModule("gcp", "kms/cryptoKeyIAMBinding", _module)
pulumi.runtime.registerResourceModule("gcp", "kms/cryptoKeyIAMMember", _module)
pulumi.runtime.registerResourceModule("gcp", "kms/cryptoKeyIAMPolicy", _module)
pulumi.runtime.registerResourceModule("gcp", "kms/keyRing", _module)
pulumi.runtime.registerResourceModule("gcp", "kms/keyRingIAMBinding", _module)
pulumi.runtime.registerResourceModule("gcp", "kms/keyRingIAMMember", _module)
pulumi.runtime.registerResourceModule("gcp", "kms/keyRingIAMPolicy", _module)
pulumi.runtime.registerResourceModule("gcp", "kms/keyRingImportJob", _module)
pulumi.runtime.registerResourceModule("gcp", "kms/registry", _module)
pulumi.runtime.registerResourceModule("gcp", "kms/secretCiphertext", _module)
