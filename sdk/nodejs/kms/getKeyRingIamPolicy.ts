// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Retrieves the current IAM policy data for a Google Cloud KMS key ring.
 *
 * ## example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const testKeyRingIamPolicy = gcp.kms.getKeyRingIamPolicy({
 *     keyRingId: "{project_id}/{location_name}/{key_ring_name}",
 * });
 * ```
 */
export function getKeyRingIamPolicy(args: GetKeyRingIamPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetKeyRingIamPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:kms/getKeyRingIamPolicy:getKeyRingIamPolicy", {
        "keyRingId": args.keyRingId,
    }, opts);
}

/**
 * A collection of arguments for invoking getKeyRingIamPolicy.
 */
export interface GetKeyRingIamPolicyArgs {
    /**
     * The key ring ID, in the form
     * `{project_id}/{location_name}/{key_ring_name}` or
     * `{location_name}/{key_ring_name}`. In the second form, the provider's
     * project setting will be used as a fallback.
     */
    keyRingId: string;
}

/**
 * A collection of values returned by getKeyRingIamPolicy.
 */
export interface GetKeyRingIamPolicyResult {
    /**
     * (Computed) The etag of the IAM policy.
     */
    readonly etag: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly keyRingId: string;
    /**
     * (Computed) The policy data
     */
    readonly policyData: string;
}
/**
 * Retrieves the current IAM policy data for a Google Cloud KMS key ring.
 *
 * ## example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const testKeyRingIamPolicy = gcp.kms.getKeyRingIamPolicy({
 *     keyRingId: "{project_id}/{location_name}/{key_ring_name}",
 * });
 * ```
 */
export function getKeyRingIamPolicyOutput(args: GetKeyRingIamPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKeyRingIamPolicyResult> {
    return pulumi.output(args).apply((a: any) => getKeyRingIamPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getKeyRingIamPolicy.
 */
export interface GetKeyRingIamPolicyOutputArgs {
    /**
     * The key ring ID, in the form
     * `{project_id}/{location_name}/{key_ring_name}` or
     * `{location_name}/{key_ring_name}`. In the second form, the provider's
     * project setting will be used as a fallback.
     */
    keyRingId: pulumi.Input<string>;
}
