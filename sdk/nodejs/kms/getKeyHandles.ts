// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const myKeyHandles = gcp.kms.getKeyHandles({
 *     project: "resource-project-id",
 *     location: "us-central1",
 *     resourceTypeSelector: "storage.googleapis.com/Bucket",
 * });
 * ```
 */
export function getKeyHandles(args: GetKeyHandlesArgs, opts?: pulumi.InvokeOptions): Promise<GetKeyHandlesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:kms/getKeyHandles:getKeyHandles", {
        "location": args.location,
        "project": args.project,
        "resourceTypeSelector": args.resourceTypeSelector,
    }, opts);
}

/**
 * A collection of arguments for invoking getKeyHandles.
 */
export interface GetKeyHandlesArgs {
    /**
     * The Google Cloud Platform location for the KeyHandle.
     * A full list of valid locations can be found by running `gcloud kms locations list`.
     */
    location: string;
    /**
     * The project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    project?: string;
    /**
     * The resource type by which to filter KeyHandle e.g. {SERVICE}.googleapis.com/{TYPE}. See documentation for supported resource types. 
     *
     * - - -
     */
    resourceTypeSelector: string;
}

/**
 * A collection of values returned by getKeyHandles.
 */
export interface GetKeyHandlesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly keyHandles: outputs.kms.GetKeyHandlesKeyHandle[];
    /**
     * The location of the KMS Key and KeyHandle.
     */
    readonly location: string;
    /**
     * The identifier of the project where KMS KeyHandle is created.
     */
    readonly project?: string;
    /**
     * Indicates the resource type that the resulting CryptoKey is meant to protect, e.g. {SERVICE}.googleapis.com/{TYPE}. See documentation for supported resource types.
     */
    readonly resourceTypeSelector: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const myKeyHandles = gcp.kms.getKeyHandles({
 *     project: "resource-project-id",
 *     location: "us-central1",
 *     resourceTypeSelector: "storage.googleapis.com/Bucket",
 * });
 * ```
 */
export function getKeyHandlesOutput(args: GetKeyHandlesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetKeyHandlesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("gcp:kms/getKeyHandles:getKeyHandles", {
        "location": args.location,
        "project": args.project,
        "resourceTypeSelector": args.resourceTypeSelector,
    }, opts);
}

/**
 * A collection of arguments for invoking getKeyHandles.
 */
export interface GetKeyHandlesOutputArgs {
    /**
     * The Google Cloud Platform location for the KeyHandle.
     * A full list of valid locations can be found by running `gcloud kms locations list`.
     */
    location: pulumi.Input<string>;
    /**
     * The project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The resource type by which to filter KeyHandle e.g. {SERVICE}.googleapis.com/{TYPE}. See documentation for supported resource types. 
     *
     * - - -
     */
    resourceTypeSelector: pulumi.Input<string>;
}
