// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function getAppleAppConfig(args: GetAppleAppConfigArgs, opts?: pulumi.InvokeOptions): Promise<GetAppleAppConfigResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("gcp:firebase/getAppleAppConfig:getAppleAppConfig", {
        "appId": args.appId,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getAppleAppConfig.
 */
export interface GetAppleAppConfigArgs {
    /**
     * The id of the Firebase iOS App.
     */
    appId: string;
    /**
     * The ID of the project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    project?: string;
}

/**
 * A collection of values returned by getAppleAppConfig.
 */
export interface GetAppleAppConfigResult {
    readonly appId: string;
    readonly configFileContents: string;
    readonly configFilename: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly project?: string;
}

export function getAppleAppConfigOutput(args: GetAppleAppConfigOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAppleAppConfigResult> {
    return pulumi.output(args).apply(a => getAppleAppConfig(a, opts))
}

/**
 * A collection of arguments for invoking getAppleAppConfig.
 */
export interface GetAppleAppConfigOutputArgs {
    /**
     * The id of the Firebase iOS App.
     */
    appId: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
