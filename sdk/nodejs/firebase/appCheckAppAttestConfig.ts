// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * An app's App Attest configuration object. Note that the Team ID registered with your
 * app is used as part of the validation process. Make sure your `gcp.firebase.AppleApp` has a teamId present.
 *
 * To get more information about AppAttestConfig, see:
 *
 * * [API documentation](https://firebase.google.com/docs/reference/appcheck/rest/v1/projects.apps.appAttestConfig)
 * * How-to Guides
 *     * [Official Documentation](https://firebase.google.com/docs/app-check)
 *
 * ## Example Usage
 *
 * ### Firebase App Check App Attest Config Minimal
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * import * as time from "@pulumi/time";
 *
 * const _default = new gcp.firebase.AppleApp("default", {
 *     project: "my-project-name",
 *     displayName: "Apple app",
 *     bundleId: "bundle.id.appattest",
 *     teamId: "9987654321",
 * });
 * // It takes a while for App Check to recognize the new app
 * // If your app already exists, you don't have to wait 30 seconds.
 * const wait30s = new time.index.Sleep("wait_30s", {createDuration: "30s"}, {
 *     dependsOn: [_default],
 * });
 * const defaultAppCheckAppAttestConfig = new gcp.firebase.AppCheckAppAttestConfig("default", {
 *     project: "my-project-name",
 *     appId: _default.appId,
 * }, {
 *     dependsOn: [wait30s],
 * });
 * ```
 * ### Firebase App Check App Attest Config Full
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * import * as time from "@pulumi/time";
 *
 * const _default = new gcp.firebase.AppleApp("default", {
 *     project: "my-project-name",
 *     displayName: "Apple app",
 *     bundleId: "bundle.id.appattest",
 *     teamId: "9987654321",
 * });
 * // It takes a while for App Check to recognize the new app
 * // If your app already exists, you don't have to wait 30 seconds.
 * const wait30s = new time.index.Sleep("wait_30s", {createDuration: "30s"}, {
 *     dependsOn: [_default],
 * });
 * const defaultAppCheckAppAttestConfig = new gcp.firebase.AppCheckAppAttestConfig("default", {
 *     project: "my-project-name",
 *     appId: _default.appId,
 *     tokenTtl: "7200s",
 * }, {
 *     dependsOn: [wait30s],
 * });
 * ```
 *
 * ## Import
 *
 * AppAttestConfig can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/apps/{{app_id}}/appAttestConfig`
 *
 * * `{{project}}/{{app_id}}`
 *
 * * `{{app_id}}`
 *
 * When using the `pulumi import` command, AppAttestConfig can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:firebase/appCheckAppAttestConfig:AppCheckAppAttestConfig default projects/{{project}}/apps/{{app_id}}/appAttestConfig
 * ```
 *
 * ```sh
 * $ pulumi import gcp:firebase/appCheckAppAttestConfig:AppCheckAppAttestConfig default {{project}}/{{app_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:firebase/appCheckAppAttestConfig:AppCheckAppAttestConfig default {{app_id}}
 * ```
 */
export class AppCheckAppAttestConfig extends pulumi.CustomResource {
    /**
     * Get an existing AppCheckAppAttestConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppCheckAppAttestConfigState, opts?: pulumi.CustomResourceOptions): AppCheckAppAttestConfig {
        return new AppCheckAppAttestConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:firebase/appCheckAppAttestConfig:AppCheckAppAttestConfig';

    /**
     * Returns true if the given object is an instance of AppCheckAppAttestConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AppCheckAppAttestConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AppCheckAppAttestConfig.__pulumiType;
    }

    /**
     * The ID of an
     * [Apple App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.iosApps#IosApp.FIELDS.app_id).
     *
     *
     * - - -
     */
    public readonly appId!: pulumi.Output<string>;
    /**
     * The relative resource name of the App Attest configuration object
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * Specifies the duration for which App Check tokens exchanged from App Attest artifacts will be valid.
     * If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.
     * A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
     */
    public readonly tokenTtl!: pulumi.Output<string>;

    /**
     * Create a AppCheckAppAttestConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AppCheckAppAttestConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppCheckAppAttestConfigArgs | AppCheckAppAttestConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppCheckAppAttestConfigState | undefined;
            resourceInputs["appId"] = state ? state.appId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["tokenTtl"] = state ? state.tokenTtl : undefined;
        } else {
            const args = argsOrState as AppCheckAppAttestConfigArgs | undefined;
            if ((!args || args.appId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'appId'");
            }
            resourceInputs["appId"] = args ? args.appId : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["tokenTtl"] = args ? args.tokenTtl : undefined;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AppCheckAppAttestConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AppCheckAppAttestConfig resources.
 */
export interface AppCheckAppAttestConfigState {
    /**
     * The ID of an
     * [Apple App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.iosApps#IosApp.FIELDS.app_id).
     *
     *
     * - - -
     */
    appId?: pulumi.Input<string>;
    /**
     * The relative resource name of the App Attest configuration object
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * Specifies the duration for which App Check tokens exchanged from App Attest artifacts will be valid.
     * If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.
     * A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
     */
    tokenTtl?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AppCheckAppAttestConfig resource.
 */
export interface AppCheckAppAttestConfigArgs {
    /**
     * The ID of an
     * [Apple App](https://firebase.google.com/docs/reference/firebase-management/rest/v1beta1/projects.iosApps#IosApp.FIELDS.app_id).
     *
     *
     * - - -
     */
    appId: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * Specifies the duration for which App Check tokens exchanged from App Attest artifacts will be valid.
     * If unset, a default value of 1 hour is assumed. Must be between 30 minutes and 7 days, inclusive.
     * A duration in seconds with up to nine fractional digits, ending with 's'. Example: "3.5s".
     */
    tokenTtl?: pulumi.Input<string>;
}
