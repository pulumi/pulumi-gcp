// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Allows creation of custom info types.
 *
 * To get more information about StoredInfoType, see:
 *
 * * [API documentation](https://cloud.google.com/dlp/docs/reference/rest/v2/projects.storedInfoTypes)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/dlp/docs/creating-stored-infotypes)
 *
 * ## Example Usage
 *
 * ## Import
 *
 * StoredInfoType can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:dataloss/preventionStoredInfoType:PreventionStoredInfoType default {{parent}}/storedInfoTypes/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:dataloss/preventionStoredInfoType:PreventionStoredInfoType default {{parent}}/{{name}}
 * ```
 */
export class PreventionStoredInfoType extends pulumi.CustomResource {
    /**
     * Get an existing PreventionStoredInfoType resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PreventionStoredInfoTypeState, opts?: pulumi.CustomResourceOptions): PreventionStoredInfoType {
        return new PreventionStoredInfoType(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:dataloss/preventionStoredInfoType:PreventionStoredInfoType';

    /**
     * Returns true if the given object is an instance of PreventionStoredInfoType.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PreventionStoredInfoType {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PreventionStoredInfoType.__pulumiType;
    }

    /**
     * A description of the info type.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Dictionary which defines the rule.
     * Structure is documented below.
     */
    public readonly dictionary!: pulumi.Output<outputs.dataloss.PreventionStoredInfoTypeDictionary | undefined>;
    /**
     * User set display name of the info type.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * Dictionary which defines the rule.
     * Structure is documented below.
     */
    public readonly largeCustomDictionary!: pulumi.Output<outputs.dataloss.PreventionStoredInfoTypeLargeCustomDictionary | undefined>;
    /**
     * Name describing the field.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The parent of the info type in any of the following formats:
     * * `projects/{{project}}`
     * * `projects/{{project}}/locations/{{location}}`
     * * `organizations/{{organization_id}}`
     * * `organizations/{{organization_id}}/locations/{{location}}`
     *
     *
     * - - -
     */
    public readonly parent!: pulumi.Output<string>;
    /**
     * Regular expression which defines the rule.
     * Structure is documented below.
     */
    public readonly regex!: pulumi.Output<outputs.dataloss.PreventionStoredInfoTypeRegex | undefined>;
    /**
     * The storedInfoType ID can contain uppercase and lowercase letters, numbers, and hyphens;
     * that is, it must match the regular expression: [a-zA-Z\d-_]+. The maximum length is 100
     * characters. Can be empty to allow the system to generate one.
     */
    public readonly storedInfoTypeId!: pulumi.Output<string>;

    /**
     * Create a PreventionStoredInfoType resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PreventionStoredInfoTypeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PreventionStoredInfoTypeArgs | PreventionStoredInfoTypeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PreventionStoredInfoTypeState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["dictionary"] = state ? state.dictionary : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["largeCustomDictionary"] = state ? state.largeCustomDictionary : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["parent"] = state ? state.parent : undefined;
            resourceInputs["regex"] = state ? state.regex : undefined;
            resourceInputs["storedInfoTypeId"] = state ? state.storedInfoTypeId : undefined;
        } else {
            const args = argsOrState as PreventionStoredInfoTypeArgs | undefined;
            if ((!args || args.parent === undefined) && !opts.urn) {
                throw new Error("Missing required property 'parent'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["dictionary"] = args ? args.dictionary : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["largeCustomDictionary"] = args ? args.largeCustomDictionary : undefined;
            resourceInputs["parent"] = args ? args.parent : undefined;
            resourceInputs["regex"] = args ? args.regex : undefined;
            resourceInputs["storedInfoTypeId"] = args ? args.storedInfoTypeId : undefined;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PreventionStoredInfoType.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PreventionStoredInfoType resources.
 */
export interface PreventionStoredInfoTypeState {
    /**
     * A description of the info type.
     */
    description?: pulumi.Input<string>;
    /**
     * Dictionary which defines the rule.
     * Structure is documented below.
     */
    dictionary?: pulumi.Input<inputs.dataloss.PreventionStoredInfoTypeDictionary>;
    /**
     * User set display name of the info type.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Dictionary which defines the rule.
     * Structure is documented below.
     */
    largeCustomDictionary?: pulumi.Input<inputs.dataloss.PreventionStoredInfoTypeLargeCustomDictionary>;
    /**
     * Name describing the field.
     */
    name?: pulumi.Input<string>;
    /**
     * The parent of the info type in any of the following formats:
     * * `projects/{{project}}`
     * * `projects/{{project}}/locations/{{location}}`
     * * `organizations/{{organization_id}}`
     * * `organizations/{{organization_id}}/locations/{{location}}`
     *
     *
     * - - -
     */
    parent?: pulumi.Input<string>;
    /**
     * Regular expression which defines the rule.
     * Structure is documented below.
     */
    regex?: pulumi.Input<inputs.dataloss.PreventionStoredInfoTypeRegex>;
    /**
     * The storedInfoType ID can contain uppercase and lowercase letters, numbers, and hyphens;
     * that is, it must match the regular expression: [a-zA-Z\d-_]+. The maximum length is 100
     * characters. Can be empty to allow the system to generate one.
     */
    storedInfoTypeId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PreventionStoredInfoType resource.
 */
export interface PreventionStoredInfoTypeArgs {
    /**
     * A description of the info type.
     */
    description?: pulumi.Input<string>;
    /**
     * Dictionary which defines the rule.
     * Structure is documented below.
     */
    dictionary?: pulumi.Input<inputs.dataloss.PreventionStoredInfoTypeDictionary>;
    /**
     * User set display name of the info type.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Dictionary which defines the rule.
     * Structure is documented below.
     */
    largeCustomDictionary?: pulumi.Input<inputs.dataloss.PreventionStoredInfoTypeLargeCustomDictionary>;
    /**
     * The parent of the info type in any of the following formats:
     * * `projects/{{project}}`
     * * `projects/{{project}}/locations/{{location}}`
     * * `organizations/{{organization_id}}`
     * * `organizations/{{organization_id}}/locations/{{location}}`
     *
     *
     * - - -
     */
    parent: pulumi.Input<string>;
    /**
     * Regular expression which defines the rule.
     * Structure is documented below.
     */
    regex?: pulumi.Input<inputs.dataloss.PreventionStoredInfoTypeRegex>;
    /**
     * The storedInfoType ID can contain uppercase and lowercase letters, numbers, and hyphens;
     * that is, it must match the regular expression: [a-zA-Z\d-_]+. The maximum length is 100
     * characters. Can be empty to allow the system to generate one.
     */
    storedInfoTypeId?: pulumi.Input<string>;
}
