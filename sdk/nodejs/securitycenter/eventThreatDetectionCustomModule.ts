// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Represents an instance of an Event Threat Detection custom module, including
 * its full module name, display name, enablement state, andlast updated time.
 * You can create a custom module at the organization level only.
 *
 * To get more information about EventThreatDetectionCustomModule, see:
 *
 * * [API documentation](https://cloud.google.com/security-command-center/docs/reference/rest/v1/organizations.eventThreatDetectionSettings.customModules)
 * * How-to Guides
 *     * [Overview of custom modules for Event Threat Detection](https://cloud.google.com/security-command-center/docs/custom-modules-etd-overview)
 *
 * ## Example Usage
 *
 * ## Import
 *
 * EventThreatDetectionCustomModule can be imported using any of these accepted formats* `organizations/{{organization}}/eventThreatDetectionSettings/customModules/{{name}}` * `{{organization}}/{{name}}` In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import EventThreatDetectionCustomModule using one of the formats above. For exampletf import {
 *
 *  id = "organizations/{{organization}}/eventThreatDetectionSettings/customModules/{{name}}"
 *
 *  to = google_scc_event_threat_detection_custom_module.default }
 *
 * ```sh
 *  $ pulumi import gcp:securitycenter/eventThreatDetectionCustomModule:EventThreatDetectionCustomModule When using the [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import), EventThreatDetectionCustomModule can be imported using one of the formats above. For example
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:securitycenter/eventThreatDetectionCustomModule:EventThreatDetectionCustomModule default organizations/{{organization}}/eventThreatDetectionSettings/customModules/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:securitycenter/eventThreatDetectionCustomModule:EventThreatDetectionCustomModule default {{organization}}/{{name}}
 * ```
 */
export class EventThreatDetectionCustomModule extends pulumi.CustomResource {
    /**
     * Get an existing EventThreatDetectionCustomModule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EventThreatDetectionCustomModuleState, opts?: pulumi.CustomResourceOptions): EventThreatDetectionCustomModule {
        return new EventThreatDetectionCustomModule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:securitycenter/eventThreatDetectionCustomModule:EventThreatDetectionCustomModule';

    /**
     * Returns true if the given object is an instance of EventThreatDetectionCustomModule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EventThreatDetectionCustomModule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EventThreatDetectionCustomModule.__pulumiType;
    }

    /**
     * Config for the module. For the resident module, its config value is defined at this level.
     * For the inherited module, its config value is inherited from the ancestor module.
     */
    public readonly config!: pulumi.Output<string>;
    /**
     * The human readable name to be displayed for the module.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * The state of enablement for the module at the given level of the hierarchy.
     * Possible values are: `ENABLED`, `DISABLED`.
     */
    public readonly enablementState!: pulumi.Output<string>;
    /**
     * The editor that last updated the custom module
     */
    public /*out*/ readonly lastEditor!: pulumi.Output<string>;
    /**
     * The resource name of the Event Threat Detection custom module.
     * Its format is "organizations/{organization}/eventThreatDetectionSettings/customModules/{module}".
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Numerical ID of the parent organization.
     *
     *
     * - - -
     */
    public readonly organization!: pulumi.Output<string>;
    /**
     * Immutable. Type for the module. e.g. CONFIGURABLE_BAD_IP.
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * The time at which the custom module was last updated.
     * A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and
     * up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a EventThreatDetectionCustomModule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EventThreatDetectionCustomModuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EventThreatDetectionCustomModuleArgs | EventThreatDetectionCustomModuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EventThreatDetectionCustomModuleState | undefined;
            resourceInputs["config"] = state ? state.config : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["enablementState"] = state ? state.enablementState : undefined;
            resourceInputs["lastEditor"] = state ? state.lastEditor : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["organization"] = state ? state.organization : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as EventThreatDetectionCustomModuleArgs | undefined;
            if ((!args || args.config === undefined) && !opts.urn) {
                throw new Error("Missing required property 'config'");
            }
            if ((!args || args.enablementState === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enablementState'");
            }
            if ((!args || args.organization === undefined) && !opts.urn) {
                throw new Error("Missing required property 'organization'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["config"] = args ? args.config : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["enablementState"] = args ? args.enablementState : undefined;
            resourceInputs["organization"] = args ? args.organization : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["lastEditor"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EventThreatDetectionCustomModule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EventThreatDetectionCustomModule resources.
 */
export interface EventThreatDetectionCustomModuleState {
    /**
     * Config for the module. For the resident module, its config value is defined at this level.
     * For the inherited module, its config value is inherited from the ancestor module.
     */
    config?: pulumi.Input<string>;
    /**
     * The human readable name to be displayed for the module.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The state of enablement for the module at the given level of the hierarchy.
     * Possible values are: `ENABLED`, `DISABLED`.
     */
    enablementState?: pulumi.Input<string>;
    /**
     * The editor that last updated the custom module
     */
    lastEditor?: pulumi.Input<string>;
    /**
     * The resource name of the Event Threat Detection custom module.
     * Its format is "organizations/{organization}/eventThreatDetectionSettings/customModules/{module}".
     */
    name?: pulumi.Input<string>;
    /**
     * Numerical ID of the parent organization.
     *
     *
     * - - -
     */
    organization?: pulumi.Input<string>;
    /**
     * Immutable. Type for the module. e.g. CONFIGURABLE_BAD_IP.
     */
    type?: pulumi.Input<string>;
    /**
     * The time at which the custom module was last updated.
     * A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and
     * up to nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EventThreatDetectionCustomModule resource.
 */
export interface EventThreatDetectionCustomModuleArgs {
    /**
     * Config for the module. For the resident module, its config value is defined at this level.
     * For the inherited module, its config value is inherited from the ancestor module.
     */
    config: pulumi.Input<string>;
    /**
     * The human readable name to be displayed for the module.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The state of enablement for the module at the given level of the hierarchy.
     * Possible values are: `ENABLED`, `DISABLED`.
     */
    enablementState: pulumi.Input<string>;
    /**
     * Numerical ID of the parent organization.
     *
     *
     * - - -
     */
    organization: pulumi.Input<string>;
    /**
     * Immutable. Type for the module. e.g. CONFIGURABLE_BAD_IP.
     */
    type: pulumi.Input<string>;
}
