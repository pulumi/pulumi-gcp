// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Retrieves the current IAM policy data for service
 *
 * ## example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const policy = gcp.cloudrun.getServiceIamPolicy({
 *     location: google_cloud_run_service["default"].location,
 *     project: google_cloud_run_service["default"].project,
 *     service: google_cloud_run_service["default"].name,
 * });
 * ```
 */
export function getServiceIamPolicy(args: GetServiceIamPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceIamPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:cloudrun/getServiceIamPolicy:getServiceIamPolicy", {
        "location": args.location,
        "project": args.project,
        "service": args.service,
    }, opts);
}

/**
 * A collection of arguments for invoking getServiceIamPolicy.
 */
export interface GetServiceIamPolicyArgs {
    /**
     * The location of the cloud run instance. eg us-central1 Used to find the parent resource to bind the IAM policy to
     */
    location?: string;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     */
    project?: string;
    /**
     * Used to find the parent resource to bind the IAM policy to
     */
    service: string;
}

/**
 * A collection of values returned by getServiceIamPolicy.
 */
export interface GetServiceIamPolicyResult {
    /**
     * (Computed) The etag of the IAM policy.
     */
    readonly etag: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly location: string;
    /**
     * (Required only by `gcp.cloudrun.IamPolicy`) The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     */
    readonly policyData: string;
    readonly project: string;
    readonly service: string;
}
/**
 * Retrieves the current IAM policy data for service
 *
 * ## example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const policy = gcp.cloudrun.getServiceIamPolicy({
 *     location: google_cloud_run_service["default"].location,
 *     project: google_cloud_run_service["default"].project,
 *     service: google_cloud_run_service["default"].name,
 * });
 * ```
 */
export function getServiceIamPolicyOutput(args: GetServiceIamPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceIamPolicyResult> {
    return pulumi.output(args).apply((a: any) => getServiceIamPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getServiceIamPolicy.
 */
export interface GetServiceIamPolicyOutputArgs {
    /**
     * The location of the cloud run instance. eg us-central1 Used to find the parent resource to bind the IAM policy to
     */
    location?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * Used to find the parent resource to bind the IAM policy to
     */
    service: pulumi.Input<string>;
}
