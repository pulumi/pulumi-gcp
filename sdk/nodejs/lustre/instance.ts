// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * A Managed Lustre instance
 *
 * To get more information about Instance, see:
 *
 * * [API documentation](https://cloud.google.com/managed-lustre/docs/reference/rest/v1/projects.locations.instances)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/managed-lustre/docs/create-instance)
 *
 * ## Example Usage
 *
 * ### Lustre Instance Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * // This example assumes this network already exists.
 * // The API creates a tenant network per network authorized for a
 * // Lustre instance and that network is not deleted when the user-created
 * // network (authorized_network) is deleted, so this prevents issues
 * // with tenant network quota.
 * // If this network hasn't been created and you are using this example in your
 * // config, add an additional network resource or change
 * // this from "data"to "resource"
 * const lustre_network = gcp.compute.getNetwork({
 *     name: "my-network",
 * });
 * const instance = new gcp.lustre.Instance("instance", {
 *     instanceId: "my-instance",
 *     location: "us-central1-a",
 *     description: "test lustre instance",
 *     filesystem: "testfs",
 *     capacityGib: "18000",
 *     network: lustre_network.then(lustre_network => lustre_network.id),
 *     labels: {
 *         test: "value",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Instance can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/locations/{{location}}/instances/{{instance_id}}`
 *
 * * `{{project}}/{{location}}/{{instance_id}}`
 *
 * * `{{location}}/{{instance_id}}`
 *
 * When using the `pulumi import` command, Instance can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:lustre/instance:Instance default projects/{{project}}/locations/{{location}}/instances/{{instance_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:lustre/instance:Instance default {{project}}/{{location}}/{{instance_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:lustre/instance:Instance default {{location}}/{{instance_id}}
 * ```
 */
export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceState, opts?: pulumi.CustomResourceOptions): Instance {
        return new Instance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:lustre/instance:Instance';

    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Instance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }

    /**
     * Required. The storage capacity of the instance in gibibytes (GiB). Allowed values
     * are from 18000 to 954000, in increments of 9000.
     */
    public readonly capacityGib!: pulumi.Output<string>;
    /**
     * Output only. Timestamp when the instance was created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Optional. A user-readable description of the instance.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     */
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Required. Immutable. The filesystem name for this instance. This name is used by client-side
     * tools, including when mounting the instance. Must be 8 characters or less
     * and may only contain letters and numbers.
     */
    public readonly filesystem!: pulumi.Output<string>;
    /**
     * Optional. Indicates whether you want to enable support for GKE clients. By default,
     * GKE clients are not supported.
     */
    public readonly gkeSupportEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Required. The name of the Managed Lustre instance.
     * * Must contain only lowercase letters, numbers, and hyphens.
     * * Must start with a letter.
     * * Must be between 1-63 characters.
     * * Must end with a number or a letter.
     *
     *
     * - - -
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * Optional. Labels as key value pairs.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Output only. Mount point of the instance in the format `IP_ADDRESS@tcp:/FILESYSTEM`.
     */
    public /*out*/ readonly mountPoint!: pulumi.Output<string>;
    /**
     * Identifier. The name of the instance.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Required. Immutable. The full name of the VPC network to which the instance is connected.
     * Must be in the format
     * `projects/{project_id}/global/networks/{network_name}`.
     */
    public readonly network!: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     */
    public /*out*/ readonly pulumiLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Output only. The state of the instance.
     * Possible values:
     * STATE_UNSPECIFIED
     * ACTIVE
     * CREATING
     * DELETING
     * UPGRADING
     * REPAIRING
     * STOPPED
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Output only. Timestamp when the instance was last updated.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceArgs | InstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceState | undefined;
            resourceInputs["capacityGib"] = state ? state.capacityGib : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["filesystem"] = state ? state.filesystem : undefined;
            resourceInputs["gkeSupportEnabled"] = state ? state.gkeSupportEnabled : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["mountPoint"] = state ? state.mountPoint : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["network"] = state ? state.network : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["pulumiLabels"] = state ? state.pulumiLabels : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as InstanceArgs | undefined;
            if ((!args || args.capacityGib === undefined) && !opts.urn) {
                throw new Error("Missing required property 'capacityGib'");
            }
            if ((!args || args.filesystem === undefined) && !opts.urn) {
                throw new Error("Missing required property 'filesystem'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.network === undefined) && !opts.urn) {
                throw new Error("Missing required property 'network'");
            }
            resourceInputs["capacityGib"] = args ? args.capacityGib : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["filesystem"] = args ? args.filesystem : undefined;
            resourceInputs["gkeSupportEnabled"] = args ? args.gkeSupportEnabled : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["network"] = args ? args.network : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["mountPoint"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["pulumiLabels"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["effectiveLabels", "pulumiLabels"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Instance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Instance resources.
 */
export interface InstanceState {
    /**
     * Required. The storage capacity of the instance in gibibytes (GiB). Allowed values
     * are from 18000 to 954000, in increments of 9000.
     */
    capacityGib?: pulumi.Input<string>;
    /**
     * Output only. Timestamp when the instance was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Optional. A user-readable description of the instance.
     */
    description?: pulumi.Input<string>;
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     */
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Required. Immutable. The filesystem name for this instance. This name is used by client-side
     * tools, including when mounting the instance. Must be 8 characters or less
     * and may only contain letters and numbers.
     */
    filesystem?: pulumi.Input<string>;
    /**
     * Optional. Indicates whether you want to enable support for GKE clients. By default,
     * GKE clients are not supported.
     */
    gkeSupportEnabled?: pulumi.Input<boolean>;
    /**
     * Required. The name of the Managed Lustre instance.
     * * Must contain only lowercase letters, numbers, and hyphens.
     * * Must start with a letter.
     * * Must be between 1-63 characters.
     * * Must end with a number or a letter.
     *
     *
     * - - -
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Optional. Labels as key value pairs.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     */
    location?: pulumi.Input<string>;
    /**
     * Output only. Mount point of the instance in the format `IP_ADDRESS@tcp:/FILESYSTEM`.
     */
    mountPoint?: pulumi.Input<string>;
    /**
     * Identifier. The name of the instance.
     */
    name?: pulumi.Input<string>;
    /**
     * Required. Immutable. The full name of the VPC network to which the instance is connected.
     * Must be in the format
     * `projects/{project_id}/global/networks/{network_name}`.
     */
    network?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     */
    pulumiLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Output only. The state of the instance.
     * Possible values:
     * STATE_UNSPECIFIED
     * ACTIVE
     * CREATING
     * DELETING
     * UPGRADING
     * REPAIRING
     * STOPPED
     */
    state?: pulumi.Input<string>;
    /**
     * Output only. Timestamp when the instance was last updated.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * Required. The storage capacity of the instance in gibibytes (GiB). Allowed values
     * are from 18000 to 954000, in increments of 9000.
     */
    capacityGib: pulumi.Input<string>;
    /**
     * Optional. A user-readable description of the instance.
     */
    description?: pulumi.Input<string>;
    /**
     * Required. Immutable. The filesystem name for this instance. This name is used by client-side
     * tools, including when mounting the instance. Must be 8 characters or less
     * and may only contain letters and numbers.
     */
    filesystem: pulumi.Input<string>;
    /**
     * Optional. Indicates whether you want to enable support for GKE clients. By default,
     * GKE clients are not supported.
     */
    gkeSupportEnabled?: pulumi.Input<boolean>;
    /**
     * Required. The name of the Managed Lustre instance.
     * * Must contain only lowercase letters, numbers, and hyphens.
     * * Must start with a letter.
     * * Must be between 1-63 characters.
     * * Must end with a number or a letter.
     *
     *
     * - - -
     */
    instanceId: pulumi.Input<string>;
    /**
     * Optional. Labels as key value pairs.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122.
     */
    location: pulumi.Input<string>;
    /**
     * Required. Immutable. The full name of the VPC network to which the instance is connected.
     * Must be in the format
     * `projects/{project_id}/global/networks/{network_name}`.
     */
    network: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
