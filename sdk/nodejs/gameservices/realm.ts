// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * A Realm resource.
 *
 * To get more information about Realm, see:
 *
 * * [API documentation](https://cloud.google.com/game-servers/docs/reference/rest/v1beta/projects.locations.realms)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/game-servers/docs)
 *
 * ## Example Usage
 * ### Game Service Realm Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const defaultRealm = new gcp.gameservices.Realm("default", {
 *     description: "one of the nine",
 *     location: "global",
 *     realmId: "tf-test-realm",
 *     timeZone: "EST",
 * });
 * ```
 *
 * ## Import
 *
 * Realm can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:gameservices/realm:Realm default projects/{{project}}/locations/{{location}}/realms/{{realm_id}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:gameservices/realm:Realm default {{project}}/{{location}}/{{realm_id}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:gameservices/realm:Realm default {{location}}/{{realm_id}}
 * ```
 */
export class Realm extends pulumi.CustomResource {
    /**
     * Get an existing Realm resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RealmState, opts?: pulumi.CustomResourceOptions): Realm {
        return new Realm(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:gameservices/realm:Realm';

    /**
     * Returns true if the given object is an instance of Realm.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Realm {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Realm.__pulumiType;
    }

    /**
     * Human readable description of the realm.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * ETag of the resource.
     */
    public /*out*/ readonly etag!: pulumi.Output<string>;
    /**
     * The labels associated with this realm. Each label is a key-value pair.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Location of the Realm.
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * The resource id of the realm, of the form: 'projects/{project_id}/locations/{location}/realms/{realm_id}'. For example,
     * 'projects/my-project/locations/{location}/realms/my-realm'.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * GCP region of the Realm.
     */
    public readonly realmId!: pulumi.Output<string>;
    /**
     * Required. Time zone where all realm-specific policies are evaluated. The value of
     * this field must be from the IANA time zone database:
     * https://www.iana.org/time-zones.
     */
    public readonly timeZone!: pulumi.Output<string>;

    /**
     * Create a Realm resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RealmArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RealmArgs | RealmState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RealmState | undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["etag"] = state ? state.etag : undefined;
            inputs["labels"] = state ? state.labels : undefined;
            inputs["location"] = state ? state.location : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["project"] = state ? state.project : undefined;
            inputs["realmId"] = state ? state.realmId : undefined;
            inputs["timeZone"] = state ? state.timeZone : undefined;
        } else {
            const args = argsOrState as RealmArgs | undefined;
            if ((!args || args.realmId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'realmId'");
            }
            if ((!args || args.timeZone === undefined) && !opts.urn) {
                throw new Error("Missing required property 'timeZone'");
            }
            inputs["description"] = args ? args.description : undefined;
            inputs["labels"] = args ? args.labels : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["realmId"] = args ? args.realmId : undefined;
            inputs["timeZone"] = args ? args.timeZone : undefined;
            inputs["etag"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(Realm.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Realm resources.
 */
export interface RealmState {
    /**
     * Human readable description of the realm.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * ETag of the resource.
     */
    readonly etag?: pulumi.Input<string>;
    /**
     * The labels associated with this realm. Each label is a key-value pair.
     */
    readonly labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Location of the Realm.
     */
    readonly location?: pulumi.Input<string>;
    /**
     * The resource id of the realm, of the form: 'projects/{project_id}/locations/{location}/realms/{realm_id}'. For example,
     * 'projects/my-project/locations/{location}/realms/my-realm'.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
    /**
     * GCP region of the Realm.
     */
    readonly realmId?: pulumi.Input<string>;
    /**
     * Required. Time zone where all realm-specific policies are evaluated. The value of
     * this field must be from the IANA time zone database:
     * https://www.iana.org/time-zones.
     */
    readonly timeZone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Realm resource.
 */
export interface RealmArgs {
    /**
     * Human readable description of the realm.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The labels associated with this realm. Each label is a key-value pair.
     */
    readonly labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Location of the Realm.
     */
    readonly location?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
    /**
     * GCP region of the Realm.
     */
    readonly realmId: pulumi.Input<string>;
    /**
     * Required. Time zone where all realm-specific policies are evaluated. The value of
     * this field must be from the IANA time zone database:
     * https://www.iana.org/time-zones.
     */
    readonly timeZone: pulumi.Input<string>;
}
