// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ActiveDirectoryArgs, ActiveDirectoryState } from "./activeDirectory";
export type ActiveDirectory = import("./activeDirectory").ActiveDirectory;
export const ActiveDirectory: typeof import("./activeDirectory").ActiveDirectory = null as any;
utilities.lazyLoad(exports, ["ActiveDirectory"], () => require("./activeDirectory"));

export { BackupVaultArgs, BackupVaultState } from "./backupVault";
export type BackupVault = import("./backupVault").BackupVault;
export const BackupVault: typeof import("./backupVault").BackupVault = null as any;
utilities.lazyLoad(exports, ["BackupVault"], () => require("./backupVault"));

export { StoragePoolArgs, StoragePoolState } from "./storagePool";
export type StoragePool = import("./storagePool").StoragePool;
export const StoragePool: typeof import("./storagePool").StoragePool = null as any;
utilities.lazyLoad(exports, ["StoragePool"], () => require("./storagePool"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "gcp:netapp/activeDirectory:ActiveDirectory":
                return new ActiveDirectory(name, <any>undefined, { urn })
            case "gcp:netapp/backupVault:BackupVault":
                return new BackupVault(name, <any>undefined, { urn })
            case "gcp:netapp/storagePool:StoragePool":
                return new StoragePool(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "netapp/activeDirectory", _module)
pulumi.runtime.registerResourceModule("gcp", "netapp/backupVault", _module)
pulumi.runtime.registerResourceModule("gcp", "netapp/storagePool", _module)
