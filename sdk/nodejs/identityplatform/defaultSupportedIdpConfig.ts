// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Configurations options for authenticating with a the standard set of Identity Toolkit-trusted IDPs.
 *
 * You must enable the
 * [Google Identity Platform](https://console.cloud.google.com/marketplace/details/google-cloud-platform/customer-identity) in
 * the marketplace prior to using this resource.
 *
 * ## Example Usage
 *
 * ### Identity Platform Default Supported Idp Config Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const idpConfig = new gcp.identityplatform.DefaultSupportedIdpConfig("idp_config", {
 *     enabled: true,
 *     idpId: "playgames.google.com",
 *     clientId: "client-id",
 *     clientSecret: "secret",
 * });
 * ```
 *
 * ## Import
 *
 * DefaultSupportedIdpConfig can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/defaultSupportedIdpConfigs/{{idp_id}}`
 *
 * * `{{project}}/{{idp_id}}`
 *
 * * `{{idp_id}}`
 *
 * When using the `pulumi import` command, DefaultSupportedIdpConfig can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:identityplatform/defaultSupportedIdpConfig:DefaultSupportedIdpConfig default projects/{{project}}/defaultSupportedIdpConfigs/{{idp_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:identityplatform/defaultSupportedIdpConfig:DefaultSupportedIdpConfig default {{project}}/{{idp_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:identityplatform/defaultSupportedIdpConfig:DefaultSupportedIdpConfig default {{idp_id}}
 * ```
 */
export class DefaultSupportedIdpConfig extends pulumi.CustomResource {
    /**
     * Get an existing DefaultSupportedIdpConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DefaultSupportedIdpConfigState, opts?: pulumi.CustomResourceOptions): DefaultSupportedIdpConfig {
        return new DefaultSupportedIdpConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:identityplatform/defaultSupportedIdpConfig:DefaultSupportedIdpConfig';

    /**
     * Returns true if the given object is an instance of DefaultSupportedIdpConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DefaultSupportedIdpConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DefaultSupportedIdpConfig.__pulumiType;
    }

    /**
     * OAuth client ID
     */
    declare public readonly clientId: pulumi.Output<string>;
    /**
     * OAuth client secret
     */
    declare public readonly clientSecret: pulumi.Output<string>;
    /**
     * If this IDP allows the user to sign in
     */
    declare public readonly enabled: pulumi.Output<boolean | undefined>;
    /**
     * ID of the IDP. Possible values include:
     * * `apple.com`
     * * `facebook.com`
     * * `gc.apple.com`
     * * `github.com`
     * * `google.com`
     * * `linkedin.com`
     * * `microsoft.com`
     * * `playgames.google.com`
     * * `twitter.com`
     * * `yahoo.com`
     */
    declare public readonly idpId: pulumi.Output<string>;
    /**
     * The name of the DefaultSupportedIdpConfig resource
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    declare public readonly project: pulumi.Output<string>;

    /**
     * Create a DefaultSupportedIdpConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DefaultSupportedIdpConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DefaultSupportedIdpConfigArgs | DefaultSupportedIdpConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DefaultSupportedIdpConfigState | undefined;
            resourceInputs["clientId"] = state?.clientId;
            resourceInputs["clientSecret"] = state?.clientSecret;
            resourceInputs["enabled"] = state?.enabled;
            resourceInputs["idpId"] = state?.idpId;
            resourceInputs["name"] = state?.name;
            resourceInputs["project"] = state?.project;
        } else {
            const args = argsOrState as DefaultSupportedIdpConfigArgs | undefined;
            if (args?.clientId === undefined && !opts.urn) {
                throw new Error("Missing required property 'clientId'");
            }
            if (args?.clientSecret === undefined && !opts.urn) {
                throw new Error("Missing required property 'clientSecret'");
            }
            if (args?.idpId === undefined && !opts.urn) {
                throw new Error("Missing required property 'idpId'");
            }
            resourceInputs["clientId"] = args?.clientId;
            resourceInputs["clientSecret"] = args?.clientSecret;
            resourceInputs["enabled"] = args?.enabled;
            resourceInputs["idpId"] = args?.idpId;
            resourceInputs["project"] = args?.project;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DefaultSupportedIdpConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DefaultSupportedIdpConfig resources.
 */
export interface DefaultSupportedIdpConfigState {
    /**
     * OAuth client ID
     */
    clientId?: pulumi.Input<string>;
    /**
     * OAuth client secret
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * If this IDP allows the user to sign in
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * ID of the IDP. Possible values include:
     * * `apple.com`
     * * `facebook.com`
     * * `gc.apple.com`
     * * `github.com`
     * * `google.com`
     * * `linkedin.com`
     * * `microsoft.com`
     * * `playgames.google.com`
     * * `twitter.com`
     * * `yahoo.com`
     */
    idpId?: pulumi.Input<string>;
    /**
     * The name of the DefaultSupportedIdpConfig resource
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DefaultSupportedIdpConfig resource.
 */
export interface DefaultSupportedIdpConfigArgs {
    /**
     * OAuth client ID
     */
    clientId: pulumi.Input<string>;
    /**
     * OAuth client secret
     */
    clientSecret: pulumi.Input<string>;
    /**
     * If this IDP allows the user to sign in
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * ID of the IDP. Possible values include:
     * * `apple.com`
     * * `facebook.com`
     * * `gc.apple.com`
     * * `github.com`
     * * `google.com`
     * * `linkedin.com`
     * * `microsoft.com`
     * * `playgames.google.com`
     * * `twitter.com`
     * * `yahoo.com`
     */
    idpId: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
