// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Identity Platform configuration for a Cloud project. Identity Platform is an
 * end-to-end authentication system for third-party users to access apps
 * and services.
 *
 * This entity is created only once during intialization and cannot be deleted,
 * individual Identity Providers may be disabled instead.  This resource may only
 * be created in billing-enabled projects.
 *
 * To get more information about Config, see:
 *
 * * [API documentation](https://cloud.google.com/identity-platform/docs/reference/rest/v2/Config)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/identity-platform/docs)
 *
 * ## Example Usage
 *
 * ## Import
 *
 * Config can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:identityplatform/config:Config default projects/{{project}}/config
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:identityplatform/config:Config default projects/{{project}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:identityplatform/config:Config default {{project}}
 * ```
 */
export class Config extends pulumi.CustomResource {
    /**
     * Get an existing Config resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConfigState, opts?: pulumi.CustomResourceOptions): Config {
        return new Config(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:identityplatform/config:Config';

    /**
     * Returns true if the given object is an instance of Config.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Config {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Config.__pulumiType;
    }

    /**
     * List of domains authorized for OAuth redirects.
     */
    public readonly authorizedDomains!: pulumi.Output<string[]>;
    /**
     * Whether anonymous users will be auto-deleted after a period of 30 days
     */
    public readonly autodeleteAnonymousUsers!: pulumi.Output<boolean | undefined>;
    /**
     * Configuration related to blocking functions.
     * Structure is documented below.
     */
    public readonly blockingFunctions!: pulumi.Output<outputs.identityplatform.ConfigBlockingFunctions | undefined>;
    /**
     * The name of the Config resource
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * Configuration related to quotas.
     * Structure is documented below.
     */
    public readonly quota!: pulumi.Output<outputs.identityplatform.ConfigQuota | undefined>;
    /**
     * Configuration related to local sign in methods.
     * Structure is documented below.
     */
    public readonly signIn!: pulumi.Output<outputs.identityplatform.ConfigSignIn>;

    /**
     * Create a Config resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ConfigArgs | ConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ConfigState | undefined;
            resourceInputs["authorizedDomains"] = state ? state.authorizedDomains : undefined;
            resourceInputs["autodeleteAnonymousUsers"] = state ? state.autodeleteAnonymousUsers : undefined;
            resourceInputs["blockingFunctions"] = state ? state.blockingFunctions : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["quota"] = state ? state.quota : undefined;
            resourceInputs["signIn"] = state ? state.signIn : undefined;
        } else {
            const args = argsOrState as ConfigArgs | undefined;
            resourceInputs["authorizedDomains"] = args ? args.authorizedDomains : undefined;
            resourceInputs["autodeleteAnonymousUsers"] = args ? args.autodeleteAnonymousUsers : undefined;
            resourceInputs["blockingFunctions"] = args ? args.blockingFunctions : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["quota"] = args ? args.quota : undefined;
            resourceInputs["signIn"] = args ? args.signIn : undefined;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Config.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Config resources.
 */
export interface ConfigState {
    /**
     * List of domains authorized for OAuth redirects.
     */
    authorizedDomains?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether anonymous users will be auto-deleted after a period of 30 days
     */
    autodeleteAnonymousUsers?: pulumi.Input<boolean>;
    /**
     * Configuration related to blocking functions.
     * Structure is documented below.
     */
    blockingFunctions?: pulumi.Input<inputs.identityplatform.ConfigBlockingFunctions>;
    /**
     * The name of the Config resource
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * Configuration related to quotas.
     * Structure is documented below.
     */
    quota?: pulumi.Input<inputs.identityplatform.ConfigQuota>;
    /**
     * Configuration related to local sign in methods.
     * Structure is documented below.
     */
    signIn?: pulumi.Input<inputs.identityplatform.ConfigSignIn>;
}

/**
 * The set of arguments for constructing a Config resource.
 */
export interface ConfigArgs {
    /**
     * List of domains authorized for OAuth redirects.
     */
    authorizedDomains?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether anonymous users will be auto-deleted after a period of 30 days
     */
    autodeleteAnonymousUsers?: pulumi.Input<boolean>;
    /**
     * Configuration related to blocking functions.
     * Structure is documented below.
     */
    blockingFunctions?: pulumi.Input<inputs.identityplatform.ConfigBlockingFunctions>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * Configuration related to quotas.
     * Structure is documented below.
     */
    quota?: pulumi.Input<inputs.identityplatform.ConfigQuota>;
    /**
     * Configuration related to local sign in methods.
     * Structure is documented below.
     */
    signIn?: pulumi.Input<inputs.identityplatform.ConfigSignIn>;
}
