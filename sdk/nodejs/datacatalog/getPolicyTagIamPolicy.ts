// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Retrieves the current IAM policy data for policytag
 *
 * ## example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const policy = gcp.datacatalog.getPolicyTagIamPolicy({
 *     policyTag: google_data_catalog_policy_tag.basic_policy_tag.name,
 * });
 * ```
 */
export function getPolicyTagIamPolicy(args: GetPolicyTagIamPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetPolicyTagIamPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:datacatalog/getPolicyTagIamPolicy:getPolicyTagIamPolicy", {
        "policyTag": args.policyTag,
    }, opts);
}

/**
 * A collection of arguments for invoking getPolicyTagIamPolicy.
 */
export interface GetPolicyTagIamPolicyArgs {
    /**
     * Used to find the parent resource to bind the IAM policy to
     */
    policyTag: string;
}

/**
 * A collection of values returned by getPolicyTagIamPolicy.
 */
export interface GetPolicyTagIamPolicyResult {
    /**
     * (Computed) The etag of the IAM policy.
     */
    readonly etag: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * (Required only by `gcp.datacatalog.PolicyTagIamPolicy`) The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     */
    readonly policyData: string;
    readonly policyTag: string;
}
/**
 * Retrieves the current IAM policy data for policytag
 *
 * ## example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const policy = gcp.datacatalog.getPolicyTagIamPolicy({
 *     policyTag: google_data_catalog_policy_tag.basic_policy_tag.name,
 * });
 * ```
 */
export function getPolicyTagIamPolicyOutput(args: GetPolicyTagIamPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPolicyTagIamPolicyResult> {
    return pulumi.output(args).apply((a: any) => getPolicyTagIamPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getPolicyTagIamPolicy.
 */
export interface GetPolicyTagIamPolicyOutputArgs {
    /**
     * Used to find the parent resource to bind the IAM policy to
     */
    policyTag: pulumi.Input<string>;
}
