// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * An EntryGroup resource represents a logical grouping of zero or more Data Catalog Entry resources.
 *
 * To get more information about EntryGroup, see:
 *
 * * [API documentation](https://cloud.google.com/data-catalog/docs/reference/rest/v1/projects.locations.entryGroups)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/data-catalog/docs)
 *
 * ## Example Usage
 * ### Data Catalog Entry Group Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const basicEntryGroup = new gcp.datacatalog.EntryGroup("basic_entry_group", {
 *     entryGroupId: "my_group",
 * });
 * ```
 * ### Data Catalog Entry Group Full
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const basicEntryGroup = new gcp.datacatalog.EntryGroup("basic_entry_group", {
 *     description: "example entry group",
 *     displayName: "entry group",
 *     entryGroupId: "my_group",
 * });
 * ```
 *
 * ## Import
 *
 * EntryGroup can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:datacatalog/entryGroup:EntryGroup default {{name}}
 * ```
 */
export class EntryGroup extends pulumi.CustomResource {
    /**
     * Get an existing EntryGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EntryGroupState, opts?: pulumi.CustomResourceOptions): EntryGroup {
        return new EntryGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:datacatalog/entryGroup:EntryGroup';

    /**
     * Returns true if the given object is an instance of EntryGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EntryGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EntryGroup.__pulumiType;
    }

    /**
     * Entry group description, which can consist of several sentences or paragraphs that describe entry group contents.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * A short name to identify the entry group, for example, "analytics data - jan 2011".
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * The id of the entry group to create. The id must begin with a letter or underscore,
     * contain only English letters, numbers and underscores, and be at most 64 characters.
     */
    public readonly entryGroupId!: pulumi.Output<string>;
    /**
     * The resource name of the entry group in URL format. Example:
     * projects/{project}/locations/{location}/entryGroups/{entryGroupId}
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * EntryGroup location region.
     */
    public readonly region!: pulumi.Output<string>;

    /**
     * Create a EntryGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EntryGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EntryGroupArgs | EntryGroupState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EntryGroupState | undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["displayName"] = state ? state.displayName : undefined;
            inputs["entryGroupId"] = state ? state.entryGroupId : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["project"] = state ? state.project : undefined;
            inputs["region"] = state ? state.region : undefined;
        } else {
            const args = argsOrState as EntryGroupArgs | undefined;
            if ((!args || args.entryGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'entryGroupId'");
            }
            inputs["description"] = args ? args.description : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["entryGroupId"] = args ? args.entryGroupId : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["region"] = args ? args.region : undefined;
            inputs["name"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(EntryGroup.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EntryGroup resources.
 */
export interface EntryGroupState {
    /**
     * Entry group description, which can consist of several sentences or paragraphs that describe entry group contents.
     */
    description?: pulumi.Input<string>;
    /**
     * A short name to identify the entry group, for example, "analytics data - jan 2011".
     */
    displayName?: pulumi.Input<string>;
    /**
     * The id of the entry group to create. The id must begin with a letter or underscore,
     * contain only English letters, numbers and underscores, and be at most 64 characters.
     */
    entryGroupId?: pulumi.Input<string>;
    /**
     * The resource name of the entry group in URL format. Example:
     * projects/{project}/locations/{location}/entryGroups/{entryGroupId}
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * EntryGroup location region.
     */
    region?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EntryGroup resource.
 */
export interface EntryGroupArgs {
    /**
     * Entry group description, which can consist of several sentences or paragraphs that describe entry group contents.
     */
    description?: pulumi.Input<string>;
    /**
     * A short name to identify the entry group, for example, "analytics data - jan 2011".
     */
    displayName?: pulumi.Input<string>;
    /**
     * The id of the entry group to create. The id must begin with a letter or underscore,
     * contain only English letters, numbers and underscores, and be at most 64 characters.
     */
    entryGroupId: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * EntryGroup location region.
     */
    region?: pulumi.Input<string>;
}
