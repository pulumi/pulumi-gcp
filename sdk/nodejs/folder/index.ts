// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./accessApprovalSettings";
export * from "./getOrganizationPolicy";
export * from "./iamAuditConfig";
export * from "./iambinding";
export * from "./iammember";
export * from "./iampolicy";
export * from "./organizationPolicy";

// Import resources to register:
import { AccessApprovalSettings } from "./accessApprovalSettings";
import { IAMBinding } from "./iambinding";
import { IAMMember } from "./iammember";
import { IAMPolicy } from "./iampolicy";
import { IamAuditConfig } from "./iamAuditConfig";
import { OrganizationPolicy } from "./organizationPolicy";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "gcp:folder/accessApprovalSettings:AccessApprovalSettings":
                return new AccessApprovalSettings(name, <any>undefined, { urn })
            case "gcp:folder/iAMBinding:IAMBinding":
                return new IAMBinding(name, <any>undefined, { urn })
            case "gcp:folder/iAMMember:IAMMember":
                return new IAMMember(name, <any>undefined, { urn })
            case "gcp:folder/iAMPolicy:IAMPolicy":
                return new IAMPolicy(name, <any>undefined, { urn })
            case "gcp:folder/iamAuditConfig:IamAuditConfig":
                return new IamAuditConfig(name, <any>undefined, { urn })
            case "gcp:folder/organizationPolicy:OrganizationPolicy":
                return new OrganizationPolicy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "folder/accessApprovalSettings", _module)
pulumi.runtime.registerResourceModule("gcp", "folder/iAMBinding", _module)
pulumi.runtime.registerResourceModule("gcp", "folder/iAMMember", _module)
pulumi.runtime.registerResourceModule("gcp", "folder/iAMPolicy", _module)
pulumi.runtime.registerResourceModule("gcp", "folder/iamAuditConfig", _module)
pulumi.runtime.registerResourceModule("gcp", "folder/organizationPolicy", _module)
