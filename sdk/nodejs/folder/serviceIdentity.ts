// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Generate folder service identity for a service.
 *
 * > **Note:** Once created, this resource cannot be updated or destroyed. These
 * actions are a no-op.
 *
 * > **Note:** This resource can be used to retrieve the emails of the [Google-managed folder service accounts](https://cloud.google.com/iam/docs/service-agents)
 * of the APIs that Google has configured with a Service Identity. You can run `gcloud beta services identity create --service SERVICE_NAME.googleapis.com --folder FOLDER` to
 * verify if an API supports this.
 *
 * To get more information about Service Identity, see:
 *
 * * [API documentation](https://cloud.google.com/service-usage/docs/reference/rest/v1beta1/services/generateServiceIdentity)
 *
 * ## Example Usage
 *
 * ### Folder Service Identity Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const myFolder = new gcp.organizations.Folder("my_folder", {
 *     parent: "organizations/1234567",
 *     displayName: "my-folder",
 * });
 * const osconfigSa = new gcp.folder.ServiceIdentity("osconfig_sa", {
 *     folder: myFolder.folderId,
 *     service: "osconfig.googleapis.com",
 * });
 * const admin = new gcp.folder.IAMMember("admin", {
 *     folder: myFolder.name,
 *     role: "roles/osconfig.serviceAgent",
 *     member: osconfigSa.member,
 * });
 * ```
 *
 * ## Import
 *
 * This resource does not support import.
 */
export class ServiceIdentity extends pulumi.CustomResource {
    /**
     * Get an existing ServiceIdentity resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceIdentityState, opts?: pulumi.CustomResourceOptions): ServiceIdentity {
        return new ServiceIdentity(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:folder/serviceIdentity:ServiceIdentity';

    /**
     * Returns true if the given object is an instance of ServiceIdentity.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceIdentity {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceIdentity.__pulumiType;
    }

    /**
     * The email address of the Google managed service account.
     */
    public /*out*/ readonly email!: pulumi.Output<string>;
    /**
     * The folder in which the resource belongs.
     */
    public readonly folder!: pulumi.Output<string>;
    /**
     * The Identity of the Google managed service account in the form 'serviceAccount:{email}'. This value is often used to refer to the service account in order to grant IAM permissions.
     */
    public /*out*/ readonly member!: pulumi.Output<string>;
    /**
     * The service to generate identity for.
     *
     * - - -
     */
    public readonly service!: pulumi.Output<string>;

    /**
     * Create a ServiceIdentity resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceIdentityArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceIdentityArgs | ServiceIdentityState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServiceIdentityState | undefined;
            resourceInputs["email"] = state ? state.email : undefined;
            resourceInputs["folder"] = state ? state.folder : undefined;
            resourceInputs["member"] = state ? state.member : undefined;
            resourceInputs["service"] = state ? state.service : undefined;
        } else {
            const args = argsOrState as ServiceIdentityArgs | undefined;
            if ((!args || args.folder === undefined) && !opts.urn) {
                throw new Error("Missing required property 'folder'");
            }
            if ((!args || args.service === undefined) && !opts.urn) {
                throw new Error("Missing required property 'service'");
            }
            resourceInputs["folder"] = args ? args.folder : undefined;
            resourceInputs["service"] = args ? args.service : undefined;
            resourceInputs["email"] = undefined /*out*/;
            resourceInputs["member"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServiceIdentity.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServiceIdentity resources.
 */
export interface ServiceIdentityState {
    /**
     * The email address of the Google managed service account.
     */
    email?: pulumi.Input<string>;
    /**
     * The folder in which the resource belongs.
     */
    folder?: pulumi.Input<string>;
    /**
     * The Identity of the Google managed service account in the form 'serviceAccount:{email}'. This value is often used to refer to the service account in order to grant IAM permissions.
     */
    member?: pulumi.Input<string>;
    /**
     * The service to generate identity for.
     *
     * - - -
     */
    service?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ServiceIdentity resource.
 */
export interface ServiceIdentityArgs {
    /**
     * The folder in which the resource belongs.
     */
    folder: pulumi.Input<string>;
    /**
     * The service to generate identity for.
     *
     * - - -
     */
    service: pulumi.Input<string>;
}
