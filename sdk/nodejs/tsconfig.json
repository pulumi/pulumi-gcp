{
    "compilerOptions": {
        "outDir": "bin",
        "target": "es6",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true
    },
    "files": [
        "accesscontextmanager/accessLevel.ts",
        "accesscontextmanager/accessPolicy.ts",
        "accesscontextmanager/index.ts",
        "accesscontextmanager/servicePerimeter.ts",
        "appengine/application.ts",
        "appengine/firewallRule.ts",
        "appengine/index.ts",
        "bigquery/dataset.ts",
        "bigquery/index.ts",
        "bigquery/table.ts",
        "bigtable/index.ts",
        "bigtable/instance.ts",
        "bigtable/table.ts",
        "billing/accountIamBinding.ts",
        "billing/accountIamMember.ts",
        "billing/accountIamPolicy.ts",
        "billing/index.ts",
        "binaryauthorization/attestor.ts",
        "binaryauthorization/index.ts",
        "binaryauthorization/policy.ts",
        "cloudbuild/index.ts",
        "cloudbuild/trigger.ts",
        "cloudfunctions/function.ts",
        "cloudfunctions/getFunction.ts",
        "cloudfunctions/index.ts",
        "cloudfunctions/zMixins.ts",
        "cloudscheduler/index.ts",
        "cloudscheduler/job.ts",
        "composer/environment.ts",
        "composer/index.ts",
        "compute/address.ts",
        "compute/attachedDisk.ts",
        "compute/autoscalar.ts",
        "compute/backendBucket.ts",
        "compute/backendService.ts",
        "compute/disk.ts",
        "compute/firewall.ts",
        "compute/forwardingRule.ts",
        "compute/getAddress.ts",
        "compute/getBackendService.ts",
        "compute/getDefaultServiceAccount.ts",
        "compute/getForwardingRule.ts",
        "compute/getGlobalAddress.ts",
        "compute/getImage.ts",
        "compute/getInstance.ts",
        "compute/getInstanceGroup.ts",
        "compute/getLBIPRanges.ts",
        "compute/getNetblockIPRanges.ts",
        "compute/getNetwork.ts",
        "compute/getRegionInstanceGroup.ts",
        "compute/getRegions.ts",
        "compute/getSSLPolicy.ts",
        "compute/getSubnetwork.ts",
        "compute/getVPNGateway.ts",
        "compute/getZones.ts",
        "compute/globalAddress.ts",
        "compute/globalForwardingRule.ts",
        "compute/healthCheck.ts",
        "compute/httpHealthCheck.ts",
        "compute/httpsHealthCheck.ts",
        "compute/image.ts",
        "compute/index.ts",
        "compute/instance.ts",
        "compute/instanceFromTemplate.ts",
        "compute/instanceGroup.ts",
        "compute/instanceGroupManager.ts",
        "compute/instanceTemplate.ts",
        "compute/interconnectAttachment.ts",
        "compute/mangedSslCertificate.ts",
        "compute/network.ts",
        "compute/networkPeering.ts",
        "compute/projectMetadata.ts",
        "compute/projectMetadataItem.ts",
        "compute/regionAutoscaler.ts",
        "compute/regionBackendService.ts",
        "compute/regionDisk.ts",
        "compute/regionInstanceGroupManager.ts",
        "compute/route.ts",
        "compute/router.ts",
        "compute/routerInterface.ts",
        "compute/routerNat.ts",
        "compute/routerPeer.ts",
        "compute/sSLCertificate.ts",
        "compute/sSLPolicy.ts",
        "compute/securityPolicy.ts",
        "compute/sharedVPCHostProject.ts",
        "compute/sharedVPCServiceProject.ts",
        "compute/snapshot.ts",
        "compute/subnetwork.ts",
        "compute/subnetworkIAMBinding.ts",
        "compute/subnetworkIAMMember.ts",
        "compute/subnetworkIAMPolicy.ts",
        "compute/targetHttpProxy.ts",
        "compute/targetHttpsProxy.ts",
        "compute/targetPool.ts",
        "compute/targetSSLProxy.ts",
        "compute/targetTCPProxy.ts",
        "compute/uRLMap.ts",
        "compute/vPNGateway.ts",
        "compute/vPNTunnel.ts",
        "config/index.ts",
        "config/vars.ts",
        "container/cluster.ts",
        "container/getCluster.ts",
        "container/getEngineVersions.ts",
        "container/getRegistryImage.ts",
        "container/getRegistryRepository.ts",
        "container/index.ts",
        "container/nodePool.ts",
        "containeranalysis/index.ts",
        "containeranalysis/note.ts",
        "dataflow/index.ts",
        "dataflow/job.ts",
        "dataproc/cluster.ts",
        "dataproc/index.ts",
        "dataproc/job.ts",
        "dns/getManagedZone.ts",
        "dns/index.ts",
        "dns/managedZone.ts",
        "dns/policy.ts",
        "dns/recordSet.ts",
        "endpoints/index.ts",
        "endpoints/service.ts",
        "filestore/index.ts",
        "filestore/instance.ts",
        "folder/getOrganizationPolicy.ts",
        "folder/iAMBinding.ts",
        "folder/iAMMember.ts",
        "folder/iAMPolicy.ts",
        "folder/index.ts",
        "folder/organizationPolicy.ts",
        "iam/getRule.ts",
        "iam/index.ts",
        "index.ts",
        "kms/cryptoKey.ts",
        "kms/cryptoKeyIAMBinding.ts",
        "kms/cryptoKeyIAMMember.ts",
        "kms/getKMSCryptoKey.ts",
        "kms/getKMSKeyRing.ts",
        "kms/getKMSSecret.ts",
        "kms/index.ts",
        "kms/keyRing.ts",
        "kms/keyRingIAMBinding.ts",
        "kms/keyRingIAMMember.ts",
        "kms/keyRingIAMPolicy.ts",
        "kms/registry.ts",
        "logging/billingAccountExclusion.ts",
        "logging/billingAccountSink.ts",
        "logging/folderExclusion.ts",
        "logging/folderSink.ts",
        "logging/index.ts",
        "logging/organizationExclusion.ts",
        "logging/organizationSink.ts",
        "logging/projectExclusion.ts",
        "logging/projectSink.ts",
        "monitoring/alertPolicy.ts",
        "monitoring/group.ts",
        "monitoring/index.ts",
        "monitoring/notificationChannel.ts",
        "monitoring/uptimeCheckConfig.ts",
        "organizations/folder.ts",
        "organizations/getActiveFolder.ts",
        "organizations/getBillingAccount.ts",
        "organizations/getClientConfig.ts",
        "organizations/getClientOpenIdUserInfo.ts",
        "organizations/getFolder.ts",
        "organizations/getIAMPolicy.ts",
        "organizations/getOrganization.ts",
        "organizations/getProject.ts",
        "organizations/getProjectServices.ts",
        "organizations/iAMBinding.ts",
        "organizations/iAMCustomRole.ts",
        "organizations/iAMMember.ts",
        "organizations/iAMPolicy.ts",
        "organizations/index.ts",
        "organizations/policy.ts",
        "organizations/project.ts",
        "projects/getOrganizationPolicy.ts",
        "projects/getProject.ts",
        "projects/iAMAuditConfig.ts",
        "projects/iAMBinding.ts",
        "projects/iAMCustomRole.ts",
        "projects/iAMMember.ts",
        "projects/iAMPolicy.ts",
        "projects/index.ts",
        "projects/organizationPolicy.ts",
        "projects/service.ts",
        "projects/services.ts",
        "projects/usageExportBucket.ts",
        "provider.ts",
        "pubsub/index.ts",
        "pubsub/subscription.ts",
        "pubsub/subscriptionIAMBinding.ts",
        "pubsub/subscriptionIAMMember.ts",
        "pubsub/subscriptionIAMPolicy.ts",
        "pubsub/topic.ts",
        "pubsub/topicIAMBinding.ts",
        "pubsub/topicIAMMember.ts",
        "pubsub/topicIAMPolicy.ts",
        "pubsub/zMixins.ts",
        "redis/index.ts",
        "redis/instance.ts",
        "resourcemanager/index.ts",
        "resourcemanager/lien.ts",
        "runtimeconfig/config.ts",
        "runtimeconfig/index.ts",
        "runtimeconfig/variable.ts",
        "serverless/function.ts",
        "serverless/index.ts",
        "serviceAccount/account.ts",
        "serviceAccount/getAccount.ts",
        "serviceAccount/getAccountKey.ts",
        "serviceAccount/iAMBinding.ts",
        "serviceAccount/iAMMember.ts",
        "serviceAccount/iAMPolicy.ts",
        "serviceAccount/index.ts",
        "serviceAccount/key.ts",
        "servicenetworking/connection.ts",
        "servicenetworking/index.ts",
        "sourcerepo/index.ts",
        "sourcerepo/repository.ts",
        "spanner/database.ts",
        "spanner/databaseIAMBinding.ts",
        "spanner/databaseIAMMember.ts",
        "spanner/databaseIAMPolicy.ts",
        "spanner/index.ts",
        "spanner/instance.ts",
        "spanner/instanceIAMBinding.ts",
        "spanner/instanceIAMMember.ts",
        "spanner/instanceIAMPolicy.ts",
        "sql/database.ts",
        "sql/databaseInstance.ts",
        "sql/index.ts",
        "sql/sslCert.ts",
        "sql/user.ts",
        "storage/bucket.ts",
        "storage/bucketACL.ts",
        "storage/bucketIAMBinding.ts",
        "storage/bucketIAMMember.ts",
        "storage/bucketIAMPolicy.ts",
        "storage/bucketObject.ts",
        "storage/defaultObjectACL.ts",
        "storage/defaultObjectAccessControl.ts",
        "storage/getBucketObject.ts",
        "storage/getObjectSignedUrl.ts",
        "storage/getProjectServiceAccount.ts",
        "storage/getTransferProjectServieAccount.ts",
        "storage/index.ts",
        "storage/notification.ts",
        "storage/objectACL.ts",
        "storage/objectAccessControl.ts",
        "storage/transferJob.ts",
        "storage/zMixins.ts",
        "tpu/index.ts",
        "tpu/node.ts",
        "utilities.ts",
        "utils.ts"
    ]
}

