{
    "compilerOptions": {
        "outDir": "bin",
        "target": "es6",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true
    },
    "files": [
        "bigquery/dataset.ts",
        "bigquery/index.ts",
        "bigquery/table.ts",
        "bigtable/index.ts",
        "bigtable/instance.ts",
        "bigtable/table.ts",
        "cloudfunctions/function.ts",
        "cloudfunctions/getFunction.ts",
        "cloudfunctions/index.ts",
        "compute/address.ts",
        "compute/autoscalar.ts",
        "compute/backendBucket.ts",
        "compute/backendService.ts",
        "compute/disk.ts",
        "compute/firewall.ts",
        "compute/forwardingRule.ts",
        "compute/getAddress.ts",
        "compute/getBackendService.ts",
        "compute/getDefaultServiceAccount.ts",
        "compute/getForwardingRule.ts",
        "compute/getGlobalAddress.ts",
        "compute/getImage.ts",
        "compute/getInstanceGroup.ts",
        "compute/getLBIPRanges.ts",
        "compute/getNetwork.ts",
        "compute/getRegionInstanceGroup.ts",
        "compute/getSubnetwork.ts",
        "compute/getVPNGateway.ts",
        "compute/getZones.ts",
        "compute/globalAddress.ts",
        "compute/globalForwardingRule.ts",
        "compute/healthCheck.ts",
        "compute/httpHealthCheck.ts",
        "compute/httpsHealthCheck.ts",
        "compute/image.ts",
        "compute/index.ts",
        "compute/instance.ts",
        "compute/instanceGroup.ts",
        "compute/instanceGroupManager.ts",
        "compute/instanceTemplate.ts",
        "compute/network.ts",
        "compute/networkPeering.ts",
        "compute/projectMetadata.ts",
        "compute/projectMetadataItem.ts",
        "compute/regionAutoscaler.ts",
        "compute/regionBackendService.ts",
        "compute/regionInstanceGroupManager.ts",
        "compute/route.ts",
        "compute/router.ts",
        "compute/routerInterface.ts",
        "compute/routerPeer.ts",
        "compute/sSLCertificate.ts",
        "compute/sharedVPCHostProject.ts",
        "compute/sharedVPCServiceProject.ts",
        "compute/snapshot.ts",
        "compute/subnetwork.ts",
        "compute/targetHttpProxy.ts",
        "compute/targetHttpsProxy.ts",
        "compute/targetPool.ts",
        "compute/targetSSLProxy.ts",
        "compute/targetTCPProxy.ts",
        "compute/uRLMap.ts",
        "compute/vPNGateway.ts",
        "compute/vPNTunnel.ts",
        "config/index.ts",
        "config/vars.ts",
        "container/cluster.ts",
        "container/getCluster.ts",
        "container/getEngineVersions.ts",
        "container/getRegistryImage.ts",
        "container/getRegistryRepository.ts",
        "container/index.ts",
        "container/nodePool.ts",
        "dataflow/index.ts",
        "dataflow/job.ts",
        "dataproc/cluster.ts",
        "dataproc/index.ts",
        "dataproc/job.ts",
        "dns/getManagedZone.ts",
        "dns/index.ts",
        "dns/managedZone.ts",
        "dns/recordSet.ts",
        "endpoints/index.ts",
        "endpoints/service.ts",
        "folder/iAMBinding.ts",
        "folder/iAMMember.ts",
        "folder/iAMPolicy.ts",
        "folder/index.ts",
        "folder/organizationPolicy.ts",
        "index.ts",
        "kms/cryptoKey.ts",
        "kms/cryptoKeyIAMBinding.ts",
        "kms/cryptoKeyIAMMember.ts",
        "kms/getKMSSecret.ts",
        "kms/index.ts",
        "kms/keyRing.ts",
        "kms/keyRingIAMBinding.ts",
        "kms/keyRingIAMMember.ts",
        "kms/keyRingIAMPolicy.ts",
        "kms/registry.ts",
        "logging/billingAccountSink.ts",
        "logging/folderSink.ts",
        "logging/index.ts",
        "logging/organizationSink.ts",
        "logging/projectSink.ts",
        "organizations/folder.ts",
        "organizations/getActiveFolder.ts",
        "organizations/getBillingAccount.ts",
        "organizations/getClientConfig.ts",
        "organizations/getIAMPolicy.ts",
        "organizations/getOrganization.ts",
        "organizations/getProject.ts",
        "organizations/iAMBinding.ts",
        "organizations/iAMCustomRole.ts",
        "organizations/iAMMember.ts",
        "organizations/iAMPolicy.ts",
        "organizations/index.ts",
        "organizations/policy.ts",
        "organizations/project.ts",
        "projects/iAMBinding.ts",
        "projects/iAMCustomRole.ts",
        "projects/iAMMember.ts",
        "projects/iAMPolicy.ts",
        "projects/index.ts",
        "projects/service.ts",
        "projects/services.ts",
        "projects/usageExportBucket.ts",
        "pubsub/index.ts",
        "pubsub/subscription.ts",
        "pubsub/subscriptionIAMBinding.ts",
        "pubsub/subscriptionIAMMember.ts",
        "pubsub/subscriptionIAMPolicy.ts",
        "pubsub/topic.ts",
        "pubsub/topicIAMBinding.ts",
        "pubsub/topicIAMMember.ts",
        "pubsub/topicIAMPolicy.ts",
        "runtimeconfig/config.ts",
        "runtimeconfig/index.ts",
        "runtimeconfig/variavble.ts",
        "serviceAccount/account.ts",
        "serviceAccount/iAMBinding.ts",
        "serviceAccount/iAMMember.ts",
        "serviceAccount/iAMPolicy.ts",
        "serviceAccount/index.ts",
        "serviceAccount/key.ts",
        "sourcerepo/index.ts",
        "sourcerepo/repository.ts",
        "spanner/database.ts",
        "spanner/index.ts",
        "spanner/instance.ts",
        "sql/database.ts",
        "sql/databaseInstance.ts",
        "sql/index.ts",
        "sql/user.ts",
        "storage/bucket.ts",
        "storage/bucketACL.ts",
        "storage/bucketIAMBinding.ts",
        "storage/bucketIAMMember.ts",
        "storage/bucketObject.ts",
        "storage/defaultObjectACL.ts",
        "storage/getObjectSignedUrl.ts",
        "storage/getProjectServiceAccount.ts",
        "storage/index.ts",
        "storage/notification.ts",
        "storage/objectACL.ts"
    ]
}

