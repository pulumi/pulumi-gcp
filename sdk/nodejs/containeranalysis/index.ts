// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { NoteArgs, NoteState } from "./note";
export type Note = import("./note").Note;
export const Note: typeof import("./note").Note = null as any;
utilities.lazyLoad(exports, ["Note"], () => require("./note"));

export { OccurenceArgs, OccurenceState } from "./occurence";
export type Occurence = import("./occurence").Occurence;
export const Occurence: typeof import("./occurence").Occurence = null as any;
utilities.lazyLoad(exports, ["Occurence"], () => require("./occurence"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "gcp:containeranalysis/note:Note":
                return new Note(name, <any>undefined, { urn })
            case "gcp:containeranalysis/occurence:Occurence":
                return new Occurence(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "containeranalysis/note", _module)
pulumi.runtime.registerResourceModule("gcp", "containeranalysis/occurence", _module)
