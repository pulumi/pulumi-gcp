// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Retrieves the current IAM policy data for schema
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const policy = gcp.pubsub.getSchemaIamPolicy({
 *     project: example.project,
 *     schema: example.name,
 * });
 * ```
 */
export function getSchemaIamPolicy(args: GetSchemaIamPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetSchemaIamPolicyResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:pubsub/getSchemaIamPolicy:getSchemaIamPolicy", {
        "project": args.project,
        "schema": args.schema,
    }, opts);
}

/**
 * A collection of arguments for invoking getSchemaIamPolicy.
 */
export interface GetSchemaIamPolicyArgs {
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     */
    project?: string;
    /**
     * Used to find the parent resource to bind the IAM policy to
     */
    schema: string;
}

/**
 * A collection of values returned by getSchemaIamPolicy.
 */
export interface GetSchemaIamPolicyResult {
    /**
     * (Computed) The etag of the IAM policy.
     */
    readonly etag: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * (Required only by `gcp.pubsub.SchemaIamPolicy`) The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     */
    readonly policyData: string;
    readonly project: string;
    readonly schema: string;
}
/**
 * Retrieves the current IAM policy data for schema
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const policy = gcp.pubsub.getSchemaIamPolicy({
 *     project: example.project,
 *     schema: example.name,
 * });
 * ```
 */
export function getSchemaIamPolicyOutput(args: GetSchemaIamPolicyOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSchemaIamPolicyResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("gcp:pubsub/getSchemaIamPolicy:getSchemaIamPolicy", {
        "project": args.project,
        "schema": args.schema,
    }, opts);
}

/**
 * A collection of arguments for invoking getSchemaIamPolicy.
 */
export interface GetSchemaIamPolicyOutputArgs {
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * Used to find the parent resource to bind the IAM policy to
     */
    schema: pulumi.Input<string>;
}
