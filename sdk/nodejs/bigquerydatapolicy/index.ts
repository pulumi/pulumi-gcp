// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { DataPolicyArgs, DataPolicyState } from "./dataPolicy";
export type DataPolicy = import("./dataPolicy").DataPolicy;
export const DataPolicy: typeof import("./dataPolicy").DataPolicy = null as any;

export { DataPolicyIamBindingArgs, DataPolicyIamBindingState } from "./dataPolicyIamBinding";
export type DataPolicyIamBinding = import("./dataPolicyIamBinding").DataPolicyIamBinding;
export const DataPolicyIamBinding: typeof import("./dataPolicyIamBinding").DataPolicyIamBinding = null as any;

export { DataPolicyIamMemberArgs, DataPolicyIamMemberState } from "./dataPolicyIamMember";
export type DataPolicyIamMember = import("./dataPolicyIamMember").DataPolicyIamMember;
export const DataPolicyIamMember: typeof import("./dataPolicyIamMember").DataPolicyIamMember = null as any;

export { DataPolicyIamPolicyArgs, DataPolicyIamPolicyState } from "./dataPolicyIamPolicy";
export type DataPolicyIamPolicy = import("./dataPolicyIamPolicy").DataPolicyIamPolicy;
export const DataPolicyIamPolicy: typeof import("./dataPolicyIamPolicy").DataPolicyIamPolicy = null as any;

utilities.lazyLoad(exports, ["DataPolicy"], () => require("./dataPolicy"));
utilities.lazyLoad(exports, ["DataPolicyIamBinding"], () => require("./dataPolicyIamBinding"));
utilities.lazyLoad(exports, ["DataPolicyIamMember"], () => require("./dataPolicyIamMember"));
utilities.lazyLoad(exports, ["DataPolicyIamPolicy"], () => require("./dataPolicyIamPolicy"));

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "gcp:bigquerydatapolicy/dataPolicy:DataPolicy":
                return new DataPolicy(name, <any>undefined, { urn })
            case "gcp:bigquerydatapolicy/dataPolicyIamBinding:DataPolicyIamBinding":
                return new DataPolicyIamBinding(name, <any>undefined, { urn })
            case "gcp:bigquerydatapolicy/dataPolicyIamMember:DataPolicyIamMember":
                return new DataPolicyIamMember(name, <any>undefined, { urn })
            case "gcp:bigquerydatapolicy/dataPolicyIamPolicy:DataPolicyIamPolicy":
                return new DataPolicyIamPolicy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "bigquerydatapolicy/dataPolicy", _module)
pulumi.runtime.registerResourceModule("gcp", "bigquerydatapolicy/dataPolicyIamBinding", _module)
pulumi.runtime.registerResourceModule("gcp", "bigquerydatapolicy/dataPolicyIamMember", _module)
pulumi.runtime.registerResourceModule("gcp", "bigquerydatapolicy/dataPolicyIamPolicy", _module)
