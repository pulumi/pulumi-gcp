// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Retrieves the current IAM policy data for datapolicy
 *
 * ## example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const policy = gcp.bigquerydatapolicy.getIamPolicy({
 *     project: google_bigquery_datapolicy_data_policy.data_policy.project,
 *     location: google_bigquery_datapolicy_data_policy.data_policy.location,
 *     dataPolicyId: google_bigquery_datapolicy_data_policy.data_policy.data_policy_id,
 * });
 * ```
 */
export function getIamPolicy(args: GetIamPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetIamPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:bigquerydatapolicy/getIamPolicy:getIamPolicy", {
        "dataPolicyId": args.dataPolicyId,
        "location": args.location,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getIamPolicy.
 */
export interface GetIamPolicyArgs {
    dataPolicyId: string;
    /**
     * The name of the location of the data policy.
     * Used to find the parent resource to bind the IAM policy to
     */
    location?: string;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     */
    project?: string;
}

/**
 * A collection of values returned by getIamPolicy.
 */
export interface GetIamPolicyResult {
    readonly dataPolicyId: string;
    /**
     * (Computed) The etag of the IAM policy.
     */
    readonly etag: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly location: string;
    /**
     * (Required only by `gcp.bigquerydatapolicy.DataPolicyIamPolicy`) The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     */
    readonly policyData: string;
    readonly project: string;
}
/**
 * Retrieves the current IAM policy data for datapolicy
 *
 * ## example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const policy = gcp.bigquerydatapolicy.getIamPolicy({
 *     project: google_bigquery_datapolicy_data_policy.data_policy.project,
 *     location: google_bigquery_datapolicy_data_policy.data_policy.location,
 *     dataPolicyId: google_bigquery_datapolicy_data_policy.data_policy.data_policy_id,
 * });
 * ```
 */
export function getIamPolicyOutput(args: GetIamPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIamPolicyResult> {
    return pulumi.output(args).apply((a: any) => getIamPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getIamPolicy.
 */
export interface GetIamPolicyOutputArgs {
    dataPolicyId: pulumi.Input<string>;
    /**
     * The name of the location of the data policy.
     * Used to find the parent resource to bind the IAM policy to
     */
    location?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
