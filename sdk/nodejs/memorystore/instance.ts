// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * A Google Cloud Memorystore instance.
 *
 * ## Example Usage
 *
 * ### Memorystore Instance Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const producerNet = new gcp.compute.Network("producer_net", {
 *     name: "my-network",
 *     autoCreateSubnetworks: false,
 * });
 * const producerSubnet = new gcp.compute.Subnetwork("producer_subnet", {
 *     name: "my-subnet",
 *     ipCidrRange: "10.0.0.248/29",
 *     region: "us-central1",
 *     network: producerNet.id,
 * });
 * const _default = new gcp.networkconnectivity.ServiceConnectionPolicy("default", {
 *     name: "my-policy",
 *     location: "us-central1",
 *     serviceClass: "gcp-memorystore",
 *     description: "my basic service connection policy",
 *     network: producerNet.id,
 *     pscConfig: {
 *         subnetworks: [producerSubnet.id],
 *     },
 * });
 * const project = gcp.organizations.getProject({});
 * const instance_basic = new gcp.memorystore.Instance("instance-basic", {
 *     instanceId: "basic-instance",
 *     shardCount: 3,
 *     desiredPscAutoConnections: [{
 *         network: producerNet.id,
 *         projectId: project.then(project => project.projectId),
 *     }],
 *     location: "us-central1",
 *     deletionProtectionEnabled: false,
 * }, {
 *     dependsOn: [_default],
 * });
 * ```
 * ### Memorystore Instance Full
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const producerNet = new gcp.compute.Network("producer_net", {
 *     name: "my-network",
 *     autoCreateSubnetworks: false,
 * });
 * const producerSubnet = new gcp.compute.Subnetwork("producer_subnet", {
 *     name: "my-subnet",
 *     ipCidrRange: "10.0.0.248/29",
 *     region: "us-central1",
 *     network: producerNet.id,
 * });
 * const _default = new gcp.networkconnectivity.ServiceConnectionPolicy("default", {
 *     name: "my-policy",
 *     location: "us-central1",
 *     serviceClass: "gcp-memorystore",
 *     description: "my basic service connection policy",
 *     network: producerNet.id,
 *     pscConfig: {
 *         subnetworks: [producerSubnet.id],
 *     },
 * });
 * const project = gcp.organizations.getProject({});
 * const instance_full = new gcp.memorystore.Instance("instance-full", {
 *     instanceId: "full-instance",
 *     shardCount: 3,
 *     desiredPscAutoConnections: [{
 *         network: producerNet.id,
 *         projectId: project.then(project => project.projectId),
 *     }],
 *     location: "us-central1",
 *     replicaCount: 2,
 *     nodeType: "SHARED_CORE_NANO",
 *     transitEncryptionMode: "TRANSIT_ENCRYPTION_DISABLED",
 *     authorizationMode: "AUTH_DISABLED",
 *     engineConfigs: {
 *         "maxmemory-policy": "volatile-ttl",
 *     },
 *     zoneDistributionConfig: {
 *         mode: "SINGLE_ZONE",
 *         zone: "us-central1-b",
 *     },
 *     engineVersion: "VALKEY_7_2",
 *     deletionProtectionEnabled: false,
 *     mode: "CLUSTER",
 *     persistenceConfig: {
 *         mode: "RDB",
 *         rdbConfig: {
 *             rdbSnapshotPeriod: "ONE_HOUR",
 *             rdbSnapshotStartTime: "2024-10-02T15:01:23Z",
 *         },
 *     },
 *     labels: {
 *         abc: "xyz",
 *     },
 * }, {
 *     dependsOn: [_default],
 * });
 * ```
 * ### Memorystore Instance Persistence Aof
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const producerNet = new gcp.compute.Network("producer_net", {
 *     name: "my-network",
 *     autoCreateSubnetworks: false,
 * });
 * const producerSubnet = new gcp.compute.Subnetwork("producer_subnet", {
 *     name: "my-subnet",
 *     ipCidrRange: "10.0.0.248/29",
 *     region: "us-central1",
 *     network: producerNet.id,
 * });
 * const _default = new gcp.networkconnectivity.ServiceConnectionPolicy("default", {
 *     name: "my-policy",
 *     location: "us-central1",
 *     serviceClass: "gcp-memorystore",
 *     description: "my basic service connection policy",
 *     network: producerNet.id,
 *     pscConfig: {
 *         subnetworks: [producerSubnet.id],
 *     },
 * });
 * const project = gcp.organizations.getProject({});
 * const instance_persistence_aof = new gcp.memorystore.Instance("instance-persistence-aof", {
 *     instanceId: "aof-instance",
 *     shardCount: 3,
 *     desiredPscAutoConnections: [{
 *         network: producerNet.id,
 *         projectId: project.then(project => project.projectId),
 *     }],
 *     location: "us-central1",
 *     persistenceConfig: {
 *         mode: "AOF",
 *         aofConfig: {
 *             appendFsync: "EVERY_SEC",
 *         },
 *     },
 *     deletionProtectionEnabled: false,
 * }, {
 *     dependsOn: [_default],
 * });
 * ```
 *
 * ## Import
 *
 * Instance can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/locations/{{location}}/instances/{{instance_id}}`
 *
 * * `{{project}}/{{location}}/{{instance_id}}`
 *
 * * `{{location}}/{{instance_id}}`
 *
 * When using the `pulumi import` command, Instance can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:memorystore/instance:Instance default projects/{{project}}/locations/{{location}}/instances/{{instance_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:memorystore/instance:Instance default {{project}}/{{location}}/{{instance_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:memorystore/instance:Instance default {{location}}/{{instance_id}}
 * ```
 */
export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceState, opts?: pulumi.CustomResourceOptions): Instance {
        return new Instance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:memorystore/instance:Instance';

    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Instance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }

    /**
     * Optional. Immutable. Authorization mode of the instance. Possible values:
     * AUTH_DISABLED
     * IAM_AUTH
     */
    public readonly authorizationMode!: pulumi.Output<string>;
    /**
     * Output only. Creation timestamp of the instance.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Optional. If set to true deletion of the instance will fail.
     */
    public readonly deletionProtectionEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Required. Immutable. User inputs for the auto-created PSC connections.
     */
    public readonly desiredPscAutoConnections!: pulumi.Output<outputs.memorystore.InstanceDesiredPscAutoConnection[]>;
    /**
     * Output only. Endpoints clients can connect to the instance through. Currently only one
     * discovery endpoint is supported.
     * Structure is documented below.
     */
    public /*out*/ readonly discoveryEndpoints!: pulumi.Output<outputs.memorystore.InstanceDiscoveryEndpoint[]>;
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     */
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Endpoints for the instance.
     * Structure is documented below.
     */
    public /*out*/ readonly endpoints!: pulumi.Output<outputs.memorystore.InstanceEndpoint[]>;
    /**
     * Optional. User-provided engine configurations for the instance.
     */
    public readonly engineConfigs!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Optional. Engine version of the instance.
     */
    public readonly engineVersion!: pulumi.Output<string>;
    /**
     * Required. The ID to use for the instance, which will become the final component of
     * the instance's resource name.
     * This value is subject to the following restrictions:
     * * Must be 4-63 characters in length
     * * Must begin with a letter or digit
     * * Must contain only lowercase letters, digits, and hyphens
     * * Must not end with a hyphen
     * * Must be unique within a location
     *
     *
     * - - -
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * Optional. Labels to represent user-provided metadata.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. See documentation for resource type `memorystore.googleapis.com/CertificateAuthority`.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Optional. cluster or cluster-disabled.
     * Possible values:
     * CLUSTER
     * CLUSTER_DISABLED
     * Possible values are: `CLUSTER`, `CLUSTER_DISABLED`.
     */
    public readonly mode!: pulumi.Output<string>;
    /**
     * Identifier. Unique name of the instance.
     * Format: projects/{project}/locations/{location}/instances/{instance}
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Represents configuration for nodes of the instance.
     * Structure is documented below.
     */
    public /*out*/ readonly nodeConfigs!: pulumi.Output<outputs.memorystore.InstanceNodeConfig[]>;
    /**
     * Optional. Immutable. Machine type for individual nodes of the instance.
     * Possible values:
     * SHARED_CORE_NANO
     * HIGHMEM_MEDIUM
     * HIGHMEM_XLARGE
     * STANDARD_SMALL
     */
    public readonly nodeType!: pulumi.Output<string>;
    /**
     * Represents persistence configuration for a instance.
     * Structure is documented below.
     */
    public readonly persistenceConfig!: pulumi.Output<outputs.memorystore.InstancePersistenceConfig>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * Output only. User inputs and resource details of the auto-created PSC connections.
     * Structure is documented below.
     */
    public /*out*/ readonly pscAutoConnections!: pulumi.Output<outputs.memorystore.InstancePscAutoConnection[]>;
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     */
    public /*out*/ readonly pulumiLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Optional. Number of replica nodes per shard. If omitted the default is 0 replicas.
     */
    public readonly replicaCount!: pulumi.Output<number>;
    /**
     * Required. Number of shards for the instance.
     */
    public readonly shardCount!: pulumi.Output<number>;
    /**
     * Output only. Current state of the instance.
     * Possible values:
     * CREATING
     * ACTIVE
     * UPDATING
     * DELETING
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Additional information about the state of the instance.
     * Structure is documented below.
     */
    public /*out*/ readonly stateInfos!: pulumi.Output<outputs.memorystore.InstanceStateInfo[]>;
    /**
     * Optional. Immutable. In-transit encryption mode of the instance.
     * Possible values:
     * TRANSIT_ENCRYPTION_DISABLED
     * SERVER_AUTHENTICATION
     */
    public readonly transitEncryptionMode!: pulumi.Output<string>;
    /**
     * Output only. System assigned, unique identifier for the instance.
     */
    public /*out*/ readonly uid!: pulumi.Output<string>;
    /**
     * Output only. Latest update timestamp of the instance.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * Zone distribution configuration for allocation of instance resources.
     * Structure is documented below.
     */
    public readonly zoneDistributionConfig!: pulumi.Output<outputs.memorystore.InstanceZoneDistributionConfig>;

    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceArgs | InstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceState | undefined;
            resourceInputs["authorizationMode"] = state ? state.authorizationMode : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["deletionProtectionEnabled"] = state ? state.deletionProtectionEnabled : undefined;
            resourceInputs["desiredPscAutoConnections"] = state ? state.desiredPscAutoConnections : undefined;
            resourceInputs["discoveryEndpoints"] = state ? state.discoveryEndpoints : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["endpoints"] = state ? state.endpoints : undefined;
            resourceInputs["engineConfigs"] = state ? state.engineConfigs : undefined;
            resourceInputs["engineVersion"] = state ? state.engineVersion : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["mode"] = state ? state.mode : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nodeConfigs"] = state ? state.nodeConfigs : undefined;
            resourceInputs["nodeType"] = state ? state.nodeType : undefined;
            resourceInputs["persistenceConfig"] = state ? state.persistenceConfig : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["pscAutoConnections"] = state ? state.pscAutoConnections : undefined;
            resourceInputs["pulumiLabels"] = state ? state.pulumiLabels : undefined;
            resourceInputs["replicaCount"] = state ? state.replicaCount : undefined;
            resourceInputs["shardCount"] = state ? state.shardCount : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["stateInfos"] = state ? state.stateInfos : undefined;
            resourceInputs["transitEncryptionMode"] = state ? state.transitEncryptionMode : undefined;
            resourceInputs["uid"] = state ? state.uid : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
            resourceInputs["zoneDistributionConfig"] = state ? state.zoneDistributionConfig : undefined;
        } else {
            const args = argsOrState as InstanceArgs | undefined;
            if ((!args || args.desiredPscAutoConnections === undefined) && !opts.urn) {
                throw new Error("Missing required property 'desiredPscAutoConnections'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.shardCount === undefined) && !opts.urn) {
                throw new Error("Missing required property 'shardCount'");
            }
            resourceInputs["authorizationMode"] = args ? args.authorizationMode : undefined;
            resourceInputs["deletionProtectionEnabled"] = args ? args.deletionProtectionEnabled : undefined;
            resourceInputs["desiredPscAutoConnections"] = args ? args.desiredPscAutoConnections : undefined;
            resourceInputs["engineConfigs"] = args ? args.engineConfigs : undefined;
            resourceInputs["engineVersion"] = args ? args.engineVersion : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["mode"] = args ? args.mode : undefined;
            resourceInputs["nodeType"] = args ? args.nodeType : undefined;
            resourceInputs["persistenceConfig"] = args ? args.persistenceConfig : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["replicaCount"] = args ? args.replicaCount : undefined;
            resourceInputs["shardCount"] = args ? args.shardCount : undefined;
            resourceInputs["transitEncryptionMode"] = args ? args.transitEncryptionMode : undefined;
            resourceInputs["zoneDistributionConfig"] = args ? args.zoneDistributionConfig : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["discoveryEndpoints"] = undefined /*out*/;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["endpoints"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["nodeConfigs"] = undefined /*out*/;
            resourceInputs["pscAutoConnections"] = undefined /*out*/;
            resourceInputs["pulumiLabels"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["stateInfos"] = undefined /*out*/;
            resourceInputs["uid"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["effectiveLabels", "pulumiLabels"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Instance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Instance resources.
 */
export interface InstanceState {
    /**
     * Optional. Immutable. Authorization mode of the instance. Possible values:
     * AUTH_DISABLED
     * IAM_AUTH
     */
    authorizationMode?: pulumi.Input<string>;
    /**
     * Output only. Creation timestamp of the instance.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Optional. If set to true deletion of the instance will fail.
     */
    deletionProtectionEnabled?: pulumi.Input<boolean>;
    /**
     * Required. Immutable. User inputs for the auto-created PSC connections.
     */
    desiredPscAutoConnections?: pulumi.Input<pulumi.Input<inputs.memorystore.InstanceDesiredPscAutoConnection>[]>;
    /**
     * Output only. Endpoints clients can connect to the instance through. Currently only one
     * discovery endpoint is supported.
     * Structure is documented below.
     */
    discoveryEndpoints?: pulumi.Input<pulumi.Input<inputs.memorystore.InstanceDiscoveryEndpoint>[]>;
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     */
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Endpoints for the instance.
     * Structure is documented below.
     */
    endpoints?: pulumi.Input<pulumi.Input<inputs.memorystore.InstanceEndpoint>[]>;
    /**
     * Optional. User-provided engine configurations for the instance.
     */
    engineConfigs?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Optional. Engine version of the instance.
     */
    engineVersion?: pulumi.Input<string>;
    /**
     * Required. The ID to use for the instance, which will become the final component of
     * the instance's resource name.
     * This value is subject to the following restrictions:
     * * Must be 4-63 characters in length
     * * Must begin with a letter or digit
     * * Must contain only lowercase letters, digits, and hyphens
     * * Must not end with a hyphen
     * * Must be unique within a location
     *
     *
     * - - -
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Optional. Labels to represent user-provided metadata.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. See documentation for resource type `memorystore.googleapis.com/CertificateAuthority`.
     */
    location?: pulumi.Input<string>;
    /**
     * Optional. cluster or cluster-disabled.
     * Possible values:
     * CLUSTER
     * CLUSTER_DISABLED
     * Possible values are: `CLUSTER`, `CLUSTER_DISABLED`.
     */
    mode?: pulumi.Input<string>;
    /**
     * Identifier. Unique name of the instance.
     * Format: projects/{project}/locations/{location}/instances/{instance}
     */
    name?: pulumi.Input<string>;
    /**
     * Represents configuration for nodes of the instance.
     * Structure is documented below.
     */
    nodeConfigs?: pulumi.Input<pulumi.Input<inputs.memorystore.InstanceNodeConfig>[]>;
    /**
     * Optional. Immutable. Machine type for individual nodes of the instance.
     * Possible values:
     * SHARED_CORE_NANO
     * HIGHMEM_MEDIUM
     * HIGHMEM_XLARGE
     * STANDARD_SMALL
     */
    nodeType?: pulumi.Input<string>;
    /**
     * Represents persistence configuration for a instance.
     * Structure is documented below.
     */
    persistenceConfig?: pulumi.Input<inputs.memorystore.InstancePersistenceConfig>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * Output only. User inputs and resource details of the auto-created PSC connections.
     * Structure is documented below.
     */
    pscAutoConnections?: pulumi.Input<pulumi.Input<inputs.memorystore.InstancePscAutoConnection>[]>;
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     */
    pulumiLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Optional. Number of replica nodes per shard. If omitted the default is 0 replicas.
     */
    replicaCount?: pulumi.Input<number>;
    /**
     * Required. Number of shards for the instance.
     */
    shardCount?: pulumi.Input<number>;
    /**
     * Output only. Current state of the instance.
     * Possible values:
     * CREATING
     * ACTIVE
     * UPDATING
     * DELETING
     */
    state?: pulumi.Input<string>;
    /**
     * Additional information about the state of the instance.
     * Structure is documented below.
     */
    stateInfos?: pulumi.Input<pulumi.Input<inputs.memorystore.InstanceStateInfo>[]>;
    /**
     * Optional. Immutable. In-transit encryption mode of the instance.
     * Possible values:
     * TRANSIT_ENCRYPTION_DISABLED
     * SERVER_AUTHENTICATION
     */
    transitEncryptionMode?: pulumi.Input<string>;
    /**
     * Output only. System assigned, unique identifier for the instance.
     */
    uid?: pulumi.Input<string>;
    /**
     * Output only. Latest update timestamp of the instance.
     */
    updateTime?: pulumi.Input<string>;
    /**
     * Zone distribution configuration for allocation of instance resources.
     * Structure is documented below.
     */
    zoneDistributionConfig?: pulumi.Input<inputs.memorystore.InstanceZoneDistributionConfig>;
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * Optional. Immutable. Authorization mode of the instance. Possible values:
     * AUTH_DISABLED
     * IAM_AUTH
     */
    authorizationMode?: pulumi.Input<string>;
    /**
     * Optional. If set to true deletion of the instance will fail.
     */
    deletionProtectionEnabled?: pulumi.Input<boolean>;
    /**
     * Required. Immutable. User inputs for the auto-created PSC connections.
     */
    desiredPscAutoConnections: pulumi.Input<pulumi.Input<inputs.memorystore.InstanceDesiredPscAutoConnection>[]>;
    /**
     * Optional. User-provided engine configurations for the instance.
     */
    engineConfigs?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Optional. Engine version of the instance.
     */
    engineVersion?: pulumi.Input<string>;
    /**
     * Required. The ID to use for the instance, which will become the final component of
     * the instance's resource name.
     * This value is subject to the following restrictions:
     * * Must be 4-63 characters in length
     * * Must begin with a letter or digit
     * * Must contain only lowercase letters, digits, and hyphens
     * * Must not end with a hyphen
     * * Must be unique within a location
     *
     *
     * - - -
     */
    instanceId: pulumi.Input<string>;
    /**
     * Optional. Labels to represent user-provided metadata.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. See documentation for resource type `memorystore.googleapis.com/CertificateAuthority`.
     */
    location: pulumi.Input<string>;
    /**
     * Optional. cluster or cluster-disabled.
     * Possible values:
     * CLUSTER
     * CLUSTER_DISABLED
     * Possible values are: `CLUSTER`, `CLUSTER_DISABLED`.
     */
    mode?: pulumi.Input<string>;
    /**
     * Optional. Immutable. Machine type for individual nodes of the instance.
     * Possible values:
     * SHARED_CORE_NANO
     * HIGHMEM_MEDIUM
     * HIGHMEM_XLARGE
     * STANDARD_SMALL
     */
    nodeType?: pulumi.Input<string>;
    /**
     * Represents persistence configuration for a instance.
     * Structure is documented below.
     */
    persistenceConfig?: pulumi.Input<inputs.memorystore.InstancePersistenceConfig>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * Optional. Number of replica nodes per shard. If omitted the default is 0 replicas.
     */
    replicaCount?: pulumi.Input<number>;
    /**
     * Required. Number of shards for the instance.
     */
    shardCount: pulumi.Input<number>;
    /**
     * Optional. Immutable. In-transit encryption mode of the instance.
     * Possible values:
     * TRANSIT_ENCRYPTION_DISABLED
     * SERVER_AUTHENTICATION
     */
    transitEncryptionMode?: pulumi.Input<string>;
    /**
     * Zone distribution configuration for allocation of instance resources.
     * Structure is documented below.
     */
    zoneDistributionConfig?: pulumi.Input<inputs.memorystore.InstanceZoneDistributionConfig>;
}
