// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to list the Parameter Manager Regional Parameters.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const regional_parameters = gcp.parametermanager.getRegionalParameters({
 *     location: "us-central1",
 * });
 * ```
 */
export function getRegionalParameters(args: GetRegionalParametersArgs, opts?: pulumi.InvokeOptions): Promise<GetRegionalParametersResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:parametermanager/getRegionalParameters:getRegionalParameters", {
        "filter": args.filter,
        "location": args.location,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getRegionalParameters.
 */
export interface GetRegionalParametersArgs {
    /**
     * Filter string, adhering to the rules in List-operation filtering. List only parameters matching the filter. If filter is empty, all regional parameters are listed.
     */
    filter?: string;
    /**
     * The location of regional parameter.
     */
    location: string;
    /**
     * The ID of the project.
     */
    project?: string;
}

/**
 * A collection of values returned by getRegionalParameters.
 */
export interface GetRegionalParametersResult {
    readonly filter?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly location: string;
    /**
     * A list of regional parameters matching the filter. Structure is defined below.
     */
    readonly parameters: outputs.parametermanager.GetRegionalParametersParameter[];
    /**
     * The ID of the project in which the resource belongs.
     */
    readonly project: string;
}
/**
 * Use this data source to list the Parameter Manager Regional Parameters.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const regional_parameters = gcp.parametermanager.getRegionalParameters({
 *     location: "us-central1",
 * });
 * ```
 */
export function getRegionalParametersOutput(args: GetRegionalParametersOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRegionalParametersResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("gcp:parametermanager/getRegionalParameters:getRegionalParameters", {
        "filter": args.filter,
        "location": args.location,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getRegionalParameters.
 */
export interface GetRegionalParametersOutputArgs {
    /**
     * Filter string, adhering to the rules in List-operation filtering. List only parameters matching the filter. If filter is empty, all regional parameters are listed.
     */
    filter?: pulumi.Input<string>;
    /**
     * The location of regional parameter.
     */
    location: pulumi.Input<string>;
    /**
     * The ID of the project.
     */
    project?: pulumi.Input<string>;
}
