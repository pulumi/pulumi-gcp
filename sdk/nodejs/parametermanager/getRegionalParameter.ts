// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const regParameterDatasource = gcp.parametermanager.getRegionalParameter({
 *     parameterId: "foobar",
 *     location: "us-central1",
 * });
 * ```
 */
export function getRegionalParameter(args: GetRegionalParameterArgs, opts?: pulumi.InvokeOptions): Promise<GetRegionalParameterResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:parametermanager/getRegionalParameter:getRegionalParameter", {
        "location": args.location,
        "parameterId": args.parameterId,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getRegionalParameter.
 */
export interface GetRegionalParameterArgs {
    /**
     * The location of the regional parameter. eg us-central1
     */
    location: string;
    /**
     * The name of the regional parameter.
     */
    parameterId: string;
    /**
     * The ID of the project in which the resource belongs.
     */
    project?: string;
}

/**
 * A collection of values returned by getRegionalParameter.
 */
export interface GetRegionalParameterResult {
    readonly createTime: string;
    readonly effectiveLabels: {[key: string]: string};
    readonly format: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly labels: {[key: string]: string};
    readonly location: string;
    readonly name: string;
    readonly parameterId: string;
    readonly policyMembers: outputs.parametermanager.GetRegionalParameterPolicyMember[];
    readonly project?: string;
    readonly pulumiLabels: {[key: string]: string};
    readonly updateTime: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const regParameterDatasource = gcp.parametermanager.getRegionalParameter({
 *     parameterId: "foobar",
 *     location: "us-central1",
 * });
 * ```
 */
export function getRegionalParameterOutput(args: GetRegionalParameterOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRegionalParameterResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("gcp:parametermanager/getRegionalParameter:getRegionalParameter", {
        "location": args.location,
        "parameterId": args.parameterId,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getRegionalParameter.
 */
export interface GetRegionalParameterOutputArgs {
    /**
     * The location of the regional parameter. eg us-central1
     */
    location: pulumi.Input<string>;
    /**
     * The name of the regional parameter.
     */
    parameterId: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     */
    project?: pulumi.Input<string>;
}
