// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Get the value and metadata from a Parameter Manager Regional Parameter version. For more information see the [official documentation](https://cloud.google.com/secret-manager/parameter-manager/docs/overview) and [API](https://cloud.google.com/secret-manager/parameter-manager/docs/reference/rest/v1/projects.locations.parameters.versions).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const basic = gcp.parametermanager.getRegionalParameterVersion({
 *     parameter: "test-regional-parameter",
 *     parameterVersionId: "test-regional-parameter-version",
 *     location: "us-central1",
 * });
 * ```
 */
export function getRegionalParameterVersion(args: GetRegionalParameterVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetRegionalParameterVersionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:parametermanager/getRegionalParameterVersion:getRegionalParameterVersion", {
        "location": args.location,
        "parameter": args.parameter,
        "parameterVersionId": args.parameterVersionId,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getRegionalParameterVersion.
 */
export interface GetRegionalParameterVersionArgs {
    /**
     * The location of regional parameter.
     */
    location?: string;
    /**
     * The parameter for obtaining the Regional Parameter Version.
     * This can be either the reference of the regional parameter as in `projects/{{project}}/locations/{{location}}/parameters/{{parameter_id}}` or only the name of the regional parameter as in `{{parameter_id}}`.
     */
    parameter: string;
    /**
     * The version of the regional parameter to get.
     */
    parameterVersionId: string;
    /**
     * The project for retrieving the Regional Parameter Version. If it's not specified, 
     * the provider project will be used.
     */
    project?: string;
}

/**
 * A collection of values returned by getRegionalParameterVersion.
 */
export interface GetRegionalParameterVersionResult {
    /**
     * The time at which the Regional Parameter Version was created.
     */
    readonly createTime: string;
    /**
     * The current state of the Regional Parameter Version.
     */
    readonly disabled: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The resource name of the Cloud KMS CryptoKeyVersion used to decrypt regional parameter version payload. Format `projects/{{project}}/locations/{{location}}/keyRings/{{key_ring}}/cryptoKeys/{{crypto_key}}/cryptoKeyVersions/{{crypto_key_version}}`
     */
    readonly kmsKeyVersion: string;
    readonly location: string;
    /**
     * The resource name of the Regional Parameter Version. Format:
     * `projects/{{project}}/locations/{{location}}/parameters/{{parameter_id}}/versions/{{parameter_version_id}}`
     */
    readonly name: string;
    readonly parameter: string;
    /**
     * The regional parameter data.
     */
    readonly parameterData: string;
    readonly parameterVersionId: string;
    readonly project: string;
    /**
     * The time at which the Regional Parameter Version was last updated.
     */
    readonly updateTime: string;
}
/**
 * Get the value and metadata from a Parameter Manager Regional Parameter version. For more information see the [official documentation](https://cloud.google.com/secret-manager/parameter-manager/docs/overview) and [API](https://cloud.google.com/secret-manager/parameter-manager/docs/reference/rest/v1/projects.locations.parameters.versions).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const basic = gcp.parametermanager.getRegionalParameterVersion({
 *     parameter: "test-regional-parameter",
 *     parameterVersionId: "test-regional-parameter-version",
 *     location: "us-central1",
 * });
 * ```
 */
export function getRegionalParameterVersionOutput(args: GetRegionalParameterVersionOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRegionalParameterVersionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("gcp:parametermanager/getRegionalParameterVersion:getRegionalParameterVersion", {
        "location": args.location,
        "parameter": args.parameter,
        "parameterVersionId": args.parameterVersionId,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getRegionalParameterVersion.
 */
export interface GetRegionalParameterVersionOutputArgs {
    /**
     * The location of regional parameter.
     */
    location?: pulumi.Input<string>;
    /**
     * The parameter for obtaining the Regional Parameter Version.
     * This can be either the reference of the regional parameter as in `projects/{{project}}/locations/{{location}}/parameters/{{parameter_id}}` or only the name of the regional parameter as in `{{parameter_id}}`.
     */
    parameter: pulumi.Input<string>;
    /**
     * The version of the regional parameter to get.
     */
    parameterVersionId: pulumi.Input<string>;
    /**
     * The project for retrieving the Regional Parameter Version. If it's not specified, 
     * the provider project will be used.
     */
    project?: pulumi.Input<string>;
}
