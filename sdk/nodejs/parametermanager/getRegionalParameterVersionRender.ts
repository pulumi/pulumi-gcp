// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Get the value and metadata from a Parameter Manager Regional Parameter version with rendered payload data. For this datasource to work as expected, the principal of the parameter must be provided with the [Secret Manager Secret Accessor](https://cloud.google.com/secret-manager/docs/access-control#secretmanager.secretAccessor) role. For more information see the [official documentation](https://cloud.google.com/secret-manager/parameter-manager/docs/overview)  and [API](https://cloud.google.com/secret-manager/parameter-manager/docs/reference/rest/v1/projects.locations.parameters.versions/render).
 *
 * > **Warning:** To use this data source, we must grant the `Secret Manager Secret Accessor` role to the principal of the parameter. Please note that it can take up to 7 minutes for the role to take effect. Hence, we might need to wait approximately 7 minutes after granting  `Secret Manager Secret Accessor` role to the principal of the parameter. For more information see the [access change propagation documentation](https://cloud.google.com/iam/docs/access-change-propagation).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const basic = gcp.parametermanager.getRegionalParameterVersionRender({
 *     parameter: "test-regional-parameter",
 *     parameterVersionId: "test-regional-parameter-version",
 *     location: "us-central1",
 * });
 * ```
 */
export function getRegionalParameterVersionRender(args: GetRegionalParameterVersionRenderArgs, opts?: pulumi.InvokeOptions): Promise<GetRegionalParameterVersionRenderResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:parametermanager/getRegionalParameterVersionRender:getRegionalParameterVersionRender", {
        "location": args.location,
        "parameter": args.parameter,
        "parameterVersionId": args.parameterVersionId,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getRegionalParameterVersionRender.
 */
export interface GetRegionalParameterVersionRenderArgs {
    /**
     * Location of Parameter Manager regional Parameter resource.
     * It must be provided when the `parameter` field provided consists of only the name of the regional parameter.
     */
    location?: string;
    /**
     * The Parameter for obtaining the Regional Parameter Version.
     * This can be either the reference of the parameter as in `projects/{{project}}/locations/{{location}}/parameters/{{parameter_id}}` or only the name of the parameter as in `{{parameter_id}}`.
     */
    parameter: string;
    /**
     * The version of the regional parameter to get.
     */
    parameterVersionId: string;
    /**
     * The project for retrieving the Regional Parameter Version. If it's not
     * specified, the provider project will be used.
     */
    project?: string;
}

/**
 * A collection of values returned by getRegionalParameterVersionRender.
 */
export interface GetRegionalParameterVersionRenderResult {
    /**
     * The current state of the Regional Parameter Version.
     */
    readonly disabled: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly location: string;
    /**
     * The resource name of the RegionalParameterVersion. Format:
     * `projects/{{project}}/locations/{{location}}/parameters/{{parameter_id}}/versions/{{parameter_version_id}}`
     */
    readonly name: string;
    readonly parameter: string;
    /**
     * The Parameter data.
     */
    readonly parameterData: string;
    readonly parameterVersionId: string;
    readonly project: string;
    /**
     * The Rendered Parameter Data specifies that if you use `__REF__()` to reference a secret and the format is JSON or YAML, the placeholder `__REF__()` will be replaced with the actual secret value. However, if the format is UNFORMATTED, it will stay the same as the original `parameterData`.
     */
    readonly renderedParameterData: string;
}
/**
 * Get the value and metadata from a Parameter Manager Regional Parameter version with rendered payload data. For this datasource to work as expected, the principal of the parameter must be provided with the [Secret Manager Secret Accessor](https://cloud.google.com/secret-manager/docs/access-control#secretmanager.secretAccessor) role. For more information see the [official documentation](https://cloud.google.com/secret-manager/parameter-manager/docs/overview)  and [API](https://cloud.google.com/secret-manager/parameter-manager/docs/reference/rest/v1/projects.locations.parameters.versions/render).
 *
 * > **Warning:** To use this data source, we must grant the `Secret Manager Secret Accessor` role to the principal of the parameter. Please note that it can take up to 7 minutes for the role to take effect. Hence, we might need to wait approximately 7 minutes after granting  `Secret Manager Secret Accessor` role to the principal of the parameter. For more information see the [access change propagation documentation](https://cloud.google.com/iam/docs/access-change-propagation).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const basic = gcp.parametermanager.getRegionalParameterVersionRender({
 *     parameter: "test-regional-parameter",
 *     parameterVersionId: "test-regional-parameter-version",
 *     location: "us-central1",
 * });
 * ```
 */
export function getRegionalParameterVersionRenderOutput(args: GetRegionalParameterVersionRenderOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRegionalParameterVersionRenderResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("gcp:parametermanager/getRegionalParameterVersionRender:getRegionalParameterVersionRender", {
        "location": args.location,
        "parameter": args.parameter,
        "parameterVersionId": args.parameterVersionId,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getRegionalParameterVersionRender.
 */
export interface GetRegionalParameterVersionRenderOutputArgs {
    /**
     * Location of Parameter Manager regional Parameter resource.
     * It must be provided when the `parameter` field provided consists of only the name of the regional parameter.
     */
    location?: pulumi.Input<string>;
    /**
     * The Parameter for obtaining the Regional Parameter Version.
     * This can be either the reference of the parameter as in `projects/{{project}}/locations/{{location}}/parameters/{{parameter_id}}` or only the name of the parameter as in `{{parameter_id}}`.
     */
    parameter: pulumi.Input<string>;
    /**
     * The version of the regional parameter to get.
     */
    parameterVersionId: pulumi.Input<string>;
    /**
     * The project for retrieving the Regional Parameter Version. If it's not
     * specified, the provider project will be used.
     */
    project?: pulumi.Input<string>;
}
