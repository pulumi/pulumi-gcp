// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const parameters = gcp.parametermanager.getParameters({});
 * ```
 */
export function getParameters(args?: GetParametersArgs, opts?: pulumi.InvokeOptions): Promise<GetParametersResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:parametermanager/getParameters:getParameters", {
        "filter": args.filter,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getParameters.
 */
export interface GetParametersArgs {
    /**
     * Filter string, adhering to the rules in List-operation filtering. List only parameters matching the filter. If filter is empty, all parameters are listed.
     */
    filter?: string;
    /**
     * The ID of the project.
     */
    project?: string;
}

/**
 * A collection of values returned by getParameters.
 */
export interface GetParametersResult {
    readonly filter?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of parameters matching the filter. Structure is defined below.
     */
    readonly parameters: outputs.parametermanager.GetParametersParameter[];
    /**
     * The ID of the project in which the resource belongs.
     */
    readonly project: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const parameters = gcp.parametermanager.getParameters({});
 * ```
 */
export function getParametersOutput(args?: GetParametersOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetParametersResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("gcp:parametermanager/getParameters:getParameters", {
        "filter": args.filter,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getParameters.
 */
export interface GetParametersOutputArgs {
    /**
     * Filter string, adhering to the rules in List-operation filtering. List only parameters matching the filter. If filter is empty, all parameters are listed.
     */
    filter?: pulumi.Input<string>;
    /**
     * The ID of the project.
     */
    project?: pulumi.Input<string>;
}
