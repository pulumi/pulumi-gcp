// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetJobArgs, GetJobResult, GetJobOutputArgs } from "./getJob";
export const getJob: typeof import("./getJob").getJob = null as any;
export const getJobOutput: typeof import("./getJob").getJobOutput = null as any;
utilities.lazyLoad(exports, ["getJob","getJobOutput"], () => require("./getJob"));

export { GetJobIamPolicyArgs, GetJobIamPolicyResult, GetJobIamPolicyOutputArgs } from "./getJobIamPolicy";
export const getJobIamPolicy: typeof import("./getJobIamPolicy").getJobIamPolicy = null as any;
export const getJobIamPolicyOutput: typeof import("./getJobIamPolicy").getJobIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getJobIamPolicy","getJobIamPolicyOutput"], () => require("./getJobIamPolicy"));

export { GetServiceArgs, GetServiceResult, GetServiceOutputArgs } from "./getService";
export const getService: typeof import("./getService").getService = null as any;
export const getServiceOutput: typeof import("./getService").getServiceOutput = null as any;
utilities.lazyLoad(exports, ["getService","getServiceOutput"], () => require("./getService"));

export { GetServiceIamPolicyArgs, GetServiceIamPolicyResult, GetServiceIamPolicyOutputArgs } from "./getServiceIamPolicy";
export const getServiceIamPolicy: typeof import("./getServiceIamPolicy").getServiceIamPolicy = null as any;
export const getServiceIamPolicyOutput: typeof import("./getServiceIamPolicy").getServiceIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getServiceIamPolicy","getServiceIamPolicyOutput"], () => require("./getServiceIamPolicy"));

export { GetWorkerPoolArgs, GetWorkerPoolResult, GetWorkerPoolOutputArgs } from "./getWorkerPool";
export const getWorkerPool: typeof import("./getWorkerPool").getWorkerPool = null as any;
export const getWorkerPoolOutput: typeof import("./getWorkerPool").getWorkerPoolOutput = null as any;
utilities.lazyLoad(exports, ["getWorkerPool","getWorkerPoolOutput"], () => require("./getWorkerPool"));

export { GetWorkerPoolIamPolicyArgs, GetWorkerPoolIamPolicyResult, GetWorkerPoolIamPolicyOutputArgs } from "./getWorkerPoolIamPolicy";
export const getWorkerPoolIamPolicy: typeof import("./getWorkerPoolIamPolicy").getWorkerPoolIamPolicy = null as any;
export const getWorkerPoolIamPolicyOutput: typeof import("./getWorkerPoolIamPolicy").getWorkerPoolIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getWorkerPoolIamPolicy","getWorkerPoolIamPolicyOutput"], () => require("./getWorkerPoolIamPolicy"));

export { JobArgs, JobState } from "./job";
export type Job = import("./job").Job;
export const Job: typeof import("./job").Job = null as any;
utilities.lazyLoad(exports, ["Job"], () => require("./job"));

export { JobIamBindingArgs, JobIamBindingState } from "./jobIamBinding";
export type JobIamBinding = import("./jobIamBinding").JobIamBinding;
export const JobIamBinding: typeof import("./jobIamBinding").JobIamBinding = null as any;
utilities.lazyLoad(exports, ["JobIamBinding"], () => require("./jobIamBinding"));

export { JobIamMemberArgs, JobIamMemberState } from "./jobIamMember";
export type JobIamMember = import("./jobIamMember").JobIamMember;
export const JobIamMember: typeof import("./jobIamMember").JobIamMember = null as any;
utilities.lazyLoad(exports, ["JobIamMember"], () => require("./jobIamMember"));

export { JobIamPolicyArgs, JobIamPolicyState } from "./jobIamPolicy";
export type JobIamPolicy = import("./jobIamPolicy").JobIamPolicy;
export const JobIamPolicy: typeof import("./jobIamPolicy").JobIamPolicy = null as any;
utilities.lazyLoad(exports, ["JobIamPolicy"], () => require("./jobIamPolicy"));

export { ServiceArgs, ServiceState } from "./service";
export type Service = import("./service").Service;
export const Service: typeof import("./service").Service = null as any;
utilities.lazyLoad(exports, ["Service"], () => require("./service"));

export { ServiceIamBindingArgs, ServiceIamBindingState } from "./serviceIamBinding";
export type ServiceIamBinding = import("./serviceIamBinding").ServiceIamBinding;
export const ServiceIamBinding: typeof import("./serviceIamBinding").ServiceIamBinding = null as any;
utilities.lazyLoad(exports, ["ServiceIamBinding"], () => require("./serviceIamBinding"));

export { ServiceIamMemberArgs, ServiceIamMemberState } from "./serviceIamMember";
export type ServiceIamMember = import("./serviceIamMember").ServiceIamMember;
export const ServiceIamMember: typeof import("./serviceIamMember").ServiceIamMember = null as any;
utilities.lazyLoad(exports, ["ServiceIamMember"], () => require("./serviceIamMember"));

export { ServiceIamPolicyArgs, ServiceIamPolicyState } from "./serviceIamPolicy";
export type ServiceIamPolicy = import("./serviceIamPolicy").ServiceIamPolicy;
export const ServiceIamPolicy: typeof import("./serviceIamPolicy").ServiceIamPolicy = null as any;
utilities.lazyLoad(exports, ["ServiceIamPolicy"], () => require("./serviceIamPolicy"));

export { WorkerPoolArgs, WorkerPoolState } from "./workerPool";
export type WorkerPool = import("./workerPool").WorkerPool;
export const WorkerPool: typeof import("./workerPool").WorkerPool = null as any;
utilities.lazyLoad(exports, ["WorkerPool"], () => require("./workerPool"));

export { WorkerPoolIamBindingArgs, WorkerPoolIamBindingState } from "./workerPoolIamBinding";
export type WorkerPoolIamBinding = import("./workerPoolIamBinding").WorkerPoolIamBinding;
export const WorkerPoolIamBinding: typeof import("./workerPoolIamBinding").WorkerPoolIamBinding = null as any;
utilities.lazyLoad(exports, ["WorkerPoolIamBinding"], () => require("./workerPoolIamBinding"));

export { WorkerPoolIamMemberArgs, WorkerPoolIamMemberState } from "./workerPoolIamMember";
export type WorkerPoolIamMember = import("./workerPoolIamMember").WorkerPoolIamMember;
export const WorkerPoolIamMember: typeof import("./workerPoolIamMember").WorkerPoolIamMember = null as any;
utilities.lazyLoad(exports, ["WorkerPoolIamMember"], () => require("./workerPoolIamMember"));

export { WorkerPoolIamPolicyArgs, WorkerPoolIamPolicyState } from "./workerPoolIamPolicy";
export type WorkerPoolIamPolicy = import("./workerPoolIamPolicy").WorkerPoolIamPolicy;
export const WorkerPoolIamPolicy: typeof import("./workerPoolIamPolicy").WorkerPoolIamPolicy = null as any;
utilities.lazyLoad(exports, ["WorkerPoolIamPolicy"], () => require("./workerPoolIamPolicy"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "gcp:cloudrunv2/job:Job":
                return new Job(name, <any>undefined, { urn })
            case "gcp:cloudrunv2/jobIamBinding:JobIamBinding":
                return new JobIamBinding(name, <any>undefined, { urn })
            case "gcp:cloudrunv2/jobIamMember:JobIamMember":
                return new JobIamMember(name, <any>undefined, { urn })
            case "gcp:cloudrunv2/jobIamPolicy:JobIamPolicy":
                return new JobIamPolicy(name, <any>undefined, { urn })
            case "gcp:cloudrunv2/service:Service":
                return new Service(name, <any>undefined, { urn })
            case "gcp:cloudrunv2/serviceIamBinding:ServiceIamBinding":
                return new ServiceIamBinding(name, <any>undefined, { urn })
            case "gcp:cloudrunv2/serviceIamMember:ServiceIamMember":
                return new ServiceIamMember(name, <any>undefined, { urn })
            case "gcp:cloudrunv2/serviceIamPolicy:ServiceIamPolicy":
                return new ServiceIamPolicy(name, <any>undefined, { urn })
            case "gcp:cloudrunv2/workerPool:WorkerPool":
                return new WorkerPool(name, <any>undefined, { urn })
            case "gcp:cloudrunv2/workerPoolIamBinding:WorkerPoolIamBinding":
                return new WorkerPoolIamBinding(name, <any>undefined, { urn })
            case "gcp:cloudrunv2/workerPoolIamMember:WorkerPoolIamMember":
                return new WorkerPoolIamMember(name, <any>undefined, { urn })
            case "gcp:cloudrunv2/workerPoolIamPolicy:WorkerPoolIamPolicy":
                return new WorkerPoolIamPolicy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "cloudrunv2/job", _module)
pulumi.runtime.registerResourceModule("gcp", "cloudrunv2/jobIamBinding", _module)
pulumi.runtime.registerResourceModule("gcp", "cloudrunv2/jobIamMember", _module)
pulumi.runtime.registerResourceModule("gcp", "cloudrunv2/jobIamPolicy", _module)
pulumi.runtime.registerResourceModule("gcp", "cloudrunv2/service", _module)
pulumi.runtime.registerResourceModule("gcp", "cloudrunv2/serviceIamBinding", _module)
pulumi.runtime.registerResourceModule("gcp", "cloudrunv2/serviceIamMember", _module)
pulumi.runtime.registerResourceModule("gcp", "cloudrunv2/serviceIamPolicy", _module)
pulumi.runtime.registerResourceModule("gcp", "cloudrunv2/workerPool", _module)
pulumi.runtime.registerResourceModule("gcp", "cloudrunv2/workerPoolIamBinding", _module)
pulumi.runtime.registerResourceModule("gcp", "cloudrunv2/workerPoolIamMember", _module)
pulumi.runtime.registerResourceModule("gcp", "cloudrunv2/workerPoolIamPolicy", _module)
