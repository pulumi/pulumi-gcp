"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
/**
 * Manages a single key/value pair on metadata common to all instances for
 * a project in GCE. Using `google_compute_project_metadata_item` lets you
 * manage a single key/value setting in Terraform rather than the entire
 * project metadata map.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const defaultProjectMetadataItem = new gcp.compute.ProjectMetadataItem("default", {
 *     key: "my_metadata",
 *     value: "my_value",
 * });
 * ```
 */
class ProjectMetadataItem extends pulumi.CustomResource {
    /**
     * Get an existing ProjectMetadataItem resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state, opts) {
        return new ProjectMetadataItem(name, state, Object.assign({}, opts, { id: id }));
    }
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["key"] = state ? state.key : undefined;
            inputs["project"] = state ? state.project : undefined;
            inputs["value"] = state ? state.value : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.key === undefined) {
                throw new Error("Missing required property 'key'");
            }
            if (!args || args.value === undefined) {
                throw new Error("Missing required property 'value'");
            }
            inputs["key"] = args ? args.key : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["value"] = args ? args.value : undefined;
        }
        super("gcp:compute/projectMetadataItem:ProjectMetadataItem", name, inputs, opts);
    }
}
exports.ProjectMetadataItem = ProjectMetadataItem;
//# sourceMappingURL=projectMetadataItem.js.map