"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
/**
 * Represents an InterconnectAttachment (VLAN attachment) resource. For more
 * information, see Creating VLAN Attachments.
 *
 *
 *
 * ## Example Usage - Interconnect Attachment Basic
 *
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const foobar = new gcp.compute.Router("foobar", {
 *     network: google_compute_network_foobar.name,
 * });
 * const onPrem = new gcp.compute.InterconnectAttachment("on_prem", {
 *     interconnect: "my-interconnect-id",
 *     router: foobar.selfLink,
 * });
 * ```
 */
class InterconnectAttachment extends pulumi.CustomResource {
    /**
     * Get an existing InterconnectAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state, opts) {
        return new InterconnectAttachment(name, state, Object.assign({}, opts, { id: id }));
    }
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["candidateSubnets"] = state ? state.candidateSubnets : undefined;
            inputs["cloudRouterIpAddress"] = state ? state.cloudRouterIpAddress : undefined;
            inputs["creationTimestamp"] = state ? state.creationTimestamp : undefined;
            inputs["customerRouterIpAddress"] = state ? state.customerRouterIpAddress : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["edgeAvailabilityDomain"] = state ? state.edgeAvailabilityDomain : undefined;
            inputs["googleReferenceId"] = state ? state.googleReferenceId : undefined;
            inputs["interconnect"] = state ? state.interconnect : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["pairingKey"] = state ? state.pairingKey : undefined;
            inputs["partnerAsn"] = state ? state.partnerAsn : undefined;
            inputs["privateInterconnectInfo"] = state ? state.privateInterconnectInfo : undefined;
            inputs["project"] = state ? state.project : undefined;
            inputs["region"] = state ? state.region : undefined;
            inputs["router"] = state ? state.router : undefined;
            inputs["selfLink"] = state ? state.selfLink : undefined;
            inputs["state"] = state ? state.state : undefined;
            inputs["type"] = state ? state.type : undefined;
            inputs["vlanTag8021q"] = state ? state.vlanTag8021q : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.router === undefined) {
                throw new Error("Missing required property 'router'");
            }
            inputs["candidateSubnets"] = args ? args.candidateSubnets : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["edgeAvailabilityDomain"] = args ? args.edgeAvailabilityDomain : undefined;
            inputs["interconnect"] = args ? args.interconnect : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["region"] = args ? args.region : undefined;
            inputs["router"] = args ? args.router : undefined;
            inputs["type"] = args ? args.type : undefined;
            inputs["vlanTag8021q"] = args ? args.vlanTag8021q : undefined;
            inputs["cloudRouterIpAddress"] = undefined /*out*/;
            inputs["creationTimestamp"] = undefined /*out*/;
            inputs["customerRouterIpAddress"] = undefined /*out*/;
            inputs["googleReferenceId"] = undefined /*out*/;
            inputs["pairingKey"] = undefined /*out*/;
            inputs["partnerAsn"] = undefined /*out*/;
            inputs["privateInterconnectInfo"] = undefined /*out*/;
            inputs["selfLink"] = undefined /*out*/;
            inputs["state"] = undefined /*out*/;
        }
        super("gcp:compute/interconnectAttachment:InterconnectAttachment", name, inputs, opts);
    }
}
exports.InterconnectAttachment = InterconnectAttachment;
//# sourceMappingURL=interconnectAttachment.js.map