"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
/**
 * Manages a network within GCE. For more information see
 * [the official documentation](https://cloud.google.com/compute/docs/vpc)
 * and
 * [API](https://cloud.google.com/compute/docs/reference/latest/networks).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const defaultNetwork = new gcp.compute.Network("default", {
 *     autoCreateSubnetworks: true,
 * });
 * ```
 */
class Network extends pulumi.CustomResource {
    /**
     * Get an existing Network resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state, opts) {
        return new Network(name, state, Object.assign({}, opts, { id: id }));
    }
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["autoCreateSubnetworks"] = state ? state.autoCreateSubnetworks : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["gatewayIpv4"] = state ? state.gatewayIpv4 : undefined;
            inputs["ipv4Range"] = state ? state.ipv4Range : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["project"] = state ? state.project : undefined;
            inputs["routingMode"] = state ? state.routingMode : undefined;
            inputs["selfLink"] = state ? state.selfLink : undefined;
        }
        else {
            const args = argsOrState;
            inputs["autoCreateSubnetworks"] = args ? args.autoCreateSubnetworks : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["ipv4Range"] = args ? args.ipv4Range : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["routingMode"] = args ? args.routingMode : undefined;
            inputs["gatewayIpv4"] = undefined /*out*/;
            inputs["selfLink"] = undefined /*out*/;
        }
        super("gcp:compute/network:Network", name, inputs, opts);
    }
}
exports.Network = Network;
//# sourceMappingURL=network.js.map