"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
/**
 * A Lien represents an encumbrance on the actions that can be performed on a resource.
 *
 *
 *
 * ## Example Usage - Resource Manager Lien
 *
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const project = new gcp.organizations.Project("project", {
 *     projectId: "staging-project",
 * });
 * const lien = new gcp.resourcemanager.Lien("lien", {
 *     origin: "machine-readable-explanation",
 *     parent: project.number.apply(number => `projects/${number}`),
 *     reason: "This project is an important environment",
 *     restrictions: ["resourcemanager.projects.delete"],
 * });
 * ```
 */
class Lien extends pulumi.CustomResource {
    /**
     * Get an existing Lien resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    static get(name, id, state, opts) {
        return new Lien(name, state, Object.assign({}, opts, { id: id }));
    }
    constructor(name, argsOrState, opts) {
        let inputs = {};
        if (opts && opts.id) {
            const state = argsOrState;
            inputs["createTime"] = state ? state.createTime : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["origin"] = state ? state.origin : undefined;
            inputs["parent"] = state ? state.parent : undefined;
            inputs["reason"] = state ? state.reason : undefined;
            inputs["restrictions"] = state ? state.restrictions : undefined;
        }
        else {
            const args = argsOrState;
            if (!args || args.origin === undefined) {
                throw new Error("Missing required property 'origin'");
            }
            if (!args || args.parent === undefined) {
                throw new Error("Missing required property 'parent'");
            }
            if (!args || args.reason === undefined) {
                throw new Error("Missing required property 'reason'");
            }
            if (!args || args.restrictions === undefined) {
                throw new Error("Missing required property 'restrictions'");
            }
            inputs["origin"] = args ? args.origin : undefined;
            inputs["parent"] = args ? args.parent : undefined;
            inputs["reason"] = args ? args.reason : undefined;
            inputs["restrictions"] = args ? args.restrictions : undefined;
            inputs["createTime"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
        }
        super("gcp:resourcemanager/lien:Lien", name, inputs, opts);
    }
}
exports.Lien = Lien;
//# sourceMappingURL=lien.js.map