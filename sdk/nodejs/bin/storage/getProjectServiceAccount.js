"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
/**
 * Get the email address of a project's unique Google Cloud Storage service account.
 *
 * Each Google Cloud project has a unique service account for use with Google Cloud Storage. Only this
 * special service account can be used to set up `google_storage_notification` resources.
 *
 * For more information see
 * [the API reference](https://cloud.google.com/storage/docs/json_api/v1/projects/serviceAccount).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const gcsAccount = pulumi.output(gcp.storage.getProjectServiceAccount({}));
 * const binding = new gcp.pubsub.TopicIAMBinding("binding", {
 *     members: [gcsAccount.apply(gcsAccount => `serviceAccount:${gcsAccount.emailAddress}`)],
 *     role: "roles/pubsub.publisher",
 *     topic: google_pubsub_topic_topic.name,
 * });
 * ```
 */
function getProjectServiceAccount(args, opts) {
    args = args || {};
    return pulumi.runtime.invoke("gcp:storage/getProjectServiceAccount:getProjectServiceAccount", {
        "project": args.project,
        "userProject": args.userProject,
    }, opts);
}
exports.getProjectServiceAccount = getProjectServiceAccount;
//# sourceMappingURL=getProjectServiceAccount.js.map