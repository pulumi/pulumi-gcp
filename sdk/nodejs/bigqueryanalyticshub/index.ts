// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { DataExchangeArgs, DataExchangeState } from "./dataExchange";
export type DataExchange = import("./dataExchange").DataExchange;
export const DataExchange: typeof import("./dataExchange").DataExchange = null as any;
utilities.lazyLoad(exports, ["DataExchange"], () => require("./dataExchange"));

export { DataExchangeIamBindingArgs, DataExchangeIamBindingState } from "./dataExchangeIamBinding";
export type DataExchangeIamBinding = import("./dataExchangeIamBinding").DataExchangeIamBinding;
export const DataExchangeIamBinding: typeof import("./dataExchangeIamBinding").DataExchangeIamBinding = null as any;
utilities.lazyLoad(exports, ["DataExchangeIamBinding"], () => require("./dataExchangeIamBinding"));

export { DataExchangeIamMemberArgs, DataExchangeIamMemberState } from "./dataExchangeIamMember";
export type DataExchangeIamMember = import("./dataExchangeIamMember").DataExchangeIamMember;
export const DataExchangeIamMember: typeof import("./dataExchangeIamMember").DataExchangeIamMember = null as any;
utilities.lazyLoad(exports, ["DataExchangeIamMember"], () => require("./dataExchangeIamMember"));

export { DataExchangeIamPolicyArgs, DataExchangeIamPolicyState } from "./dataExchangeIamPolicy";
export type DataExchangeIamPolicy = import("./dataExchangeIamPolicy").DataExchangeIamPolicy;
export const DataExchangeIamPolicy: typeof import("./dataExchangeIamPolicy").DataExchangeIamPolicy = null as any;
utilities.lazyLoad(exports, ["DataExchangeIamPolicy"], () => require("./dataExchangeIamPolicy"));

export { ListingArgs, ListingState } from "./listing";
export type Listing = import("./listing").Listing;
export const Listing: typeof import("./listing").Listing = null as any;
utilities.lazyLoad(exports, ["Listing"], () => require("./listing"));

export { ListingIamBindingArgs, ListingIamBindingState } from "./listingIamBinding";
export type ListingIamBinding = import("./listingIamBinding").ListingIamBinding;
export const ListingIamBinding: typeof import("./listingIamBinding").ListingIamBinding = null as any;
utilities.lazyLoad(exports, ["ListingIamBinding"], () => require("./listingIamBinding"));

export { ListingIamMemberArgs, ListingIamMemberState } from "./listingIamMember";
export type ListingIamMember = import("./listingIamMember").ListingIamMember;
export const ListingIamMember: typeof import("./listingIamMember").ListingIamMember = null as any;
utilities.lazyLoad(exports, ["ListingIamMember"], () => require("./listingIamMember"));

export { ListingIamPolicyArgs, ListingIamPolicyState } from "./listingIamPolicy";
export type ListingIamPolicy = import("./listingIamPolicy").ListingIamPolicy;
export const ListingIamPolicy: typeof import("./listingIamPolicy").ListingIamPolicy = null as any;
utilities.lazyLoad(exports, ["ListingIamPolicy"], () => require("./listingIamPolicy"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "gcp:bigqueryanalyticshub/dataExchange:DataExchange":
                return new DataExchange(name, <any>undefined, { urn })
            case "gcp:bigqueryanalyticshub/dataExchangeIamBinding:DataExchangeIamBinding":
                return new DataExchangeIamBinding(name, <any>undefined, { urn })
            case "gcp:bigqueryanalyticshub/dataExchangeIamMember:DataExchangeIamMember":
                return new DataExchangeIamMember(name, <any>undefined, { urn })
            case "gcp:bigqueryanalyticshub/dataExchangeIamPolicy:DataExchangeIamPolicy":
                return new DataExchangeIamPolicy(name, <any>undefined, { urn })
            case "gcp:bigqueryanalyticshub/listing:Listing":
                return new Listing(name, <any>undefined, { urn })
            case "gcp:bigqueryanalyticshub/listingIamBinding:ListingIamBinding":
                return new ListingIamBinding(name, <any>undefined, { urn })
            case "gcp:bigqueryanalyticshub/listingIamMember:ListingIamMember":
                return new ListingIamMember(name, <any>undefined, { urn })
            case "gcp:bigqueryanalyticshub/listingIamPolicy:ListingIamPolicy":
                return new ListingIamPolicy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "bigqueryanalyticshub/dataExchange", _module)
pulumi.runtime.registerResourceModule("gcp", "bigqueryanalyticshub/dataExchangeIamBinding", _module)
pulumi.runtime.registerResourceModule("gcp", "bigqueryanalyticshub/dataExchangeIamMember", _module)
pulumi.runtime.registerResourceModule("gcp", "bigqueryanalyticshub/dataExchangeIamPolicy", _module)
pulumi.runtime.registerResourceModule("gcp", "bigqueryanalyticshub/listing", _module)
pulumi.runtime.registerResourceModule("gcp", "bigqueryanalyticshub/listingIamBinding", _module)
pulumi.runtime.registerResourceModule("gcp", "bigqueryanalyticshub/listingIamMember", _module)
pulumi.runtime.registerResourceModule("gcp", "bigqueryanalyticshub/listingIamPolicy", _module)
