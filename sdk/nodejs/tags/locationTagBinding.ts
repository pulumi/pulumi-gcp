// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## subcategory: "Tags"
 *
 * page_title: "Google: gcp.tags.LocationTagBinding"
 * description: |-
 *   A LocationTagBinding represents a connection between a TagValue and a Regional cloud resources.
 * ---
 *
 * # google\_tags\_location\_tag\_binding
 *
 * A TagBinding represents a connection between a TagValue and a Regional cloud resource (currently project, folder, or organization). Once a TagBinding is created, the TagValue is applied to all the descendants of the cloud resource.
 *
 * To get more information about TagBinding, see:
 *
 * * [API documentation](https://cloud.google.com/resource-manager/reference/rest/v3/tagBindings)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/resource-manager/docs/tags/tags-creating-and-managing)
 *
 * ## Example Usage
 * ### Location Tag Binding Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const project = new gcp.organizations.Project("project", {
 *     orgId: "123456789",
 *     projectId: "project_id",
 * });
 * const key = new gcp.tags.TagKey("key", {
 *     description: "For keyname resources.",
 *     parent: "organizations/123456789",
 *     shortName: "keyname",
 * });
 * const value = new gcp.tags.TagValue("value", {
 *     description: "For valuename resources.",
 *     parent: pulumi.interpolate`tagKeys/${key.name}`,
 *     shortName: "valuename",
 * });
 * const binding = new gcp.tags.LocationTagBinding("binding", {
 *     location: "us-central1",
 *     parent: pulumi.interpolate`//run.googleapis.com/projects/${project.number}/locations/${google_cloud_run_service["default"].location}/services/${google_cloud_run_service["default"].name}`,
 *     tagValue: pulumi.interpolate`tagValues/${value.name}`,
 * });
 * ```
 *
 * ## Import
 *
 * TagBinding can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:tags/locationTagBinding:LocationTagBinding default {{location}}/{{name}}
 * ```
 */
export class LocationTagBinding extends pulumi.CustomResource {
    /**
     * Get an existing LocationTagBinding resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LocationTagBindingState, opts?: pulumi.CustomResourceOptions): LocationTagBinding {
        return new LocationTagBinding(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:tags/locationTagBinding:LocationTagBinding';

    /**
     * Returns true if the given object is an instance of LocationTagBinding.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LocationTagBinding {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LocationTagBinding.__pulumiType;
    }

    /**
     * Location of the resource.
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * The generated id for the TagBinding. This is a string of the form: `tagBindings/{parent}/{tag-value-name}`
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The full resource name of the resource the TagValue is bound to. E.g. //cloudresourcemanager.googleapis.com/projects/123
     */
    public readonly parent!: pulumi.Output<string>;
    /**
     * The TagValue of the TagBinding. Must be of the form tagValues/456.
     */
    public readonly tagValue!: pulumi.Output<string>;

    /**
     * Create a LocationTagBinding resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LocationTagBindingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LocationTagBindingArgs | LocationTagBindingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LocationTagBindingState | undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["parent"] = state ? state.parent : undefined;
            resourceInputs["tagValue"] = state ? state.tagValue : undefined;
        } else {
            const args = argsOrState as LocationTagBindingArgs | undefined;
            if ((!args || args.parent === undefined) && !opts.urn) {
                throw new Error("Missing required property 'parent'");
            }
            if ((!args || args.tagValue === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tagValue'");
            }
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["parent"] = args ? args.parent : undefined;
            resourceInputs["tagValue"] = args ? args.tagValue : undefined;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LocationTagBinding.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LocationTagBinding resources.
 */
export interface LocationTagBindingState {
    /**
     * Location of the resource.
     */
    location?: pulumi.Input<string>;
    /**
     * The generated id for the TagBinding. This is a string of the form: `tagBindings/{parent}/{tag-value-name}`
     */
    name?: pulumi.Input<string>;
    /**
     * The full resource name of the resource the TagValue is bound to. E.g. //cloudresourcemanager.googleapis.com/projects/123
     */
    parent?: pulumi.Input<string>;
    /**
     * The TagValue of the TagBinding. Must be of the form tagValues/456.
     */
    tagValue?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LocationTagBinding resource.
 */
export interface LocationTagBindingArgs {
    /**
     * Location of the resource.
     */
    location?: pulumi.Input<string>;
    /**
     * The full resource name of the resource the TagValue is bound to. E.g. //cloudresourcemanager.googleapis.com/projects/123
     */
    parent: pulumi.Input<string>;
    /**
     * The TagValue of the TagBinding. Must be of the form tagValues/456.
     */
    tagValue: pulumi.Input<string>;
}
