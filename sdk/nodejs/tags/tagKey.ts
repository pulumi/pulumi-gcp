// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * A TagKey, used to group a set of TagValues.
 *
 * To get more information about TagKey, see:
 *
 * * [API documentation](https://cloud.google.com/resource-manager/reference/rest/v3/tagKeys)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/resource-manager/docs/tags/tags-creating-and-managing)
 *
 * ## Example Usage
 * ### Tag Key Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const key = new gcp.tags.TagKey("key", {
 *     description: "For keyname resources.",
 *     parent: "organizations/123456789",
 *     shortName: "keyname",
 * });
 * ```
 *
 * ## Import
 *
 * TagKey can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:tags/tagKey:TagKey default tagKeys/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:tags/tagKey:TagKey default {{name}}
 * ```
 */
export class TagKey extends pulumi.CustomResource {
    /**
     * Get an existing TagKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TagKeyState, opts?: pulumi.CustomResourceOptions): TagKey {
        return new TagKey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:tags/tagKey:TagKey';

    /**
     * Returns true if the given object is an instance of TagKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TagKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TagKey.__pulumiType;
    }

    /**
     * Output only. Creation time. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
     * fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * User-assigned description of the TagKey. Must not exceed 256 characters.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The generated numeric id for the TagKey.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Output only. Namespaced name of the TagKey.
     */
    public /*out*/ readonly namespacedName!: pulumi.Output<string>;
    /**
     * Input only. The resource name of the new TagKey's parent. Must be of the form organizations/{org_id}.
     */
    public readonly parent!: pulumi.Output<string>;
    /**
     * Input only. The user friendly name for a TagKey. The short name should be unique for TagKeys within the same tag namespace.
     * The short name must be 1-63 characters, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between.
     */
    public readonly shortName!: pulumi.Output<string>;
    /**
     * Output only. Update time. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional
     * digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a TagKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TagKeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TagKeyArgs | TagKeyState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TagKeyState | undefined;
            inputs["createTime"] = state ? state.createTime : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["namespacedName"] = state ? state.namespacedName : undefined;
            inputs["parent"] = state ? state.parent : undefined;
            inputs["shortName"] = state ? state.shortName : undefined;
            inputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as TagKeyArgs | undefined;
            if ((!args || args.parent === undefined) && !opts.urn) {
                throw new Error("Missing required property 'parent'");
            }
            if ((!args || args.shortName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'shortName'");
            }
            inputs["description"] = args ? args.description : undefined;
            inputs["parent"] = args ? args.parent : undefined;
            inputs["shortName"] = args ? args.shortName : undefined;
            inputs["createTime"] = undefined /*out*/;
            inputs["name"] = undefined /*out*/;
            inputs["namespacedName"] = undefined /*out*/;
            inputs["updateTime"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(TagKey.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TagKey resources.
 */
export interface TagKeyState {
    /**
     * Output only. Creation time. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
     * fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
     */
    createTime?: pulumi.Input<string>;
    /**
     * User-assigned description of the TagKey. Must not exceed 256 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * The generated numeric id for the TagKey.
     */
    name?: pulumi.Input<string>;
    /**
     * Output only. Namespaced name of the TagKey.
     */
    namespacedName?: pulumi.Input<string>;
    /**
     * Input only. The resource name of the new TagKey's parent. Must be of the form organizations/{org_id}.
     */
    parent?: pulumi.Input<string>;
    /**
     * Input only. The user friendly name for a TagKey. The short name should be unique for TagKeys within the same tag namespace.
     * The short name must be 1-63 characters, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between.
     */
    shortName?: pulumi.Input<string>;
    /**
     * Output only. Update time. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional
     * digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TagKey resource.
 */
export interface TagKeyArgs {
    /**
     * User-assigned description of the TagKey. Must not exceed 256 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Input only. The resource name of the new TagKey's parent. Must be of the form organizations/{org_id}.
     */
    parent: pulumi.Input<string>;
    /**
     * Input only. The user friendly name for a TagKey. The short name should be unique for TagKeys within the same tag namespace.
     * The short name must be 1-63 characters, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between.
     */
    shortName: pulumi.Input<string>;
}
