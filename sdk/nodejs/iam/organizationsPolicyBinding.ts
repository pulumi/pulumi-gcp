// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ### Iam Organizations Policy Binding
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * import * as time from "@pulumiverse/time";
 *
 * const pabPolicy = new gcp.iam.PrincipalAccessBoundaryPolicy("pab_policy", {
 *     organization: "123456789",
 *     location: "global",
 *     displayName: "binding for all principals in the Organization",
 *     principalAccessBoundaryPolicyId: "my-pab-policy",
 * });
 * const wait60Seconds = new time.index.Sleep("wait_60_seconds", {createDuration: "60s"}, {
 *     dependsOn: [pabPolicy],
 * });
 * const binding_for_all_org_principals = new gcp.iam.OrganizationsPolicyBinding("binding-for-all-org-principals", {
 *     organization: "123456789",
 *     location: "global",
 *     displayName: "binding for all principals in the Organization",
 *     policyKind: "PRINCIPAL_ACCESS_BOUNDARY",
 *     policyBindingId: "binding-for-all-org-principals",
 *     policy: pulumi.interpolate`organizations/123456789/locations/global/principalAccessBoundaryPolicies/${pabPolicy.principalAccessBoundaryPolicyId}`,
 *     target: {
 *         principalSet: "//cloudresourcemanager.googleapis.com/organizations/123456789",
 *     },
 * }, {
 *     dependsOn: [wait60Seconds],
 * });
 * ```
 *
 * ## Import
 *
 * OrganizationsPolicyBinding can be imported using any of these accepted formats:
 *
 * * `organizations/{{organization}}/locations/{{location}}/policyBindings/{{policy_binding_id}}`
 *
 * * `{{organization}}/{{location}}/{{policy_binding_id}}`
 *
 * When using the `pulumi import` command, OrganizationsPolicyBinding can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:iam/organizationsPolicyBinding:OrganizationsPolicyBinding default organizations/{{organization}}/locations/{{location}}/policyBindings/{{policy_binding_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:iam/organizationsPolicyBinding:OrganizationsPolicyBinding default {{organization}}/{{location}}/{{policy_binding_id}}
 * ```
 */
export class OrganizationsPolicyBinding extends pulumi.CustomResource {
    /**
     * Get an existing OrganizationsPolicyBinding resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OrganizationsPolicyBindingState, opts?: pulumi.CustomResourceOptions): OrganizationsPolicyBinding {
        return new OrganizationsPolicyBinding(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:iam/organizationsPolicyBinding:OrganizationsPolicyBinding';

    /**
     * Returns true if the given object is an instance of OrganizationsPolicyBinding.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OrganizationsPolicyBinding {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OrganizationsPolicyBinding.__pulumiType;
    }

    /**
     * Optional. User defined annotations. See https://google.aip.dev/148#annotations for more details such as format and size limitations
     *
     * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
     * Please refer to the field `effectiveAnnotations` for all of the annotations present on the resource.
     */
    declare public readonly annotations: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Represents a textual expression in the Common Expression Language
     * (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of
     * CEL are documented at https://github.com/google/cel-spec.
     * Example (Comparison):
     * title: \"Summary size limit\"
     * description: \"Determines if a summary is less than 100 chars\"
     * expression: \"document.summary.size() < 100\"
     * Example
     * (Equality):
     * title: \"Requestor is owner\"
     * description: \"Determines if requestor is the document owner\"
     * expression: \"document.owner == request.auth.claims.email\"  Example
     * (Logic):
     * title: \"Public documents\"
     * description: \"Determine whether the document should be publicly visible\"
     * expression: \"document.type != 'private' && document.type != 'internal'\"
     * Example (Data Manipulation):
     * title: \"Notification string\"
     * description: \"Create a notification string with a timestamp.\"
     * expression: \"'New message received at ' + string(document.create_time)\"
     * The exact variables and functions that may be referenced within an expression are
     * determined by the service that evaluates it. See the service documentation for
     * additional information.
     * Structure is documented below.
     */
    declare public readonly condition: pulumi.Output<outputs.iam.OrganizationsPolicyBindingCondition | undefined>;
    /**
     * Output only. The time when the policy binding was created.
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * Optional. The description of the policy binding. Must be less than or equal to 63 characters.
     */
    declare public readonly displayName: pulumi.Output<string | undefined>;
    declare public /*out*/ readonly effectiveAnnotations: pulumi.Output<{[key: string]: string}>;
    /**
     * Optional. The etag for the policy binding. If this is provided on update, it must match the server's etag.
     */
    declare public /*out*/ readonly etag: pulumi.Output<string>;
    /**
     * The location of the Policy Binding
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * The name of the policy binding in the format `{binding_parent/locations/{location}/policyBindings/{policy_binding_id}`
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    /**
     * The parent organization of the Policy Binding.
     */
    declare public readonly organization: pulumi.Output<string>;
    /**
     * Required. Immutable. The resource name of the policy to be bound. The binding parent and policy must belong to the same Organization (or Project).
     */
    declare public readonly policy: pulumi.Output<string>;
    /**
     * The Policy Binding ID.
     */
    declare public readonly policyBindingId: pulumi.Output<string>;
    /**
     * Immutable. The kind of the policy to attach in this binding. This
     * field must be one of the following:  - Left empty (will be automatically set
     * to the policy kind) - The input policy kind   Possible values:  POLICY_KIND_UNSPECIFIED PRINCIPAL_ACCESS_BOUNDARY ACCESS
     */
    declare public readonly policyKind: pulumi.Output<string | undefined>;
    /**
     * Output only. The globally unique ID of the policy to be bound.
     */
    declare public /*out*/ readonly policyUid: pulumi.Output<string>;
    /**
     * Target is the full resource name of the resource to which the policy will be bound. Immutable once set.
     * Structure is documented below.
     */
    declare public readonly target: pulumi.Output<outputs.iam.OrganizationsPolicyBindingTarget>;
    /**
     * Output only. The globally unique ID of the policy binding. Assigned when the policy binding is created.
     */
    declare public /*out*/ readonly uid: pulumi.Output<string>;
    /**
     * Output only. The time when the policy binding was most recently updated.
     */
    declare public /*out*/ readonly updateTime: pulumi.Output<string>;

    /**
     * Create a OrganizationsPolicyBinding resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OrganizationsPolicyBindingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OrganizationsPolicyBindingArgs | OrganizationsPolicyBindingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OrganizationsPolicyBindingState | undefined;
            resourceInputs["annotations"] = state?.annotations;
            resourceInputs["condition"] = state?.condition;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["effectiveAnnotations"] = state?.effectiveAnnotations;
            resourceInputs["etag"] = state?.etag;
            resourceInputs["location"] = state?.location;
            resourceInputs["name"] = state?.name;
            resourceInputs["organization"] = state?.organization;
            resourceInputs["policy"] = state?.policy;
            resourceInputs["policyBindingId"] = state?.policyBindingId;
            resourceInputs["policyKind"] = state?.policyKind;
            resourceInputs["policyUid"] = state?.policyUid;
            resourceInputs["target"] = state?.target;
            resourceInputs["uid"] = state?.uid;
            resourceInputs["updateTime"] = state?.updateTime;
        } else {
            const args = argsOrState as OrganizationsPolicyBindingArgs | undefined;
            if (args?.location === undefined && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if (args?.organization === undefined && !opts.urn) {
                throw new Error("Missing required property 'organization'");
            }
            if (args?.policy === undefined && !opts.urn) {
                throw new Error("Missing required property 'policy'");
            }
            if (args?.policyBindingId === undefined && !opts.urn) {
                throw new Error("Missing required property 'policyBindingId'");
            }
            if (args?.target === undefined && !opts.urn) {
                throw new Error("Missing required property 'target'");
            }
            resourceInputs["annotations"] = args?.annotations;
            resourceInputs["condition"] = args?.condition;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["location"] = args?.location;
            resourceInputs["organization"] = args?.organization;
            resourceInputs["policy"] = args?.policy;
            resourceInputs["policyBindingId"] = args?.policyBindingId;
            resourceInputs["policyKind"] = args?.policyKind;
            resourceInputs["target"] = args?.target;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["effectiveAnnotations"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["policyUid"] = undefined /*out*/;
            resourceInputs["uid"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OrganizationsPolicyBinding.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OrganizationsPolicyBinding resources.
 */
export interface OrganizationsPolicyBindingState {
    /**
     * Optional. User defined annotations. See https://google.aip.dev/148#annotations for more details such as format and size limitations
     *
     * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
     * Please refer to the field `effectiveAnnotations` for all of the annotations present on the resource.
     */
    annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Represents a textual expression in the Common Expression Language
     * (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of
     * CEL are documented at https://github.com/google/cel-spec.
     * Example (Comparison):
     * title: \"Summary size limit\"
     * description: \"Determines if a summary is less than 100 chars\"
     * expression: \"document.summary.size() < 100\"
     * Example
     * (Equality):
     * title: \"Requestor is owner\"
     * description: \"Determines if requestor is the document owner\"
     * expression: \"document.owner == request.auth.claims.email\"  Example
     * (Logic):
     * title: \"Public documents\"
     * description: \"Determine whether the document should be publicly visible\"
     * expression: \"document.type != 'private' && document.type != 'internal'\"
     * Example (Data Manipulation):
     * title: \"Notification string\"
     * description: \"Create a notification string with a timestamp.\"
     * expression: \"'New message received at ' + string(document.create_time)\"
     * The exact variables and functions that may be referenced within an expression are
     * determined by the service that evaluates it. See the service documentation for
     * additional information.
     * Structure is documented below.
     */
    condition?: pulumi.Input<inputs.iam.OrganizationsPolicyBindingCondition>;
    /**
     * Output only. The time when the policy binding was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Optional. The description of the policy binding. Must be less than or equal to 63 characters.
     */
    displayName?: pulumi.Input<string>;
    effectiveAnnotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Optional. The etag for the policy binding. If this is provided on update, it must match the server's etag.
     */
    etag?: pulumi.Input<string>;
    /**
     * The location of the Policy Binding
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the policy binding in the format `{binding_parent/locations/{location}/policyBindings/{policy_binding_id}`
     */
    name?: pulumi.Input<string>;
    /**
     * The parent organization of the Policy Binding.
     */
    organization?: pulumi.Input<string>;
    /**
     * Required. Immutable. The resource name of the policy to be bound. The binding parent and policy must belong to the same Organization (or Project).
     */
    policy?: pulumi.Input<string>;
    /**
     * The Policy Binding ID.
     */
    policyBindingId?: pulumi.Input<string>;
    /**
     * Immutable. The kind of the policy to attach in this binding. This
     * field must be one of the following:  - Left empty (will be automatically set
     * to the policy kind) - The input policy kind   Possible values:  POLICY_KIND_UNSPECIFIED PRINCIPAL_ACCESS_BOUNDARY ACCESS
     */
    policyKind?: pulumi.Input<string>;
    /**
     * Output only. The globally unique ID of the policy to be bound.
     */
    policyUid?: pulumi.Input<string>;
    /**
     * Target is the full resource name of the resource to which the policy will be bound. Immutable once set.
     * Structure is documented below.
     */
    target?: pulumi.Input<inputs.iam.OrganizationsPolicyBindingTarget>;
    /**
     * Output only. The globally unique ID of the policy binding. Assigned when the policy binding is created.
     */
    uid?: pulumi.Input<string>;
    /**
     * Output only. The time when the policy binding was most recently updated.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OrganizationsPolicyBinding resource.
 */
export interface OrganizationsPolicyBindingArgs {
    /**
     * Optional. User defined annotations. See https://google.aip.dev/148#annotations for more details such as format and size limitations
     *
     * **Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.
     * Please refer to the field `effectiveAnnotations` for all of the annotations present on the resource.
     */
    annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Represents a textual expression in the Common Expression Language
     * (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of
     * CEL are documented at https://github.com/google/cel-spec.
     * Example (Comparison):
     * title: \"Summary size limit\"
     * description: \"Determines if a summary is less than 100 chars\"
     * expression: \"document.summary.size() < 100\"
     * Example
     * (Equality):
     * title: \"Requestor is owner\"
     * description: \"Determines if requestor is the document owner\"
     * expression: \"document.owner == request.auth.claims.email\"  Example
     * (Logic):
     * title: \"Public documents\"
     * description: \"Determine whether the document should be publicly visible\"
     * expression: \"document.type != 'private' && document.type != 'internal'\"
     * Example (Data Manipulation):
     * title: \"Notification string\"
     * description: \"Create a notification string with a timestamp.\"
     * expression: \"'New message received at ' + string(document.create_time)\"
     * The exact variables and functions that may be referenced within an expression are
     * determined by the service that evaluates it. See the service documentation for
     * additional information.
     * Structure is documented below.
     */
    condition?: pulumi.Input<inputs.iam.OrganizationsPolicyBindingCondition>;
    /**
     * Optional. The description of the policy binding. Must be less than or equal to 63 characters.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The location of the Policy Binding
     */
    location: pulumi.Input<string>;
    /**
     * The parent organization of the Policy Binding.
     */
    organization: pulumi.Input<string>;
    /**
     * Required. Immutable. The resource name of the policy to be bound. The binding parent and policy must belong to the same Organization (or Project).
     */
    policy: pulumi.Input<string>;
    /**
     * The Policy Binding ID.
     */
    policyBindingId: pulumi.Input<string>;
    /**
     * Immutable. The kind of the policy to attach in this binding. This
     * field must be one of the following:  - Left empty (will be automatically set
     * to the policy kind) - The input policy kind   Possible values:  POLICY_KIND_UNSPECIFIED PRINCIPAL_ACCESS_BOUNDARY ACCESS
     */
    policyKind?: pulumi.Input<string>;
    /**
     * Target is the full resource name of the resource to which the policy will be bound. Immutable once set.
     * Structure is documented below.
     */
    target: pulumi.Input<inputs.iam.OrganizationsPolicyBindingTarget>;
}
