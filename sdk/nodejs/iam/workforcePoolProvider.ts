// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * A configuration for an external identity provider.
 *
 * To get more information about WorkforcePoolProvider, see:
 *
 * * [API documentation](https://cloud.google.com/iam/docs/reference/rest/v1/locations.workforcePools.providers)
 * * How-to Guides
 *     * [Configure a provider within the workforce pool](https://cloud.google.com/iam/docs/manage-workforce-identity-pools-providers#configure_a_provider_within_the_workforce_pool)
 *
 * > **Note:** Ask your Google Cloud account team to request access to workforce identity federation for your
 * billing/quota project. The account team notifies you when the project is granted access.
 *
 * > **Warning:** All arguments including the following potentially sensitive
 * values will be stored in the raw state as plain text: `oidc.client_secret.value.plain_text`.
 * Read more about sensitive data in state.
 *
 * ## Example Usage
 *
 * ## Import
 *
 * WorkforcePoolProvider can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:iam/workforcePoolProvider:WorkforcePoolProvider default locations/{{location}}/workforcePools/{{workforce_pool_id}}/providers/{{provider_id}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:iam/workforcePoolProvider:WorkforcePoolProvider default {{location}}/{{workforce_pool_id}}/{{provider_id}}
 * ```
 */
export class WorkforcePoolProvider extends pulumi.CustomResource {
    /**
     * Get an existing WorkforcePoolProvider resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkforcePoolProviderState, opts?: pulumi.CustomResourceOptions): WorkforcePoolProvider {
        return new WorkforcePoolProvider(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:iam/workforcePoolProvider:WorkforcePoolProvider';

    /**
     * Returns true if the given object is an instance of WorkforcePoolProvider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WorkforcePoolProvider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkforcePoolProvider.__pulumiType;
    }

    /**
     * A [Common Expression Language](https://opensource.google/projects/cel) expression, in
     * plain text, to restrict what otherwise valid authentication credentials issued by the
     * provider should not be accepted.
     * The expression must output a boolean representing whether to allow the federation.
     * The following keywords may be referenced in the expressions:
     */
    public readonly attributeCondition!: pulumi.Output<string | undefined>;
    /**
     * Maps attributes from the authentication credentials issued by an external identity provider
     * to Google Cloud attributes, such as `subject` and `segment`.
     * Each key must be a string specifying the Google Cloud IAM attribute to map to.
     * The following keys are supported:
     * * `google.subject`: The principal IAM is authenticating. You can reference this value in IAM bindings.
     * This is also the subject that appears in Cloud Logging logs. This is a required field and
     * the mapped subject cannot exceed 127 bytes.
     * * `google.groups`: Groups the authenticating user belongs to. You can grant groups access to
     * resources using an IAM `principalSet` binding; access applies to all members of the group.
     * * `google.display_name`: The name of the authenticated user. This is an optional field and
     * the mapped display name cannot exceed 100 bytes. If not set, `google.subject` will be displayed instead.
     * This attribute cannot be referenced in IAM bindings.
     * * `google.profile_photo`: The URL that specifies the authenticated user's thumbnail photo.
     * This is an optional field. When set, the image will be visible as the user's profile picture.
     * If not set, a generic user icon will be displayed instead.
     * This attribute cannot be referenced in IAM bindings.
     * You can also provide custom attributes by specifying `attribute.{custom_attribute}`, where {custom_attribute}
     * is the name of the custom attribute to be mapped. You can define a maximum of 50 custom attributes.
     * The maximum length of a mapped attribute key is 100 characters, and the key may only contain the characters [a-z0-9_].
     * You can reference these attributes in IAM policies to define fine-grained access for a workforce pool
     * to Google Cloud resources. For example:
     * * `google.subject`:
     * `principal://iam.googleapis.com/locations/{location}/workforcePools/{pool}/subject/{value}`
     * * `google.groups`:
     * `principalSet://iam.googleapis.com/locations/{location}/workforcePools/{pool}/group/{value}`
     * * `attribute.{custom_attribute}`:
     * `principalSet://iam.googleapis.com/locations/{location}/workforcePools/{pool}/attribute.{custom_attribute}/{value}`
     * Each value must be a [Common Expression Language](https://opensource.google/projects/cel)
     * function that maps an identity provider credential to the normalized attribute specified
     * by the corresponding map key.
     * You can use the `assertion` keyword in the expression to access a JSON representation of
     * the authentication credential issued by the provider.
     * The maximum length of an attribute mapping expression is 2048 characters. When evaluated,
     * the total size of all mapped attributes must not exceed 8KB.
     * For OIDC providers, you must supply a custom mapping that includes the `google.subject` attribute.
     * For example, the following maps the sub claim of the incoming credential to the `subject` attribute
     * on a Google token:
     * An object containing a list of `"key": value` pairs.
     * Example: `{ "name": "wrench", "mass": "1.3kg", "count": "3" }`.
     */
    public readonly attributeMapping!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A user-specified description of the provider. Cannot exceed 256 characters.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Whether the provider is disabled. You cannot use a disabled provider to exchange tokens.
     * However, existing tokens still grant access.
     */
    public readonly disabled!: pulumi.Output<boolean | undefined>;
    /**
     * A user-specified display name for the provider. Cannot exceed 32 characters.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * The location for the resource.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Output only. The resource name of the provider.
     * Format: `locations/{location}/workforcePools/{workforcePoolId}/providers/{providerId}`
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Represents an OpenId Connect 1.0 identity provider.
     * Structure is documented below.
     */
    public readonly oidc!: pulumi.Output<outputs.iam.WorkforcePoolProviderOidc | undefined>;
    /**
     * The ID for the provider, which becomes the final component of the resource name.
     * This value must be 4-32 characters, and may contain the characters [a-z0-9-].
     * The prefix `gcp-` is reserved for use by Google, and may not be specified.
     *
     *
     * - - -
     */
    public readonly providerId!: pulumi.Output<string>;
    /**
     * Represents a SAML identity provider.
     * Structure is documented below.
     */
    public readonly saml!: pulumi.Output<outputs.iam.WorkforcePoolProviderSaml | undefined>;
    /**
     * The current state of the provider.
     * * STATE_UNSPECIFIED: State unspecified.
     * * ACTIVE: The provider is active and may be used to validate authentication credentials.
     * * DELETED: The provider is soft-deleted. Soft-deleted providers are permanently
     * deleted after approximately 30 days. You can restore a soft-deleted provider using
     * [providers.undelete](https://cloud.google.com/iam/docs/reference/rest/v1/locations.workforcePools.providers/undelete#google.iam.admin.v1.WorkforcePools.UndeleteWorkforcePoolProvider).
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The ID to use for the pool, which becomes the final component of the resource name.
     * The IDs must be a globally unique string of 6 to 63 lowercase letters, digits, or hyphens.
     * It must start with a letter, and cannot have a trailing hyphen.
     * The prefix `gcp-` is reserved for use by Google, and may not be specified.
     */
    public readonly workforcePoolId!: pulumi.Output<string>;

    /**
     * Create a WorkforcePoolProvider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkforcePoolProviderArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkforcePoolProviderArgs | WorkforcePoolProviderState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WorkforcePoolProviderState | undefined;
            resourceInputs["attributeCondition"] = state ? state.attributeCondition : undefined;
            resourceInputs["attributeMapping"] = state ? state.attributeMapping : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["oidc"] = state ? state.oidc : undefined;
            resourceInputs["providerId"] = state ? state.providerId : undefined;
            resourceInputs["saml"] = state ? state.saml : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["workforcePoolId"] = state ? state.workforcePoolId : undefined;
        } else {
            const args = argsOrState as WorkforcePoolProviderArgs | undefined;
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.providerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'providerId'");
            }
            if ((!args || args.workforcePoolId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workforcePoolId'");
            }
            resourceInputs["attributeCondition"] = args ? args.attributeCondition : undefined;
            resourceInputs["attributeMapping"] = args ? args.attributeMapping : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["oidc"] = args ? args.oidc : undefined;
            resourceInputs["providerId"] = args ? args.providerId : undefined;
            resourceInputs["saml"] = args ? args.saml : undefined;
            resourceInputs["workforcePoolId"] = args ? args.workforcePoolId : undefined;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WorkforcePoolProvider.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WorkforcePoolProvider resources.
 */
export interface WorkforcePoolProviderState {
    /**
     * A [Common Expression Language](https://opensource.google/projects/cel) expression, in
     * plain text, to restrict what otherwise valid authentication credentials issued by the
     * provider should not be accepted.
     * The expression must output a boolean representing whether to allow the federation.
     * The following keywords may be referenced in the expressions:
     */
    attributeCondition?: pulumi.Input<string>;
    /**
     * Maps attributes from the authentication credentials issued by an external identity provider
     * to Google Cloud attributes, such as `subject` and `segment`.
     * Each key must be a string specifying the Google Cloud IAM attribute to map to.
     * The following keys are supported:
     * * `google.subject`: The principal IAM is authenticating. You can reference this value in IAM bindings.
     * This is also the subject that appears in Cloud Logging logs. This is a required field and
     * the mapped subject cannot exceed 127 bytes.
     * * `google.groups`: Groups the authenticating user belongs to. You can grant groups access to
     * resources using an IAM `principalSet` binding; access applies to all members of the group.
     * * `google.display_name`: The name of the authenticated user. This is an optional field and
     * the mapped display name cannot exceed 100 bytes. If not set, `google.subject` will be displayed instead.
     * This attribute cannot be referenced in IAM bindings.
     * * `google.profile_photo`: The URL that specifies the authenticated user's thumbnail photo.
     * This is an optional field. When set, the image will be visible as the user's profile picture.
     * If not set, a generic user icon will be displayed instead.
     * This attribute cannot be referenced in IAM bindings.
     * You can also provide custom attributes by specifying `attribute.{custom_attribute}`, where {custom_attribute}
     * is the name of the custom attribute to be mapped. You can define a maximum of 50 custom attributes.
     * The maximum length of a mapped attribute key is 100 characters, and the key may only contain the characters [a-z0-9_].
     * You can reference these attributes in IAM policies to define fine-grained access for a workforce pool
     * to Google Cloud resources. For example:
     * * `google.subject`:
     * `principal://iam.googleapis.com/locations/{location}/workforcePools/{pool}/subject/{value}`
     * * `google.groups`:
     * `principalSet://iam.googleapis.com/locations/{location}/workforcePools/{pool}/group/{value}`
     * * `attribute.{custom_attribute}`:
     * `principalSet://iam.googleapis.com/locations/{location}/workforcePools/{pool}/attribute.{custom_attribute}/{value}`
     * Each value must be a [Common Expression Language](https://opensource.google/projects/cel)
     * function that maps an identity provider credential to the normalized attribute specified
     * by the corresponding map key.
     * You can use the `assertion` keyword in the expression to access a JSON representation of
     * the authentication credential issued by the provider.
     * The maximum length of an attribute mapping expression is 2048 characters. When evaluated,
     * the total size of all mapped attributes must not exceed 8KB.
     * For OIDC providers, you must supply a custom mapping that includes the `google.subject` attribute.
     * For example, the following maps the sub claim of the incoming credential to the `subject` attribute
     * on a Google token:
     * An object containing a list of `"key": value` pairs.
     * Example: `{ "name": "wrench", "mass": "1.3kg", "count": "3" }`.
     */
    attributeMapping?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A user-specified description of the provider. Cannot exceed 256 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Whether the provider is disabled. You cannot use a disabled provider to exchange tokens.
     * However, existing tokens still grant access.
     */
    disabled?: pulumi.Input<boolean>;
    /**
     * A user-specified display name for the provider. Cannot exceed 32 characters.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The location for the resource.
     */
    location?: pulumi.Input<string>;
    /**
     * Output only. The resource name of the provider.
     * Format: `locations/{location}/workforcePools/{workforcePoolId}/providers/{providerId}`
     */
    name?: pulumi.Input<string>;
    /**
     * Represents an OpenId Connect 1.0 identity provider.
     * Structure is documented below.
     */
    oidc?: pulumi.Input<inputs.iam.WorkforcePoolProviderOidc>;
    /**
     * The ID for the provider, which becomes the final component of the resource name.
     * This value must be 4-32 characters, and may contain the characters [a-z0-9-].
     * The prefix `gcp-` is reserved for use by Google, and may not be specified.
     *
     *
     * - - -
     */
    providerId?: pulumi.Input<string>;
    /**
     * Represents a SAML identity provider.
     * Structure is documented below.
     */
    saml?: pulumi.Input<inputs.iam.WorkforcePoolProviderSaml>;
    /**
     * The current state of the provider.
     * * STATE_UNSPECIFIED: State unspecified.
     * * ACTIVE: The provider is active and may be used to validate authentication credentials.
     * * DELETED: The provider is soft-deleted. Soft-deleted providers are permanently
     * deleted after approximately 30 days. You can restore a soft-deleted provider using
     * [providers.undelete](https://cloud.google.com/iam/docs/reference/rest/v1/locations.workforcePools.providers/undelete#google.iam.admin.v1.WorkforcePools.UndeleteWorkforcePoolProvider).
     */
    state?: pulumi.Input<string>;
    /**
     * The ID to use for the pool, which becomes the final component of the resource name.
     * The IDs must be a globally unique string of 6 to 63 lowercase letters, digits, or hyphens.
     * It must start with a letter, and cannot have a trailing hyphen.
     * The prefix `gcp-` is reserved for use by Google, and may not be specified.
     */
    workforcePoolId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WorkforcePoolProvider resource.
 */
export interface WorkforcePoolProviderArgs {
    /**
     * A [Common Expression Language](https://opensource.google/projects/cel) expression, in
     * plain text, to restrict what otherwise valid authentication credentials issued by the
     * provider should not be accepted.
     * The expression must output a boolean representing whether to allow the federation.
     * The following keywords may be referenced in the expressions:
     */
    attributeCondition?: pulumi.Input<string>;
    /**
     * Maps attributes from the authentication credentials issued by an external identity provider
     * to Google Cloud attributes, such as `subject` and `segment`.
     * Each key must be a string specifying the Google Cloud IAM attribute to map to.
     * The following keys are supported:
     * * `google.subject`: The principal IAM is authenticating. You can reference this value in IAM bindings.
     * This is also the subject that appears in Cloud Logging logs. This is a required field and
     * the mapped subject cannot exceed 127 bytes.
     * * `google.groups`: Groups the authenticating user belongs to. You can grant groups access to
     * resources using an IAM `principalSet` binding; access applies to all members of the group.
     * * `google.display_name`: The name of the authenticated user. This is an optional field and
     * the mapped display name cannot exceed 100 bytes. If not set, `google.subject` will be displayed instead.
     * This attribute cannot be referenced in IAM bindings.
     * * `google.profile_photo`: The URL that specifies the authenticated user's thumbnail photo.
     * This is an optional field. When set, the image will be visible as the user's profile picture.
     * If not set, a generic user icon will be displayed instead.
     * This attribute cannot be referenced in IAM bindings.
     * You can also provide custom attributes by specifying `attribute.{custom_attribute}`, where {custom_attribute}
     * is the name of the custom attribute to be mapped. You can define a maximum of 50 custom attributes.
     * The maximum length of a mapped attribute key is 100 characters, and the key may only contain the characters [a-z0-9_].
     * You can reference these attributes in IAM policies to define fine-grained access for a workforce pool
     * to Google Cloud resources. For example:
     * * `google.subject`:
     * `principal://iam.googleapis.com/locations/{location}/workforcePools/{pool}/subject/{value}`
     * * `google.groups`:
     * `principalSet://iam.googleapis.com/locations/{location}/workforcePools/{pool}/group/{value}`
     * * `attribute.{custom_attribute}`:
     * `principalSet://iam.googleapis.com/locations/{location}/workforcePools/{pool}/attribute.{custom_attribute}/{value}`
     * Each value must be a [Common Expression Language](https://opensource.google/projects/cel)
     * function that maps an identity provider credential to the normalized attribute specified
     * by the corresponding map key.
     * You can use the `assertion` keyword in the expression to access a JSON representation of
     * the authentication credential issued by the provider.
     * The maximum length of an attribute mapping expression is 2048 characters. When evaluated,
     * the total size of all mapped attributes must not exceed 8KB.
     * For OIDC providers, you must supply a custom mapping that includes the `google.subject` attribute.
     * For example, the following maps the sub claim of the incoming credential to the `subject` attribute
     * on a Google token:
     * An object containing a list of `"key": value` pairs.
     * Example: `{ "name": "wrench", "mass": "1.3kg", "count": "3" }`.
     */
    attributeMapping?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A user-specified description of the provider. Cannot exceed 256 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Whether the provider is disabled. You cannot use a disabled provider to exchange tokens.
     * However, existing tokens still grant access.
     */
    disabled?: pulumi.Input<boolean>;
    /**
     * A user-specified display name for the provider. Cannot exceed 32 characters.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The location for the resource.
     */
    location: pulumi.Input<string>;
    /**
     * Represents an OpenId Connect 1.0 identity provider.
     * Structure is documented below.
     */
    oidc?: pulumi.Input<inputs.iam.WorkforcePoolProviderOidc>;
    /**
     * The ID for the provider, which becomes the final component of the resource name.
     * This value must be 4-32 characters, and may contain the characters [a-z0-9-].
     * The prefix `gcp-` is reserved for use by Google, and may not be specified.
     *
     *
     * - - -
     */
    providerId: pulumi.Input<string>;
    /**
     * Represents a SAML identity provider.
     * Structure is documented below.
     */
    saml?: pulumi.Input<inputs.iam.WorkforcePoolProviderSaml>;
    /**
     * The ID to use for the pool, which becomes the final component of the resource name.
     * The IDs must be a globally unique string of 6 to 63 lowercase letters, digits, or hyphens.
     * It must start with a letter, and cannot have a trailing hyphen.
     * The prefix `gcp-` is reserved for use by Google, and may not be specified.
     */
    workforcePoolId: pulumi.Input<string>;
}
