// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AutomationArgs, AutomationState } from "./automation";
export type Automation = import("./automation").Automation;
export const Automation: typeof import("./automation").Automation = null as any;
utilities.lazyLoad(exports, ["Automation"], () => require("./automation"));

export { CustomTargetTypeArgs, CustomTargetTypeState } from "./customTargetType";
export type CustomTargetType = import("./customTargetType").CustomTargetType;
export const CustomTargetType: typeof import("./customTargetType").CustomTargetType = null as any;
utilities.lazyLoad(exports, ["CustomTargetType"], () => require("./customTargetType"));

export { CustomTargetTypeIamBindingArgs, CustomTargetTypeIamBindingState } from "./customTargetTypeIamBinding";
export type CustomTargetTypeIamBinding = import("./customTargetTypeIamBinding").CustomTargetTypeIamBinding;
export const CustomTargetTypeIamBinding: typeof import("./customTargetTypeIamBinding").CustomTargetTypeIamBinding = null as any;
utilities.lazyLoad(exports, ["CustomTargetTypeIamBinding"], () => require("./customTargetTypeIamBinding"));

export { CustomTargetTypeIamMemberArgs, CustomTargetTypeIamMemberState } from "./customTargetTypeIamMember";
export type CustomTargetTypeIamMember = import("./customTargetTypeIamMember").CustomTargetTypeIamMember;
export const CustomTargetTypeIamMember: typeof import("./customTargetTypeIamMember").CustomTargetTypeIamMember = null as any;
utilities.lazyLoad(exports, ["CustomTargetTypeIamMember"], () => require("./customTargetTypeIamMember"));

export { CustomTargetTypeIamPolicyArgs, CustomTargetTypeIamPolicyState } from "./customTargetTypeIamPolicy";
export type CustomTargetTypeIamPolicy = import("./customTargetTypeIamPolicy").CustomTargetTypeIamPolicy;
export const CustomTargetTypeIamPolicy: typeof import("./customTargetTypeIamPolicy").CustomTargetTypeIamPolicy = null as any;
utilities.lazyLoad(exports, ["CustomTargetTypeIamPolicy"], () => require("./customTargetTypeIamPolicy"));

export { DeliveryPipelineArgs, DeliveryPipelineState } from "./deliveryPipeline";
export type DeliveryPipeline = import("./deliveryPipeline").DeliveryPipeline;
export const DeliveryPipeline: typeof import("./deliveryPipeline").DeliveryPipeline = null as any;
utilities.lazyLoad(exports, ["DeliveryPipeline"], () => require("./deliveryPipeline"));

export { DeliveryPipelineIamBindingArgs, DeliveryPipelineIamBindingState } from "./deliveryPipelineIamBinding";
export type DeliveryPipelineIamBinding = import("./deliveryPipelineIamBinding").DeliveryPipelineIamBinding;
export const DeliveryPipelineIamBinding: typeof import("./deliveryPipelineIamBinding").DeliveryPipelineIamBinding = null as any;
utilities.lazyLoad(exports, ["DeliveryPipelineIamBinding"], () => require("./deliveryPipelineIamBinding"));

export { DeliveryPipelineIamMemberArgs, DeliveryPipelineIamMemberState } from "./deliveryPipelineIamMember";
export type DeliveryPipelineIamMember = import("./deliveryPipelineIamMember").DeliveryPipelineIamMember;
export const DeliveryPipelineIamMember: typeof import("./deliveryPipelineIamMember").DeliveryPipelineIamMember = null as any;
utilities.lazyLoad(exports, ["DeliveryPipelineIamMember"], () => require("./deliveryPipelineIamMember"));

export { DeliveryPipelineIamPolicyArgs, DeliveryPipelineIamPolicyState } from "./deliveryPipelineIamPolicy";
export type DeliveryPipelineIamPolicy = import("./deliveryPipelineIamPolicy").DeliveryPipelineIamPolicy;
export const DeliveryPipelineIamPolicy: typeof import("./deliveryPipelineIamPolicy").DeliveryPipelineIamPolicy = null as any;
utilities.lazyLoad(exports, ["DeliveryPipelineIamPolicy"], () => require("./deliveryPipelineIamPolicy"));

export { GetCustomTargetTypeIamPolicyArgs, GetCustomTargetTypeIamPolicyResult, GetCustomTargetTypeIamPolicyOutputArgs } from "./getCustomTargetTypeIamPolicy";
export const getCustomTargetTypeIamPolicy: typeof import("./getCustomTargetTypeIamPolicy").getCustomTargetTypeIamPolicy = null as any;
export const getCustomTargetTypeIamPolicyOutput: typeof import("./getCustomTargetTypeIamPolicy").getCustomTargetTypeIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getCustomTargetTypeIamPolicy","getCustomTargetTypeIamPolicyOutput"], () => require("./getCustomTargetTypeIamPolicy"));

export { GetDeliveryPipelineIamPolicyArgs, GetDeliveryPipelineIamPolicyResult, GetDeliveryPipelineIamPolicyOutputArgs } from "./getDeliveryPipelineIamPolicy";
export const getDeliveryPipelineIamPolicy: typeof import("./getDeliveryPipelineIamPolicy").getDeliveryPipelineIamPolicy = null as any;
export const getDeliveryPipelineIamPolicyOutput: typeof import("./getDeliveryPipelineIamPolicy").getDeliveryPipelineIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getDeliveryPipelineIamPolicy","getDeliveryPipelineIamPolicyOutput"], () => require("./getDeliveryPipelineIamPolicy"));

export { GetTargetIamPolicyArgs, GetTargetIamPolicyResult, GetTargetIamPolicyOutputArgs } from "./getTargetIamPolicy";
export const getTargetIamPolicy: typeof import("./getTargetIamPolicy").getTargetIamPolicy = null as any;
export const getTargetIamPolicyOutput: typeof import("./getTargetIamPolicy").getTargetIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getTargetIamPolicy","getTargetIamPolicyOutput"], () => require("./getTargetIamPolicy"));

export { TargetArgs, TargetState } from "./target";
export type Target = import("./target").Target;
export const Target: typeof import("./target").Target = null as any;
utilities.lazyLoad(exports, ["Target"], () => require("./target"));

export { TargetIamBindingArgs, TargetIamBindingState } from "./targetIamBinding";
export type TargetIamBinding = import("./targetIamBinding").TargetIamBinding;
export const TargetIamBinding: typeof import("./targetIamBinding").TargetIamBinding = null as any;
utilities.lazyLoad(exports, ["TargetIamBinding"], () => require("./targetIamBinding"));

export { TargetIamMemberArgs, TargetIamMemberState } from "./targetIamMember";
export type TargetIamMember = import("./targetIamMember").TargetIamMember;
export const TargetIamMember: typeof import("./targetIamMember").TargetIamMember = null as any;
utilities.lazyLoad(exports, ["TargetIamMember"], () => require("./targetIamMember"));

export { TargetIamPolicyArgs, TargetIamPolicyState } from "./targetIamPolicy";
export type TargetIamPolicy = import("./targetIamPolicy").TargetIamPolicy;
export const TargetIamPolicy: typeof import("./targetIamPolicy").TargetIamPolicy = null as any;
utilities.lazyLoad(exports, ["TargetIamPolicy"], () => require("./targetIamPolicy"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "gcp:clouddeploy/automation:Automation":
                return new Automation(name, <any>undefined, { urn })
            case "gcp:clouddeploy/customTargetType:CustomTargetType":
                return new CustomTargetType(name, <any>undefined, { urn })
            case "gcp:clouddeploy/customTargetTypeIamBinding:CustomTargetTypeIamBinding":
                return new CustomTargetTypeIamBinding(name, <any>undefined, { urn })
            case "gcp:clouddeploy/customTargetTypeIamMember:CustomTargetTypeIamMember":
                return new CustomTargetTypeIamMember(name, <any>undefined, { urn })
            case "gcp:clouddeploy/customTargetTypeIamPolicy:CustomTargetTypeIamPolicy":
                return new CustomTargetTypeIamPolicy(name, <any>undefined, { urn })
            case "gcp:clouddeploy/deliveryPipeline:DeliveryPipeline":
                return new DeliveryPipeline(name, <any>undefined, { urn })
            case "gcp:clouddeploy/deliveryPipelineIamBinding:DeliveryPipelineIamBinding":
                return new DeliveryPipelineIamBinding(name, <any>undefined, { urn })
            case "gcp:clouddeploy/deliveryPipelineIamMember:DeliveryPipelineIamMember":
                return new DeliveryPipelineIamMember(name, <any>undefined, { urn })
            case "gcp:clouddeploy/deliveryPipelineIamPolicy:DeliveryPipelineIamPolicy":
                return new DeliveryPipelineIamPolicy(name, <any>undefined, { urn })
            case "gcp:clouddeploy/target:Target":
                return new Target(name, <any>undefined, { urn })
            case "gcp:clouddeploy/targetIamBinding:TargetIamBinding":
                return new TargetIamBinding(name, <any>undefined, { urn })
            case "gcp:clouddeploy/targetIamMember:TargetIamMember":
                return new TargetIamMember(name, <any>undefined, { urn })
            case "gcp:clouddeploy/targetIamPolicy:TargetIamPolicy":
                return new TargetIamPolicy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "clouddeploy/automation", _module)
pulumi.runtime.registerResourceModule("gcp", "clouddeploy/customTargetType", _module)
pulumi.runtime.registerResourceModule("gcp", "clouddeploy/customTargetTypeIamBinding", _module)
pulumi.runtime.registerResourceModule("gcp", "clouddeploy/customTargetTypeIamMember", _module)
pulumi.runtime.registerResourceModule("gcp", "clouddeploy/customTargetTypeIamPolicy", _module)
pulumi.runtime.registerResourceModule("gcp", "clouddeploy/deliveryPipeline", _module)
pulumi.runtime.registerResourceModule("gcp", "clouddeploy/deliveryPipelineIamBinding", _module)
pulumi.runtime.registerResourceModule("gcp", "clouddeploy/deliveryPipelineIamMember", _module)
pulumi.runtime.registerResourceModule("gcp", "clouddeploy/deliveryPipelineIamPolicy", _module)
pulumi.runtime.registerResourceModule("gcp", "clouddeploy/target", _module)
pulumi.runtime.registerResourceModule("gcp", "clouddeploy/targetIamBinding", _module)
pulumi.runtime.registerResourceModule("gcp", "clouddeploy/targetIamMember", _module)
pulumi.runtime.registerResourceModule("gcp", "clouddeploy/targetIamPolicy", _module)
