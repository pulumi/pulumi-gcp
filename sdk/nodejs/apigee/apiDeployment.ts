// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a deployment of an API proxy.
 *
 * To get more information about ApiDeployment, see:
 *
 * * [API documentation](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.environments.apis.revisions.deployments)
 * * How-to Guides
 *     * [QUICKSTART_TITLE](https://cloud.google.com/apigee/docs/api-platform/deploy/ui-deploy-overview)
 *
 * ## Example Usage
 *
 * ## Import
 *
 * ApiDeployment can be imported using any of these accepted formats:
 *
 * * `organizations/{{org_id}}/environments/{{environment}}/apis/{{proxy_id}}/revisions/{{revision}}/deployments`
 *
 * * `organizations/{{org_id}}/environments/{{environment}}/apis/{{proxy_id}}/revisions/{{revision}}`
 *
 * * `{{org_id}}/{{environment}}/{{proxy_id}}/{{revision}}/deployments`
 *
 * * `{{org_id}}/{{environment}}/{{proxy_id}}/{{revision}}`
 *
 * When using the `pulumi import` command, ApiDeployment can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:apigee/apiDeployment:ApiDeployment default organizations/{{org_id}}/environments/{{environment}}/apis/{{proxy_id}}/revisions/{{revision}}/deployments
 * ```
 *
 * ```sh
 * $ pulumi import gcp:apigee/apiDeployment:ApiDeployment default organizations/{{org_id}}/environments/{{environment}}/apis/{{proxy_id}}/revisions/{{revision}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:apigee/apiDeployment:ApiDeployment default {{org_id}}/{{environment}}/{{proxy_id}}/{{revision}}/deployments
 * ```
 *
 * ```sh
 * $ pulumi import gcp:apigee/apiDeployment:ApiDeployment default {{org_id}}/{{environment}}/{{proxy_id}}/{{revision}}
 * ```
 */
export class ApiDeployment extends pulumi.CustomResource {
    /**
     * Get an existing ApiDeployment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApiDeploymentState, opts?: pulumi.CustomResourceOptions): ApiDeployment {
        return new ApiDeployment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:apigee/apiDeployment:ApiDeployment';

    /**
     * Returns true if the given object is an instance of ApiDeployment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApiDeployment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApiDeployment.__pulumiType;
    }

    /**
     * The Apigee Environment associated with the Apigee API deployment.
     */
    declare public readonly environment: pulumi.Output<string>;
    /**
     * The Apigee Organization associated with the Apigee API deployment.
     */
    declare public readonly orgId: pulumi.Output<string>;
    /**
     * The Apigee API associated with the Apigee API deployment.
     */
    declare public readonly proxyId: pulumi.Output<string>;
    /**
     * The revision of the API proxy to be deployed.
     */
    declare public readonly revision: pulumi.Output<string>;

    /**
     * Create a ApiDeployment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApiDeploymentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApiDeploymentArgs | ApiDeploymentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApiDeploymentState | undefined;
            resourceInputs["environment"] = state?.environment;
            resourceInputs["orgId"] = state?.orgId;
            resourceInputs["proxyId"] = state?.proxyId;
            resourceInputs["revision"] = state?.revision;
        } else {
            const args = argsOrState as ApiDeploymentArgs | undefined;
            if (args?.environment === undefined && !opts.urn) {
                throw new Error("Missing required property 'environment'");
            }
            if (args?.orgId === undefined && !opts.urn) {
                throw new Error("Missing required property 'orgId'");
            }
            if (args?.proxyId === undefined && !opts.urn) {
                throw new Error("Missing required property 'proxyId'");
            }
            if (args?.revision === undefined && !opts.urn) {
                throw new Error("Missing required property 'revision'");
            }
            resourceInputs["environment"] = args?.environment;
            resourceInputs["orgId"] = args?.orgId;
            resourceInputs["proxyId"] = args?.proxyId;
            resourceInputs["revision"] = args?.revision;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApiDeployment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ApiDeployment resources.
 */
export interface ApiDeploymentState {
    /**
     * The Apigee Environment associated with the Apigee API deployment.
     */
    environment?: pulumi.Input<string>;
    /**
     * The Apigee Organization associated with the Apigee API deployment.
     */
    orgId?: pulumi.Input<string>;
    /**
     * The Apigee API associated with the Apigee API deployment.
     */
    proxyId?: pulumi.Input<string>;
    /**
     * The revision of the API proxy to be deployed.
     */
    revision?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ApiDeployment resource.
 */
export interface ApiDeploymentArgs {
    /**
     * The Apigee Environment associated with the Apigee API deployment.
     */
    environment: pulumi.Input<string>;
    /**
     * The Apigee Organization associated with the Apigee API deployment.
     */
    orgId: pulumi.Input<string>;
    /**
     * The Apigee API associated with the Apigee API deployment.
     */
    proxyId: pulumi.Input<string>;
    /**
     * The revision of the API proxy to be deployed.
     */
    revision: pulumi.Input<string>;
}
