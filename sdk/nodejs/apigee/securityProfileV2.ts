// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Security profile for risk assessment version 2 in Apigee.
 *
 * To get more information about SecurityProfileV2, see:
 *
 * * [API documentation](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.securityProfilesV2/create)
 * * How-to Guides
 *     * [Creating a security profile](https://cloud.google.com/apigee/docs/api-security/security-scores#security-profiles-v2)
 *
 * ## Example Usage
 *
 * ### Apigee Security Profile V2 Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const current = gcp.organizations.getClientConfig({});
 * const apigeeNetwork = new gcp.compute.Network("apigee_network", {name: "apigee-network"});
 * const apigeeRange = new gcp.compute.GlobalAddress("apigee_range", {
 *     name: "apigee-range",
 *     purpose: "VPC_PEERING",
 *     addressType: "INTERNAL",
 *     prefixLength: 16,
 *     network: apigeeNetwork.id,
 * });
 * const apigeeVpcConnection = new gcp.servicenetworking.Connection("apigee_vpc_connection", {
 *     network: apigeeNetwork.id,
 *     service: "servicenetworking.googleapis.com",
 *     reservedPeeringRanges: [apigeeRange.name],
 * });
 * const apigeeOrg = new gcp.apigee.Organization("apigee_org", {
 *     analyticsRegion: "us-central1",
 *     projectId: current.then(current => current.project),
 *     authorizedNetwork: apigeeNetwork.id,
 * }, {
 *     dependsOn: [apigeeVpcConnection],
 * });
 * const apigeeOrgSecurityAddonsConfig = new gcp.apigee.AddonsConfig("apigee_org_security_addons_config", {
 *     org: apigeeOrg.name,
 *     addonsConfig: {
 *         apiSecurityConfig: {
 *             enabled: true,
 *         },
 *     },
 * });
 * const securityProfileV2 = new gcp.apigee.SecurityProfileV2("security_profile_v2", {
 *     profileId: "my-profile",
 *     orgId: apigeeOrg.id,
 *     description: "terraform test description",
 *     profileAssessmentConfigs: [
 *         {
 *             assessment: "auth-policies-check",
 *             weight: "MAJOR",
 *         },
 *         {
 *             assessment: "mediation-policies-check",
 *             weight: "MODERATE",
 *         },
 *         {
 *             assessment: "threat-policies-check",
 *             weight: "MINOR",
 *         },
 *     ],
 * }, {
 *     dependsOn: [apigeeOrgSecurityAddonsConfig],
 * });
 * ```
 *
 * ## Import
 *
 * SecurityProfileV2 can be imported using any of these accepted formats:
 *
 * * `{{org_id}}/securityProfilesV2/{{profile_id}}`
 *
 * * `{{org_id}}/{{profile_id}}`
 *
 * When using the `pulumi import` command, SecurityProfileV2 can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:apigee/securityProfileV2:SecurityProfileV2 default {{org_id}}/securityProfilesV2/{{profile_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:apigee/securityProfileV2:SecurityProfileV2 default {{org_id}}/{{profile_id}}
 * ```
 */
export class SecurityProfileV2 extends pulumi.CustomResource {
    /**
     * Get an existing SecurityProfileV2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SecurityProfileV2State, opts?: pulumi.CustomResourceOptions): SecurityProfileV2 {
        return new SecurityProfileV2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:apigee/securityProfileV2:SecurityProfileV2';

    /**
     * Returns true if the given object is an instance of SecurityProfileV2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SecurityProfileV2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SecurityProfileV2.__pulumiType;
    }

    /**
     * The timestamp at which this profile was created.
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * Description of the security profile.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Name of the security profile v2 resource,
     * in the format `organizations/{{org_name}}/securityProfilesV2/{{profile_id}}`.
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    /**
     * The Apigee Organization associated with the Apigee Security Profile V2,
     * in the format `organizations/{{org_name}}`.
     */
    declare public readonly orgId: pulumi.Output<string>;
    /**
     * A map of the assessment name and the assessment config.
     * Structure is documented below.
     */
    declare public readonly profileAssessmentConfigs: pulumi.Output<outputs.apigee.SecurityProfileV2ProfileAssessmentConfig[]>;
    /**
     * Resource ID of the security profile.
     */
    declare public readonly profileId: pulumi.Output<string>;
    /**
     * The timestamp at which this profile was most recently updated.
     */
    declare public /*out*/ readonly updateTime: pulumi.Output<string>;

    /**
     * Create a SecurityProfileV2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SecurityProfileV2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SecurityProfileV2Args | SecurityProfileV2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SecurityProfileV2State | undefined;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["description"] = state?.description;
            resourceInputs["name"] = state?.name;
            resourceInputs["orgId"] = state?.orgId;
            resourceInputs["profileAssessmentConfigs"] = state?.profileAssessmentConfigs;
            resourceInputs["profileId"] = state?.profileId;
            resourceInputs["updateTime"] = state?.updateTime;
        } else {
            const args = argsOrState as SecurityProfileV2Args | undefined;
            if (args?.orgId === undefined && !opts.urn) {
                throw new Error("Missing required property 'orgId'");
            }
            if (args?.profileAssessmentConfigs === undefined && !opts.urn) {
                throw new Error("Missing required property 'profileAssessmentConfigs'");
            }
            if (args?.profileId === undefined && !opts.urn) {
                throw new Error("Missing required property 'profileId'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["orgId"] = args?.orgId;
            resourceInputs["profileAssessmentConfigs"] = args?.profileAssessmentConfigs;
            resourceInputs["profileId"] = args?.profileId;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SecurityProfileV2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SecurityProfileV2 resources.
 */
export interface SecurityProfileV2State {
    /**
     * The timestamp at which this profile was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Description of the security profile.
     */
    description?: pulumi.Input<string>;
    /**
     * Name of the security profile v2 resource,
     * in the format `organizations/{{org_name}}/securityProfilesV2/{{profile_id}}`.
     */
    name?: pulumi.Input<string>;
    /**
     * The Apigee Organization associated with the Apigee Security Profile V2,
     * in the format `organizations/{{org_name}}`.
     */
    orgId?: pulumi.Input<string>;
    /**
     * A map of the assessment name and the assessment config.
     * Structure is documented below.
     */
    profileAssessmentConfigs?: pulumi.Input<pulumi.Input<inputs.apigee.SecurityProfileV2ProfileAssessmentConfig>[]>;
    /**
     * Resource ID of the security profile.
     */
    profileId?: pulumi.Input<string>;
    /**
     * The timestamp at which this profile was most recently updated.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SecurityProfileV2 resource.
 */
export interface SecurityProfileV2Args {
    /**
     * Description of the security profile.
     */
    description?: pulumi.Input<string>;
    /**
     * The Apigee Organization associated with the Apigee Security Profile V2,
     * in the format `organizations/{{org_name}}`.
     */
    orgId: pulumi.Input<string>;
    /**
     * A map of the assessment name and the assessment config.
     * Structure is documented below.
     */
    profileAssessmentConfigs: pulumi.Input<pulumi.Input<inputs.apigee.SecurityProfileV2ProfileAssessmentConfig>[]>;
    /**
     * Resource ID of the security profile.
     */
    profileId: pulumi.Input<string>;
}
