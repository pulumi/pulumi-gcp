// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * An `Environment group` in Apigee.
 *
 * To get more information about Envgroup, see:
 *
 * * [API documentation](https://cloud.google.com/apigee/docs/reference/apis/apigee/rest/v1/organizations.envgroups/create)
 * * How-to Guides
 *     * [Creating an environment](https://cloud.google.com/apigee/docs/api-platform/get-started/create-environment)
 *
 * ## Example Usage
 *
 * ### Apigee Environment Group Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const current = gcp.organizations.getClientConfig({});
 * const apigeeNetwork = new gcp.compute.Network("apigee_network", {name: "apigee-network"});
 * const apigeeRange = new gcp.compute.GlobalAddress("apigee_range", {
 *     name: "apigee-range",
 *     purpose: "VPC_PEERING",
 *     addressType: "INTERNAL",
 *     prefixLength: 16,
 *     network: apigeeNetwork.id,
 * });
 * const apigeeVpcConnection = new gcp.servicenetworking.Connection("apigee_vpc_connection", {
 *     network: apigeeNetwork.id,
 *     service: "servicenetworking.googleapis.com",
 *     reservedPeeringRanges: [apigeeRange.name],
 * });
 * const apigeeOrg = new gcp.apigee.Organization("apigee_org", {
 *     analyticsRegion: "us-central1",
 *     projectId: current.then(current => current.project),
 *     authorizedNetwork: apigeeNetwork.id,
 * }, {
 *     dependsOn: [apigeeVpcConnection],
 * });
 * const envGrp = new gcp.apigee.EnvGroup("env_grp", {
 *     name: "my-envgroup",
 *     hostnames: ["abc.foo.com"],
 *     orgId: apigeeOrg.id,
 * });
 * ```
 *
 * ## Import
 *
 * Envgroup can be imported using any of these accepted formats:
 *
 * * `{{org_id}}/envgroups/{{name}}`
 *
 * * `{{org_id}}/{{name}}`
 *
 * When using the `pulumi import` command, Envgroup can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:apigee/envGroup:EnvGroup default {{org_id}}/envgroups/{{name}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:apigee/envGroup:EnvGroup default {{org_id}}/{{name}}
 * ```
 */
export class EnvGroup extends pulumi.CustomResource {
    /**
     * Get an existing EnvGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EnvGroupState, opts?: pulumi.CustomResourceOptions): EnvGroup {
        return new EnvGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:apigee/envGroup:EnvGroup';

    /**
     * Returns true if the given object is an instance of EnvGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EnvGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EnvGroup.__pulumiType;
    }

    /**
     * Hostnames of the environment group.
     */
    public readonly hostnames!: pulumi.Output<string[] | undefined>;
    /**
     * The resource ID of the environment group.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The Apigee Organization associated with the Apigee environment group,
     * in the format `organizations/{{org_name}}`.
     */
    public readonly orgId!: pulumi.Output<string>;

    /**
     * Create a EnvGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EnvGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EnvGroupArgs | EnvGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EnvGroupState | undefined;
            resourceInputs["hostnames"] = state ? state.hostnames : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["orgId"] = state ? state.orgId : undefined;
        } else {
            const args = argsOrState as EnvGroupArgs | undefined;
            if ((!args || args.orgId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'orgId'");
            }
            resourceInputs["hostnames"] = args ? args.hostnames : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["orgId"] = args ? args.orgId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EnvGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EnvGroup resources.
 */
export interface EnvGroupState {
    /**
     * Hostnames of the environment group.
     */
    hostnames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The resource ID of the environment group.
     */
    name?: pulumi.Input<string>;
    /**
     * The Apigee Organization associated with the Apigee environment group,
     * in the format `organizations/{{org_name}}`.
     */
    orgId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EnvGroup resource.
 */
export interface EnvGroupArgs {
    /**
     * Hostnames of the environment group.
     */
    hostnames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The resource ID of the environment group.
     */
    name?: pulumi.Input<string>;
    /**
     * The Apigee Organization associated with the Apigee environment group,
     * in the format `organizations/{{org_name}}`.
     */
    orgId: pulumi.Input<string>;
}
