// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides access to available platform versions in a location for a given project.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const uswest = gcp.container.getAttachedVersions({
 *     location: "us-west1",
 *     project: "my-project",
 * });
 * export const firstAvailableVersion = data.google_container_attached_versions.versions.valid_versions[0];
 * ```
 */
export function getAttachedVersions(args: GetAttachedVersionsArgs, opts?: pulumi.InvokeOptions): Promise<GetAttachedVersionsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:container/getAttachedVersions:getAttachedVersions", {
        "location": args.location,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getAttachedVersions.
 */
export interface GetAttachedVersionsArgs {
    /**
     * The location to list versions for.
     */
    location: string;
    /**
     * ID of the project to list available platform versions for. Should match the project the cluster will be deployed to.
     * Defaults to the project that the provider is authenticated with.
     */
    project: string;
}

/**
 * A collection of values returned by getAttachedVersions.
 */
export interface GetAttachedVersionsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly location: string;
    readonly project: string;
    /**
     * A list of versions available for use with this project and location.
     */
    readonly validVersions: string[];
}
/**
 * Provides access to available platform versions in a location for a given project.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const uswest = gcp.container.getAttachedVersions({
 *     location: "us-west1",
 *     project: "my-project",
 * });
 * export const firstAvailableVersion = data.google_container_attached_versions.versions.valid_versions[0];
 * ```
 */
export function getAttachedVersionsOutput(args: GetAttachedVersionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAttachedVersionsResult> {
    return pulumi.output(args).apply((a: any) => getAttachedVersions(a, opts))
}

/**
 * A collection of arguments for invoking getAttachedVersions.
 */
export interface GetAttachedVersionsOutputArgs {
    /**
     * The location to list versions for.
     */
    location: pulumi.Input<string>;
    /**
     * ID of the project to list available platform versions for. Should match the project the cluster will be deployed to.
     * Defaults to the project that the provider is authenticated with.
     */
    project: pulumi.Input<string>;
}
