// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides access to available Google Container Engine versions in a zone or region for a given project.
 * 
 * ```hcl
 * data "google_container_engine_versions" "central1b" {
 *   zone = "us-central1-b"
 * }
 * 
 * resource "google_container_cluster" "foo" {
 *   name               = "terraform-test-cluster"
 *   zone               = "us-central1-b"
 *   node_version       = "${data.google_container_engine_versions.central1b.latest_node_version}"
 *   initial_node_count = 1
 * 
 *   master_auth {
 *     username = "mr.yoda"
 *     password = "adoy.rm"
 *   }
 * }
 * ```
 */
export function getEngineVersions(args?: GetEngineVersionsArgs, opts?: pulumi.InvokeOptions): Promise<GetEngineVersionsResult> {
    args = args || {};
    return pulumi.runtime.invoke("gcp:container/getEngineVersions:getEngineVersions", {
        "project": args.project,
        "region": args.region,
        "zone": args.zone,
    }, opts);
}

/**
 * A collection of arguments for invoking getEngineVersions.
 */
export interface GetEngineVersionsArgs {
    /**
     * ID of the project to list available cluster versions for. Should match the project the cluster will be deployed to.
     * Defaults to the project that the provider is authenticated with.
     */
    readonly project?: string;
    /**
     * Region to list available cluster versions for. Should match the region the cluster will be deployed in.
     * For regional clusters, this value must be specified and cannot be inferred from provider-level region. One of zone,
     * region, or provider-level zone is required. This property is in beta, and should be used with the terraform-provider-google-beta provider.
     * See [Provider Versions](https://terraform.io/docs/providers/google/provider_versions.html) for more details on beta fields.
     */
    readonly region?: string;
    /**
     * Zone to list available cluster versions for. Should match the zone the cluster will be deployed in.
     * If not specified, the provider-level zone is used. One of zone or provider-level zone is required.
     */
    readonly zone?: string;
}

/**
 * A collection of values returned by getEngineVersions.
 */
export interface GetEngineVersionsResult {
    /**
     * Version of Kubernetes the service deploys by default.
     */
    readonly defaultClusterVersion: string;
    /**
     * The latest version available in the given zone for use with master instances.
     */
    readonly latestMasterVersion: string;
    /**
     * The latest version available in the given zone for use with node instances.
     */
    readonly latestNodeVersion: string;
    /**
     * A list of versions available in the given zone for use with master instances.
     */
    readonly validMasterVersions: string[];
    /**
     * A list of versions available in the given zone for use with node instances.
     */
    readonly validNodeVersions: string[];
    /**
     * id is the provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
