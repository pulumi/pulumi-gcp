// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides access to available Kubernetes versions in a location for a given project.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const central1b = gcp.container.getAwsVersions({
 *     location: "us-west1",
 *     project: "my-project",
 * });
 * export const firstAvailableVersion = data.google_container_aws_versions.versions.valid_versions[0];
 * ```
 */
export function getAwsVersions(args?: GetAwsVersionsArgs, opts?: pulumi.InvokeOptions): Promise<GetAwsVersionsResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("gcp:container/getAwsVersions:getAwsVersions", {
        "location": args.location,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getAwsVersions.
 */
export interface GetAwsVersionsArgs {
    /**
     * The location to list versions for.
     */
    location?: string;
    /**
     * ID of the project to list available cluster versions for. Should match the project the cluster will be deployed to.
     * Defaults to the project that the provider is authenticated with.
     */
    project?: string;
}

/**
 * A collection of values returned by getAwsVersions.
 */
export interface GetAwsVersionsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly location?: string;
    readonly project?: string;
    /**
     * A list of AWS regions that are available for use with this project and GCP location.
     */
    readonly supportedRegions: string[];
    /**
     * A list of versions available for use with this project and location.
     */
    readonly validVersions: string[];
}

export function getAwsVersionsOutput(args?: GetAwsVersionsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAwsVersionsResult> {
    return pulumi.output(args).apply(a => getAwsVersions(a, opts))
}

/**
 * A collection of arguments for invoking getAwsVersions.
 */
export interface GetAwsVersionsOutputArgs {
    /**
     * The location to list versions for.
     */
    location?: pulumi.Input<string>;
    /**
     * ID of the project to list available cluster versions for. Should match the project the cluster will be deployed to.
     * Defaults to the project that the provider is authenticated with.
     */
    project?: pulumi.Input<string>;
}
