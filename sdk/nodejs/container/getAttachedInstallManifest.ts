// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Provides access to available platform versions in a location for a given project.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const manifest = gcp.container.getAttachedInstallManifest({
 *     location: "us-west1",
 *     project: "my-project",
 *     clusterId: "test-cluster-1",
 *     platformVersion: "1.25.0-gke.1",
 * });
 * export const installManifest = manifest;
 * ```
 */
export function getAttachedInstallManifest(args: GetAttachedInstallManifestArgs, opts?: pulumi.InvokeOptions): Promise<GetAttachedInstallManifestResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("gcp:container/getAttachedInstallManifest:getAttachedInstallManifest", {
        "clusterId": args.clusterId,
        "location": args.location,
        "platformVersion": args.platformVersion,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getAttachedInstallManifest.
 */
export interface GetAttachedInstallManifestArgs {
    /**
     * The name that will be used when creating the attached cluster resource.
     */
    clusterId: string;
    /**
     * The location to list versions for.
     */
    location: string;
    /**
     * The platform version for the cluster. A list of valid values can be retrieved using the `gcp.container.getAttachedVersions` data source.
     */
    platformVersion: string;
    /**
     * ID of the project to list available platform versions for. Should match the project the cluster will be deployed to.
     * Defaults to the project that the provider is authenticated with.
     */
    project: string;
}

/**
 * A collection of values returned by getAttachedInstallManifest.
 */
export interface GetAttachedInstallManifestResult {
    readonly clusterId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly location: string;
    /**
     * A string with the YAML manifest that needs to be applied to the cluster.
     */
    readonly manifest: string;
    readonly platformVersion: string;
    readonly project: string;
}

export function getAttachedInstallManifestOutput(args: GetAttachedInstallManifestOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAttachedInstallManifestResult> {
    return pulumi.output(args).apply(a => getAttachedInstallManifest(a, opts))
}

/**
 * A collection of arguments for invoking getAttachedInstallManifest.
 */
export interface GetAttachedInstallManifestOutputArgs {
    /**
     * The name that will be used when creating the attached cluster resource.
     */
    clusterId: pulumi.Input<string>;
    /**
     * The location to list versions for.
     */
    location: pulumi.Input<string>;
    /**
     * The platform version for the cluster. A list of valid values can be retrieved using the `gcp.container.getAttachedVersions` data source.
     */
    platformVersion: pulumi.Input<string>;
    /**
     * ID of the project to list available platform versions for. Should match the project the cluster will be deployed to.
     * Defaults to the project that the provider is authenticated with.
     */
    project: pulumi.Input<string>;
}
