// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * An Anthos cluster running on customer owned infrastructure.
 *
 * To get more information about Cluster, see:
 *
 * * [API documentation](https://cloud.google.com/anthos/clusters/docs/multi-cloud/reference/rest)
 * * How-to Guides
 *     * [API reference](https://cloud.google.com/anthos/clusters/docs/multi-cloud/reference/rest/v1/projects.locations.attachedClusters)
 *     * [Multicloud overview](https://cloud.google.com/anthos/clusters/docs/multi-cloud)
 *
 * ## Example Usage
 * ### Container Attached Cluster Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const project = gcp.organizations.getProject({});
 * const versions = project.then(project => gcp.container.getAttachedVersions({
 *     location: "us-west1",
 *     project: project.projectId,
 * }));
 * const primary = new gcp.container.AttachedCluster("primary", {
 *     location: "us-west1",
 *     project: project.then(project => project.projectId),
 *     description: "Test cluster",
 *     distribution: "aks",
 *     oidcConfig: {
 *         issuerUrl: "https://oidc.issuer.url",
 *     },
 *     platformVersion: versions.then(versions => versions.validVersions?.[0]),
 *     fleet: {
 *         project: project.then(project => `projects/${project.number}`),
 *     },
 * });
 * ```
 * ### Container Attached Cluster Ignore Errors
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const project = gcp.organizations.getProject({});
 * const versions = project.then(project => gcp.container.getAttachedVersions({
 *     location: "us-west1",
 *     project: project.projectId,
 * }));
 * const primary = new gcp.container.AttachedCluster("primary", {
 *     location: "us-west1",
 *     project: project.then(project => project.projectId),
 *     description: "Test cluster",
 *     distribution: "aks",
 *     oidcConfig: {
 *         issuerUrl: "https://oidc.issuer.url",
 *     },
 *     platformVersion: versions.then(versions => versions.validVersions?.[0]),
 *     fleet: {
 *         project: project.then(project => `projects/${project.number}`),
 *     },
 *     deletionPolicy: "DELETE_IGNORE_ERRORS",
 * });
 * ```
 *
 * ## Import
 *
 * Cluster can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:container/attachedCluster:AttachedCluster default projects/{{project}}/locations/{{location}}/attachedClusters/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:container/attachedCluster:AttachedCluster default {{project}}/{{location}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:container/attachedCluster:AttachedCluster default {{location}}/{{name}}
 * ```
 */
export class AttachedCluster extends pulumi.CustomResource {
    /**
     * Get an existing AttachedCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AttachedClusterState, opts?: pulumi.CustomResourceOptions): AttachedCluster {
        return new AttachedCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:container/attachedCluster:AttachedCluster';

    /**
     * Returns true if the given object is an instance of AttachedCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AttachedCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AttachedCluster.__pulumiType;
    }

    /**
     * Optional. Annotations on the cluster. This field has the same
     * restrictions as Kubernetes annotations. The total size of all keys and
     * values combined is limited to 256k. Key can have 2 segments: prefix (optional)
     * and name (required), separated by a slash (/). Prefix must be a DNS subdomain.
     * Name must be 63 characters or less, begin and end with alphanumerics,
     * with dashes (-), underscores (_), dots (.), and alphanumerics between.
     */
    public readonly annotations!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Configuration related to the cluster RBAC settings.
     * Structure is documented below.
     */
    public readonly authorization!: pulumi.Output<outputs.container.AttachedClusterAuthorization | undefined>;
    /**
     * Output only. The region where this cluster runs.
     * For EKS clusters, this is an AWS region. For AKS clusters,
     * this is an Azure region.
     */
    public /*out*/ readonly clusterRegion!: pulumi.Output<string>;
    /**
     * Output only. The time at which this cluster was created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Policy to determine what flags to send on delete.
     */
    public readonly deletionPolicy!: pulumi.Output<string | undefined>;
    /**
     * A human readable description of this attached cluster. Cannot be longer
     * than 255 UTF-8 encoded bytes.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The Kubernetes distribution of the underlying attached cluster. Supported values:
     * "eks", "aks".
     */
    public readonly distribution!: pulumi.Output<string>;
    /**
     * A set of errors found in the cluster.
     * Structure is documented below.
     */
    public /*out*/ readonly errors!: pulumi.Output<outputs.container.AttachedClusterError[]>;
    /**
     * Fleet configuration.
     * Structure is documented below.
     */
    public readonly fleet!: pulumi.Output<outputs.container.AttachedClusterFleet>;
    /**
     * The Kubernetes version of the cluster.
     */
    public /*out*/ readonly kubernetesVersion!: pulumi.Output<string>;
    /**
     * The location for the resource
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Logging configuration.
     * Structure is documented below.
     */
    public readonly loggingConfig!: pulumi.Output<outputs.container.AttachedClusterLoggingConfig | undefined>;
    /**
     * Monitoring configuration.
     * Structure is documented below.
     */
    public readonly monitoringConfig!: pulumi.Output<outputs.container.AttachedClusterMonitoringConfig>;
    /**
     * The name of this resource.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * OIDC discovery information of the target cluster.
     * Kubernetes Service Account (KSA) tokens are JWT tokens signed by the cluster
     * API server. This fields indicates how GCP services
     * validate KSA tokens in order to allow system workloads (such as GKE Connect
     * and telemetry agents) to authenticate back to GCP.
     * Both clusters with public and private issuer URLs are supported.
     * Clusters with public issuers only need to specify the `issuerUrl` field
     * while clusters with private issuers need to provide both
     * `issuerUrl` and `jwks`.
     * Structure is documented below.
     */
    public readonly oidcConfig!: pulumi.Output<outputs.container.AttachedClusterOidcConfig>;
    /**
     * The platform version for the cluster (e.g. `1.23.0-gke.1`).
     */
    public readonly platformVersion!: pulumi.Output<string>;
    /**
     * The number of the Fleet host project where this cluster will be registered.
     * If it is not provided, the provider project is used.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * If set, there are currently changes in flight to the cluster.
     */
    public /*out*/ readonly reconciling!: pulumi.Output<boolean>;
    /**
     * The current state of the cluster. Possible values:
     * STATE_UNSPECIFIED, PROVISIONING, RUNNING, RECONCILING, STOPPING, ERROR,
     * DEGRADED
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * A globally unique identifier for the cluster.
     */
    public /*out*/ readonly uid!: pulumi.Output<string>;
    /**
     * The time at which this cluster was last updated.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * Workload Identity settings.
     * Structure is documented below.
     */
    public /*out*/ readonly workloadIdentityConfigs!: pulumi.Output<outputs.container.AttachedClusterWorkloadIdentityConfig[]>;

    /**
     * Create a AttachedCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AttachedClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AttachedClusterArgs | AttachedClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AttachedClusterState | undefined;
            resourceInputs["annotations"] = state ? state.annotations : undefined;
            resourceInputs["authorization"] = state ? state.authorization : undefined;
            resourceInputs["clusterRegion"] = state ? state.clusterRegion : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["deletionPolicy"] = state ? state.deletionPolicy : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["distribution"] = state ? state.distribution : undefined;
            resourceInputs["errors"] = state ? state.errors : undefined;
            resourceInputs["fleet"] = state ? state.fleet : undefined;
            resourceInputs["kubernetesVersion"] = state ? state.kubernetesVersion : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["loggingConfig"] = state ? state.loggingConfig : undefined;
            resourceInputs["monitoringConfig"] = state ? state.monitoringConfig : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["oidcConfig"] = state ? state.oidcConfig : undefined;
            resourceInputs["platformVersion"] = state ? state.platformVersion : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["reconciling"] = state ? state.reconciling : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["uid"] = state ? state.uid : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
            resourceInputs["workloadIdentityConfigs"] = state ? state.workloadIdentityConfigs : undefined;
        } else {
            const args = argsOrState as AttachedClusterArgs | undefined;
            if ((!args || args.distribution === undefined) && !opts.urn) {
                throw new Error("Missing required property 'distribution'");
            }
            if ((!args || args.fleet === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fleet'");
            }
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.oidcConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'oidcConfig'");
            }
            if ((!args || args.platformVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'platformVersion'");
            }
            resourceInputs["annotations"] = args ? args.annotations : undefined;
            resourceInputs["authorization"] = args ? args.authorization : undefined;
            resourceInputs["deletionPolicy"] = args ? args.deletionPolicy : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["distribution"] = args ? args.distribution : undefined;
            resourceInputs["fleet"] = args ? args.fleet : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["loggingConfig"] = args ? args.loggingConfig : undefined;
            resourceInputs["monitoringConfig"] = args ? args.monitoringConfig : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["oidcConfig"] = args ? args.oidcConfig : undefined;
            resourceInputs["platformVersion"] = args ? args.platformVersion : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["clusterRegion"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["errors"] = undefined /*out*/;
            resourceInputs["kubernetesVersion"] = undefined /*out*/;
            resourceInputs["reconciling"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["uid"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
            resourceInputs["workloadIdentityConfigs"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AttachedCluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AttachedCluster resources.
 */
export interface AttachedClusterState {
    /**
     * Optional. Annotations on the cluster. This field has the same
     * restrictions as Kubernetes annotations. The total size of all keys and
     * values combined is limited to 256k. Key can have 2 segments: prefix (optional)
     * and name (required), separated by a slash (/). Prefix must be a DNS subdomain.
     * Name must be 63 characters or less, begin and end with alphanumerics,
     * with dashes (-), underscores (_), dots (.), and alphanumerics between.
     */
    annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Configuration related to the cluster RBAC settings.
     * Structure is documented below.
     */
    authorization?: pulumi.Input<inputs.container.AttachedClusterAuthorization>;
    /**
     * Output only. The region where this cluster runs.
     * For EKS clusters, this is an AWS region. For AKS clusters,
     * this is an Azure region.
     */
    clusterRegion?: pulumi.Input<string>;
    /**
     * Output only. The time at which this cluster was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Policy to determine what flags to send on delete.
     */
    deletionPolicy?: pulumi.Input<string>;
    /**
     * A human readable description of this attached cluster. Cannot be longer
     * than 255 UTF-8 encoded bytes.
     */
    description?: pulumi.Input<string>;
    /**
     * The Kubernetes distribution of the underlying attached cluster. Supported values:
     * "eks", "aks".
     */
    distribution?: pulumi.Input<string>;
    /**
     * A set of errors found in the cluster.
     * Structure is documented below.
     */
    errors?: pulumi.Input<pulumi.Input<inputs.container.AttachedClusterError>[]>;
    /**
     * Fleet configuration.
     * Structure is documented below.
     */
    fleet?: pulumi.Input<inputs.container.AttachedClusterFleet>;
    /**
     * The Kubernetes version of the cluster.
     */
    kubernetesVersion?: pulumi.Input<string>;
    /**
     * The location for the resource
     */
    location?: pulumi.Input<string>;
    /**
     * Logging configuration.
     * Structure is documented below.
     */
    loggingConfig?: pulumi.Input<inputs.container.AttachedClusterLoggingConfig>;
    /**
     * Monitoring configuration.
     * Structure is documented below.
     */
    monitoringConfig?: pulumi.Input<inputs.container.AttachedClusterMonitoringConfig>;
    /**
     * The name of this resource.
     */
    name?: pulumi.Input<string>;
    /**
     * OIDC discovery information of the target cluster.
     * Kubernetes Service Account (KSA) tokens are JWT tokens signed by the cluster
     * API server. This fields indicates how GCP services
     * validate KSA tokens in order to allow system workloads (such as GKE Connect
     * and telemetry agents) to authenticate back to GCP.
     * Both clusters with public and private issuer URLs are supported.
     * Clusters with public issuers only need to specify the `issuerUrl` field
     * while clusters with private issuers need to provide both
     * `issuerUrl` and `jwks`.
     * Structure is documented below.
     */
    oidcConfig?: pulumi.Input<inputs.container.AttachedClusterOidcConfig>;
    /**
     * The platform version for the cluster (e.g. `1.23.0-gke.1`).
     */
    platformVersion?: pulumi.Input<string>;
    /**
     * The number of the Fleet host project where this cluster will be registered.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * If set, there are currently changes in flight to the cluster.
     */
    reconciling?: pulumi.Input<boolean>;
    /**
     * The current state of the cluster. Possible values:
     * STATE_UNSPECIFIED, PROVISIONING, RUNNING, RECONCILING, STOPPING, ERROR,
     * DEGRADED
     */
    state?: pulumi.Input<string>;
    /**
     * A globally unique identifier for the cluster.
     */
    uid?: pulumi.Input<string>;
    /**
     * The time at which this cluster was last updated.
     */
    updateTime?: pulumi.Input<string>;
    /**
     * Workload Identity settings.
     * Structure is documented below.
     */
    workloadIdentityConfigs?: pulumi.Input<pulumi.Input<inputs.container.AttachedClusterWorkloadIdentityConfig>[]>;
}

/**
 * The set of arguments for constructing a AttachedCluster resource.
 */
export interface AttachedClusterArgs {
    /**
     * Optional. Annotations on the cluster. This field has the same
     * restrictions as Kubernetes annotations. The total size of all keys and
     * values combined is limited to 256k. Key can have 2 segments: prefix (optional)
     * and name (required), separated by a slash (/). Prefix must be a DNS subdomain.
     * Name must be 63 characters or less, begin and end with alphanumerics,
     * with dashes (-), underscores (_), dots (.), and alphanumerics between.
     */
    annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Configuration related to the cluster RBAC settings.
     * Structure is documented below.
     */
    authorization?: pulumi.Input<inputs.container.AttachedClusterAuthorization>;
    /**
     * Policy to determine what flags to send on delete.
     */
    deletionPolicy?: pulumi.Input<string>;
    /**
     * A human readable description of this attached cluster. Cannot be longer
     * than 255 UTF-8 encoded bytes.
     */
    description?: pulumi.Input<string>;
    /**
     * The Kubernetes distribution of the underlying attached cluster. Supported values:
     * "eks", "aks".
     */
    distribution: pulumi.Input<string>;
    /**
     * Fleet configuration.
     * Structure is documented below.
     */
    fleet: pulumi.Input<inputs.container.AttachedClusterFleet>;
    /**
     * The location for the resource
     */
    location: pulumi.Input<string>;
    /**
     * Logging configuration.
     * Structure is documented below.
     */
    loggingConfig?: pulumi.Input<inputs.container.AttachedClusterLoggingConfig>;
    /**
     * Monitoring configuration.
     * Structure is documented below.
     */
    monitoringConfig?: pulumi.Input<inputs.container.AttachedClusterMonitoringConfig>;
    /**
     * The name of this resource.
     */
    name?: pulumi.Input<string>;
    /**
     * OIDC discovery information of the target cluster.
     * Kubernetes Service Account (KSA) tokens are JWT tokens signed by the cluster
     * API server. This fields indicates how GCP services
     * validate KSA tokens in order to allow system workloads (such as GKE Connect
     * and telemetry agents) to authenticate back to GCP.
     * Both clusters with public and private issuer URLs are supported.
     * Clusters with public issuers only need to specify the `issuerUrl` field
     * while clusters with private issuers need to provide both
     * `issuerUrl` and `jwks`.
     * Structure is documented below.
     */
    oidcConfig: pulumi.Input<inputs.container.AttachedClusterOidcConfig>;
    /**
     * The platform version for the cluster (e.g. `1.23.0-gke.1`).
     */
    platformVersion: pulumi.Input<string>;
    /**
     * The number of the Fleet host project where this cluster will be registered.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
