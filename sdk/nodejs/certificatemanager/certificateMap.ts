// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * CertificateMap defines a collection of certificate configurations,
 * which are usable by any associated target proxies
 *
 * ## Example Usage
 * ### Certificate Manager Certificate Map Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const _default = new gcp.certificatemanager.CertificateMap("default", {
 *     description: "My acceptance test certificate map",
 *     labels: {
 *         terraform: "true",
 *         "acc-test": "true",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * CertificateMap can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:certificatemanager/certificateMap:CertificateMap default projects/{{project}}/locations/global/certificateMaps/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:certificatemanager/certificateMap:CertificateMap default {{project}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:certificatemanager/certificateMap:CertificateMap default {{name}}
 * ```
 */
export class CertificateMap extends pulumi.CustomResource {
    /**
     * Get an existing CertificateMap resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CertificateMapState, opts?: pulumi.CustomResourceOptions): CertificateMap {
        return new CertificateMap(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:certificatemanager/certificateMap:CertificateMap';

    /**
     * Returns true if the given object is an instance of CertificateMap.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CertificateMap {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CertificateMap.__pulumiType;
    }

    /**
     * Creation timestamp of a Certificate Map. Timestamp is in RFC3339 UTC "Zulu" format,
     * accurate to nanoseconds with up to nine fractional digits.
     * Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * A human-readable description of the resource.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * A list of target proxies that use this Certificate Map
     * Structure is documented below.
     */
    public /*out*/ readonly gclbTargets!: pulumi.Output<outputs.certificatemanager.CertificateMapGclbTarget[]>;
    /**
     * Set of labels associated with a Certificate Map resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string}>;
    /**
     * A user-defined name of the Certificate Map. Certificate Map names must be unique
     * globally and match the pattern `projects/*&#47;locations/*&#47;certificateMaps/*`.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * Update timestamp of a Certificate Map. Timestamp is in RFC3339 UTC "Zulu" format,
     * accurate to nanoseconds with up to nine fractional digits.
     * Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a CertificateMap resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: CertificateMapArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CertificateMapArgs | CertificateMapState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CertificateMapState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["gclbTargets"] = state ? state.gclbTargets : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as CertificateMapArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["gclbTargets"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CertificateMap.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CertificateMap resources.
 */
export interface CertificateMapState {
    /**
     * Creation timestamp of a Certificate Map. Timestamp is in RFC3339 UTC "Zulu" format,
     * accurate to nanoseconds with up to nine fractional digits.
     * Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
     */
    createTime?: pulumi.Input<string>;
    /**
     * A human-readable description of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * A list of target proxies that use this Certificate Map
     * Structure is documented below.
     */
    gclbTargets?: pulumi.Input<pulumi.Input<inputs.certificatemanager.CertificateMapGclbTarget>[]>;
    /**
     * Set of labels associated with a Certificate Map resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A user-defined name of the Certificate Map. Certificate Map names must be unique
     * globally and match the pattern `projects/*&#47;locations/*&#47;certificateMaps/*`.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * Update timestamp of a Certificate Map. Timestamp is in RFC3339 UTC "Zulu" format,
     * accurate to nanoseconds with up to nine fractional digits.
     * Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CertificateMap resource.
 */
export interface CertificateMapArgs {
    /**
     * A human-readable description of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Set of labels associated with a Certificate Map resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A user-defined name of the Certificate Map. Certificate Map names must be unique
     * globally and match the pattern `projects/*&#47;locations/*&#47;certificateMaps/*`.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
