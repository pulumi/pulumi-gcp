// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to get information about a Certificate Manager DNS Authorization. For more details, see the [API documentation](https://cloud.google.com/certificate-manager/docs/reference/certificate-manager/rest/v1/projects.locations.dnsAuthorizations).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const _default = gcp.certificatemanager.getDnsAuthorization({
 *     name: "my-dns-auth",
 *     location: "global",
 * });
 * ```
 */
export function getDnsAuthorization(args: GetDnsAuthorizationArgs, opts?: pulumi.InvokeOptions): Promise<GetDnsAuthorizationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:certificatemanager/getDnsAuthorization:getDnsAuthorization", {
        "domain": args.domain,
        "location": args.location,
        "name": args.name,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getDnsAuthorization.
 */
export interface GetDnsAuthorizationArgs {
    /**
     * The name of the DNS Authorization.
     */
    domain: string;
    /**
     * The Certificate Manager location. If not specified, "global" is used.
     */
    location?: string;
    /**
     * The name of the DNS Authorization.
     */
    name: string;
    /**
     * The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
     */
    project?: string;
}

/**
 * A collection of values returned by getDnsAuthorization.
 */
export interface GetDnsAuthorizationResult {
    readonly description: string;
    readonly dnsResourceRecords: outputs.certificatemanager.GetDnsAuthorizationDnsResourceRecord[];
    readonly domain: string;
    readonly effectiveLabels: {[key: string]: string};
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly labels: {[key: string]: string};
    readonly location?: string;
    readonly name: string;
    readonly project?: string;
    readonly pulumiLabels: {[key: string]: string};
    readonly type: string;
}
/**
 * Use this data source to get information about a Certificate Manager DNS Authorization. For more details, see the [API documentation](https://cloud.google.com/certificate-manager/docs/reference/certificate-manager/rest/v1/projects.locations.dnsAuthorizations).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const _default = gcp.certificatemanager.getDnsAuthorization({
 *     name: "my-dns-auth",
 *     location: "global",
 * });
 * ```
 */
export function getDnsAuthorizationOutput(args: GetDnsAuthorizationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDnsAuthorizationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("gcp:certificatemanager/getDnsAuthorization:getDnsAuthorization", {
        "domain": args.domain,
        "location": args.location,
        "name": args.name,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getDnsAuthorization.
 */
export interface GetDnsAuthorizationOutputArgs {
    /**
     * The name of the DNS Authorization.
     */
    domain: pulumi.Input<string>;
    /**
     * The Certificate Manager location. If not specified, "global" is used.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the DNS Authorization.
     */
    name: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
