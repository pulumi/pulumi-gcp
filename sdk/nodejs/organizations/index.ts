// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./accessApprovalSettings";
export * from "./folder";
export * from "./getActiveFolder";
export * from "./getBillingAccount";
export * from "./getClientConfig";
export * from "./getClientOpenIdUserInfo";
export * from "./getFolder";
export * from "./getIAMPolicy";
export * from "./getOrganization";
export * from "./getProject";
export * from "./iamAuditConfig";
export * from "./iambinding";
export * from "./iamcustomRole";
export * from "./iammember";
export * from "./iampolicy";
export * from "./policy";
export * from "./project";

// Import resources to register:
import { AccessApprovalSettings } from "./accessApprovalSettings";
import { Folder } from "./folder";
import { IAMBinding } from "./iambinding";
import { IAMCustomRole } from "./iamcustomRole";
import { IAMMember } from "./iammember";
import { IAMPolicy } from "./iampolicy";
import { IamAuditConfig } from "./iamAuditConfig";
import { Policy } from "./policy";
import { Project } from "./project";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "gcp:organizations/accessApprovalSettings:AccessApprovalSettings":
                return new AccessApprovalSettings(name, <any>undefined, { urn })
            case "gcp:organizations/folder:Folder":
                return new Folder(name, <any>undefined, { urn })
            case "gcp:organizations/iAMBinding:IAMBinding":
                return new IAMBinding(name, <any>undefined, { urn })
            case "gcp:organizations/iAMCustomRole:IAMCustomRole":
                return new IAMCustomRole(name, <any>undefined, { urn })
            case "gcp:organizations/iAMMember:IAMMember":
                return new IAMMember(name, <any>undefined, { urn })
            case "gcp:organizations/iAMPolicy:IAMPolicy":
                return new IAMPolicy(name, <any>undefined, { urn })
            case "gcp:organizations/iamAuditConfig:IamAuditConfig":
                return new IamAuditConfig(name, <any>undefined, { urn })
            case "gcp:organizations/policy:Policy":
                return new Policy(name, <any>undefined, { urn })
            case "gcp:organizations/project:Project":
                return new Project(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "organizations/accessApprovalSettings", _module)
pulumi.runtime.registerResourceModule("gcp", "organizations/folder", _module)
pulumi.runtime.registerResourceModule("gcp", "organizations/iAMBinding", _module)
pulumi.runtime.registerResourceModule("gcp", "organizations/iAMCustomRole", _module)
pulumi.runtime.registerResourceModule("gcp", "organizations/iAMMember", _module)
pulumi.runtime.registerResourceModule("gcp", "organizations/iAMPolicy", _module)
pulumi.runtime.registerResourceModule("gcp", "organizations/iamAuditConfig", _module)
pulumi.runtime.registerResourceModule("gcp", "organizations/policy", _module)
pulumi.runtime.registerResourceModule("gcp", "organizations/project", _module)
