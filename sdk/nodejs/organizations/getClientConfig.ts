// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const current = gcp.organizations.getClientConfig({});
 * export const project = current.then(current => current.project);
 * ```
 *
 * ### Configure Kubernetes Provider With OAuth2 Access Token
 */
export function getClientConfig(opts?: pulumi.InvokeOptions): Promise<GetClientConfigResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:organizations/getClientConfig:getClientConfig", {
    }, opts);
}

/**
 * A collection of values returned by getClientConfig.
 */
export interface GetClientConfigResult {
    /**
     * The OAuth2 access token used by the client to authenticate against the Google Cloud API.
     */
    readonly accessToken: string;
    /**
     * The default labels configured on the provider.
     */
    readonly defaultLabels: {[key: string]: string};
    readonly id: string;
    /**
     * The ID of the project to apply any resources to.
     */
    readonly project: string;
    /**
     * The region to operate under.
     */
    readonly region: string;
    /**
     * The zone to operate under.
     */
    readonly zone: string;
}
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const current = gcp.organizations.getClientConfig({});
 * export const project = current.then(current => current.project);
 * ```
 *
 * ### Configure Kubernetes Provider With OAuth2 Access Token
 */
export function getClientConfigOutput(opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetClientConfigResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("gcp:organizations/getClientConfig:getClientConfig", {
    }, opts);
}
