// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Retrieves the current IAM policy data for lake
 *
 * ## example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const policy = gcp.dataplex.getLakeIamPolicy({
 *     project: google_dataplex_lake.example.project,
 *     location: google_dataplex_lake.example.location,
 *     lake: google_dataplex_lake.example.name,
 * });
 * ```
 */
export function getLakeIamPolicy(args: GetLakeIamPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetLakeIamPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:dataplex/getLakeIamPolicy:getLakeIamPolicy", {
        "lake": args.lake,
        "location": args.location,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getLakeIamPolicy.
 */
export interface GetLakeIamPolicyArgs {
    /**
     * Used to find the parent resource to bind the IAM policy to
     */
    lake: string;
    location?: string;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     */
    project?: string;
}

/**
 * A collection of values returned by getLakeIamPolicy.
 */
export interface GetLakeIamPolicyResult {
    /**
     * (Computed) The etag of the IAM policy.
     */
    readonly etag: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly lake: string;
    readonly location: string;
    /**
     * (Required only by `gcp.dataplex.LakeIamPolicy`) The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     */
    readonly policyData: string;
    readonly project: string;
}
/**
 * Retrieves the current IAM policy data for lake
 *
 * ## example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const policy = gcp.dataplex.getLakeIamPolicy({
 *     project: google_dataplex_lake.example.project,
 *     location: google_dataplex_lake.example.location,
 *     lake: google_dataplex_lake.example.name,
 * });
 * ```
 */
export function getLakeIamPolicyOutput(args: GetLakeIamPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetLakeIamPolicyResult> {
    return pulumi.output(args).apply((a: any) => getLakeIamPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getLakeIamPolicy.
 */
export interface GetLakeIamPolicyOutputArgs {
    /**
     * Used to find the parent resource to bind the IAM policy to
     */
    lake: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
