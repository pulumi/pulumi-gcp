// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * An entry represents a data asset for which you capture metadata, such as a BigQuery table.
 * The primary constituents of an entry are aspects, which provide thematically coherent information.
 * Examples include a table's schema, sensitive data protection profile, data quality information, or a simple tag.
 *
 * **Important Considerations:**
 *
 * * There is a limit of 99 aspects per entry.
 * * The entry resource has to use project numbers and not project IDs. Therefore, if
 *   a dependency was already provisioned using project ID, it needs to be referenced explicitly as a resource name
 *   containing the project number.
 *
 * To get more information about Entry, see:
 *
 * * [API documentation](https://cloud.google.com/dataplex/docs/reference/rest/v1/projects.locations.entryGroups.entries)
 * * How-to Guides
 *     * [Manage entries and ingest custom sources](https://cloud.google.com/dataplex/docs/ingest-custom-sources)
 *
 * ## Example Usage
 *
 * ### Dataplex Entry Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const entry_group_basic = new gcp.dataplex.EntryGroup("entry-group-basic", {
 *     entryGroupId: "entry-group-basic",
 *     project: "1111111111111",
 *     location: "us-central1",
 * });
 * const entry_type_basic = new gcp.dataplex.EntryType("entry-type-basic", {
 *     entryTypeId: "entry-type-basic",
 *     project: "1111111111111",
 *     location: "us-central1",
 * });
 * const testBasic = new gcp.dataplex.Entry("test_basic", {
 *     entryGroupId: entry_group_basic.entryGroupId,
 *     project: "1111111111111",
 *     location: "us-central1",
 *     entryId: "entry-basic",
 *     entryType: entry_type_basic.name,
 * });
 * ```
 * ### Dataplex Entry Full
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const aspect_type_full_one = new gcp.dataplex.AspectType("aspect-type-full-one", {
 *     aspectTypeId: "aspect-type-full-one",
 *     location: "us-central1",
 *     project: "1111111111111",
 *     metadataTemplate: `{
 *   "name": "tf-test-template",
 *   "type": "record",
 *   "recordFields": [
 *     {
 *       "name": "type",
 *       "type": "enum",
 *       "annotations": {
 *         "displayName": "Type",
 *         "description": "Specifies the type of view represented by the entry."
 *       },
 *       "index": 1,
 *       "constraints": {
 *         "required": true
 *       },
 *       "enumValues": [
 *         {
 *           "name": "VIEW",
 *           "index": 1
 *         }
 *       ]
 *     }
 *   ]
 * }
 * `,
 * });
 * const aspect_type_full_two = new gcp.dataplex.AspectType("aspect-type-full-two", {
 *     aspectTypeId: "aspect-type-full-two",
 *     location: "us-central1",
 *     project: "1111111111111",
 *     metadataTemplate: `{
 *   "name": "tf-test-template",
 *   "type": "record",
 *   "recordFields": [
 *     {
 *       "name": "story",
 *       "type": "enum",
 *       "annotations": {
 *         "displayName": "Story",
 *         "description": "Specifies the story of an entry."
 *       },
 *       "index": 1,
 *       "constraints": {
 *         "required": true
 *       },
 *       "enumValues": [
 *         {
 *           "name": "SEQUENCE",
 *           "index": 1
 *         }
 *       ]
 *     }
 *   ]
 * }
 * `,
 * });
 * const entry_group_full = new gcp.dataplex.EntryGroup("entry-group-full", {
 *     entryGroupId: "entry-group-full",
 *     project: "1111111111111",
 *     location: "us-central1",
 * });
 * const entry_type_full = new gcp.dataplex.EntryType("entry-type-full", {
 *     entryTypeId: "entry-type-full",
 *     project: "1111111111111",
 *     location: "us-central1",
 *     requiredAspects: [{
 *         type: aspect_type_full_one.name,
 *     }],
 * });
 * const testEntryFull = new gcp.dataplex.Entry("test_entry_full", {
 *     entryGroupId: entry_group_full.entryGroupId,
 *     project: "1111111111111",
 *     location: "us-central1",
 *     entryId: "entry-full/has/slashes",
 *     entryType: entry_type_full.name,
 *     fullyQualifiedName: "bigquery:1111111111111.test-dataset",
 *     parentEntry: "projects/1111111111111/locations/us-central1/entryGroups/entry-group-full/entries/some-other-entry",
 *     entrySource: {
 *         resource: "bigquery:1111111111111.test-dataset",
 *         system: "System III",
 *         platform: "BigQuery",
 *         displayName: "Human readable name",
 *         description: "Description from source system",
 *         labels: {
 *             "some-label": "some-value",
 *         },
 *         ancestors: [
 *             {
 *                 name: "ancestor-one",
 *                 type: "type-one",
 *             },
 *             {
 *                 name: "ancestor-two",
 *                 type: "type-two",
 *             },
 *         ],
 *         createTime: "2023-08-03T19:19:00.094Z",
 *         updateTime: "2023-08-03T20:19:00.094Z",
 *     },
 *     aspects: [
 *         {
 *             aspectKey: "1111111111111.us-central1.aspect-type-full-one",
 *             aspect: {
 *                 data: "          {\"type\": \"VIEW\"    }\n",
 *             },
 *         },
 *         {
 *             aspectKey: "1111111111111.us-central1.aspect-type-full-two",
 *             aspect: {
 *                 data: "          {\"story\": \"SEQUENCE\"    }\n",
 *             },
 *         },
 *     ],
 * }, {
 *     dependsOn: [
 *         aspect_type_full_two,
 *         aspect_type_full_one,
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * Entry can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/locations/{{location}}/entryGroups/{{entry_group_id}}/entries/{{entry_id}}`
 *
 * * `{{project}}/{{location}}/{{entry_group_id}}/{{entry_id}}`
 *
 * * `{{location}}/{{entry_group_id}}/{{entry_id}}`
 *
 * When using the `pulumi import` command, Entry can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:dataplex/entry:Entry default projects/{{project}}/locations/{{location}}/entryGroups/{{entry_group_id}}/entries/{{entry_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:dataplex/entry:Entry default {{project}}/{{location}}/{{entry_group_id}}/{{entry_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:dataplex/entry:Entry default {{location}}/{{entry_group_id}}/{{entry_id}}
 * ```
 */
export class Entry extends pulumi.CustomResource {
    /**
     * Get an existing Entry resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EntryState, opts?: pulumi.CustomResourceOptions): Entry {
        return new Entry(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:dataplex/entry:Entry';

    /**
     * Returns true if the given object is an instance of Entry.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Entry {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Entry.__pulumiType;
    }

    /**
     * The aspects that are attached to the entry.
     * Structure is documented below.
     */
    declare public readonly aspects: pulumi.Output<outputs.dataplex.EntryAspect[] | undefined>;
    /**
     * The time when the Entry was created in Dataplex.
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * The entry group id of the entry group the entry will be created in.
     */
    declare public readonly entryGroupId: pulumi.Output<string | undefined>;
    /**
     * The entry id of the entry.
     */
    declare public readonly entryId: pulumi.Output<string | undefined>;
    /**
     * A nested object resource.
     * Structure is documented below.
     */
    declare public readonly entrySource: pulumi.Output<outputs.dataplex.EntryEntrySource>;
    /**
     * The relative resource name of the entry type that was used to create this entry, in the format projects/{project_number}/locations/{locationId}/entryTypes/{entryTypeId}.
     */
    declare public readonly entryType: pulumi.Output<string>;
    /**
     * A name for the entry that can be referenced by an external system. For more information, see https://cloud.google.com/dataplex/docs/fully-qualified-names.
     * The maximum size of the field is 4000 characters.
     */
    declare public readonly fullyQualifiedName: pulumi.Output<string | undefined>;
    /**
     * The location where entry will be created.
     */
    declare public readonly location: pulumi.Output<string | undefined>;
    /**
     * The relative resource name of the entry, in the format projects/{project_number}/locations/{locationId}/entryGroups/{entryGroupId}/entries/{entryId}.
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    /**
     * The resource name of the parent entry, in the format projects/{project_number}/locations/{locationId}/entryGroups/{entryGroupId}/entries/{entryId}.
     */
    declare public readonly parentEntry: pulumi.Output<string | undefined>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    declare public readonly project: pulumi.Output<string>;
    /**
     * The time when the entry was last updated in Dataplex.
     */
    declare public /*out*/ readonly updateTime: pulumi.Output<string>;

    /**
     * Create a Entry resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EntryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EntryArgs | EntryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EntryState | undefined;
            resourceInputs["aspects"] = state?.aspects;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["entryGroupId"] = state?.entryGroupId;
            resourceInputs["entryId"] = state?.entryId;
            resourceInputs["entrySource"] = state?.entrySource;
            resourceInputs["entryType"] = state?.entryType;
            resourceInputs["fullyQualifiedName"] = state?.fullyQualifiedName;
            resourceInputs["location"] = state?.location;
            resourceInputs["name"] = state?.name;
            resourceInputs["parentEntry"] = state?.parentEntry;
            resourceInputs["project"] = state?.project;
            resourceInputs["updateTime"] = state?.updateTime;
        } else {
            const args = argsOrState as EntryArgs | undefined;
            if (args?.entryType === undefined && !opts.urn) {
                throw new Error("Missing required property 'entryType'");
            }
            resourceInputs["aspects"] = args?.aspects;
            resourceInputs["entryGroupId"] = args?.entryGroupId;
            resourceInputs["entryId"] = args?.entryId;
            resourceInputs["entrySource"] = args?.entrySource;
            resourceInputs["entryType"] = args?.entryType;
            resourceInputs["fullyQualifiedName"] = args?.fullyQualifiedName;
            resourceInputs["location"] = args?.location;
            resourceInputs["parentEntry"] = args?.parentEntry;
            resourceInputs["project"] = args?.project;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Entry.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Entry resources.
 */
export interface EntryState {
    /**
     * The aspects that are attached to the entry.
     * Structure is documented below.
     */
    aspects?: pulumi.Input<pulumi.Input<inputs.dataplex.EntryAspect>[]>;
    /**
     * The time when the Entry was created in Dataplex.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The entry group id of the entry group the entry will be created in.
     */
    entryGroupId?: pulumi.Input<string>;
    /**
     * The entry id of the entry.
     */
    entryId?: pulumi.Input<string>;
    /**
     * A nested object resource.
     * Structure is documented below.
     */
    entrySource?: pulumi.Input<inputs.dataplex.EntryEntrySource>;
    /**
     * The relative resource name of the entry type that was used to create this entry, in the format projects/{project_number}/locations/{locationId}/entryTypes/{entryTypeId}.
     */
    entryType?: pulumi.Input<string>;
    /**
     * A name for the entry that can be referenced by an external system. For more information, see https://cloud.google.com/dataplex/docs/fully-qualified-names.
     * The maximum size of the field is 4000 characters.
     */
    fullyQualifiedName?: pulumi.Input<string>;
    /**
     * The location where entry will be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The relative resource name of the entry, in the format projects/{project_number}/locations/{locationId}/entryGroups/{entryGroupId}/entries/{entryId}.
     */
    name?: pulumi.Input<string>;
    /**
     * The resource name of the parent entry, in the format projects/{project_number}/locations/{locationId}/entryGroups/{entryGroupId}/entries/{entryId}.
     */
    parentEntry?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The time when the entry was last updated in Dataplex.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Entry resource.
 */
export interface EntryArgs {
    /**
     * The aspects that are attached to the entry.
     * Structure is documented below.
     */
    aspects?: pulumi.Input<pulumi.Input<inputs.dataplex.EntryAspect>[]>;
    /**
     * The entry group id of the entry group the entry will be created in.
     */
    entryGroupId?: pulumi.Input<string>;
    /**
     * The entry id of the entry.
     */
    entryId?: pulumi.Input<string>;
    /**
     * A nested object resource.
     * Structure is documented below.
     */
    entrySource?: pulumi.Input<inputs.dataplex.EntryEntrySource>;
    /**
     * The relative resource name of the entry type that was used to create this entry, in the format projects/{project_number}/locations/{locationId}/entryTypes/{entryTypeId}.
     */
    entryType: pulumi.Input<string>;
    /**
     * A name for the entry that can be referenced by an external system. For more information, see https://cloud.google.com/dataplex/docs/fully-qualified-names.
     * The maximum size of the field is 4000 characters.
     */
    fullyQualifiedName?: pulumi.Input<string>;
    /**
     * The location where entry will be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The resource name of the parent entry, in the format projects/{project_number}/locations/{locationId}/entryGroups/{entryGroupId}/entries/{entryId}.
     */
    parentEntry?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
