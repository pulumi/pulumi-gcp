// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ConsumersIamBindingArgs, ConsumersIamBindingState } from "./consumersIamBinding";
export type ConsumersIamBinding = import("./consumersIamBinding").ConsumersIamBinding;
export const ConsumersIamBinding: typeof import("./consumersIamBinding").ConsumersIamBinding = null as any;
utilities.lazyLoad(exports, ["ConsumersIamBinding"], () => require("./consumersIamBinding"));

export { ConsumersIamMemberArgs, ConsumersIamMemberState } from "./consumersIamMember";
export type ConsumersIamMember = import("./consumersIamMember").ConsumersIamMember;
export const ConsumersIamMember: typeof import("./consumersIamMember").ConsumersIamMember = null as any;
utilities.lazyLoad(exports, ["ConsumersIamMember"], () => require("./consumersIamMember"));

export { ConsumersIamPolicyArgs, ConsumersIamPolicyState } from "./consumersIamPolicy";
export type ConsumersIamPolicy = import("./consumersIamPolicy").ConsumersIamPolicy;
export const ConsumersIamPolicy: typeof import("./consumersIamPolicy").ConsumersIamPolicy = null as any;
utilities.lazyLoad(exports, ["ConsumersIamPolicy"], () => require("./consumersIamPolicy"));

export { GetServiceConsumersIamPolicyArgs, GetServiceConsumersIamPolicyResult, GetServiceConsumersIamPolicyOutputArgs } from "./getServiceConsumersIamPolicy";
export const getServiceConsumersIamPolicy: typeof import("./getServiceConsumersIamPolicy").getServiceConsumersIamPolicy = null as any;
export const getServiceConsumersIamPolicyOutput: typeof import("./getServiceConsumersIamPolicy").getServiceConsumersIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getServiceConsumersIamPolicy","getServiceConsumersIamPolicyOutput"], () => require("./getServiceConsumersIamPolicy"));

export { GetServiceIamPolicyArgs, GetServiceIamPolicyResult, GetServiceIamPolicyOutputArgs } from "./getServiceIamPolicy";
export const getServiceIamPolicy: typeof import("./getServiceIamPolicy").getServiceIamPolicy = null as any;
export const getServiceIamPolicyOutput: typeof import("./getServiceIamPolicy").getServiceIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getServiceIamPolicy","getServiceIamPolicyOutput"], () => require("./getServiceIamPolicy"));

export { ServiceArgs, ServiceState } from "./service";
export type Service = import("./service").Service;
export const Service: typeof import("./service").Service = null as any;
utilities.lazyLoad(exports, ["Service"], () => require("./service"));

export { ServiceIamBindingArgs, ServiceIamBindingState } from "./serviceIamBinding";
export type ServiceIamBinding = import("./serviceIamBinding").ServiceIamBinding;
export const ServiceIamBinding: typeof import("./serviceIamBinding").ServiceIamBinding = null as any;
utilities.lazyLoad(exports, ["ServiceIamBinding"], () => require("./serviceIamBinding"));

export { ServiceIamMemberArgs, ServiceIamMemberState } from "./serviceIamMember";
export type ServiceIamMember = import("./serviceIamMember").ServiceIamMember;
export const ServiceIamMember: typeof import("./serviceIamMember").ServiceIamMember = null as any;
utilities.lazyLoad(exports, ["ServiceIamMember"], () => require("./serviceIamMember"));

export { ServiceIamPolicyArgs, ServiceIamPolicyState } from "./serviceIamPolicy";
export type ServiceIamPolicy = import("./serviceIamPolicy").ServiceIamPolicy;
export const ServiceIamPolicy: typeof import("./serviceIamPolicy").ServiceIamPolicy = null as any;
utilities.lazyLoad(exports, ["ServiceIamPolicy"], () => require("./serviceIamPolicy"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "gcp:endpoints/consumersIamBinding:ConsumersIamBinding":
                return new ConsumersIamBinding(name, <any>undefined, { urn })
            case "gcp:endpoints/consumersIamMember:ConsumersIamMember":
                return new ConsumersIamMember(name, <any>undefined, { urn })
            case "gcp:endpoints/consumersIamPolicy:ConsumersIamPolicy":
                return new ConsumersIamPolicy(name, <any>undefined, { urn })
            case "gcp:endpoints/service:Service":
                return new Service(name, <any>undefined, { urn })
            case "gcp:endpoints/serviceIamBinding:ServiceIamBinding":
                return new ServiceIamBinding(name, <any>undefined, { urn })
            case "gcp:endpoints/serviceIamMember:ServiceIamMember":
                return new ServiceIamMember(name, <any>undefined, { urn })
            case "gcp:endpoints/serviceIamPolicy:ServiceIamPolicy":
                return new ServiceIamPolicy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "endpoints/consumersIamBinding", _module)
pulumi.runtime.registerResourceModule("gcp", "endpoints/consumersIamMember", _module)
pulumi.runtime.registerResourceModule("gcp", "endpoints/consumersIamPolicy", _module)
pulumi.runtime.registerResourceModule("gcp", "endpoints/service", _module)
pulumi.runtime.registerResourceModule("gcp", "endpoints/serviceIamBinding", _module)
pulumi.runtime.registerResourceModule("gcp", "endpoints/serviceIamMember", _module)
pulumi.runtime.registerResourceModule("gcp", "endpoints/serviceIamPolicy", _module)
