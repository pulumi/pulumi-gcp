// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Get a spanner instance from Google Cloud by its name.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const foo = pulumi.output(gcp.spanner.getInstance({
 *     name: "bar",
 * }));
 * ```
 */
export function getInstance(args: GetInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetInstanceResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("gcp:spanner/getInstance:getInstance", {
        "config": args.config,
        "displayName": args.displayName,
        "forceDestroy": args.forceDestroy,
        "labels": args.labels,
        "name": args.name,
        "numNodes": args.numNodes,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getInstance.
 */
export interface GetInstanceArgs {
    config?: string;
    displayName?: string;
    forceDestroy?: boolean;
    labels?: {[key: string]: string};
    /**
     * The name of the spanner instance.
     */
    name: string;
    numNodes?: number;
    /**
     * The project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    project?: string;
}

/**
 * A collection of values returned by getInstance.
 */
export interface GetInstanceResult {
    readonly config?: string;
    readonly displayName?: string;
    readonly forceDestroy?: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly labels?: {[key: string]: string};
    readonly name: string;
    readonly numNodes?: number;
    readonly project?: string;
    readonly state: string;
}
