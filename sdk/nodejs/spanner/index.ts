// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./database";
export * from "./databaseIAMBinding";
export * from "./databaseIAMMember";
export * from "./databaseIAMPolicy";
export * from "./getInstance";
export * from "./instance";
export * from "./instanceIAMBinding";
export * from "./instanceIAMMember";
export * from "./instanceIAMPolicy";

// Import resources to register:
import { Database } from "./database";
import { DatabaseIAMBinding } from "./databaseIAMBinding";
import { DatabaseIAMMember } from "./databaseIAMMember";
import { DatabaseIAMPolicy } from "./databaseIAMPolicy";
import { Instance } from "./instance";
import { InstanceIAMBinding } from "./instanceIAMBinding";
import { InstanceIAMMember } from "./instanceIAMMember";
import { InstanceIAMPolicy } from "./instanceIAMPolicy";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "gcp:spanner/database:Database":
                return new Database(name, <any>undefined, { urn })
            case "gcp:spanner/databaseIAMBinding:DatabaseIAMBinding":
                return new DatabaseIAMBinding(name, <any>undefined, { urn })
            case "gcp:spanner/databaseIAMMember:DatabaseIAMMember":
                return new DatabaseIAMMember(name, <any>undefined, { urn })
            case "gcp:spanner/databaseIAMPolicy:DatabaseIAMPolicy":
                return new DatabaseIAMPolicy(name, <any>undefined, { urn })
            case "gcp:spanner/instance:Instance":
                return new Instance(name, <any>undefined, { urn })
            case "gcp:spanner/instanceIAMBinding:InstanceIAMBinding":
                return new InstanceIAMBinding(name, <any>undefined, { urn })
            case "gcp:spanner/instanceIAMMember:InstanceIAMMember":
                return new InstanceIAMMember(name, <any>undefined, { urn })
            case "gcp:spanner/instanceIAMPolicy:InstanceIAMPolicy":
                return new InstanceIAMPolicy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "spanner/database", _module)
pulumi.runtime.registerResourceModule("gcp", "spanner/databaseIAMBinding", _module)
pulumi.runtime.registerResourceModule("gcp", "spanner/databaseIAMMember", _module)
pulumi.runtime.registerResourceModule("gcp", "spanner/databaseIAMPolicy", _module)
pulumi.runtime.registerResourceModule("gcp", "spanner/instance", _module)
pulumi.runtime.registerResourceModule("gcp", "spanner/instanceIAMBinding", _module)
pulumi.runtime.registerResourceModule("gcp", "spanner/instanceIAMMember", _module)
pulumi.runtime.registerResourceModule("gcp", "spanner/instanceIAMPolicy", _module)
