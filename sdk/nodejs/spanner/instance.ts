// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";

/**
 * Creates and manages a Google Spanner Instance. For more information, see the [official documentation](https://cloud.google.com/spanner/), or the [JSON API](https://cloud.google.com/spanner/docs/reference/rest/v1/projects.instances).
 */
export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceState): Instance {
        return new Instance(name, <any>state, { id });
    }

    /**
     * The name of the instance's configuration (similar but not
     * quite the same as a region) which defines defines the geographic placement and
     * replication of your databases in this instance. It determines where your data
     * is stored. Values are typically of the form `regional-europe-west1` , `us-central` etc.
     * In order to obtain a valid list please consult the
     * [Configuration section of the docs](https://cloud.google.com/spanner/docs/instances).
     */
    public readonly config: pulumi.Output<string>;
    /**
     * The descriptive name for this instance as it appears
     * in UIs. Can be updated, however should be kept globally unique to avoid confusion.
     */
    public readonly displayName: pulumi.Output<string>;
    /**
     * A mapping (key/value pairs) of labels to assign to the instance.
     */
    public readonly labels: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The unique name (ID) of the instance. If the name is left
     * blank, Terraform will randomly generate one when the instance is first
     * created.
     */
    public readonly name: pulumi.Output<string>;
    /**
     * The number of nodes allocated to this instance.
     * Defaults to `1`. This can be updated after creation.
     */
    public readonly numNodes: pulumi.Output<number | undefined>;
    /**
     * The ID of the project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    public readonly project: pulumi.Output<string>;
    /**
     * The current state of the instance.
     */
    public /*out*/ readonly state: pulumi.Output<string>;

    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceArgs, opts?: pulumi.ResourceOptions)
    constructor(name: string, argsOrState?: InstanceArgs | InstanceState, opts?: pulumi.ResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: InstanceState = argsOrState as InstanceState | undefined;
            inputs["config"] = state ? state.config : undefined;
            inputs["displayName"] = state ? state.displayName : undefined;
            inputs["labels"] = state ? state.labels : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["numNodes"] = state ? state.numNodes : undefined;
            inputs["project"] = state ? state.project : undefined;
            inputs["state"] = state ? state.state : undefined;
        } else {
            const args = argsOrState as InstanceArgs | undefined;
            if (!args || args.config === undefined) {
                throw new Error("Missing required property 'config'");
            }
            if (!args || args.displayName === undefined) {
                throw new Error("Missing required property 'displayName'");
            }
            inputs["config"] = args ? args.config : undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["labels"] = args ? args.labels : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["numNodes"] = args ? args.numNodes : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["state"] = undefined /*out*/;
        }
        super("gcp:spanner/instance:Instance", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Instance resources.
 */
export interface InstanceState {
    /**
     * The name of the instance's configuration (similar but not
     * quite the same as a region) which defines defines the geographic placement and
     * replication of your databases in this instance. It determines where your data
     * is stored. Values are typically of the form `regional-europe-west1` , `us-central` etc.
     * In order to obtain a valid list please consult the
     * [Configuration section of the docs](https://cloud.google.com/spanner/docs/instances).
     */
    readonly config?: pulumi.Input<string>;
    /**
     * The descriptive name for this instance as it appears
     * in UIs. Can be updated, however should be kept globally unique to avoid confusion.
     */
    readonly displayName?: pulumi.Input<string>;
    /**
     * A mapping (key/value pairs) of labels to assign to the instance.
     */
    readonly labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The unique name (ID) of the instance. If the name is left
     * blank, Terraform will randomly generate one when the instance is first
     * created.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The number of nodes allocated to this instance.
     * Defaults to `1`. This can be updated after creation.
     */
    readonly numNodes?: pulumi.Input<number>;
    /**
     * The ID of the project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
    /**
     * The current state of the instance.
     */
    readonly state?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * The name of the instance's configuration (similar but not
     * quite the same as a region) which defines defines the geographic placement and
     * replication of your databases in this instance. It determines where your data
     * is stored. Values are typically of the form `regional-europe-west1` , `us-central` etc.
     * In order to obtain a valid list please consult the
     * [Configuration section of the docs](https://cloud.google.com/spanner/docs/instances).
     */
    readonly config: pulumi.Input<string>;
    /**
     * The descriptive name for this instance as it appears
     * in UIs. Can be updated, however should be kept globally unique to avoid confusion.
     */
    readonly displayName: pulumi.Input<string>;
    /**
     * A mapping (key/value pairs) of labels to assign to the instance.
     */
    readonly labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The unique name (ID) of the instance. If the name is left
     * blank, Terraform will randomly generate one when the instance is first
     * created.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The number of nodes allocated to this instance.
     * Defaults to `1`. This can be updated after creation.
     */
    readonly numNodes?: pulumi.Input<number>;
    /**
     * The ID of the project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
}
