// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * LbRouteExtension is a resource that lets you control where traffic is routed to for a given request.
 *
 * To get more information about LbRouteExtension, see:
 *
 * * [API documentation](https://cloud.google.com/service-extensions/docs/reference/rest/v1beta1/projects.locations.lbRouteExtensions)
 * * How-to Guides
 *     * [Configure a route extension](https://cloud.google.com/service-extensions/docs/configure-callout#configure_a_route_extension)
 *
 * ## Example Usage
 *
 * ## Import
 *
 * LbRouteExtension can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/locations/{{location}}/lbRouteExtensions/{{name}}`
 *
 * * `{{project}}/{{location}}/{{name}}`
 *
 * * `{{location}}/{{name}}`
 *
 * When using the `pulumi import` command, LbRouteExtension can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:networkservices/lbRouteExtension:LbRouteExtension default projects/{{project}}/locations/{{location}}/lbRouteExtensions/{{name}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:networkservices/lbRouteExtension:LbRouteExtension default {{project}}/{{location}}/{{name}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:networkservices/lbRouteExtension:LbRouteExtension default {{location}}/{{name}}
 * ```
 */
export class LbRouteExtension extends pulumi.CustomResource {
    /**
     * Get an existing LbRouteExtension resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LbRouteExtensionState, opts?: pulumi.CustomResourceOptions): LbRouteExtension {
        return new LbRouteExtension(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:networkservices/lbRouteExtension:LbRouteExtension';

    /**
     * Returns true if the given object is an instance of LbRouteExtension.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LbRouteExtension {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LbRouteExtension.__pulumiType;
    }

    /**
     * A human-readable description of the resource.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     */
    declare public /*out*/ readonly effectiveLabels: pulumi.Output<{[key: string]: string}>;
    /**
     * A set of ordered extension chains that contain the match conditions and extensions to execute.
     * Match conditions for each extension chain are evaluated in sequence for a given request.
     * The first extension chain that has a condition that matches the request is executed.
     * Any subsequent extension chains do not execute. Limited to 5 extension chains per resource.
     * Structure is documented below.
     */
    declare public readonly extensionChains: pulumi.Output<outputs.networkservices.LbRouteExtensionExtensionChain[]>;
    /**
     * A list of references to the forwarding rules to which this service extension is attached to.
     * At least one forwarding rule is required. There can be only one LbRouteExtension resource per forwarding rule.
     */
    declare public readonly forwardingRules: pulumi.Output<string[]>;
    /**
     * Set of labels associated with the LbRouteExtension resource.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    declare public readonly labels: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * All backend services and forwarding rules referenced by this extension must share the same load balancing scheme.
     * For more information, refer to [Choosing a load balancer](https://cloud.google.com/load-balancing/docs/backend-service) and
     * [Supported application load balancers](https://cloud.google.com/service-extensions/docs/callouts-overview#supported-lbs).
     * Possible values are: `INTERNAL_MANAGED`, `EXTERNAL_MANAGED`.
     */
    declare public readonly loadBalancingScheme: pulumi.Output<string>;
    /**
     * The location of the route extension
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * Name of the LbRouteExtension resource in the following format: projects/{project}/locations/{location}/lbRouteExtensions/{lbRouteExtension}
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    declare public readonly project: pulumi.Output<string>;
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     */
    declare public /*out*/ readonly pulumiLabels: pulumi.Output<{[key: string]: string}>;

    /**
     * Create a LbRouteExtension resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LbRouteExtensionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LbRouteExtensionArgs | LbRouteExtensionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LbRouteExtensionState | undefined;
            resourceInputs["description"] = state?.description;
            resourceInputs["effectiveLabels"] = state?.effectiveLabels;
            resourceInputs["extensionChains"] = state?.extensionChains;
            resourceInputs["forwardingRules"] = state?.forwardingRules;
            resourceInputs["labels"] = state?.labels;
            resourceInputs["loadBalancingScheme"] = state?.loadBalancingScheme;
            resourceInputs["location"] = state?.location;
            resourceInputs["name"] = state?.name;
            resourceInputs["project"] = state?.project;
            resourceInputs["pulumiLabels"] = state?.pulumiLabels;
        } else {
            const args = argsOrState as LbRouteExtensionArgs | undefined;
            if (args?.extensionChains === undefined && !opts.urn) {
                throw new Error("Missing required property 'extensionChains'");
            }
            if (args?.forwardingRules === undefined && !opts.urn) {
                throw new Error("Missing required property 'forwardingRules'");
            }
            if (args?.loadBalancingScheme === undefined && !opts.urn) {
                throw new Error("Missing required property 'loadBalancingScheme'");
            }
            if (args?.location === undefined && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["extensionChains"] = args?.extensionChains;
            resourceInputs["forwardingRules"] = args?.forwardingRules;
            resourceInputs["labels"] = args?.labels;
            resourceInputs["loadBalancingScheme"] = args?.loadBalancingScheme;
            resourceInputs["location"] = args?.location;
            resourceInputs["name"] = args?.name;
            resourceInputs["project"] = args?.project;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["pulumiLabels"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["effectiveLabels", "pulumiLabels"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(LbRouteExtension.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LbRouteExtension resources.
 */
export interface LbRouteExtensionState {
    /**
     * A human-readable description of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     */
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A set of ordered extension chains that contain the match conditions and extensions to execute.
     * Match conditions for each extension chain are evaluated in sequence for a given request.
     * The first extension chain that has a condition that matches the request is executed.
     * Any subsequent extension chains do not execute. Limited to 5 extension chains per resource.
     * Structure is documented below.
     */
    extensionChains?: pulumi.Input<pulumi.Input<inputs.networkservices.LbRouteExtensionExtensionChain>[]>;
    /**
     * A list of references to the forwarding rules to which this service extension is attached to.
     * At least one forwarding rule is required. There can be only one LbRouteExtension resource per forwarding rule.
     */
    forwardingRules?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Set of labels associated with the LbRouteExtension resource.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * All backend services and forwarding rules referenced by this extension must share the same load balancing scheme.
     * For more information, refer to [Choosing a load balancer](https://cloud.google.com/load-balancing/docs/backend-service) and
     * [Supported application load balancers](https://cloud.google.com/service-extensions/docs/callouts-overview#supported-lbs).
     * Possible values are: `INTERNAL_MANAGED`, `EXTERNAL_MANAGED`.
     */
    loadBalancingScheme?: pulumi.Input<string>;
    /**
     * The location of the route extension
     */
    location?: pulumi.Input<string>;
    /**
     * Name of the LbRouteExtension resource in the following format: projects/{project}/locations/{location}/lbRouteExtensions/{lbRouteExtension}
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     */
    pulumiLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a LbRouteExtension resource.
 */
export interface LbRouteExtensionArgs {
    /**
     * A human-readable description of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * A set of ordered extension chains that contain the match conditions and extensions to execute.
     * Match conditions for each extension chain are evaluated in sequence for a given request.
     * The first extension chain that has a condition that matches the request is executed.
     * Any subsequent extension chains do not execute. Limited to 5 extension chains per resource.
     * Structure is documented below.
     */
    extensionChains: pulumi.Input<pulumi.Input<inputs.networkservices.LbRouteExtensionExtensionChain>[]>;
    /**
     * A list of references to the forwarding rules to which this service extension is attached to.
     * At least one forwarding rule is required. There can be only one LbRouteExtension resource per forwarding rule.
     */
    forwardingRules: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Set of labels associated with the LbRouteExtension resource.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * All backend services and forwarding rules referenced by this extension must share the same load balancing scheme.
     * For more information, refer to [Choosing a load balancer](https://cloud.google.com/load-balancing/docs/backend-service) and
     * [Supported application load balancers](https://cloud.google.com/service-extensions/docs/callouts-overview#supported-lbs).
     * Possible values are: `INTERNAL_MANAGED`, `EXTERNAL_MANAGED`.
     */
    loadBalancingScheme: pulumi.Input<string>;
    /**
     * The location of the route extension
     */
    location: pulumi.Input<string>;
    /**
     * Name of the LbRouteExtension resource in the following format: projects/{project}/locations/{location}/lbRouteExtensions/{lbRouteExtension}
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
