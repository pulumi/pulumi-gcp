// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ## Import
 *
 * GrpcRoute can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:networkservices/grpcRoute:GrpcRoute default projects/{{project}}/locations/global/grpcRoutes/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:networkservices/grpcRoute:GrpcRoute default {{project}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:networkservices/grpcRoute:GrpcRoute default {{name}}
 * ```
 */
export class GrpcRoute extends pulumi.CustomResource {
    /**
     * Get an existing GrpcRoute resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GrpcRouteState, opts?: pulumi.CustomResourceOptions): GrpcRoute {
        return new GrpcRoute(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:networkservices/grpcRoute:GrpcRoute';

    /**
     * Returns true if the given object is an instance of GrpcRoute.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GrpcRoute {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GrpcRoute.__pulumiType;
    }

    /**
     * Time the GrpcRoute was created in UTC.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * A free-text description of the resource. Max length 1024 characters.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * List of gateways this GrpcRoute is attached to, as one of the routing rules to route the requests served by the gateway.
     */
    public readonly gateways!: pulumi.Output<string[] | undefined>;
    /**
     * Required. Service hostnames with an optional port for which this route describes traffic.
     */
    public readonly hostnames!: pulumi.Output<string[]>;
    /**
     * Set of label tags associated with the GrpcRoute resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * List of meshes this GrpcRoute is attached to, as one of the routing rules to route the requests served by the mesh.
     */
    public readonly meshes!: pulumi.Output<string[] | undefined>;
    /**
     * Name of the GrpcRoute resource.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * Rules that define how traffic is routed and handled.
     * Structure is documented below.
     */
    public readonly rules!: pulumi.Output<outputs.networkservices.GrpcRouteRule[]>;
    /**
     * Server-defined URL of this resource.
     */
    public /*out*/ readonly selfLink!: pulumi.Output<string>;
    /**
     * Time the GrpcRoute was updated in UTC.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a GrpcRoute resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GrpcRouteArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GrpcRouteArgs | GrpcRouteState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GrpcRouteState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["gateways"] = state ? state.gateways : undefined;
            resourceInputs["hostnames"] = state ? state.hostnames : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["meshes"] = state ? state.meshes : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["rules"] = state ? state.rules : undefined;
            resourceInputs["selfLink"] = state ? state.selfLink : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as GrpcRouteArgs | undefined;
            if ((!args || args.hostnames === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hostnames'");
            }
            if ((!args || args.rules === undefined) && !opts.urn) {
                throw new Error("Missing required property 'rules'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["gateways"] = args ? args.gateways : undefined;
            resourceInputs["hostnames"] = args ? args.hostnames : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["meshes"] = args ? args.meshes : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["rules"] = args ? args.rules : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["selfLink"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GrpcRoute.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering GrpcRoute resources.
 */
export interface GrpcRouteState {
    /**
     * Time the GrpcRoute was created in UTC.
     */
    createTime?: pulumi.Input<string>;
    /**
     * A free-text description of the resource. Max length 1024 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * List of gateways this GrpcRoute is attached to, as one of the routing rules to route the requests served by the gateway.
     */
    gateways?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Required. Service hostnames with an optional port for which this route describes traffic.
     */
    hostnames?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Set of label tags associated with the GrpcRoute resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * List of meshes this GrpcRoute is attached to, as one of the routing rules to route the requests served by the mesh.
     */
    meshes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the GrpcRoute resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * Rules that define how traffic is routed and handled.
     * Structure is documented below.
     */
    rules?: pulumi.Input<pulumi.Input<inputs.networkservices.GrpcRouteRule>[]>;
    /**
     * Server-defined URL of this resource.
     */
    selfLink?: pulumi.Input<string>;
    /**
     * Time the GrpcRoute was updated in UTC.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a GrpcRoute resource.
 */
export interface GrpcRouteArgs {
    /**
     * A free-text description of the resource. Max length 1024 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * List of gateways this GrpcRoute is attached to, as one of the routing rules to route the requests served by the gateway.
     */
    gateways?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Required. Service hostnames with an optional port for which this route describes traffic.
     */
    hostnames: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Set of label tags associated with the GrpcRoute resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * List of meshes this GrpcRoute is attached to, as one of the routing rules to route the requests served by the mesh.
     */
    meshes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the GrpcRoute resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * Rules that define how traffic is routed and handled.
     * Structure is documented below.
     */
    rules: pulumi.Input<pulumi.Input<inputs.networkservices.GrpcRouteRule>[]>;
}
