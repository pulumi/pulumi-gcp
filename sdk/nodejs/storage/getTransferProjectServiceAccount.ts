// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to retrieve Storage Transfer service account for this project
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const default = gcp.storage.getTransferProjectServiceAccount({});
 * export const defaultAccount = _default.then(_default => _default.email);
 * ```
 */
export function getTransferProjectServiceAccount(args?: GetTransferProjectServiceAccountArgs, opts?: pulumi.InvokeOptions): Promise<GetTransferProjectServiceAccountResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:storage/getTransferProjectServiceAccount:getTransferProjectServiceAccount", {
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getTransferProjectServiceAccount.
 */
export interface GetTransferProjectServiceAccountArgs {
    /**
     * The project ID. If it is not provided, the provider project is used.
     */
    project?: string;
}

/**
 * A collection of values returned by getTransferProjectServiceAccount.
 */
export interface GetTransferProjectServiceAccountResult {
    /**
     * Email address of the default service account used by Storage Transfer Jobs running in this project.
     */
    readonly email: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The Identity of the service account in the form `serviceAccount:{email}`. This value is often used to refer to the service account in order to grant IAM permissions.
     */
    readonly member: string;
    readonly project: string;
    /**
     * Unique identifier for the service account.
     */
    readonly subjectId: string;
}
/**
 * Use this data source to retrieve Storage Transfer service account for this project
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const default = gcp.storage.getTransferProjectServiceAccount({});
 * export const defaultAccount = _default.then(_default => _default.email);
 * ```
 */
export function getTransferProjectServiceAccountOutput(args?: GetTransferProjectServiceAccountOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTransferProjectServiceAccountResult> {
    return pulumi.output(args).apply((a: any) => getTransferProjectServiceAccount(a, opts))
}

/**
 * A collection of arguments for invoking getTransferProjectServiceAccount.
 */
export interface GetTransferProjectServiceAccountOutputArgs {
    /**
     * The project ID. If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
