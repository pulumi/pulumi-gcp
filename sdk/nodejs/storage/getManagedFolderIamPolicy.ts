// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function getManagedFolderIamPolicy(args: GetManagedFolderIamPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetManagedFolderIamPolicyResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:storage/getManagedFolderIamPolicy:getManagedFolderIamPolicy", {
        "bucket": args.bucket,
        "managedFolder": args.managedFolder,
    }, opts);
}

/**
 * A collection of arguments for invoking getManagedFolderIamPolicy.
 */
export interface GetManagedFolderIamPolicyArgs {
    bucket: string;
    managedFolder: string;
}

/**
 * A collection of values returned by getManagedFolderIamPolicy.
 */
export interface GetManagedFolderIamPolicyResult {
    readonly bucket: string;
    readonly etag: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly managedFolder: string;
    readonly policyData: string;
}
export function getManagedFolderIamPolicyOutput(args: GetManagedFolderIamPolicyOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetManagedFolderIamPolicyResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("gcp:storage/getManagedFolderIamPolicy:getManagedFolderIamPolicy", {
        "bucket": args.bucket,
        "managedFolder": args.managedFolder,
    }, opts);
}

/**
 * A collection of arguments for invoking getManagedFolderIamPolicy.
 */
export interface GetManagedFolderIamPolicyOutputArgs {
    bucket: pulumi.Input<string>;
    managedFolder: pulumi.Input<string>;
}
