// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { Bucket } from "./bucket";
import * as cloudfunctions from "../cloudfunctions";

export interface BucketEventCallbackFunctionArgs extends cloudfunctions.CallbackFunctionArgs {
    callback?: BucketEventHandler;
    callbackFactory?: () => BucketEventHandler;
    httpsTriggerUrl?: never;
    triggerHttp?: never;
}

export interface BucketFinalizedArgs {
    failurePolicy?: cloudfunctions.FailurePolicy;
}
export interface BucketDeletedArgs {
    failurePolicy?: cloudfunctions.FailurePolicy;
}
export interface BucketArchivedArgs {
    failurePolicy?: cloudfunctions.FailurePolicy;
}
export interface BucketMetadataUpdatedArgs {
    failurePolicy?: cloudfunctions.FailurePolicy;
}

export interface BucketEventArgs {
    triggerType: "finalize" | "delete" | "archive" | "metadataUpdate";
    failurePolicy?: cloudfunctions.FailurePolicy;
}

export interface BucketEvent {
    "kind": "storage#object",
    "id": string,
    "selfLink": string,
    "name": string,
    "bucket": string,
    "generation": number,
    "metageneration": number,
    "contentType": string,
    "timeCreated": Date,
    "updated": Date,
    "timeDeleted": Date,
    "temporaryHold": boolean,
    "eventBasedHold": boolean,
    "retentionExpirationTime": Date,
    "storageClass": string,
    "timeStorageClassUpdated": Date,
    "size": number,
    "md5Hash": string,
    "mediaLink": string,
    "contentEncoding": string,
    "contentDisposition": string,
    "contentLanguage": string,
    "cacheControl": string,
    "metadata": {
        (key): string
    },
    "acl": [
        {
            "kind": "storage#objectAccessControl",
            "id": string,
            "selfLink": string,
            "bucket": string,
            "object": string,
            "generation": number,
            "entity": string,
            "role": string,
            "email": string,
            "entityId": string,
            "domain": string,
            "projectTeam": {
                "projectNumber": string,
                "team": string
            },
            "etag": string
        }
    ],
    "owner": {
        "entity": string,
        "entityId": string
    },
    "crc32c": string,
    "componentCount": number,
    "etag": string,
    "customerEncryption": {
        "encryptionAlgorithm": string,
        "keySha256": string
    },
    "kmsKeyName": string
}

export type BucketEventHandler = cloudfunctions.Callback<BucketEvent, void>;

declare module "./bucket" {
    interface Bucket {
        onObjectFinalized(name: string, handler: BucketEventHandler, args?: BucketFinalizedArgs, opts?: pulumi.ComponentResourceOptions): cloudfunctions.CallbackFunction;
        onObjectDeleted(name: string, handler: BucketEventHandler, args?: BucketDeletedArgs, opts?: pulumi.ComponentResourceOptions): cloudfunctions.CallbackFunction;
        onObjectArchived(name: string, handler: BucketEventHandler, args?: BucketArchivedArgs, opts?: pulumi.ComponentResourceOptions): cloudfunctions.CallbackFunction;
        onObjectMetadataUpdated(name: string, handler: BucketEventHandler, args?: BucketMetadataUpdatedArgs, opts?: pulumi.ComponentResourceOptions): cloudfunctions.CallbackFunction;

        onObjectEvent(name: string, handler: BucketEventHandler, args: BucketEventArgs, opts?: pulumi.ComponentResourceOptions): cloudfunctions.CallbackFunction;
    }
}

Bucket.prototype.onObjectFinalized = function (this: Bucket, name, handler, args, opts) {
    return this.onObjectEvent(name, handler, { ...args, triggerType: "finalize" }, opts);
}

Bucket.prototype.onObjectDeleted = function (this: Bucket, name, handler, args, opts) {
    return this.onObjectEvent(name, handler, { ...args, triggerType: "delete" }, opts);
}

Bucket.prototype.onObjectArchived = function (this: Bucket, name, handler, args, opts) {
    return this.onObjectEvent(name, handler, { ...args, triggerType: "archive" }, opts);
}

Bucket.prototype.onObjectMetadataUpdated = function (this: Bucket, name, handler, args, opts) {
    return this.onObjectEvent(name, handler, { ...args, triggerType: "metadataUpdate" }, opts);
}

Bucket.prototype.onObjectEvent = function (this: Bucket, name, handler, args, opts = {}) {
    return new cloudfunctions.CallbackFunction(name, {
        callback: handler,
        eventTrigger: {
            resource: this.name,
            failurePolicy: args.failurePolicy,
            eventType: `google.storage.object.${args.triggerType}`,
        }
    }, { parent: this, ...opts})
}
