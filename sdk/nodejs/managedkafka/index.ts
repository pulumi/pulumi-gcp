// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ClusterArgs, ClusterState } from "./cluster";
export type Cluster = import("./cluster").Cluster;
export const Cluster: typeof import("./cluster").Cluster = null as any;
utilities.lazyLoad(exports, ["Cluster"], () => require("./cluster"));

export { ConnectClusterArgs, ConnectClusterState } from "./connectCluster";
export type ConnectCluster = import("./connectCluster").ConnectCluster;
export const ConnectCluster: typeof import("./connectCluster").ConnectCluster = null as any;
utilities.lazyLoad(exports, ["ConnectCluster"], () => require("./connectCluster"));

export { ConnectorArgs, ConnectorState } from "./connector";
export type Connector = import("./connector").Connector;
export const Connector: typeof import("./connector").Connector = null as any;
utilities.lazyLoad(exports, ["Connector"], () => require("./connector"));

export { TopicArgs, TopicState } from "./topic";
export type Topic = import("./topic").Topic;
export const Topic: typeof import("./topic").Topic = null as any;
utilities.lazyLoad(exports, ["Topic"], () => require("./topic"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "gcp:managedkafka/cluster:Cluster":
                return new Cluster(name, <any>undefined, { urn })
            case "gcp:managedkafka/connectCluster:ConnectCluster":
                return new ConnectCluster(name, <any>undefined, { urn })
            case "gcp:managedkafka/connector:Connector":
                return new Connector(name, <any>undefined, { urn })
            case "gcp:managedkafka/topic:Topic":
                return new Topic(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "managedkafka/cluster", _module)
pulumi.runtime.registerResourceModule("gcp", "managedkafka/connectCluster", _module)
pulumi.runtime.registerResourceModule("gcp", "managedkafka/connector", _module)
pulumi.runtime.registerResourceModule("gcp", "managedkafka/topic", _module)
