// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Insights View resource for filtering conversations
 *
 * To get more information about View, see:
 *
 * * [API documentation](https://cloud.google.com/contact-center/insights/docs/reference/rest/v1/projects.locations.views)
 *
 * ## Example Usage
 *
 * ### Contact Center Insights View Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const basicView = new gcp.contactcenterinsights.View("basic_view", {
 *     location: "us-central1",
 *     displayName: "view-display-name",
 *     value: "medium=\"CHAT\"",
 * });
 * ```
 * ### Contact Center Insights View Full
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const fullView = new gcp.contactcenterinsights.View("full_view", {
 *     location: "us-central1",
 *     displayName: "view-display-name",
 *     value: "medium=\"PHONE_CALL\"",
 * });
 * ```
 *
 * ## Import
 *
 * View can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/locations/{{location}}/views/{{name}}`
 *
 * * `{{project}}/{{location}}/{{name}}`
 *
 * * `{{location}}/{{name}}`
 *
 * When using the `pulumi import` command, View can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:contactcenterinsights/view:View default projects/{{project}}/locations/{{location}}/views/{{name}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:contactcenterinsights/view:View default {{project}}/{{location}}/{{name}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:contactcenterinsights/view:View default {{location}}/{{name}}
 * ```
 */
export class View extends pulumi.CustomResource {
    /**
     * Get an existing View resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ViewState, opts?: pulumi.CustomResourceOptions): View {
        return new View(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:contactcenterinsights/view:View';

    /**
     * Returns true if the given object is an instance of View.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is View {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === View.__pulumiType;
    }

    /**
     * Output only. The time at which this view was created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The human-readable display name of the view.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * Location of the resource.
     *
     *
     * - - -
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The resource name of the view. Randomly generated by Insights.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * Output only. The most recent time at which the view was updated.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * A filter to reduce conversation results to a specific subset.
     * Refer to https://cloud.google.com/contact-center/insights/docs/filtering
     * for details.
     */
    public readonly value!: pulumi.Output<string | undefined>;

    /**
     * Create a View resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ViewArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ViewArgs | ViewState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ViewState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
            resourceInputs["value"] = state ? state.value : undefined;
        } else {
            const args = argsOrState as ViewArgs | undefined;
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["value"] = args ? args.value : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(View.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering View resources.
 */
export interface ViewState {
    /**
     * Output only. The time at which this view was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The human-readable display name of the view.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Location of the resource.
     *
     *
     * - - -
     */
    location?: pulumi.Input<string>;
    /**
     * The resource name of the view. Randomly generated by Insights.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * Output only. The most recent time at which the view was updated.
     */
    updateTime?: pulumi.Input<string>;
    /**
     * A filter to reduce conversation results to a specific subset.
     * Refer to https://cloud.google.com/contact-center/insights/docs/filtering
     * for details.
     */
    value?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a View resource.
 */
export interface ViewArgs {
    /**
     * The human-readable display name of the view.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Location of the resource.
     *
     *
     * - - -
     */
    location: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * A filter to reduce conversation results to a specific subset.
     * Refer to https://cloud.google.com/contact-center/insights/docs/filtering
     * for details.
     */
    value?: pulumi.Input<string>;
}
