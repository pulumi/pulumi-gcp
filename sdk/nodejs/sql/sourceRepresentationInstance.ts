// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 * ### Sql Source Representation Instance Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const instance = new gcp.sql.SourceRepresentationInstance("instance", {
 *     databaseVersion: "MYSQL_8_0",
 *     dumpFilePath: "gs://replica-bucket/source-database.sql.gz",
 *     host: "10.20.30.40",
 *     password: "password-for-the-user",
 *     port: 3306,
 *     region: "us-central1",
 *     username: "some-user",
 * });
 * ```
 *
 * ## Import
 *
 * SourceRepresentationInstance can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:sql/sourceRepresentationInstance:SourceRepresentationInstance default projects/{{project}}/instances/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:sql/sourceRepresentationInstance:SourceRepresentationInstance default {{project}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:sql/sourceRepresentationInstance:SourceRepresentationInstance default {{name}}
 * ```
 */
export class SourceRepresentationInstance extends pulumi.CustomResource {
    /**
     * Get an existing SourceRepresentationInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SourceRepresentationInstanceState, opts?: pulumi.CustomResourceOptions): SourceRepresentationInstance {
        return new SourceRepresentationInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:sql/sourceRepresentationInstance:SourceRepresentationInstance';

    /**
     * Returns true if the given object is an instance of SourceRepresentationInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SourceRepresentationInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SourceRepresentationInstance.__pulumiType;
    }

    /**
     * The CA certificate on the external server. Include only if SSL/TLS is used on the external server.
     */
    public readonly caCertificate!: pulumi.Output<string | undefined>;
    /**
     * The client certificate on the external server. Required only for server-client authentication. Include only if SSL/TLS is used on the external server.
     */
    public readonly clientCertificate!: pulumi.Output<string | undefined>;
    /**
     * The private key file for the client certificate on the external server. Required only for server-client authentication. Include only if SSL/TLS is used on the external server.
     */
    public readonly clientKey!: pulumi.Output<string | undefined>;
    /**
     * The MySQL version running on your source database server.
     * Possible values are `MYSQL_5_5`, `MYSQL_5_6`, `MYSQL_5_7`, and `MYSQL_8_0`.
     */
    public readonly databaseVersion!: pulumi.Output<string>;
    /**
     * A file in the bucket that contains the data from the external server.
     */
    public readonly dumpFilePath!: pulumi.Output<string | undefined>;
    /**
     * The externally accessible IPv4 address for the source database server.
     */
    public readonly host!: pulumi.Output<string>;
    /**
     * The name of the source representation instance. Use any valid Cloud SQL instance name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The password for the replication user account.
     * **Note**: This property is sensitive and will not be displayed in the plan.
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * The externally accessible port for the source database server.
     * Defaults to 3306.
     */
    public readonly port!: pulumi.Output<number | undefined>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * The Region in which the created instance should reside.
     * If it is not provided, the provider region is used.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * The replication user account on the external server.
     */
    public readonly username!: pulumi.Output<string | undefined>;

    /**
     * Create a SourceRepresentationInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SourceRepresentationInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SourceRepresentationInstanceArgs | SourceRepresentationInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SourceRepresentationInstanceState | undefined;
            resourceInputs["caCertificate"] = state ? state.caCertificate : undefined;
            resourceInputs["clientCertificate"] = state ? state.clientCertificate : undefined;
            resourceInputs["clientKey"] = state ? state.clientKey : undefined;
            resourceInputs["databaseVersion"] = state ? state.databaseVersion : undefined;
            resourceInputs["dumpFilePath"] = state ? state.dumpFilePath : undefined;
            resourceInputs["host"] = state ? state.host : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
        } else {
            const args = argsOrState as SourceRepresentationInstanceArgs | undefined;
            if ((!args || args.databaseVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'databaseVersion'");
            }
            if ((!args || args.host === undefined) && !opts.urn) {
                throw new Error("Missing required property 'host'");
            }
            resourceInputs["caCertificate"] = args ? args.caCertificate : undefined;
            resourceInputs["clientCertificate"] = args ? args.clientCertificate : undefined;
            resourceInputs["clientKey"] = args ? args.clientKey : undefined;
            resourceInputs["databaseVersion"] = args ? args.databaseVersion : undefined;
            resourceInputs["dumpFilePath"] = args ? args.dumpFilePath : undefined;
            resourceInputs["host"] = args ? args.host : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["region"] = args ? args.region : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(SourceRepresentationInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SourceRepresentationInstance resources.
 */
export interface SourceRepresentationInstanceState {
    /**
     * The CA certificate on the external server. Include only if SSL/TLS is used on the external server.
     */
    caCertificate?: pulumi.Input<string>;
    /**
     * The client certificate on the external server. Required only for server-client authentication. Include only if SSL/TLS is used on the external server.
     */
    clientCertificate?: pulumi.Input<string>;
    /**
     * The private key file for the client certificate on the external server. Required only for server-client authentication. Include only if SSL/TLS is used on the external server.
     */
    clientKey?: pulumi.Input<string>;
    /**
     * The MySQL version running on your source database server.
     * Possible values are `MYSQL_5_5`, `MYSQL_5_6`, `MYSQL_5_7`, and `MYSQL_8_0`.
     */
    databaseVersion?: pulumi.Input<string>;
    /**
     * A file in the bucket that contains the data from the external server.
     */
    dumpFilePath?: pulumi.Input<string>;
    /**
     * The externally accessible IPv4 address for the source database server.
     */
    host?: pulumi.Input<string>;
    /**
     * The name of the source representation instance. Use any valid Cloud SQL instance name.
     */
    name?: pulumi.Input<string>;
    /**
     * The password for the replication user account.
     * **Note**: This property is sensitive and will not be displayed in the plan.
     */
    password?: pulumi.Input<string>;
    /**
     * The externally accessible port for the source database server.
     * Defaults to 3306.
     */
    port?: pulumi.Input<number>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The Region in which the created instance should reside.
     * If it is not provided, the provider region is used.
     */
    region?: pulumi.Input<string>;
    /**
     * The replication user account on the external server.
     */
    username?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SourceRepresentationInstance resource.
 */
export interface SourceRepresentationInstanceArgs {
    /**
     * The CA certificate on the external server. Include only if SSL/TLS is used on the external server.
     */
    caCertificate?: pulumi.Input<string>;
    /**
     * The client certificate on the external server. Required only for server-client authentication. Include only if SSL/TLS is used on the external server.
     */
    clientCertificate?: pulumi.Input<string>;
    /**
     * The private key file for the client certificate on the external server. Required only for server-client authentication. Include only if SSL/TLS is used on the external server.
     */
    clientKey?: pulumi.Input<string>;
    /**
     * The MySQL version running on your source database server.
     * Possible values are `MYSQL_5_5`, `MYSQL_5_6`, `MYSQL_5_7`, and `MYSQL_8_0`.
     */
    databaseVersion: pulumi.Input<string>;
    /**
     * A file in the bucket that contains the data from the external server.
     */
    dumpFilePath?: pulumi.Input<string>;
    /**
     * The externally accessible IPv4 address for the source database server.
     */
    host: pulumi.Input<string>;
    /**
     * The name of the source representation instance. Use any valid Cloud SQL instance name.
     */
    name?: pulumi.Input<string>;
    /**
     * The password for the replication user account.
     * **Note**: This property is sensitive and will not be displayed in the plan.
     */
    password?: pulumi.Input<string>;
    /**
     * The externally accessible port for the source database server.
     * Defaults to 3306.
     */
    port?: pulumi.Input<number>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The Region in which the created instance should reside.
     * If it is not provided, the provider region is used.
     */
    region?: pulumi.Input<string>;
    /**
     * The replication user account on the external server.
     */
    username?: pulumi.Input<string>;
}
