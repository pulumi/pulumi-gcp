// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Creates a new Google SQL Database Instance. For more information, see the [official documentation](https://cloud.google.com/sql/),
 * or the [JSON API](https://cloud.google.com/sql/docs/admin-api/v1beta4/instances).
 *
 * > **NOTE on `gcp.sql.DatabaseInstance`:** - First-generation instances have been
 * deprecated and should no longer be created, see [upgrade docs](https://cloud.google.com/sql/docs/mysql/upgrade-2nd-gen)
 * for more details.
 * To upgrade your First-generation instance, update your config that the instance has
 * * `settings.ip_configuration.ipv4_enabled=true`
 * * `settings.backup_configuration.enabled=true`
 * * `settings.backup_configuration.binary_log_enabled=true`.\
 *   Apply the config, then upgrade the instance in the console as described in the documentation.
 *   Once upgraded, update the following attributes in your config to the correct value according to
 *   the above documentation:
 * * `region`
 * * `databaseVersion` (if applicable)
 * * `tier`\
 *   Remove any fields that are not applicable to Second-generation instances:
 * * `settings.crash_safe_replication`
 * * `settings.replication_type`
 * * `settings.authorized_gae_applications`
 *   And change values to appropriate values for Second-generation instances for:
 * * `activationPolicy` ("ON_DEMAND" is no longer an option)
 * * `pricingPlan` ("PER_USE" is now the only valid option)
 *   Change `settings.backup_configuration.enabled` attribute back to its desired value and apply as necessary.
 *
 * > **NOTE on `gcp.sql.DatabaseInstance`:** - Second-generation instances include a
 * default 'root'@'%' user with no password. This user will be deleted by the provider on
 * instance creation. You should use `gcp.sql.User` to define a custom user with
 * a restricted host and strong password.
 *
 * > **Note**: On newer versions of the provider, you must explicitly set `deletion_protection=false`
 * (and run `pulumi update` to write the field to state) in order to destroy an instance.
 * It is recommended to not set this field (or set it to true) until you're ready to destroy the instance and its databases.
 *
 * ## Example Usage
 * ### SQL Second Generation Instance
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const master = new gcp.sql.DatabaseInstance("master", {
 *     databaseVersion: "POSTGRES_11",
 *     region: "us-central1",
 *     settings: {
 *         // Second-generation instance tiers are based on the machine
 *         // type. See argument reference below.
 *         tier: "db-f1-micro",
 *     },
 * });
 * ```
 * ### Private IP Instance
 * > **NOTE:** For private IP instance setup, note that the `gcp.sql.DatabaseInstance` does not actually interpolate values from `gcp.servicenetworking.Connection`. You must explicitly add a `dependsOn`reference as shown below.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * import * as random from "@pulumi/random";
 *
 * const privateNetwork = new gcp.compute.Network("privateNetwork", {}, {
 *     provider: google_beta,
 * });
 * const privateIpAddress = new gcp.compute.GlobalAddress("privateIpAddress", {
 *     purpose: "VPC_PEERING",
 *     addressType: "INTERNAL",
 *     prefixLength: 16,
 *     network: privateNetwork.id,
 * }, {
 *     provider: google_beta,
 * });
 * const privateVpcConnection = new gcp.servicenetworking.Connection("privateVpcConnection", {
 *     network: privateNetwork.id,
 *     service: "servicenetworking.googleapis.com",
 *     reservedPeeringRanges: [privateIpAddress.name],
 * }, {
 *     provider: google_beta,
 * });
 * const dbNameSuffix = new random.RandomId("dbNameSuffix", {byteLength: 4});
 * const instance = new gcp.sql.DatabaseInstance("instance", {
 *     region: "us-central1",
 *     settings: {
 *         tier: "db-f1-micro",
 *         ipConfiguration: {
 *             ipv4Enabled: false,
 *             privateNetwork: privateNetwork.id,
 *         },
 *     },
 * }, {
 *     provider: google_beta,
 *     dependsOn: [privateVpcConnection],
 * });
 * ```
 *
 * ## Import
 *
 * Database instances can be imported using one of any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:sql/databaseInstance:DatabaseInstance master projects/{{project}}/instances/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:sql/databaseInstance:DatabaseInstance master {{project}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:sql/databaseInstance:DatabaseInstance master {{name}}
 * ```
 *
 *  config and set on the server. When importing, double-check that your config has all the fields set that you expect- just seeing no diff isn't sufficient to know that your config could reproduce the imported resource.
 */
export class DatabaseInstance extends pulumi.CustomResource {
    /**
     * Get an existing DatabaseInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatabaseInstanceState, opts?: pulumi.CustomResourceOptions): DatabaseInstance {
        return new DatabaseInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:sql/databaseInstance:DatabaseInstance';

    /**
     * Returns true if the given object is an instance of DatabaseInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatabaseInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatabaseInstance.__pulumiType;
    }

    /**
     * The context needed to create this instance as a clone of another instance. When this field is set during
     * resource creation, the provider will attempt to clone another instance as indicated in the context. The
     * configuration is detailed below.
     */
    public readonly clone!: pulumi.Output<outputs.sql.DatabaseInstanceClone | undefined>;
    /**
     * The connection name of the instance to be used in
     * connection strings. For example, when connecting with [Cloud SQL Proxy](https://cloud.google.com/sql/docs/mysql/connect-admin-proxy).
     */
    public /*out*/ readonly connectionName!: pulumi.Output<string>;
    /**
     * The MySQL, PostgreSQL or
     * SQL Server (beta) version to use. Supported values include `MYSQL_5_6`,
     * `MYSQL_5_7`, `MYSQL_8_0`, `POSTGRES_9_6`,`POSTGRES_10`, `POSTGRES_11`,
     * `POSTGRES_12`, `POSTGRES_13`, `SQLSERVER_2017_STANDARD`,
     * `SQLSERVER_2017_ENTERPRISE`, `SQLSERVER_2017_EXPRESS`, `SQLSERVER_2017_WEB`.
     * [Database Version Policies](https://cloud.google.com/sql/docs/db-versions)
     * includes an up-to-date reference of supported versions.
     */
    public readonly databaseVersion!: pulumi.Output<string | undefined>;
    /**
     * Whether or not to allow he provider to destroy the instance. Unless this field is set to false
     * in state, a `destroy` or `update` command that deletes the instance will fail.
     */
    public readonly deletionProtection!: pulumi.Output<boolean | undefined>;
    /**
     * The full path to the encryption key used for the CMEK disk encryption.  Setting
     * up disk encryption currently requires manual steps outside of this provider.
     * The provided key must be in the same region as the SQL instance.  In order
     * to use this feature, a special kind of service account must be created and
     * granted permission on this key.  This step can currently only be done
     * manually, please see [this step](https://cloud.google.com/sql/docs/mysql/configure-cmek#service-account).
     * That service account needs the `Cloud KMS > Cloud KMS CryptoKey Encrypter/Decrypter` role on your
     * key - please see [this step](https://cloud.google.com/sql/docs/mysql/configure-cmek#grantkey).
     */
    public readonly encryptionKeyName!: pulumi.Output<string>;
    /**
     * The first IPv4 address of any type assigned.
     */
    public /*out*/ readonly firstIpAddress!: pulumi.Output<string>;
    public /*out*/ readonly ipAddresses!: pulumi.Output<outputs.sql.DatabaseInstanceIpAddress[]>;
    /**
     * The name of the instance that will act as
     * the master in the replication setup. Note, this requires the master to have
     * `binaryLogEnabled` set, as well as existing backups.
     */
    public readonly masterInstanceName!: pulumi.Output<string>;
    /**
     * A name for this whitelist entry.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The first private (`PRIVATE`) IPv4 address assigned.
     */
    public /*out*/ readonly privateIpAddress!: pulumi.Output<string>;
    /**
     * The full project ID of the source instance.`
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * The first public (`PRIMARY`) IPv4 address assigned.
     */
    public /*out*/ readonly publicIpAddress!: pulumi.Output<string>;
    /**
     * The region the instance will sit in. Note, Cloud SQL is not
     * available in all regions - choose from one of the options listed [here](https://cloud.google.com/sql/docs/mysql/instance-locations).
     * A valid region must be provided to use this resource. If a region is not provided in the resource definition,
     * the provider region will be used instead, but this will be an apply-time error for instances if the provider
     * region is not supported with Cloud SQL. If you choose not to provide the `region` argument for this resource,
     * make sure you understand this.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * The configuration for replication. The
     * configuration is detailed below. Valid only for MySQL instances.
     */
    public readonly replicaConfiguration!: pulumi.Output<outputs.sql.DatabaseInstanceReplicaConfiguration>;
    /**
     * The context needed to restore the database to a backup run. This field will
     * cause the provider to trigger the database to restore from the backup run indicated. The configuration is detailed below.
     * **NOTE:** Restoring from a backup is an imperative action and not recommended via the provider. Adding or modifying this
     * block during resource creation/update will trigger the restore action after the resource is created/updated.
     */
    public readonly restoreBackupContext!: pulumi.Output<outputs.sql.DatabaseInstanceRestoreBackupContext | undefined>;
    /**
     * Initial root password. Required for MS SQL Server, ignored by MySQL and PostgreSQL.
     */
    public readonly rootPassword!: pulumi.Output<string | undefined>;
    /**
     * The URI of the created resource.
     */
    public /*out*/ readonly selfLink!: pulumi.Output<string>;
    public /*out*/ readonly serverCaCerts!: pulumi.Output<outputs.sql.DatabaseInstanceServerCaCert[]>;
    /**
     * The service account email address assigned to the
     * instance.
     */
    public /*out*/ readonly serviceAccountEmailAddress!: pulumi.Output<string>;
    /**
     * The settings to use for the database. The
     * configuration is detailed below. Required if `clone` is not set.
     */
    public readonly settings!: pulumi.Output<outputs.sql.DatabaseInstanceSettings>;

    /**
     * Create a DatabaseInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: DatabaseInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatabaseInstanceArgs | DatabaseInstanceState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatabaseInstanceState | undefined;
            inputs["clone"] = state ? state.clone : undefined;
            inputs["connectionName"] = state ? state.connectionName : undefined;
            inputs["databaseVersion"] = state ? state.databaseVersion : undefined;
            inputs["deletionProtection"] = state ? state.deletionProtection : undefined;
            inputs["encryptionKeyName"] = state ? state.encryptionKeyName : undefined;
            inputs["firstIpAddress"] = state ? state.firstIpAddress : undefined;
            inputs["ipAddresses"] = state ? state.ipAddresses : undefined;
            inputs["masterInstanceName"] = state ? state.masterInstanceName : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["privateIpAddress"] = state ? state.privateIpAddress : undefined;
            inputs["project"] = state ? state.project : undefined;
            inputs["publicIpAddress"] = state ? state.publicIpAddress : undefined;
            inputs["region"] = state ? state.region : undefined;
            inputs["replicaConfiguration"] = state ? state.replicaConfiguration : undefined;
            inputs["restoreBackupContext"] = state ? state.restoreBackupContext : undefined;
            inputs["rootPassword"] = state ? state.rootPassword : undefined;
            inputs["selfLink"] = state ? state.selfLink : undefined;
            inputs["serverCaCerts"] = state ? state.serverCaCerts : undefined;
            inputs["serviceAccountEmailAddress"] = state ? state.serviceAccountEmailAddress : undefined;
            inputs["settings"] = state ? state.settings : undefined;
        } else {
            const args = argsOrState as DatabaseInstanceArgs | undefined;
            inputs["clone"] = args ? args.clone : undefined;
            inputs["databaseVersion"] = args ? args.databaseVersion : undefined;
            inputs["deletionProtection"] = args ? args.deletionProtection : undefined;
            inputs["encryptionKeyName"] = args ? args.encryptionKeyName : undefined;
            inputs["masterInstanceName"] = args ? args.masterInstanceName : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["region"] = args ? args.region : undefined;
            inputs["replicaConfiguration"] = args ? args.replicaConfiguration : undefined;
            inputs["restoreBackupContext"] = args ? args.restoreBackupContext : undefined;
            inputs["rootPassword"] = args ? args.rootPassword : undefined;
            inputs["settings"] = args ? args.settings : undefined;
            inputs["connectionName"] = undefined /*out*/;
            inputs["firstIpAddress"] = undefined /*out*/;
            inputs["ipAddresses"] = undefined /*out*/;
            inputs["privateIpAddress"] = undefined /*out*/;
            inputs["publicIpAddress"] = undefined /*out*/;
            inputs["selfLink"] = undefined /*out*/;
            inputs["serverCaCerts"] = undefined /*out*/;
            inputs["serviceAccountEmailAddress"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(DatabaseInstance.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DatabaseInstance resources.
 */
export interface DatabaseInstanceState {
    /**
     * The context needed to create this instance as a clone of another instance. When this field is set during
     * resource creation, the provider will attempt to clone another instance as indicated in the context. The
     * configuration is detailed below.
     */
    clone?: pulumi.Input<inputs.sql.DatabaseInstanceClone>;
    /**
     * The connection name of the instance to be used in
     * connection strings. For example, when connecting with [Cloud SQL Proxy](https://cloud.google.com/sql/docs/mysql/connect-admin-proxy).
     */
    connectionName?: pulumi.Input<string>;
    /**
     * The MySQL, PostgreSQL or
     * SQL Server (beta) version to use. Supported values include `MYSQL_5_6`,
     * `MYSQL_5_7`, `MYSQL_8_0`, `POSTGRES_9_6`,`POSTGRES_10`, `POSTGRES_11`,
     * `POSTGRES_12`, `POSTGRES_13`, `SQLSERVER_2017_STANDARD`,
     * `SQLSERVER_2017_ENTERPRISE`, `SQLSERVER_2017_EXPRESS`, `SQLSERVER_2017_WEB`.
     * [Database Version Policies](https://cloud.google.com/sql/docs/db-versions)
     * includes an up-to-date reference of supported versions.
     */
    databaseVersion?: pulumi.Input<string>;
    /**
     * Whether or not to allow he provider to destroy the instance. Unless this field is set to false
     * in state, a `destroy` or `update` command that deletes the instance will fail.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * The full path to the encryption key used for the CMEK disk encryption.  Setting
     * up disk encryption currently requires manual steps outside of this provider.
     * The provided key must be in the same region as the SQL instance.  In order
     * to use this feature, a special kind of service account must be created and
     * granted permission on this key.  This step can currently only be done
     * manually, please see [this step](https://cloud.google.com/sql/docs/mysql/configure-cmek#service-account).
     * That service account needs the `Cloud KMS > Cloud KMS CryptoKey Encrypter/Decrypter` role on your
     * key - please see [this step](https://cloud.google.com/sql/docs/mysql/configure-cmek#grantkey).
     */
    encryptionKeyName?: pulumi.Input<string>;
    /**
     * The first IPv4 address of any type assigned.
     */
    firstIpAddress?: pulumi.Input<string>;
    ipAddresses?: pulumi.Input<pulumi.Input<inputs.sql.DatabaseInstanceIpAddress>[]>;
    /**
     * The name of the instance that will act as
     * the master in the replication setup. Note, this requires the master to have
     * `binaryLogEnabled` set, as well as existing backups.
     */
    masterInstanceName?: pulumi.Input<string>;
    /**
     * A name for this whitelist entry.
     */
    name?: pulumi.Input<string>;
    /**
     * The first private (`PRIVATE`) IPv4 address assigned.
     */
    privateIpAddress?: pulumi.Input<string>;
    /**
     * The full project ID of the source instance.`
     */
    project?: pulumi.Input<string>;
    /**
     * The first public (`PRIMARY`) IPv4 address assigned.
     */
    publicIpAddress?: pulumi.Input<string>;
    /**
     * The region the instance will sit in. Note, Cloud SQL is not
     * available in all regions - choose from one of the options listed [here](https://cloud.google.com/sql/docs/mysql/instance-locations).
     * A valid region must be provided to use this resource. If a region is not provided in the resource definition,
     * the provider region will be used instead, but this will be an apply-time error for instances if the provider
     * region is not supported with Cloud SQL. If you choose not to provide the `region` argument for this resource,
     * make sure you understand this.
     */
    region?: pulumi.Input<string>;
    /**
     * The configuration for replication. The
     * configuration is detailed below. Valid only for MySQL instances.
     */
    replicaConfiguration?: pulumi.Input<inputs.sql.DatabaseInstanceReplicaConfiguration>;
    /**
     * The context needed to restore the database to a backup run. This field will
     * cause the provider to trigger the database to restore from the backup run indicated. The configuration is detailed below.
     * **NOTE:** Restoring from a backup is an imperative action and not recommended via the provider. Adding or modifying this
     * block during resource creation/update will trigger the restore action after the resource is created/updated.
     */
    restoreBackupContext?: pulumi.Input<inputs.sql.DatabaseInstanceRestoreBackupContext>;
    /**
     * Initial root password. Required for MS SQL Server, ignored by MySQL and PostgreSQL.
     */
    rootPassword?: pulumi.Input<string>;
    /**
     * The URI of the created resource.
     */
    selfLink?: pulumi.Input<string>;
    serverCaCerts?: pulumi.Input<pulumi.Input<inputs.sql.DatabaseInstanceServerCaCert>[]>;
    /**
     * The service account email address assigned to the
     * instance.
     */
    serviceAccountEmailAddress?: pulumi.Input<string>;
    /**
     * The settings to use for the database. The
     * configuration is detailed below. Required if `clone` is not set.
     */
    settings?: pulumi.Input<inputs.sql.DatabaseInstanceSettings>;
}

/**
 * The set of arguments for constructing a DatabaseInstance resource.
 */
export interface DatabaseInstanceArgs {
    /**
     * The context needed to create this instance as a clone of another instance. When this field is set during
     * resource creation, the provider will attempt to clone another instance as indicated in the context. The
     * configuration is detailed below.
     */
    clone?: pulumi.Input<inputs.sql.DatabaseInstanceClone>;
    /**
     * The MySQL, PostgreSQL or
     * SQL Server (beta) version to use. Supported values include `MYSQL_5_6`,
     * `MYSQL_5_7`, `MYSQL_8_0`, `POSTGRES_9_6`,`POSTGRES_10`, `POSTGRES_11`,
     * `POSTGRES_12`, `POSTGRES_13`, `SQLSERVER_2017_STANDARD`,
     * `SQLSERVER_2017_ENTERPRISE`, `SQLSERVER_2017_EXPRESS`, `SQLSERVER_2017_WEB`.
     * [Database Version Policies](https://cloud.google.com/sql/docs/db-versions)
     * includes an up-to-date reference of supported versions.
     */
    databaseVersion?: pulumi.Input<string>;
    /**
     * Whether or not to allow he provider to destroy the instance. Unless this field is set to false
     * in state, a `destroy` or `update` command that deletes the instance will fail.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * The full path to the encryption key used for the CMEK disk encryption.  Setting
     * up disk encryption currently requires manual steps outside of this provider.
     * The provided key must be in the same region as the SQL instance.  In order
     * to use this feature, a special kind of service account must be created and
     * granted permission on this key.  This step can currently only be done
     * manually, please see [this step](https://cloud.google.com/sql/docs/mysql/configure-cmek#service-account).
     * That service account needs the `Cloud KMS > Cloud KMS CryptoKey Encrypter/Decrypter` role on your
     * key - please see [this step](https://cloud.google.com/sql/docs/mysql/configure-cmek#grantkey).
     */
    encryptionKeyName?: pulumi.Input<string>;
    /**
     * The name of the instance that will act as
     * the master in the replication setup. Note, this requires the master to have
     * `binaryLogEnabled` set, as well as existing backups.
     */
    masterInstanceName?: pulumi.Input<string>;
    /**
     * A name for this whitelist entry.
     */
    name?: pulumi.Input<string>;
    /**
     * The full project ID of the source instance.`
     */
    project?: pulumi.Input<string>;
    /**
     * The region the instance will sit in. Note, Cloud SQL is not
     * available in all regions - choose from one of the options listed [here](https://cloud.google.com/sql/docs/mysql/instance-locations).
     * A valid region must be provided to use this resource. If a region is not provided in the resource definition,
     * the provider region will be used instead, but this will be an apply-time error for instances if the provider
     * region is not supported with Cloud SQL. If you choose not to provide the `region` argument for this resource,
     * make sure you understand this.
     */
    region?: pulumi.Input<string>;
    /**
     * The configuration for replication. The
     * configuration is detailed below. Valid only for MySQL instances.
     */
    replicaConfiguration?: pulumi.Input<inputs.sql.DatabaseInstanceReplicaConfiguration>;
    /**
     * The context needed to restore the database to a backup run. This field will
     * cause the provider to trigger the database to restore from the backup run indicated. The configuration is detailed below.
     * **NOTE:** Restoring from a backup is an imperative action and not recommended via the provider. Adding or modifying this
     * block during resource creation/update will trigger the restore action after the resource is created/updated.
     */
    restoreBackupContext?: pulumi.Input<inputs.sql.DatabaseInstanceRestoreBackupContext>;
    /**
     * Initial root password. Required for MS SQL Server, ignored by MySQL and PostgreSQL.
     */
    rootPassword?: pulumi.Input<string>;
    /**
     * The settings to use for the database. The
     * configuration is detailed below. Required if `clone` is not set.
     */
    settings?: pulumi.Input<inputs.sql.DatabaseInstanceSettings>;
}
