// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * A web resource is a website or domain with verified ownership. Once your
 * ownership is verified you will be able to manage your website in the
 * [Google Search Console](https://www.google.com/webmasters/tools/).
 *
 * > **Note:** The verification data (DNS `TXT` record, HTML file, `meta` tag, etc.)
 * must already exist before the web resource is created, and must be deleted before
 * the web resource is destroyed. The Google Site Verification API checks that the
 * verification data exists at creation time and does not exist at destruction time
 * and will fail if the required condition is not met.
 *
 * To get more information about WebResource, see:
 *
 * * [API documentation](https://developers.google.com/site-verification/v1)
 * * How-to Guides
 *     * [Getting Started](https://developers.google.com/site-verification/v1/getting_started)
 *
 * ## Example Usage
 *
 * ### Site Verification Domain Record
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const token = gcp.siteverification.getToken({
 *     type: "INET_DOMAIN",
 *     identifier: "www.example.com",
 *     verificationMethod: "DNS_TXT",
 * });
 * const example = new gcp.dns.RecordSet("example", {
 *     managedZone: "example.com",
 *     name: "www.example.com.",
 *     type: "TXT",
 *     rrdatas: [token.then(token => token.token)],
 *     ttl: 86400,
 * });
 * const exampleWebResource = new gcp.siteverification.WebResource("example", {
 *     site: {
 *         type: token.then(token => token.type),
 *         identifier: token.then(token => token.identifier),
 *     },
 *     verificationMethod: token.then(token => token.verificationMethod),
 * }, {
 *     dependsOn: [example],
 * });
 * ```
 *
 * ## Import
 *
 * WebResource can be imported using any of these accepted formats:
 *
 * * `webResource/{{web_resource_id}}`
 *
 * * `{{web_resource_id}}`
 *
 * When using the `pulumi import` command, WebResource can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:siteverification/webResource:WebResource default webResource/{{web_resource_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:siteverification/webResource:WebResource default {{web_resource_id}}
 * ```
 */
export class WebResource extends pulumi.CustomResource {
    /**
     * Get an existing WebResource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WebResourceState, opts?: pulumi.CustomResourceOptions): WebResource {
        return new WebResource(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:siteverification/webResource:WebResource';

    /**
     * Returns true if the given object is an instance of WebResource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WebResource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WebResource.__pulumiType;
    }

    /**
     * The email addresses of all direct, verified owners of this exact property. Indirect owners —
     * for example verified owners of the containing domain—are not included in this list.
     */
    public /*out*/ readonly owners!: pulumi.Output<string[]>;
    /**
     * Container for the address and type of a site for which a verification token will be verified.
     * Structure is documented below.
     */
    public readonly site!: pulumi.Output<outputs.siteverification.WebResourceSite>;
    /**
     * The verification method for the Site Verification system to use to verify
     * this site or domain.
     * Possible values are: `ANALYTICS`, `DNS_CNAME`, `DNS_TXT`, `FILE`, `META`, `TAG_MANAGER`.
     */
    public readonly verificationMethod!: pulumi.Output<string>;
    /**
     * The string used to identify this web resource.
     */
    public /*out*/ readonly webResourceId!: pulumi.Output<string>;

    /**
     * Create a WebResource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WebResourceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WebResourceArgs | WebResourceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WebResourceState | undefined;
            resourceInputs["owners"] = state ? state.owners : undefined;
            resourceInputs["site"] = state ? state.site : undefined;
            resourceInputs["verificationMethod"] = state ? state.verificationMethod : undefined;
            resourceInputs["webResourceId"] = state ? state.webResourceId : undefined;
        } else {
            const args = argsOrState as WebResourceArgs | undefined;
            if ((!args || args.site === undefined) && !opts.urn) {
                throw new Error("Missing required property 'site'");
            }
            if ((!args || args.verificationMethod === undefined) && !opts.urn) {
                throw new Error("Missing required property 'verificationMethod'");
            }
            resourceInputs["site"] = args ? args.site : undefined;
            resourceInputs["verificationMethod"] = args ? args.verificationMethod : undefined;
            resourceInputs["owners"] = undefined /*out*/;
            resourceInputs["webResourceId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WebResource.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WebResource resources.
 */
export interface WebResourceState {
    /**
     * The email addresses of all direct, verified owners of this exact property. Indirect owners —
     * for example verified owners of the containing domain—are not included in this list.
     */
    owners?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Container for the address and type of a site for which a verification token will be verified.
     * Structure is documented below.
     */
    site?: pulumi.Input<inputs.siteverification.WebResourceSite>;
    /**
     * The verification method for the Site Verification system to use to verify
     * this site or domain.
     * Possible values are: `ANALYTICS`, `DNS_CNAME`, `DNS_TXT`, `FILE`, `META`, `TAG_MANAGER`.
     */
    verificationMethod?: pulumi.Input<string>;
    /**
     * The string used to identify this web resource.
     */
    webResourceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WebResource resource.
 */
export interface WebResourceArgs {
    /**
     * Container for the address and type of a site for which a verification token will be verified.
     * Structure is documented below.
     */
    site: pulumi.Input<inputs.siteverification.WebResourceSite>;
    /**
     * The verification method for the Site Verification system to use to verify
     * this site or domain.
     * Possible values are: `ANALYTICS`, `DNS_CNAME`, `DNS_TXT`, `FILE`, `META`, `TAG_MANAGER`.
     */
    verificationMethod: pulumi.Input<string>;
}
