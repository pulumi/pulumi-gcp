// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getStoragePoolTypes(args: GetStoragePoolTypesArgs, opts?: pulumi.InvokeOptions): Promise<GetStoragePoolTypesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:compute/getStoragePoolTypes:getStoragePoolTypes", {
        "project": args.project,
        "storagePoolType": args.storagePoolType,
        "zone": args.zone,
    }, opts);
}

/**
 * A collection of arguments for invoking getStoragePoolTypes.
 */
export interface GetStoragePoolTypesArgs {
    project?: string;
    storagePoolType: string;
    zone: string;
}

/**
 * A collection of values returned by getStoragePoolTypes.
 */
export interface GetStoragePoolTypesResult {
    readonly creationTimestamp: string;
    readonly deprecateds: outputs.compute.GetStoragePoolTypesDeprecated[];
    readonly description: string;
    readonly id: number;
    readonly kind: string;
    readonly maxPoolProvisionedCapacityGb: number;
    readonly maxPoolProvisionedIops: number;
    readonly maxPoolProvisionedThroughput: number;
    readonly minPoolProvisionedCapacityGb: number;
    readonly minPoolProvisionedIops: number;
    readonly minPoolProvisionedThroughput: number;
    readonly name: string;
    readonly project: string;
    readonly selfLink: string;
    readonly selfLinkWithId: string;
    readonly storagePoolType: string;
    readonly supportedDiskTypes: string[];
    readonly zone: string;
}
export function getStoragePoolTypesOutput(args: GetStoragePoolTypesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetStoragePoolTypesResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("gcp:compute/getStoragePoolTypes:getStoragePoolTypes", {
        "project": args.project,
        "storagePoolType": args.storagePoolType,
        "zone": args.zone,
    }, opts);
}

/**
 * A collection of arguments for invoking getStoragePoolTypes.
 */
export interface GetStoragePoolTypesOutputArgs {
    project?: pulumi.Input<string>;
    storagePoolType: pulumi.Input<string>;
    zone: pulumi.Input<string>;
}
