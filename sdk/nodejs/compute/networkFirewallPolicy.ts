// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * The Compute NetworkFirewallPolicy resource
 *
 * ## Example Usage
 *
 * ### Network Firewall Policy Full
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const policy = new gcp.compute.NetworkFirewallPolicy("policy", {
 *     name: "tf-test-policy",
 *     description: "Terraform test",
 * });
 * ```
 *
 * ## Import
 *
 * NetworkFirewallPolicy can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/global/firewallPolicies/{{name}}`
 *
 * * `{{project}}/{{name}}`
 *
 * * `{{name}}`
 *
 * When using the `pulumi import` command, NetworkFirewallPolicy can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:compute/networkFirewallPolicy:NetworkFirewallPolicy default projects/{{project}}/global/firewallPolicies/{{name}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:compute/networkFirewallPolicy:NetworkFirewallPolicy default {{project}}/{{name}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:compute/networkFirewallPolicy:NetworkFirewallPolicy default {{name}}
 * ```
 */
export class NetworkFirewallPolicy extends pulumi.CustomResource {
    /**
     * Get an existing NetworkFirewallPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkFirewallPolicyState, opts?: pulumi.CustomResourceOptions): NetworkFirewallPolicy {
        return new NetworkFirewallPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:compute/networkFirewallPolicy:NetworkFirewallPolicy';

    /**
     * Returns true if the given object is an instance of NetworkFirewallPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkFirewallPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkFirewallPolicy.__pulumiType;
    }

    /**
     * Creation timestamp in RFC3339 text format.
     */
    declare public /*out*/ readonly creationTimestamp: pulumi.Output<string>;
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Fingerprint of the resource. This field is used internally during updates of this resource.
     */
    declare public /*out*/ readonly fingerprint: pulumi.Output<string>;
    /**
     * User-provided name of the Network firewall policy. The name should be unique in the project in which the firewall policy is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The unique identifier for the resource. This identifier is defined by the server.
     */
    declare public /*out*/ readonly networkFirewallPolicyId: pulumi.Output<string>;
    /**
     * Policy type is used to determine which resources (networks) the policy can be associated with.
     * A policy can be associated with a network only if the network has the matching policyType in its network profile.
     * Different policy types may support some of the Firewall Rules features.
     * Possible values are: `VPC_POLICY`.
     */
    declare public readonly policyType: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    declare public readonly project: pulumi.Output<string>;
    /**
     * Total count of all firewall policy rule tuples. A firewall policy can not exceed a set number of tuples.
     */
    declare public /*out*/ readonly ruleTupleCount: pulumi.Output<number>;
    /**
     * Server-defined URL for the resource.
     */
    declare public /*out*/ readonly selfLink: pulumi.Output<string>;
    /**
     * Server-defined URL for this resource with the resource id.
     */
    declare public /*out*/ readonly selfLinkWithId: pulumi.Output<string>;

    /**
     * Create a NetworkFirewallPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: NetworkFirewallPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkFirewallPolicyArgs | NetworkFirewallPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkFirewallPolicyState | undefined;
            resourceInputs["creationTimestamp"] = state?.creationTimestamp;
            resourceInputs["description"] = state?.description;
            resourceInputs["fingerprint"] = state?.fingerprint;
            resourceInputs["name"] = state?.name;
            resourceInputs["networkFirewallPolicyId"] = state?.networkFirewallPolicyId;
            resourceInputs["policyType"] = state?.policyType;
            resourceInputs["project"] = state?.project;
            resourceInputs["ruleTupleCount"] = state?.ruleTupleCount;
            resourceInputs["selfLink"] = state?.selfLink;
            resourceInputs["selfLinkWithId"] = state?.selfLinkWithId;
        } else {
            const args = argsOrState as NetworkFirewallPolicyArgs | undefined;
            resourceInputs["description"] = args?.description;
            resourceInputs["name"] = args?.name;
            resourceInputs["policyType"] = args?.policyType;
            resourceInputs["project"] = args?.project;
            resourceInputs["creationTimestamp"] = undefined /*out*/;
            resourceInputs["fingerprint"] = undefined /*out*/;
            resourceInputs["networkFirewallPolicyId"] = undefined /*out*/;
            resourceInputs["ruleTupleCount"] = undefined /*out*/;
            resourceInputs["selfLink"] = undefined /*out*/;
            resourceInputs["selfLinkWithId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkFirewallPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NetworkFirewallPolicy resources.
 */
export interface NetworkFirewallPolicyState {
    /**
     * Creation timestamp in RFC3339 text format.
     */
    creationTimestamp?: pulumi.Input<string>;
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Fingerprint of the resource. This field is used internally during updates of this resource.
     */
    fingerprint?: pulumi.Input<string>;
    /**
     * User-provided name of the Network firewall policy. The name should be unique in the project in which the firewall policy is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    name?: pulumi.Input<string>;
    /**
     * The unique identifier for the resource. This identifier is defined by the server.
     */
    networkFirewallPolicyId?: pulumi.Input<string>;
    /**
     * Policy type is used to determine which resources (networks) the policy can be associated with.
     * A policy can be associated with a network only if the network has the matching policyType in its network profile.
     * Different policy types may support some of the Firewall Rules features.
     * Possible values are: `VPC_POLICY`.
     */
    policyType?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * Total count of all firewall policy rule tuples. A firewall policy can not exceed a set number of tuples.
     */
    ruleTupleCount?: pulumi.Input<number>;
    /**
     * Server-defined URL for the resource.
     */
    selfLink?: pulumi.Input<string>;
    /**
     * Server-defined URL for this resource with the resource id.
     */
    selfLinkWithId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NetworkFirewallPolicy resource.
 */
export interface NetworkFirewallPolicyArgs {
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * User-provided name of the Network firewall policy. The name should be unique in the project in which the firewall policy is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression a-z? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    name?: pulumi.Input<string>;
    /**
     * Policy type is used to determine which resources (networks) the policy can be associated with.
     * A policy can be associated with a network only if the network has the matching policyType in its network profile.
     * Different policy types may support some of the Firewall Rules features.
     * Possible values are: `VPC_POLICY`.
     */
    policyType?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
