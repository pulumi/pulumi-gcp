// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Represents a VPN gateway managed outside of GCP.
 * 
 * To get more information about ExternalVpnGateway, see:
 * 
 * * [API documentation](https://cloud.google.com/compute/docs/reference/rest/beta/externalVpnGateways)
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/compute_external_vpn_gateway.html.markdown.
 */
export class ExternalVpnGateway extends pulumi.CustomResource {
    /**
     * Get an existing ExternalVpnGateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ExternalVpnGatewayState, opts?: pulumi.CustomResourceOptions): ExternalVpnGateway {
        return new ExternalVpnGateway(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:compute/externalVpnGateway:ExternalVpnGateway';

    /**
     * Returns true if the given object is an instance of ExternalVpnGateway.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ExternalVpnGateway {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ExternalVpnGateway.__pulumiType;
    }

    public readonly description!: pulumi.Output<string | undefined>;
    public readonly interfaces!: pulumi.Output<{ id?: number, ipAddress?: string }[] | undefined>;
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    public readonly project!: pulumi.Output<string>;
    public readonly redundancyType!: pulumi.Output<string | undefined>;
    public /*out*/ readonly selfLink!: pulumi.Output<string>;

    /**
     * Create a ExternalVpnGateway resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ExternalVpnGatewayArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ExternalVpnGatewayArgs | ExternalVpnGatewayState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as ExternalVpnGatewayState | undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["interfaces"] = state ? state.interfaces : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["project"] = state ? state.project : undefined;
            inputs["redundancyType"] = state ? state.redundancyType : undefined;
            inputs["selfLink"] = state ? state.selfLink : undefined;
        } else {
            const args = argsOrState as ExternalVpnGatewayArgs | undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["interfaces"] = args ? args.interfaces : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["redundancyType"] = args ? args.redundancyType : undefined;
            inputs["selfLink"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(ExternalVpnGateway.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ExternalVpnGateway resources.
 */
export interface ExternalVpnGatewayState {
    readonly description?: pulumi.Input<string>;
    readonly interfaces?: pulumi.Input<pulumi.Input<{ id?: pulumi.Input<number>, ipAddress?: pulumi.Input<string> }>[]>;
    readonly name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
    readonly redundancyType?: pulumi.Input<string>;
    readonly selfLink?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ExternalVpnGateway resource.
 */
export interface ExternalVpnGatewayArgs {
    readonly description?: pulumi.Input<string>;
    readonly interfaces?: pulumi.Input<pulumi.Input<{ id?: pulumi.Input<number>, ipAddress?: pulumi.Input<string> }>[]>;
    readonly name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
    readonly redundancyType?: pulumi.Input<string>;
}
