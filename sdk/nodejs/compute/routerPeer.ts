// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";

/**
 * Manages a Cloud Router BGP peer. For more information see
 * [the official documentation](https://cloud.google.com/compute/docs/cloudrouter)
 * and
 * [API](https://cloud.google.com/compute/docs/reference/latest/routers).
 */
export class RouterPeer extends pulumi.CustomResource {
    /**
     * Get an existing RouterPeer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouterPeerState): RouterPeer {
        return new RouterPeer(name, <any>state, { id });
    }

    /**
     * The priority of routes advertised to this BGP peer.
     * Changing this forces a new peer to be created.
     */
    public readonly advertisedRoutePriority: pulumi.Output<number | undefined>;
    /**
     * The name of the interface the BGP peer is associated with.
     * Changing this forces a new peer to be created.
     */
    public readonly interface: pulumi.Output<string>;
    /**
     * IP address of the interface inside Google Cloud Platform.
     */
    public /*out*/ readonly ipAddress: pulumi.Output<string>;
    /**
     * A unique name for BGP peer, required by GCE. Changing
     * this forces a new peer to be created.
     */
    public readonly name: pulumi.Output<string>;
    /**
     * Peer BGP Autonomous System Number (ASN).
     * Changing this forces a new peer to be created.
     */
    public readonly peerAsn: pulumi.Output<number>;
    /**
     * IP address of the BGP interface outside Google Cloud.
     * Changing this forces a new peer to be created.
     */
    public readonly peerIpAddress: pulumi.Output<string | undefined>;
    /**
     * The ID of the project in which this peer's router belongs. If it
     * is not provided, the provider project is used. Changing this forces a new peer to be created.
     */
    public readonly project: pulumi.Output<string>;
    /**
     * The region this peer's router sits in. If not specified,
     * the project region will be used. Changing this forces a new peer to be
     * created.
     */
    public readonly region: pulumi.Output<string>;
    /**
     * The name of the router in which this BGP peer will be configured.
     * Changing this forces a new peer to be created.
     */
    public readonly router: pulumi.Output<string>;

    /**
     * Create a RouterPeer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RouterPeerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RouterPeerArgs | RouterPeerState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: RouterPeerState = argsOrState as RouterPeerState | undefined;
            inputs["advertisedRoutePriority"] = state ? state.advertisedRoutePriority : undefined;
            inputs["interface"] = state ? state.interface : undefined;
            inputs["ipAddress"] = state ? state.ipAddress : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["peerAsn"] = state ? state.peerAsn : undefined;
            inputs["peerIpAddress"] = state ? state.peerIpAddress : undefined;
            inputs["project"] = state ? state.project : undefined;
            inputs["region"] = state ? state.region : undefined;
            inputs["router"] = state ? state.router : undefined;
        } else {
            const args = argsOrState as RouterPeerArgs | undefined;
            if (!args || args.interface === undefined) {
                throw new Error("Missing required property 'interface'");
            }
            if (!args || args.peerAsn === undefined) {
                throw new Error("Missing required property 'peerAsn'");
            }
            if (!args || args.router === undefined) {
                throw new Error("Missing required property 'router'");
            }
            inputs["advertisedRoutePriority"] = args ? args.advertisedRoutePriority : undefined;
            inputs["interface"] = args ? args.interface : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["peerAsn"] = args ? args.peerAsn : undefined;
            inputs["peerIpAddress"] = args ? args.peerIpAddress : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["region"] = args ? args.region : undefined;
            inputs["router"] = args ? args.router : undefined;
            inputs["ipAddress"] = undefined /*out*/;
        }
        super("gcp:compute/routerPeer:RouterPeer", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RouterPeer resources.
 */
export interface RouterPeerState {
    /**
     * The priority of routes advertised to this BGP peer.
     * Changing this forces a new peer to be created.
     */
    readonly advertisedRoutePriority?: pulumi.Input<number>;
    /**
     * The name of the interface the BGP peer is associated with.
     * Changing this forces a new peer to be created.
     */
    readonly interface?: pulumi.Input<string>;
    /**
     * IP address of the interface inside Google Cloud Platform.
     */
    readonly ipAddress?: pulumi.Input<string>;
    /**
     * A unique name for BGP peer, required by GCE. Changing
     * this forces a new peer to be created.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Peer BGP Autonomous System Number (ASN).
     * Changing this forces a new peer to be created.
     */
    readonly peerAsn?: pulumi.Input<number>;
    /**
     * IP address of the BGP interface outside Google Cloud.
     * Changing this forces a new peer to be created.
     */
    readonly peerIpAddress?: pulumi.Input<string>;
    /**
     * The ID of the project in which this peer's router belongs. If it
     * is not provided, the provider project is used. Changing this forces a new peer to be created.
     */
    readonly project?: pulumi.Input<string>;
    /**
     * The region this peer's router sits in. If not specified,
     * the project region will be used. Changing this forces a new peer to be
     * created.
     */
    readonly region?: pulumi.Input<string>;
    /**
     * The name of the router in which this BGP peer will be configured.
     * Changing this forces a new peer to be created.
     */
    readonly router?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RouterPeer resource.
 */
export interface RouterPeerArgs {
    /**
     * The priority of routes advertised to this BGP peer.
     * Changing this forces a new peer to be created.
     */
    readonly advertisedRoutePriority?: pulumi.Input<number>;
    /**
     * The name of the interface the BGP peer is associated with.
     * Changing this forces a new peer to be created.
     */
    readonly interface: pulumi.Input<string>;
    /**
     * A unique name for BGP peer, required by GCE. Changing
     * this forces a new peer to be created.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Peer BGP Autonomous System Number (ASN).
     * Changing this forces a new peer to be created.
     */
    readonly peerAsn: pulumi.Input<number>;
    /**
     * IP address of the BGP interface outside Google Cloud.
     * Changing this forces a new peer to be created.
     */
    readonly peerIpAddress?: pulumi.Input<string>;
    /**
     * The ID of the project in which this peer's router belongs. If it
     * is not provided, the provider project is used. Changing this forces a new peer to be created.
     */
    readonly project?: pulumi.Input<string>;
    /**
     * The region this peer's router sits in. If not specified,
     * the project region will be used. Changing this forces a new peer to be
     * created.
     */
    readonly region?: pulumi.Input<string>;
    /**
     * The name of the router in which this BGP peer will be configured.
     * Changing this forces a new peer to be created.
     */
    readonly router: pulumi.Input<string>;
}
