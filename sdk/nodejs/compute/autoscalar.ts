// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";

/**
 * A Compute Engine Autoscaler automatically adds or removes virtual machines from
 * a managed instance group based on increases or decreases in load. This allows
 * your applications to gracefully handle increases in traffic and reduces cost
 * when the need for resources is lower. You just define the autoscaling policy and
 * the autoscaler performs automatic scaling based on the measured load. For more
 * information, see [the official
 * documentation](https://cloud.google.com/compute/docs/autoscaler/) and
 * [API](https://cloud.google.com/compute/docs/reference/latest/autoscalers)
 * 
 */
export class Autoscalar extends pulumi.CustomResource {
    /**
     * Get an existing Autoscalar resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AutoscalarState): Autoscalar {
        return new Autoscalar(name, <any>state, { id });
    }

    /**
     * The parameters of the autoscaling
     * algorithm. Structure is documented below.
     */
    public readonly autoscalingPolicy: pulumi.Output<{ cooldownPeriod?: number, cpuUtilization?: { target: number }, loadBalancingUtilization?: { target: number }, maxReplicas: number, metrics?: { name: string, target: number, type: string }[], minReplicas: number }>;
    /**
     * An optional textual description of the instance
     * group manager.
     */
    public readonly description: pulumi.Output<string | undefined>;
    /**
     * The name of the Google Cloud Monitoring metric to follow, e.g.
     * `compute.googleapis.com/instance/network/received_bytes_count`
     */
    public readonly name: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    public readonly project: pulumi.Output<string>;
    /**
     * The URL of the created resource.
     */
    public /*out*/ readonly selfLink: pulumi.Output<string>;
    /**
     * The floating point threshold where load balancing utilization
     * should be. E.g. if the load balancer's `maxRatePerInstance` is 10 requests
     * per second (RPS) then setting this to 0.5 would cause the group to be scaled
     * such that each instance receives 5 RPS.
     */
    public readonly target: pulumi.Output<string>;
    /**
     * The zone of the target.
     */
    public readonly zone: pulumi.Output<string>;

    /**
     * Create a Autoscalar resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AutoscalarArgs, opts?: pulumi.ResourceOptions)
    constructor(name: string, argsOrState?: AutoscalarArgs | AutoscalarState, opts?: pulumi.ResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: AutoscalarState = argsOrState as AutoscalarState | undefined;
            inputs["autoscalingPolicy"] = state ? state.autoscalingPolicy : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["project"] = state ? state.project : undefined;
            inputs["selfLink"] = state ? state.selfLink : undefined;
            inputs["target"] = state ? state.target : undefined;
            inputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as AutoscalarArgs | undefined;
            if (!args || args.autoscalingPolicy === undefined) {
                throw new Error("Missing required property 'autoscalingPolicy'");
            }
            if (!args || args.target === undefined) {
                throw new Error("Missing required property 'target'");
            }
            inputs["autoscalingPolicy"] = args ? args.autoscalingPolicy : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["target"] = args ? args.target : undefined;
            inputs["zone"] = args ? args.zone : undefined;
            inputs["selfLink"] = undefined /*out*/;
        }
        super("gcp:compute/autoscalar:Autoscalar", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Autoscalar resources.
 */
export interface AutoscalarState {
    /**
     * The parameters of the autoscaling
     * algorithm. Structure is documented below.
     */
    readonly autoscalingPolicy?: pulumi.Input<{ cooldownPeriod?: pulumi.Input<number>, cpuUtilization?: pulumi.Input<{ target: pulumi.Input<number> }>, loadBalancingUtilization?: pulumi.Input<{ target: pulumi.Input<number> }>, maxReplicas: pulumi.Input<number>, metrics?: pulumi.Input<{ name: pulumi.Input<string>, target: pulumi.Input<number>, type: pulumi.Input<string> }[]>, minReplicas: pulumi.Input<number> }>;
    /**
     * An optional textual description of the instance
     * group manager.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The name of the Google Cloud Monitoring metric to follow, e.g.
     * `compute.googleapis.com/instance/network/received_bytes_count`
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
    /**
     * The URL of the created resource.
     */
    readonly selfLink?: pulumi.Input<string>;
    /**
     * The floating point threshold where load balancing utilization
     * should be. E.g. if the load balancer's `maxRatePerInstance` is 10 requests
     * per second (RPS) then setting this to 0.5 would cause the group to be scaled
     * such that each instance receives 5 RPS.
     */
    readonly target?: pulumi.Input<string>;
    /**
     * The zone of the target.
     */
    readonly zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Autoscalar resource.
 */
export interface AutoscalarArgs {
    /**
     * The parameters of the autoscaling
     * algorithm. Structure is documented below.
     */
    readonly autoscalingPolicy: pulumi.Input<{ cooldownPeriod?: pulumi.Input<number>, cpuUtilization?: pulumi.Input<{ target: pulumi.Input<number> }>, loadBalancingUtilization?: pulumi.Input<{ target: pulumi.Input<number> }>, maxReplicas: pulumi.Input<number>, metrics?: pulumi.Input<{ name: pulumi.Input<string>, target: pulumi.Input<number>, type: pulumi.Input<string> }[]>, minReplicas: pulumi.Input<number> }>;
    /**
     * An optional textual description of the instance
     * group manager.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * The name of the Google Cloud Monitoring metric to follow, e.g.
     * `compute.googleapis.com/instance/network/received_bytes_count`
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
    /**
     * The floating point threshold where load balancing utilization
     * should be. E.g. if the load balancer's `maxRatePerInstance` is 10 requests
     * per second (RPS) then setting this to 0.5 would cause the group to be scaled
     * such that each instance receives 5 RPS.
     */
    readonly target: pulumi.Input<string>;
    /**
     * The zone of the target.
     */
    readonly zone?: pulumi.Input<string>;
}
