// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Get a global forwarding rule within GCE from its name.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const my_forwarding_rule = pulumi.output(gcp.compute.getGlobalForwardingRule({
 *     name: "forwarding-rule-global",
 * }));
 * ```
 */
export function getGlobalForwardingRule(args: GetGlobalForwardingRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetGlobalForwardingRuleResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("gcp:compute/getGlobalForwardingRule:getGlobalForwardingRule", {
        "name": args.name,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getGlobalForwardingRule.
 */
export interface GetGlobalForwardingRuleArgs {
    /**
     * The name of the global forwarding rule.
     */
    name: string;
    /**
     * The project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    project?: string;
}

/**
 * A collection of values returned by getGlobalForwardingRule.
 */
export interface GetGlobalForwardingRuleResult {
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ipAddress: string;
    readonly ipProtocol: string;
    readonly ipVersion: string;
    readonly labelFingerprint: string;
    readonly labels: {[key: string]: string};
    readonly loadBalancingScheme: string;
    readonly metadataFilters: outputs.compute.GetGlobalForwardingRuleMetadataFilter[];
    readonly name: string;
    readonly network: string;
    readonly portRange: string;
    readonly project?: string;
    readonly selfLink: string;
    readonly target: string;
}

export function getGlobalForwardingRuleOutput(args: GetGlobalForwardingRuleOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGlobalForwardingRuleResult> {
    return pulumi.output(args).apply(a => getGlobalForwardingRule(a, opts))
}

/**
 * A collection of arguments for invoking getGlobalForwardingRule.
 */
export interface GetGlobalForwardingRuleOutputArgs {
    /**
     * The name of the global forwarding rule.
     */
    name: pulumi.Input<string>;
    /**
     * The project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
