// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Creates an SSL certificate resource necessary for HTTPS load balancing in GCE.
 * For more information see
 * [the official documentation](https://cloud.google.com/compute/docs/load-balancing/http/ssl-certificates) and
 * [API](https://cloud.google.com/compute/docs/reference/latest/sslCertificates).
 * 
 */
export class SSLCertificate extends pulumi.CustomResource {
    /**
     * Get an existing SSLCertificate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SSLCertificateState): SSLCertificate {
        return new SSLCertificate(name, <any>state, { id });
    }

    /**
     * A local certificate file in PEM format. The chain
     * may be at most 5 certs long, and must include at least one intermediate
     * cert. Changing this forces a new resource to be created.
     */
    public readonly certificate: pulumi.Output<string>;
    /**
     * A unique ID for the certificate, assigned by GCE.
     */
    public /*out*/ readonly certificateId: pulumi.Output<string>;
    /**
     * An optional description of this resource.
     * Changing this forces a new resource to be created.
     */
    public readonly description: pulumi.Output<string | undefined>;
    /**
     * A unique name for the SSL certificate. If you leave
     * this blank, Terraform will auto-generate a unique name.
     */
    public readonly name: pulumi.Output<string>;
    /**
     * Creates a unique name beginning with the specified
     * prefix. Conflicts with `name`.
     */
    public readonly namePrefix: pulumi.Output<string>;
    /**
     * Write only private key in PEM format.
     * Changing this forces a new resource to be created.
     */
    public readonly privateKey: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    public readonly project: pulumi.Output<string>;
    /**
     * The URI of the created resource.
     */
    public /*out*/ readonly selfLink: pulumi.Output<string>;

    /**
     * Create a SSLCertificate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SSLCertificateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SSLCertificateArgs | SSLCertificateState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: SSLCertificateState = argsOrState as SSLCertificateState | undefined;
            inputs["certificate"] = state ? state.certificate : undefined;
            inputs["certificateId"] = state ? state.certificateId : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["namePrefix"] = state ? state.namePrefix : undefined;
            inputs["privateKey"] = state ? state.privateKey : undefined;
            inputs["project"] = state ? state.project : undefined;
            inputs["selfLink"] = state ? state.selfLink : undefined;
        } else {
            const args = argsOrState as SSLCertificateArgs | undefined;
            if (!args || args.certificate === undefined) {
                throw new Error("Missing required property 'certificate'");
            }
            if (!args || args.privateKey === undefined) {
                throw new Error("Missing required property 'privateKey'");
            }
            inputs["certificate"] = args ? args.certificate : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["namePrefix"] = args ? args.namePrefix : undefined;
            inputs["privateKey"] = args ? args.privateKey : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["certificateId"] = undefined /*out*/;
            inputs["selfLink"] = undefined /*out*/;
        }
        super("gcp:compute/sSLCertificate:SSLCertificate", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SSLCertificate resources.
 */
export interface SSLCertificateState {
    /**
     * A local certificate file in PEM format. The chain
     * may be at most 5 certs long, and must include at least one intermediate
     * cert. Changing this forces a new resource to be created.
     */
    readonly certificate?: pulumi.Input<string>;
    /**
     * A unique ID for the certificate, assigned by GCE.
     */
    readonly certificateId?: pulumi.Input<string>;
    /**
     * An optional description of this resource.
     * Changing this forces a new resource to be created.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * A unique name for the SSL certificate. If you leave
     * this blank, Terraform will auto-generate a unique name.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Creates a unique name beginning with the specified
     * prefix. Conflicts with `name`.
     */
    readonly namePrefix?: pulumi.Input<string>;
    /**
     * Write only private key in PEM format.
     * Changing this forces a new resource to be created.
     */
    readonly privateKey?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
    /**
     * The URI of the created resource.
     */
    readonly selfLink?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SSLCertificate resource.
 */
export interface SSLCertificateArgs {
    /**
     * A local certificate file in PEM format. The chain
     * may be at most 5 certs long, and must include at least one intermediate
     * cert. Changing this forces a new resource to be created.
     */
    readonly certificate: pulumi.Input<string>;
    /**
     * An optional description of this resource.
     * Changing this forces a new resource to be created.
     */
    readonly description?: pulumi.Input<string>;
    /**
     * A unique name for the SSL certificate. If you leave
     * this blank, Terraform will auto-generate a unique name.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Creates a unique name beginning with the specified
     * prefix. Conflicts with `name`.
     */
    readonly namePrefix?: pulumi.Input<string>;
    /**
     * Write only private key in PEM format.
     * Changing this forces a new resource to be created.
     */
    readonly privateKey: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
}
