// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * List IP addresses in a project. For more information see
 * the official API [list](https://cloud.google.com/compute/docs/reference/latest/addresses/list) and
 * [aggregated lsit](https://cloud.google.com/compute/docs/reference/rest/v1/addresses/aggregatedList) documentation.
 */
export function getAddresses(args?: GetAddressesArgs, opts?: pulumi.InvokeOptions): Promise<GetAddressesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:compute/getAddresses:getAddresses", {
        "filter": args.filter,
        "project": args.project,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getAddresses.
 */
export interface GetAddressesArgs {
    /**
     * A filter expression that
     * filters resources listed in the response. The expression must specify
     * the field name, an operator, and the value that you want to use for
     * filtering. The value must be a string, a number, or a boolean. The
     * operator must be either "=", "!=", ">", "<", "<=", ">=" or ":". For
     * example, if you are filtering Compute Engine instances, you can
     * exclude instances named "example-instance" by specifying "name !=
     * example-instance". The ":" operator can be used with string fields to
     * match substrings. For non-string fields it is equivalent to the "="
     * operator. The ":*" comparison can be used to test whether a key has
     * been defined. For example, to find all objects with "owner" label
     * use: """ labels.owner:* """ You can also filter nested fields. For
     * example, you could specify "scheduling.automaticRestart = false" to
     * include instances only if they are not scheduled for automatic
     * restarts. You can use filtering on nested fields to filter based on
     * resource labels. To filter on multiple expressions, provide each
     * separate expression within parentheses. For example: """
     * (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")
     * """ By default, each expression is an "AND" expression. However, you
     * can include "AND" and "OR" expressions explicitly. For example: """
     * (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell")
     * AND (scheduling.automaticRestart = true)
     */
    filter?: string;
    /**
     * The google project in which addresses are listed.
     * Defaults to provider's configuration if missing.
     */
    project?: string;
    /**
     * Region that should be considered to search addresses.
     * All regions are considered if missing.
     */
    region?: string;
}

/**
 * A collection of values returned by getAddresses.
 */
export interface GetAddressesResult {
    /**
     * A list of addresses matching the filter. Structure is defined below.
     */
    readonly addresses: outputs.compute.GetAddressesAddress[];
    readonly filter?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly project: string;
    /**
     * The region in which the address resides.
     */
    readonly region?: string;
}
/**
 * List IP addresses in a project. For more information see
 * the official API [list](https://cloud.google.com/compute/docs/reference/latest/addresses/list) and
 * [aggregated lsit](https://cloud.google.com/compute/docs/reference/rest/v1/addresses/aggregatedList) documentation.
 */
export function getAddressesOutput(args?: GetAddressesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAddressesResult> {
    return pulumi.output(args).apply((a: any) => getAddresses(a, opts))
}

/**
 * A collection of arguments for invoking getAddresses.
 */
export interface GetAddressesOutputArgs {
    /**
     * A filter expression that
     * filters resources listed in the response. The expression must specify
     * the field name, an operator, and the value that you want to use for
     * filtering. The value must be a string, a number, or a boolean. The
     * operator must be either "=", "!=", ">", "<", "<=", ">=" or ":". For
     * example, if you are filtering Compute Engine instances, you can
     * exclude instances named "example-instance" by specifying "name !=
     * example-instance". The ":" operator can be used with string fields to
     * match substrings. For non-string fields it is equivalent to the "="
     * operator. The ":*" comparison can be used to test whether a key has
     * been defined. For example, to find all objects with "owner" label
     * use: """ labels.owner:* """ You can also filter nested fields. For
     * example, you could specify "scheduling.automaticRestart = false" to
     * include instances only if they are not scheduled for automatic
     * restarts. You can use filtering on nested fields to filter based on
     * resource labels. To filter on multiple expressions, provide each
     * separate expression within parentheses. For example: """
     * (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake")
     * """ By default, each expression is an "AND" expression. However, you
     * can include "AND" and "OR" expressions explicitly. For example: """
     * (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell")
     * AND (scheduling.automaticRestart = true)
     */
    filter?: pulumi.Input<string>;
    /**
     * The google project in which addresses are listed.
     * Defaults to provider's configuration if missing.
     */
    project?: pulumi.Input<string>;
    /**
     * Region that should be considered to search addresses.
     * All regions are considered if missing.
     */
    region?: pulumi.Input<string>;
}
