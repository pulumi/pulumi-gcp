// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * ## Import
 *
 * ServiceAttachment can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:compute/serviceAttachment:ServiceAttachment default projects/{{project}}/regions/{{region}}/serviceAttachments/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:compute/serviceAttachment:ServiceAttachment default {{project}}/{{region}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:compute/serviceAttachment:ServiceAttachment default {{region}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:compute/serviceAttachment:ServiceAttachment default {{name}}
 * ```
 */
export class ServiceAttachment extends pulumi.CustomResource {
    /**
     * Get an existing ServiceAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceAttachmentState, opts?: pulumi.CustomResourceOptions): ServiceAttachment {
        return new ServiceAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:compute/serviceAttachment:ServiceAttachment';

    /**
     * Returns true if the given object is an instance of ServiceAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceAttachment.__pulumiType;
    }

    /**
     * An array of the consumer forwarding rules connected to this service attachment.
     */
    public /*out*/ readonly connectedEndpoints!: pulumi.Output<outputs.compute.ServiceAttachmentConnectedEndpoint[]>;
    /**
     * The connection preference to use for this service attachment. Valid
     * values include "ACCEPT_AUTOMATIC", "ACCEPT_MANUAL".
     */
    public readonly connectionPreference!: pulumi.Output<string>;
    /**
     * An array of projects that are allowed to connect to this service
     * attachment.
     * Structure is documented below.
     */
    public readonly consumerAcceptLists!: pulumi.Output<outputs.compute.ServiceAttachmentConsumerAcceptList[] | undefined>;
    /**
     * An array of projects that are not allowed to connect to this service
     * attachment.
     */
    public readonly consumerRejectLists!: pulumi.Output<string[] | undefined>;
    /**
     * An optional description of this resource.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * If true, enable the proxy protocol which is for supplying client TCP/IP
     * address data in TCP connections that traverse proxies on their way to
     * destination servers.
     */
    public readonly enableProxyProtocol!: pulumi.Output<boolean>;
    /**
     * Name of the resource. The name must be 1-63 characters long, and
     * comply with RFC1035. Specifically, the name must be 1-63 characters
     * long and match the regular expression `a-z?`
     * which means the first character must be a lowercase letter, and all
     * following characters must be a dash, lowercase letter, or digit,
     * except the last character, which cannot be a dash.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * An array of subnets that is provided for NAT in this service attachment.
     */
    public readonly natSubnets!: pulumi.Output<string[]>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * URL of the region where the resource resides.
     */
    public readonly region!: pulumi.Output<string>;
    /**
     * The URI of the created resource.
     */
    public /*out*/ readonly selfLink!: pulumi.Output<string>;
    /**
     * The URL of a forwarding rule that represents the service identified by
     * this service attachment.
     */
    public readonly targetService!: pulumi.Output<string>;

    /**
     * Create a ServiceAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceAttachmentArgs | ServiceAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServiceAttachmentState | undefined;
            inputs["connectedEndpoints"] = state ? state.connectedEndpoints : undefined;
            inputs["connectionPreference"] = state ? state.connectionPreference : undefined;
            inputs["consumerAcceptLists"] = state ? state.consumerAcceptLists : undefined;
            inputs["consumerRejectLists"] = state ? state.consumerRejectLists : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["enableProxyProtocol"] = state ? state.enableProxyProtocol : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["natSubnets"] = state ? state.natSubnets : undefined;
            inputs["project"] = state ? state.project : undefined;
            inputs["region"] = state ? state.region : undefined;
            inputs["selfLink"] = state ? state.selfLink : undefined;
            inputs["targetService"] = state ? state.targetService : undefined;
        } else {
            const args = argsOrState as ServiceAttachmentArgs | undefined;
            if ((!args || args.connectionPreference === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectionPreference'");
            }
            if ((!args || args.enableProxyProtocol === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enableProxyProtocol'");
            }
            if ((!args || args.natSubnets === undefined) && !opts.urn) {
                throw new Error("Missing required property 'natSubnets'");
            }
            if ((!args || args.targetService === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetService'");
            }
            inputs["connectionPreference"] = args ? args.connectionPreference : undefined;
            inputs["consumerAcceptLists"] = args ? args.consumerAcceptLists : undefined;
            inputs["consumerRejectLists"] = args ? args.consumerRejectLists : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["enableProxyProtocol"] = args ? args.enableProxyProtocol : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["natSubnets"] = args ? args.natSubnets : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["region"] = args ? args.region : undefined;
            inputs["targetService"] = args ? args.targetService : undefined;
            inputs["connectedEndpoints"] = undefined /*out*/;
            inputs["selfLink"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(ServiceAttachment.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServiceAttachment resources.
 */
export interface ServiceAttachmentState {
    /**
     * An array of the consumer forwarding rules connected to this service attachment.
     */
    connectedEndpoints?: pulumi.Input<pulumi.Input<inputs.compute.ServiceAttachmentConnectedEndpoint>[]>;
    /**
     * The connection preference to use for this service attachment. Valid
     * values include "ACCEPT_AUTOMATIC", "ACCEPT_MANUAL".
     */
    connectionPreference?: pulumi.Input<string>;
    /**
     * An array of projects that are allowed to connect to this service
     * attachment.
     * Structure is documented below.
     */
    consumerAcceptLists?: pulumi.Input<pulumi.Input<inputs.compute.ServiceAttachmentConsumerAcceptList>[]>;
    /**
     * An array of projects that are not allowed to connect to this service
     * attachment.
     */
    consumerRejectLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An optional description of this resource.
     */
    description?: pulumi.Input<string>;
    /**
     * If true, enable the proxy protocol which is for supplying client TCP/IP
     * address data in TCP connections that traverse proxies on their way to
     * destination servers.
     */
    enableProxyProtocol?: pulumi.Input<boolean>;
    /**
     * Name of the resource. The name must be 1-63 characters long, and
     * comply with RFC1035. Specifically, the name must be 1-63 characters
     * long and match the regular expression `a-z?`
     * which means the first character must be a lowercase letter, and all
     * following characters must be a dash, lowercase letter, or digit,
     * except the last character, which cannot be a dash.
     */
    name?: pulumi.Input<string>;
    /**
     * An array of subnets that is provided for NAT in this service attachment.
     */
    natSubnets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * URL of the region where the resource resides.
     */
    region?: pulumi.Input<string>;
    /**
     * The URI of the created resource.
     */
    selfLink?: pulumi.Input<string>;
    /**
     * The URL of a forwarding rule that represents the service identified by
     * this service attachment.
     */
    targetService?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ServiceAttachment resource.
 */
export interface ServiceAttachmentArgs {
    /**
     * The connection preference to use for this service attachment. Valid
     * values include "ACCEPT_AUTOMATIC", "ACCEPT_MANUAL".
     */
    connectionPreference: pulumi.Input<string>;
    /**
     * An array of projects that are allowed to connect to this service
     * attachment.
     * Structure is documented below.
     */
    consumerAcceptLists?: pulumi.Input<pulumi.Input<inputs.compute.ServiceAttachmentConsumerAcceptList>[]>;
    /**
     * An array of projects that are not allowed to connect to this service
     * attachment.
     */
    consumerRejectLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An optional description of this resource.
     */
    description?: pulumi.Input<string>;
    /**
     * If true, enable the proxy protocol which is for supplying client TCP/IP
     * address data in TCP connections that traverse proxies on their way to
     * destination servers.
     */
    enableProxyProtocol: pulumi.Input<boolean>;
    /**
     * Name of the resource. The name must be 1-63 characters long, and
     * comply with RFC1035. Specifically, the name must be 1-63 characters
     * long and match the regular expression `a-z?`
     * which means the first character must be a lowercase letter, and all
     * following characters must be a dash, lowercase letter, or digit,
     * except the last character, which cannot be a dash.
     */
    name?: pulumi.Input<string>;
    /**
     * An array of subnets that is provided for NAT in this service attachment.
     */
    natSubnets: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * URL of the region where the resource resides.
     */
    region?: pulumi.Input<string>;
    /**
     * The URL of a forwarding rule that represents the service identified by
     * this service attachment.
     */
    targetService: pulumi.Input<string>;
}
