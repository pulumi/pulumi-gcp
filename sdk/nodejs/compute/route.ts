// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class Route extends pulumi.CustomResource {
    /**
     * Get an existing Route resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RouteState): Route {
        return new Route(name, <any>state, { id });
    }

    public readonly description: pulumi.Output<string | undefined>;
    public readonly destRange: pulumi.Output<string>;
    public readonly name: pulumi.Output<string>;
    public readonly network: pulumi.Output<string>;
    public readonly nextHopGateway: pulumi.Output<string | undefined>;
    public readonly nextHopInstance: pulumi.Output<string | undefined>;
    /**
     * (Optional when `next_hop_instance` is
     * specified)  The zone of the instance specified in
     * `next_hop_instance`.  Omit if `next_hop_instance` is specified as
     * a URL.
     */
    public readonly nextHopInstanceZone: pulumi.Output<string | undefined>;
    public readonly nextHopIp: pulumi.Output<string | undefined>;
    public /*out*/ readonly nextHopNetwork: pulumi.Output<string>;
    public readonly nextHopVpnTunnel: pulumi.Output<string | undefined>;
    public readonly priority: pulumi.Output<number | undefined>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    public readonly project: pulumi.Output<string>;
    /**
     * The URI of the created resource.
     */
    public /*out*/ readonly selfLink: pulumi.Output<string>;
    public readonly tags: pulumi.Output<string[] | undefined>;

    /**
     * Create a Route resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RouteArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RouteArgs | RouteState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: RouteState = argsOrState as RouteState | undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["destRange"] = state ? state.destRange : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["network"] = state ? state.network : undefined;
            inputs["nextHopGateway"] = state ? state.nextHopGateway : undefined;
            inputs["nextHopInstance"] = state ? state.nextHopInstance : undefined;
            inputs["nextHopInstanceZone"] = state ? state.nextHopInstanceZone : undefined;
            inputs["nextHopIp"] = state ? state.nextHopIp : undefined;
            inputs["nextHopNetwork"] = state ? state.nextHopNetwork : undefined;
            inputs["nextHopVpnTunnel"] = state ? state.nextHopVpnTunnel : undefined;
            inputs["priority"] = state ? state.priority : undefined;
            inputs["project"] = state ? state.project : undefined;
            inputs["selfLink"] = state ? state.selfLink : undefined;
            inputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as RouteArgs | undefined;
            if (!args || args.destRange === undefined) {
                throw new Error("Missing required property 'destRange'");
            }
            if (!args || args.network === undefined) {
                throw new Error("Missing required property 'network'");
            }
            inputs["description"] = args ? args.description : undefined;
            inputs["destRange"] = args ? args.destRange : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["network"] = args ? args.network : undefined;
            inputs["nextHopGateway"] = args ? args.nextHopGateway : undefined;
            inputs["nextHopInstance"] = args ? args.nextHopInstance : undefined;
            inputs["nextHopInstanceZone"] = args ? args.nextHopInstanceZone : undefined;
            inputs["nextHopIp"] = args ? args.nextHopIp : undefined;
            inputs["nextHopVpnTunnel"] = args ? args.nextHopVpnTunnel : undefined;
            inputs["priority"] = args ? args.priority : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["nextHopNetwork"] = undefined /*out*/;
            inputs["selfLink"] = undefined /*out*/;
        }
        super("gcp:compute/route:Route", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Route resources.
 */
export interface RouteState {
    readonly description?: pulumi.Input<string>;
    readonly destRange?: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly network?: pulumi.Input<string>;
    readonly nextHopGateway?: pulumi.Input<string>;
    readonly nextHopInstance?: pulumi.Input<string>;
    /**
     * (Optional when `next_hop_instance` is
     * specified)  The zone of the instance specified in
     * `next_hop_instance`.  Omit if `next_hop_instance` is specified as
     * a URL.
     */
    readonly nextHopInstanceZone?: pulumi.Input<string>;
    readonly nextHopIp?: pulumi.Input<string>;
    readonly nextHopNetwork?: pulumi.Input<string>;
    readonly nextHopVpnTunnel?: pulumi.Input<string>;
    readonly priority?: pulumi.Input<number>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
    /**
     * The URI of the created resource.
     */
    readonly selfLink?: pulumi.Input<string>;
    readonly tags?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a Route resource.
 */
export interface RouteArgs {
    readonly description?: pulumi.Input<string>;
    readonly destRange: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly network: pulumi.Input<string>;
    readonly nextHopGateway?: pulumi.Input<string>;
    readonly nextHopInstance?: pulumi.Input<string>;
    /**
     * (Optional when `next_hop_instance` is
     * specified)  The zone of the instance specified in
     * `next_hop_instance`.  Omit if `next_hop_instance` is specified as
     * a URL.
     */
    readonly nextHopInstanceZone?: pulumi.Input<string>;
    readonly nextHopIp?: pulumi.Input<string>;
    readonly nextHopVpnTunnel?: pulumi.Input<string>;
    readonly priority?: pulumi.Input<number>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
    readonly tags?: pulumi.Input<pulumi.Input<string>[]>;
}
