// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Get a Compute Instance Group Manager within GCE.
 * For more information, see [the official documentation](https://cloud.google.com/compute/docs/instance-groups#managed_instance_groups)
 * and [API](https://cloud.google.com/compute/docs/reference/latest/instanceGroupManagers)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const igm1 = gcp.compute.getInstanceGroupManager({
 *     name: "my-igm",
 *     zone: "us-central1-a",
 * });
 * const igm2 = gcp.compute.getInstanceGroupManager({
 *     selfLink: "https://www.googleapis.com/compute/v1/projects/myproject/zones/us-central1-a/instanceGroupManagers/my-igm",
 * });
 * ```
 */
export function getInstanceGroupManager(args?: GetInstanceGroupManagerArgs, opts?: pulumi.InvokeOptions): Promise<GetInstanceGroupManagerResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:compute/getInstanceGroupManager:getInstanceGroupManager", {
        "name": args.name,
        "project": args.project,
        "selfLink": args.selfLink,
        "zone": args.zone,
    }, opts);
}

/**
 * A collection of arguments for invoking getInstanceGroupManager.
 */
export interface GetInstanceGroupManagerArgs {
    /**
     * The name of the instance group. Either `name` or `selfLink` must be provided.
     */
    name?: string;
    /**
     * The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
     */
    project?: string;
    /**
     * The self link of the instance group. Either `name` or `selfLink` must be provided.
     */
    selfLink?: string;
    /**
     * The zone of the instance group. If referencing the instance group by name and `zone` is not provided, the provider zone is used.
     */
    zone?: string;
}

/**
 * A collection of values returned by getInstanceGroupManager.
 */
export interface GetInstanceGroupManagerResult {
    readonly allInstancesConfigs: outputs.compute.GetInstanceGroupManagerAllInstancesConfig[];
    readonly autoHealingPolicies: outputs.compute.GetInstanceGroupManagerAutoHealingPolicy[];
    readonly baseInstanceName: string;
    readonly description: string;
    readonly fingerprint: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceGroup: string;
    readonly instanceLifecyclePolicies: outputs.compute.GetInstanceGroupManagerInstanceLifecyclePolicy[];
    readonly listManagedInstancesResults: string;
    readonly name?: string;
    readonly namedPorts: outputs.compute.GetInstanceGroupManagerNamedPort[];
    readonly operation: string;
    readonly project?: string;
    readonly selfLink?: string;
    readonly statefulDisks: outputs.compute.GetInstanceGroupManagerStatefulDisk[];
    readonly statefulExternalIps: outputs.compute.GetInstanceGroupManagerStatefulExternalIp[];
    readonly statefulInternalIps: outputs.compute.GetInstanceGroupManagerStatefulInternalIp[];
    readonly statuses: outputs.compute.GetInstanceGroupManagerStatus[];
    readonly targetPools: string[];
    readonly targetSize: number;
    readonly updatePolicies: outputs.compute.GetInstanceGroupManagerUpdatePolicy[];
    readonly versions: outputs.compute.GetInstanceGroupManagerVersion[];
    readonly waitForInstances: boolean;
    readonly waitForInstancesStatus: string;
    readonly zone?: string;
}
/**
 * Get a Compute Instance Group Manager within GCE.
 * For more information, see [the official documentation](https://cloud.google.com/compute/docs/instance-groups#managed_instance_groups)
 * and [API](https://cloud.google.com/compute/docs/reference/latest/instanceGroupManagers)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const igm1 = gcp.compute.getInstanceGroupManager({
 *     name: "my-igm",
 *     zone: "us-central1-a",
 * });
 * const igm2 = gcp.compute.getInstanceGroupManager({
 *     selfLink: "https://www.googleapis.com/compute/v1/projects/myproject/zones/us-central1-a/instanceGroupManagers/my-igm",
 * });
 * ```
 */
export function getInstanceGroupManagerOutput(args?: GetInstanceGroupManagerOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetInstanceGroupManagerResult> {
    return pulumi.output(args).apply((a: any) => getInstanceGroupManager(a, opts))
}

/**
 * A collection of arguments for invoking getInstanceGroupManager.
 */
export interface GetInstanceGroupManagerOutputArgs {
    /**
     * The name of the instance group. Either `name` or `selfLink` must be provided.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The self link of the instance group. Either `name` or `selfLink` must be provided.
     */
    selfLink?: pulumi.Input<string>;
    /**
     * The zone of the instance group. If referencing the instance group by name and `zone` is not provided, the provider zone is used.
     */
    zone?: pulumi.Input<string>;
}
