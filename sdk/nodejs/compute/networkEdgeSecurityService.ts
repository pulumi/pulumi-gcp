// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Google Cloud Armor network edge security service resource.
 *
 * To get more information about NetworkEdgeSecurityService, see:
 *
 * * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/networkEdgeSecurityServices)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/armor/docs/advanced-network-ddos)
 *
 * ## Example Usage
 *
 * ### Compute Network Edge Security Service Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const _default = new gcp.compute.NetworkEdgeSecurityService("default", {
 *     name: "my-edge-security-service",
 *     region: "us-east1",
 *     description: "My basic resource",
 * });
 * ```
 *
 * ## Import
 *
 * NetworkEdgeSecurityService can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/regions/{{region}}/networkEdgeSecurityServices/{{name}}`
 *
 * * `{{project}}/{{region}}/{{name}}`
 *
 * * `{{region}}/{{name}}`
 *
 * * `{{name}}`
 *
 * When using the `pulumi import` command, NetworkEdgeSecurityService can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:compute/networkEdgeSecurityService:NetworkEdgeSecurityService default projects/{{project}}/regions/{{region}}/networkEdgeSecurityServices/{{name}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:compute/networkEdgeSecurityService:NetworkEdgeSecurityService default {{project}}/{{region}}/{{name}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:compute/networkEdgeSecurityService:NetworkEdgeSecurityService default {{region}}/{{name}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:compute/networkEdgeSecurityService:NetworkEdgeSecurityService default {{name}}
 * ```
 */
export class NetworkEdgeSecurityService extends pulumi.CustomResource {
    /**
     * Get an existing NetworkEdgeSecurityService resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkEdgeSecurityServiceState, opts?: pulumi.CustomResourceOptions): NetworkEdgeSecurityService {
        return new NetworkEdgeSecurityService(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:compute/networkEdgeSecurityService:NetworkEdgeSecurityService';

    /**
     * Returns true if the given object is an instance of NetworkEdgeSecurityService.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkEdgeSecurityService {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkEdgeSecurityService.__pulumiType;
    }

    /**
     * Creation timestamp in RFC3339 text format.
     */
    declare public /*out*/ readonly creationTimestamp: pulumi.Output<string>;
    /**
     * Free-text description of the resource.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a NetworkEdgeSecurityService.
     * An up-to-date fingerprint must be provided in order to update the NetworkEdgeSecurityService, otherwise the request will fail with error 412 conditionNotMet.
     */
    declare public /*out*/ readonly fingerprint: pulumi.Output<string>;
    /**
     * Name of the resource. Provided by the client when the resource is created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    declare public readonly project: pulumi.Output<string>;
    /**
     * The region of the gateway security policy.
     */
    declare public readonly region: pulumi.Output<string | undefined>;
    /**
     * The resource URL for the network edge security service associated with this network edge security service.
     */
    declare public readonly securityPolicy: pulumi.Output<string | undefined>;
    /**
     * Server-defined URL for the resource.
     */
    declare public /*out*/ readonly selfLink: pulumi.Output<string>;
    /**
     * Server-defined URL for this resource with the resource id.
     */
    declare public /*out*/ readonly selfLinkWithServiceId: pulumi.Output<string>;
    /**
     * The unique identifier for the resource. This identifier is defined by the server.
     */
    declare public /*out*/ readonly serviceId: pulumi.Output<string>;

    /**
     * Create a NetworkEdgeSecurityService resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: NetworkEdgeSecurityServiceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkEdgeSecurityServiceArgs | NetworkEdgeSecurityServiceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkEdgeSecurityServiceState | undefined;
            resourceInputs["creationTimestamp"] = state?.creationTimestamp;
            resourceInputs["description"] = state?.description;
            resourceInputs["fingerprint"] = state?.fingerprint;
            resourceInputs["name"] = state?.name;
            resourceInputs["project"] = state?.project;
            resourceInputs["region"] = state?.region;
            resourceInputs["securityPolicy"] = state?.securityPolicy;
            resourceInputs["selfLink"] = state?.selfLink;
            resourceInputs["selfLinkWithServiceId"] = state?.selfLinkWithServiceId;
            resourceInputs["serviceId"] = state?.serviceId;
        } else {
            const args = argsOrState as NetworkEdgeSecurityServiceArgs | undefined;
            resourceInputs["description"] = args?.description;
            resourceInputs["name"] = args?.name;
            resourceInputs["project"] = args?.project;
            resourceInputs["region"] = args?.region;
            resourceInputs["securityPolicy"] = args?.securityPolicy;
            resourceInputs["creationTimestamp"] = undefined /*out*/;
            resourceInputs["fingerprint"] = undefined /*out*/;
            resourceInputs["selfLink"] = undefined /*out*/;
            resourceInputs["selfLinkWithServiceId"] = undefined /*out*/;
            resourceInputs["serviceId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkEdgeSecurityService.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NetworkEdgeSecurityService resources.
 */
export interface NetworkEdgeSecurityServiceState {
    /**
     * Creation timestamp in RFC3339 text format.
     */
    creationTimestamp?: pulumi.Input<string>;
    /**
     * Free-text description of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a NetworkEdgeSecurityService.
     * An up-to-date fingerprint must be provided in order to update the NetworkEdgeSecurityService, otherwise the request will fail with error 412 conditionNotMet.
     */
    fingerprint?: pulumi.Input<string>;
    /**
     * Name of the resource. Provided by the client when the resource is created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The region of the gateway security policy.
     */
    region?: pulumi.Input<string>;
    /**
     * The resource URL for the network edge security service associated with this network edge security service.
     */
    securityPolicy?: pulumi.Input<string>;
    /**
     * Server-defined URL for the resource.
     */
    selfLink?: pulumi.Input<string>;
    /**
     * Server-defined URL for this resource with the resource id.
     */
    selfLinkWithServiceId?: pulumi.Input<string>;
    /**
     * The unique identifier for the resource. This identifier is defined by the server.
     */
    serviceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NetworkEdgeSecurityService resource.
 */
export interface NetworkEdgeSecurityServiceArgs {
    /**
     * Free-text description of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Name of the resource. Provided by the client when the resource is created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The region of the gateway security policy.
     */
    region?: pulumi.Input<string>;
    /**
     * The resource URL for the network edge security service associated with this network edge security service.
     */
    securityPolicy?: pulumi.Input<string>;
}
