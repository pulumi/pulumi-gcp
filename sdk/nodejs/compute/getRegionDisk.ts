// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Get information about a Google Compute Regional Persistent disks.
 *
 * [the official documentation](https://cloud.google.com/compute/docs/disks) and its [API](https://cloud.google.com/compute/docs/reference/rest/v1/regionDisks).
 */
export function getRegionDisk(args: GetRegionDiskArgs, opts?: pulumi.InvokeOptions): Promise<GetRegionDiskResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:compute/getRegionDisk:getRegionDisk", {
        "name": args.name,
        "project": args.project,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getRegionDisk.
 */
export interface GetRegionDiskArgs {
    /**
     * The name of a specific disk.
     *
     * - - -
     */
    name: string;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: string;
    /**
     * A reference to the region where the disk resides.
     */
    region?: string;
}

/**
 * A collection of values returned by getRegionDisk.
 */
export interface GetRegionDiskResult {
    readonly asyncPrimaryDisks: outputs.compute.GetRegionDiskAsyncPrimaryDisk[];
    readonly createSnapshotBeforeDestroy: boolean;
    readonly createSnapshotBeforeDestroyPrefix: string;
    readonly creationTimestamp: string;
    readonly description: string;
    readonly diskEncryptionKeys: outputs.compute.GetRegionDiskDiskEncryptionKey[];
    readonly diskId: string;
    readonly effectiveLabels: {[key: string]: string};
    readonly guestOsFeatures: outputs.compute.GetRegionDiskGuestOsFeature[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly interface: string;
    readonly labelFingerprint: string;
    readonly labels: {[key: string]: string};
    readonly lastAttachTimestamp: string;
    readonly lastDetachTimestamp: string;
    readonly licenses: string[];
    readonly name: string;
    readonly physicalBlockSizeBytes: number;
    readonly project?: string;
    readonly pulumiLabels: {[key: string]: string};
    readonly region?: string;
    readonly replicaZones: string[];
    readonly selfLink: string;
    readonly size: number;
    readonly snapshot: string;
    readonly sourceDisk: string;
    readonly sourceDiskId: string;
    readonly sourceSnapshotEncryptionKeys: outputs.compute.GetRegionDiskSourceSnapshotEncryptionKey[];
    readonly sourceSnapshotId: string;
    readonly type: string;
    readonly users: string[];
}
/**
 * Get information about a Google Compute Regional Persistent disks.
 *
 * [the official documentation](https://cloud.google.com/compute/docs/disks) and its [API](https://cloud.google.com/compute/docs/reference/rest/v1/regionDisks).
 */
export function getRegionDiskOutput(args: GetRegionDiskOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRegionDiskResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("gcp:compute/getRegionDisk:getRegionDisk", {
        "name": args.name,
        "project": args.project,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getRegionDisk.
 */
export interface GetRegionDiskOutputArgs {
    /**
     * The name of a specific disk.
     *
     * - - -
     */
    name: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * A reference to the region where the disk resides.
     */
    region?: pulumi.Input<string>;
}
