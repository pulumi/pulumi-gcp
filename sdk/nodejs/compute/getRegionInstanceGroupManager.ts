// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Get a Compute Region Instance Group Manager within GCE.
 * For more information, see [the official documentation](https://cloud.google.com/compute/docs/instance-groups/distributing-instances-with-regional-instance-groups)
 * and [API](https://cloud.google.com/compute/docs/reference/rest/v1/regionInstanceGroupManagers)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const rigm = gcp.compute.getRegionInstanceGroupManager({
 *     name: "my-igm",
 *     region: "us-central1",
 * });
 * ```
 */
export function getRegionInstanceGroupManager(args?: GetRegionInstanceGroupManagerArgs, opts?: pulumi.InvokeOptions): Promise<GetRegionInstanceGroupManagerResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:compute/getRegionInstanceGroupManager:getRegionInstanceGroupManager", {
        "name": args.name,
        "project": args.project,
        "region": args.region,
        "selfLink": args.selfLink,
    }, opts);
}

/**
 * A collection of arguments for invoking getRegionInstanceGroupManager.
 */
export interface GetRegionInstanceGroupManagerArgs {
    /**
     * The name of the instance group. Either `name` or `selfLink` must be provided.
     */
    name?: string;
    /**
     * The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
     *
     * * `Region` - (Optional) The region where the managed instance group resides. If not provided, the provider region is used.
     */
    project?: string;
    region?: string;
    /**
     * The self link of the instance group. Either `name` or `selfLink` must be provided.
     */
    selfLink?: string;
}

/**
 * A collection of values returned by getRegionInstanceGroupManager.
 */
export interface GetRegionInstanceGroupManagerResult {
    readonly allInstancesConfigs: outputs.compute.GetRegionInstanceGroupManagerAllInstancesConfig[];
    readonly autoHealingPolicies: outputs.compute.GetRegionInstanceGroupManagerAutoHealingPolicy[];
    readonly baseInstanceName: string;
    readonly creationTimestamp: string;
    readonly description: string;
    readonly distributionPolicyTargetShape: string;
    readonly distributionPolicyZones: string[];
    readonly fingerprint: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceFlexibilityPolicies: outputs.compute.GetRegionInstanceGroupManagerInstanceFlexibilityPolicy[];
    readonly instanceGroup: string;
    readonly instanceLifecyclePolicies: outputs.compute.GetRegionInstanceGroupManagerInstanceLifecyclePolicy[];
    readonly listManagedInstancesResults: string;
    readonly name?: string;
    readonly namedPorts: outputs.compute.GetRegionInstanceGroupManagerNamedPort[];
    readonly params: outputs.compute.GetRegionInstanceGroupManagerParam[];
    readonly project?: string;
    readonly region?: string;
    readonly selfLink?: string;
    readonly standbyPolicies: outputs.compute.GetRegionInstanceGroupManagerStandbyPolicy[];
    readonly statefulDisks: outputs.compute.GetRegionInstanceGroupManagerStatefulDisk[];
    readonly statefulExternalIps: outputs.compute.GetRegionInstanceGroupManagerStatefulExternalIp[];
    readonly statefulInternalIps: outputs.compute.GetRegionInstanceGroupManagerStatefulInternalIp[];
    readonly statuses: outputs.compute.GetRegionInstanceGroupManagerStatus[];
    readonly targetPools: string[];
    readonly targetSize: number;
    readonly targetStoppedSize: number;
    readonly targetSuspendedSize: number;
    readonly updatePolicies: outputs.compute.GetRegionInstanceGroupManagerUpdatePolicy[];
    readonly versions: outputs.compute.GetRegionInstanceGroupManagerVersion[];
    readonly waitForInstances: boolean;
    readonly waitForInstancesStatus: string;
}
/**
 * Get a Compute Region Instance Group Manager within GCE.
 * For more information, see [the official documentation](https://cloud.google.com/compute/docs/instance-groups/distributing-instances-with-regional-instance-groups)
 * and [API](https://cloud.google.com/compute/docs/reference/rest/v1/regionInstanceGroupManagers)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const rigm = gcp.compute.getRegionInstanceGroupManager({
 *     name: "my-igm",
 *     region: "us-central1",
 * });
 * ```
 */
export function getRegionInstanceGroupManagerOutput(args?: GetRegionInstanceGroupManagerOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRegionInstanceGroupManagerResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("gcp:compute/getRegionInstanceGroupManager:getRegionInstanceGroupManager", {
        "name": args.name,
        "project": args.project,
        "region": args.region,
        "selfLink": args.selfLink,
    }, opts);
}

/**
 * A collection of arguments for invoking getRegionInstanceGroupManager.
 */
export interface GetRegionInstanceGroupManagerOutputArgs {
    /**
     * The name of the instance group. Either `name` or `selfLink` must be provided.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs. If it is not provided, the provider project is used.
     *
     * * `Region` - (Optional) The region where the managed instance group resides. If not provided, the provider region is used.
     */
    project?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    /**
     * The self link of the instance group. Either `name` or `selfLink` must be provided.
     */
    selfLink?: pulumi.Input<string>;
}
