// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * An interconnect attachment group resource allows customers to create,
 * analyze, and expand highly available deployments.
 *
 * To get more information about InterconnectAttachmentGroup, see:
 *
 * * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/interconnects)
 * * How-to Guides
 *     * [Create a Dedicated Interconnect](https://cloud.google.com/network-connectivity/docs/interconnect/concepts/dedicated-overview)
 *
 * ## Example Usage
 *
 * ### Interconnect Attachment Group Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const example_interconnect_attachment_group = new gcp.compute.InterconnectAttachmentGroup("example-interconnect-attachment-group", {
 *     name: "example-interconnect-attachment-group",
 *     intent: {
 *         availabilitySla: "NO_SLA",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * InterconnectAttachmentGroup can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/global/interconnectAttachmentGroups/{{name}}`
 *
 * * `{{project}}/{{name}}`
 *
 * * `{{name}}`
 *
 * When using the `pulumi import` command, InterconnectAttachmentGroup can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:compute/interconnectAttachmentGroup:InterconnectAttachmentGroup default projects/{{project}}/global/interconnectAttachmentGroups/{{name}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:compute/interconnectAttachmentGroup:InterconnectAttachmentGroup default {{project}}/{{name}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:compute/interconnectAttachmentGroup:InterconnectAttachmentGroup default {{name}}
 * ```
 */
export class InterconnectAttachmentGroup extends pulumi.CustomResource {
    /**
     * Get an existing InterconnectAttachmentGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InterconnectAttachmentGroupState, opts?: pulumi.CustomResourceOptions): InterconnectAttachmentGroup {
        return new InterconnectAttachmentGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:compute/interconnectAttachmentGroup:InterconnectAttachmentGroup';

    /**
     * Returns true if the given object is an instance of InterconnectAttachmentGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InterconnectAttachmentGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InterconnectAttachmentGroup.__pulumiType;
    }

    /**
     * Attachments in the AttachmentGroup. Keys are arbitrary user-specified
     * strings. Users are encouraged, but not required, to use their preferred
     * format for resource links as keys.
     * Note that there are add-members and remove-members methods in gcloud.
     * The size of this map is limited by an "Attachments per group" quota.
     * Structure is documented below.
     */
    public readonly attachments!: pulumi.Output<outputs.compute.InterconnectAttachmentGroupAttachment[] | undefined>;
    /**
     * The redundancy this group is configured to support. The way a
     * user queries what SLA their Attachment gets is by looking at this field of
     * the Attachment's AttachmentGroup.
     * Structure is documented below.
     */
    public /*out*/ readonly configureds!: pulumi.Output<outputs.compute.InterconnectAttachmentGroupConfigured[]>;
    /**
     * Creation timestamp in RFC3339 text format.
     */
    public /*out*/ readonly creationTimestamp!: pulumi.Output<string>;
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The user's intent for this group. This is the only required field besides
     * the name that must be specified on group creation.
     * Structure is documented below.
     */
    public readonly intent!: pulumi.Output<outputs.compute.InterconnectAttachmentGroupIntent>;
    /**
     * The URL of an InterconnectGroup that groups these Attachments'
     * Interconnects. Customers do not need to set this unless directed by
     * Google Support.
     */
    public readonly interconnectGroup!: pulumi.Output<string | undefined>;
    /**
     * An analysis of the logical layout of Attachments in this
     * group. Every Attachment in the group is shown once in this structure.
     * Structure is documented below.
     */
    public /*out*/ readonly logicalStructures!: pulumi.Output<outputs.compute.InterconnectAttachmentGroupLogicalStructure[]>;
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be
     * 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters
     * long and match the regular expression `a-z?` which means the first
     * character must be a lowercase letter, and all following characters must be a dash,
     * lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    public readonly project!: pulumi.Output<string>;

    /**
     * Create a InterconnectAttachmentGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InterconnectAttachmentGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InterconnectAttachmentGroupArgs | InterconnectAttachmentGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InterconnectAttachmentGroupState | undefined;
            resourceInputs["attachments"] = state ? state.attachments : undefined;
            resourceInputs["configureds"] = state ? state.configureds : undefined;
            resourceInputs["creationTimestamp"] = state ? state.creationTimestamp : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["intent"] = state ? state.intent : undefined;
            resourceInputs["interconnectGroup"] = state ? state.interconnectGroup : undefined;
            resourceInputs["logicalStructures"] = state ? state.logicalStructures : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
        } else {
            const args = argsOrState as InterconnectAttachmentGroupArgs | undefined;
            if ((!args || args.intent === undefined) && !opts.urn) {
                throw new Error("Missing required property 'intent'");
            }
            resourceInputs["attachments"] = args ? args.attachments : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["intent"] = args ? args.intent : undefined;
            resourceInputs["interconnectGroup"] = args ? args.interconnectGroup : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["configureds"] = undefined /*out*/;
            resourceInputs["creationTimestamp"] = undefined /*out*/;
            resourceInputs["logicalStructures"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InterconnectAttachmentGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering InterconnectAttachmentGroup resources.
 */
export interface InterconnectAttachmentGroupState {
    /**
     * Attachments in the AttachmentGroup. Keys are arbitrary user-specified
     * strings. Users are encouraged, but not required, to use their preferred
     * format for resource links as keys.
     * Note that there are add-members and remove-members methods in gcloud.
     * The size of this map is limited by an "Attachments per group" quota.
     * Structure is documented below.
     */
    attachments?: pulumi.Input<pulumi.Input<inputs.compute.InterconnectAttachmentGroupAttachment>[]>;
    /**
     * The redundancy this group is configured to support. The way a
     * user queries what SLA their Attachment gets is by looking at this field of
     * the Attachment's AttachmentGroup.
     * Structure is documented below.
     */
    configureds?: pulumi.Input<pulumi.Input<inputs.compute.InterconnectAttachmentGroupConfigured>[]>;
    /**
     * Creation timestamp in RFC3339 text format.
     */
    creationTimestamp?: pulumi.Input<string>;
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * The user's intent for this group. This is the only required field besides
     * the name that must be specified on group creation.
     * Structure is documented below.
     */
    intent?: pulumi.Input<inputs.compute.InterconnectAttachmentGroupIntent>;
    /**
     * The URL of an InterconnectGroup that groups these Attachments'
     * Interconnects. Customers do not need to set this unless directed by
     * Google Support.
     */
    interconnectGroup?: pulumi.Input<string>;
    /**
     * An analysis of the logical layout of Attachments in this
     * group. Every Attachment in the group is shown once in this structure.
     * Structure is documented below.
     */
    logicalStructures?: pulumi.Input<pulumi.Input<inputs.compute.InterconnectAttachmentGroupLogicalStructure>[]>;
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be
     * 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters
     * long and match the regular expression `a-z?` which means the first
     * character must be a lowercase letter, and all following characters must be a dash,
     * lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a InterconnectAttachmentGroup resource.
 */
export interface InterconnectAttachmentGroupArgs {
    /**
     * Attachments in the AttachmentGroup. Keys are arbitrary user-specified
     * strings. Users are encouraged, but not required, to use their preferred
     * format for resource links as keys.
     * Note that there are add-members and remove-members methods in gcloud.
     * The size of this map is limited by an "Attachments per group" quota.
     * Structure is documented below.
     */
    attachments?: pulumi.Input<pulumi.Input<inputs.compute.InterconnectAttachmentGroupAttachment>[]>;
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * The user's intent for this group. This is the only required field besides
     * the name that must be specified on group creation.
     * Structure is documented below.
     */
    intent: pulumi.Input<inputs.compute.InterconnectAttachmentGroupIntent>;
    /**
     * The URL of an InterconnectGroup that groups these Attachments'
     * Interconnects. Customers do not need to set this unless directed by
     * Google Support.
     */
    interconnectGroup?: pulumi.Input<string>;
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be
     * 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters
     * long and match the regular expression `a-z?` which means the first
     * character must be a lowercase letter, and all following characters must be a dash,
     * lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
