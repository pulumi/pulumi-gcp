// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";

/**
 * Creates a static IP address resource for Google Compute Engine. For more information see
 * the official documentation for
 * [external](https://cloud.google.com/compute/docs/instances-and-network) and
 * [internal](https://cloud.google.com/compute/docs/ip-addresses/reserve-static-internal-ip-address)
 * static IP reservations, as well as the
 * [API](https://cloud.google.com/compute/docs/reference/beta/addresses/insert).
 * 
 */
export class Address extends pulumi.CustomResource {
    /**
     * Get an existing Address resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AddressState): Address {
        return new Address(name, <any>state, { id });
    }

    /**
     * The IP address to reserve. An address may only be
     * specified for INTERNAL address types. The IP address must be inside the
     * specified subnetwork, if any.
     */
    public readonly address: pulumi.Output<string>;
    /**
     * The Address Type that should be configured.
     * Specify INTERNAL to reserve an internal static IP address EXTERNAL to
     * specify an external static IP address. Defaults to EXTERNAL if omitted.
     */
    public readonly addressType: pulumi.Output<string | undefined>;
    /**
     * A unique name for the resource, required by GCE.
     * Changing this forces a new resource to be created.
     */
    public readonly name: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    public readonly project: pulumi.Output<string>;
    /**
     * The Region in which the created address should reside.
     * If it is not provided, the provider region is used.
     */
    public readonly region: pulumi.Output<string>;
    /**
     * The URI of the created resource.
     */
    public /*out*/ readonly selfLink: pulumi.Output<string>;
    /**
     * The self link URI of the subnetwork in which to
     * create the address. A subnetwork may only be specified for INTERNAL
     * address types.
     */
    public readonly subnetwork: pulumi.Output<string>;

    /**
     * Create a Address resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AddressArgs, opts?: pulumi.ResourceOptions)
    constructor(name: string, argsOrState?: AddressArgs | AddressState, opts?: pulumi.ResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: AddressState = argsOrState as AddressState | undefined;
            inputs["address"] = state ? state.address : undefined;
            inputs["addressType"] = state ? state.addressType : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["project"] = state ? state.project : undefined;
            inputs["region"] = state ? state.region : undefined;
            inputs["selfLink"] = state ? state.selfLink : undefined;
            inputs["subnetwork"] = state ? state.subnetwork : undefined;
        } else {
            const args = argsOrState as AddressArgs | undefined;
            inputs["address"] = args ? args.address : undefined;
            inputs["addressType"] = args ? args.addressType : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["region"] = args ? args.region : undefined;
            inputs["subnetwork"] = args ? args.subnetwork : undefined;
            inputs["selfLink"] = undefined /*out*/;
        }
        super("gcp:compute/address:Address", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Address resources.
 */
export interface AddressState {
    /**
     * The IP address to reserve. An address may only be
     * specified for INTERNAL address types. The IP address must be inside the
     * specified subnetwork, if any.
     */
    readonly address?: pulumi.Input<string>;
    /**
     * The Address Type that should be configured.
     * Specify INTERNAL to reserve an internal static IP address EXTERNAL to
     * specify an external static IP address. Defaults to EXTERNAL if omitted.
     */
    readonly addressType?: pulumi.Input<string>;
    /**
     * A unique name for the resource, required by GCE.
     * Changing this forces a new resource to be created.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
    /**
     * The Region in which the created address should reside.
     * If it is not provided, the provider region is used.
     */
    readonly region?: pulumi.Input<string>;
    /**
     * The URI of the created resource.
     */
    readonly selfLink?: pulumi.Input<string>;
    /**
     * The self link URI of the subnetwork in which to
     * create the address. A subnetwork may only be specified for INTERNAL
     * address types.
     */
    readonly subnetwork?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Address resource.
 */
export interface AddressArgs {
    /**
     * The IP address to reserve. An address may only be
     * specified for INTERNAL address types. The IP address must be inside the
     * specified subnetwork, if any.
     */
    readonly address?: pulumi.Input<string>;
    /**
     * The Address Type that should be configured.
     * Specify INTERNAL to reserve an internal static IP address EXTERNAL to
     * specify an external static IP address. Defaults to EXTERNAL if omitted.
     */
    readonly addressType?: pulumi.Input<string>;
    /**
     * A unique name for the resource, required by GCE.
     * Changing this forces a new resource to be created.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
    /**
     * The Region in which the created address should reside.
     * If it is not provided, the provider region is used.
     */
    readonly region?: pulumi.Input<string>;
    /**
     * The self link URI of the subnetwork in which to
     * create the address. A subnetwork may only be specified for INTERNAL
     * address types.
     */
    readonly subnetwork?: pulumi.Input<string>;
}
