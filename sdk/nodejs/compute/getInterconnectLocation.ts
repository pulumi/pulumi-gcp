// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Get the details of a single interconnect location. For more information see
 * the official [API](https://cloud.google.com/compute/docs/reference/rest/v1/interconnectLocations/get) documentation.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const _this = gcp.compute.getInterconnectLocation({
 *     name: "iad-zone1-1",
 * });
 * const thisInterconnect = new gcp.compute.Interconnect("this", {
 *     project: _this.then(_this => _this.project),
 *     location: _this.then(_this => _this.selfLink),
 *     name: "my-dedicated-connection-1",
 * });
 * ```
 */
export function getInterconnectLocation(args: GetInterconnectLocationArgs, opts?: pulumi.InvokeOptions): Promise<GetInterconnectLocationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:compute/getInterconnectLocation:getInterconnectLocation", {
        "name": args.name,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getInterconnectLocation.
 */
export interface GetInterconnectLocationArgs {
    /**
     * The name of the interconnect location.
     */
    name: string;
    /**
     * The project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    project?: string;
}

/**
 * A collection of values returned by getInterconnectLocation.
 */
export interface GetInterconnectLocationResult {
    /**
     * The postal address of the Point of Presence.
     */
    readonly address: string;
    /**
     * The availability zone for this InterconnectLocation.
     */
    readonly availabilityZone: string;
    /**
     * The city for this location.
     */
    readonly city: string;
    /**
     * The continent for this location.
     */
    readonly continent: string;
    /**
     * A textual description of the resource.
     */
    readonly description: string;
    /**
     * The name of the provider for this facility.
     */
    readonly facilityProvider: string;
    /**
     * A provider-assigned Identifier for this facility.
     */
    readonly facilityProviderFacilityId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    /**
     * The PeeringDB facility ID for this facility.
     */
    readonly peeringdbFacilityId: string;
    readonly project: string;
    /**
     * The URI of the created resource.
     */
    readonly selfLink: string;
    /**
     * The status of this InterconnectLocation.
     */
    readonly status: string;
}
/**
 * Get the details of a single interconnect location. For more information see
 * the official [API](https://cloud.google.com/compute/docs/reference/rest/v1/interconnectLocations/get) documentation.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const _this = gcp.compute.getInterconnectLocation({
 *     name: "iad-zone1-1",
 * });
 * const thisInterconnect = new gcp.compute.Interconnect("this", {
 *     project: _this.then(_this => _this.project),
 *     location: _this.then(_this => _this.selfLink),
 *     name: "my-dedicated-connection-1",
 * });
 * ```
 */
export function getInterconnectLocationOutput(args: GetInterconnectLocationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetInterconnectLocationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("gcp:compute/getInterconnectLocation:getInterconnectLocation", {
        "name": args.name,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getInterconnectLocation.
 */
export interface GetInterconnectLocationOutputArgs {
    /**
     * The name of the interconnect location.
     */
    name: pulumi.Input<string>;
    /**
     * The project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
