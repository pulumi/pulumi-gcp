// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ### Compute Firewall Policy With Rules Full
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const project = gcp.organizations.getProject({});
 * const addressGroup1 = new gcp.networksecurity.AddressGroup("address_group_1", {
 *     name: "tf-address-group",
 *     parent: "organizations/123456789",
 *     description: "Global address group",
 *     location: "global",
 *     items: ["208.80.154.224/32"],
 *     type: "IPV4",
 *     capacity: 100,
 * });
 * const securityProfile1 = new gcp.networksecurity.SecurityProfile("security_profile_1", {
 *     name: "tf-security-profile",
 *     type: "THREAT_PREVENTION",
 *     parent: "organizations/123456789",
 *     location: "global",
 * });
 * const securityProfileGroup1 = new gcp.networksecurity.SecurityProfileGroup("security_profile_group_1", {
 *     name: "tf-security-profile-group",
 *     parent: "organizations/123456789",
 *     description: "my description",
 *     threatPreventionProfile: securityProfile1.id,
 * });
 * const firewall_policy_with_rules = new gcp.compute.FirewallPolicyWithRules("firewall-policy-with-rules", {
 *     shortName: "tf-fw-org-policy-with-rules",
 *     description: "Terraform test",
 *     parent: "organizations/123456789",
 *     rules: [
 *         {
 *             description: "tcp rule",
 *             priority: 1000,
 *             enableLogging: true,
 *             action: "allow",
 *             direction: "EGRESS",
 *             match: {
 *                 layer4Configs: [{
 *                     ipProtocol: "tcp",
 *                     ports: [
 *                         "8080",
 *                         "7070",
 *                     ],
 *                 }],
 *                 destIpRanges: ["11.100.0.1/32"],
 *                 destFqdns: [
 *                     "www.yyy.com",
 *                     "www.zzz.com",
 *                 ],
 *                 destRegionCodes: [
 *                     "HK",
 *                     "IN",
 *                 ],
 *                 destThreatIntelligences: [
 *                     "iplist-search-engines-crawlers",
 *                     "iplist-tor-exit-nodes",
 *                 ],
 *                 destAddressGroups: [addressGroup1.id],
 *             },
 *             targetResources: [project.then(project => `https://www.googleapis.com/compute/beta/projects/${project.name}/global/networks/default`)],
 *         },
 *         {
 *             description: "udp rule",
 *             priority: 2000,
 *             enableLogging: false,
 *             action: "deny",
 *             direction: "INGRESS",
 *             match: {
 *                 layer4Configs: [{
 *                     ipProtocol: "udp",
 *                 }],
 *                 srcIpRanges: ["0.0.0.0/0"],
 *                 srcFqdns: [
 *                     "www.abc.com",
 *                     "www.def.com",
 *                 ],
 *                 srcRegionCodes: [
 *                     "US",
 *                     "CA",
 *                 ],
 *                 srcThreatIntelligences: [
 *                     "iplist-known-malicious-ips",
 *                     "iplist-public-clouds",
 *                 ],
 *                 srcAddressGroups: [addressGroup1.id],
 *             },
 *             disabled: true,
 *         },
 *         {
 *             description: "security profile group rule",
 *             ruleName: "tcp rule",
 *             priority: 3000,
 *             enableLogging: false,
 *             action: "apply_security_profile_group",
 *             direction: "INGRESS",
 *             match: {
 *                 layer4Configs: [{
 *                     ipProtocol: "tcp",
 *                 }],
 *                 srcIpRanges: ["0.0.0.0/0"],
 *             },
 *             targetServiceAccounts: ["test@google.com"],
 *             securityProfileGroup: pulumi.interpolate`//networksecurity.googleapis.com/${securityProfileGroup1.id}`,
 *             tlsInspect: true,
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * FirewallPolicyWithRules can be imported using any of these accepted formats:
 *
 * * `locations/global/firewallPolicies/{{policy_id}}`
 *
 * * `{{policy_id}}`
 *
 * When using the `pulumi import` command, FirewallPolicyWithRules can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:compute/firewallPolicyWithRules:FirewallPolicyWithRules default locations/global/firewallPolicies/{{policy_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:compute/firewallPolicyWithRules:FirewallPolicyWithRules default {{policy_id}}
 * ```
 */
export class FirewallPolicyWithRules extends pulumi.CustomResource {
    /**
     * Get an existing FirewallPolicyWithRules resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirewallPolicyWithRulesState, opts?: pulumi.CustomResourceOptions): FirewallPolicyWithRules {
        return new FirewallPolicyWithRules(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:compute/firewallPolicyWithRules:FirewallPolicyWithRules';

    /**
     * Returns true if the given object is an instance of FirewallPolicyWithRules.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FirewallPolicyWithRules {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FirewallPolicyWithRules.__pulumiType;
    }

    /**
     * Creation timestamp in RFC3339 text format.
     */
    public /*out*/ readonly creationTimestamp!: pulumi.Output<string>;
    /**
     * (Output)
     * A description of the rule.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Fingerprint of the resource. This field is used internally during updates of this resource.
     */
    public /*out*/ readonly fingerprint!: pulumi.Output<string>;
    /**
     * The parent of this FirewallPolicy in the Cloud Resource Hierarchy.
     * Format: organizations/{organization_id} or folders/{folder_id}
     */
    public readonly parent!: pulumi.Output<string>;
    /**
     * The unique identifier for the resource. This identifier is defined by the server.
     */
    public /*out*/ readonly policyId!: pulumi.Output<string>;
    /**
     * A list of pre-define firewall policy rules.
     * Structure is documented below.
     */
    public /*out*/ readonly predefinedRules!: pulumi.Output<outputs.compute.FirewallPolicyWithRulesPredefinedRule[]>;
    /**
     * Total count of all firewall policy rule tuples. A firewall policy can not exceed a set number of tuples.
     */
    public /*out*/ readonly ruleTupleCount!: pulumi.Output<number>;
    /**
     * A list of firewall policy rules.
     * Structure is documented below.
     */
    public readonly rules!: pulumi.Output<outputs.compute.FirewallPolicyWithRulesRule[]>;
    /**
     * Server-defined URL for the resource.
     */
    public /*out*/ readonly selfLink!: pulumi.Output<string>;
    /**
     * Server-defined URL for this resource with the resource id.
     */
    public /*out*/ readonly selfLinkWithId!: pulumi.Output<string>;
    /**
     * A textual name of the security policy.
     */
    public readonly shortName!: pulumi.Output<string>;

    /**
     * Create a FirewallPolicyWithRules resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FirewallPolicyWithRulesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FirewallPolicyWithRulesArgs | FirewallPolicyWithRulesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FirewallPolicyWithRulesState | undefined;
            resourceInputs["creationTimestamp"] = state ? state.creationTimestamp : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["fingerprint"] = state ? state.fingerprint : undefined;
            resourceInputs["parent"] = state ? state.parent : undefined;
            resourceInputs["policyId"] = state ? state.policyId : undefined;
            resourceInputs["predefinedRules"] = state ? state.predefinedRules : undefined;
            resourceInputs["ruleTupleCount"] = state ? state.ruleTupleCount : undefined;
            resourceInputs["rules"] = state ? state.rules : undefined;
            resourceInputs["selfLink"] = state ? state.selfLink : undefined;
            resourceInputs["selfLinkWithId"] = state ? state.selfLinkWithId : undefined;
            resourceInputs["shortName"] = state ? state.shortName : undefined;
        } else {
            const args = argsOrState as FirewallPolicyWithRulesArgs | undefined;
            if ((!args || args.parent === undefined) && !opts.urn) {
                throw new Error("Missing required property 'parent'");
            }
            if ((!args || args.rules === undefined) && !opts.urn) {
                throw new Error("Missing required property 'rules'");
            }
            if ((!args || args.shortName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'shortName'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["parent"] = args ? args.parent : undefined;
            resourceInputs["rules"] = args ? args.rules : undefined;
            resourceInputs["shortName"] = args ? args.shortName : undefined;
            resourceInputs["creationTimestamp"] = undefined /*out*/;
            resourceInputs["fingerprint"] = undefined /*out*/;
            resourceInputs["policyId"] = undefined /*out*/;
            resourceInputs["predefinedRules"] = undefined /*out*/;
            resourceInputs["ruleTupleCount"] = undefined /*out*/;
            resourceInputs["selfLink"] = undefined /*out*/;
            resourceInputs["selfLinkWithId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FirewallPolicyWithRules.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FirewallPolicyWithRules resources.
 */
export interface FirewallPolicyWithRulesState {
    /**
     * Creation timestamp in RFC3339 text format.
     */
    creationTimestamp?: pulumi.Input<string>;
    /**
     * (Output)
     * A description of the rule.
     */
    description?: pulumi.Input<string>;
    /**
     * Fingerprint of the resource. This field is used internally during updates of this resource.
     */
    fingerprint?: pulumi.Input<string>;
    /**
     * The parent of this FirewallPolicy in the Cloud Resource Hierarchy.
     * Format: organizations/{organization_id} or folders/{folder_id}
     */
    parent?: pulumi.Input<string>;
    /**
     * The unique identifier for the resource. This identifier is defined by the server.
     */
    policyId?: pulumi.Input<string>;
    /**
     * A list of pre-define firewall policy rules.
     * Structure is documented below.
     */
    predefinedRules?: pulumi.Input<pulumi.Input<inputs.compute.FirewallPolicyWithRulesPredefinedRule>[]>;
    /**
     * Total count of all firewall policy rule tuples. A firewall policy can not exceed a set number of tuples.
     */
    ruleTupleCount?: pulumi.Input<number>;
    /**
     * A list of firewall policy rules.
     * Structure is documented below.
     */
    rules?: pulumi.Input<pulumi.Input<inputs.compute.FirewallPolicyWithRulesRule>[]>;
    /**
     * Server-defined URL for the resource.
     */
    selfLink?: pulumi.Input<string>;
    /**
     * Server-defined URL for this resource with the resource id.
     */
    selfLinkWithId?: pulumi.Input<string>;
    /**
     * A textual name of the security policy.
     */
    shortName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FirewallPolicyWithRules resource.
 */
export interface FirewallPolicyWithRulesArgs {
    /**
     * (Output)
     * A description of the rule.
     */
    description?: pulumi.Input<string>;
    /**
     * The parent of this FirewallPolicy in the Cloud Resource Hierarchy.
     * Format: organizations/{organization_id} or folders/{folder_id}
     */
    parent: pulumi.Input<string>;
    /**
     * A list of firewall policy rules.
     * Structure is documented below.
     */
    rules: pulumi.Input<pulumi.Input<inputs.compute.FirewallPolicyWithRulesRule>[]>;
    /**
     * A textual name of the security policy.
     */
    shortName: pulumi.Input<string>;
}
