// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Mange the named ports setting for a managed instance group without
 * managing the group as whole. This resource is primarily intended for use
 * with GKE-generated groups that shouldn't otherwise be managed by other
 * tools.
 *
 * To get more information about InstanceGroupNamedPort, see:
 *
 * * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/instanceGroup)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/compute/docs/instance-groups/)
 *
 * ## Example Usage
 * ### Instance Group Named Port Gke
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const containerNetwork = new gcp.compute.Network("containerNetwork", {autoCreateSubnetworks: false});
 * const containerSubnetwork = new gcp.compute.Subnetwork("containerSubnetwork", {
 *     region: "us-central1",
 *     network: containerNetwork.name,
 *     ipCidrRange: "10.0.36.0/24",
 * });
 * const myCluster = new gcp.container.Cluster("myCluster", {
 *     location: "us-central1-a",
 *     initialNodeCount: 1,
 *     network: containerNetwork.name,
 *     subnetwork: containerSubnetwork.name,
 *     ipAllocationPolicy: {
 *         clusterIpv4CidrBlock: "/19",
 *         servicesIpv4CidrBlock: "/22",
 *     },
 * });
 * const myPort = new gcp.compute.InstanceGroupNamedPort("myPort", {
 *     group: myCluster.instanceGroupUrls[0],
 *     zone: "us-central1-a",
 *     port: 8080,
 * });
 * const myPorts = new gcp.compute.InstanceGroupNamedPort("myPorts", {
 *     group: myCluster.instanceGroupUrls[0],
 *     zone: "us-central1-a",
 *     port: 4443,
 * });
 * ```
 *
 * ## Import
 *
 * InstanceGroupNamedPort can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:compute/instanceGroupNamedPort:InstanceGroupNamedPort default projects/{{project}}/zones/{{zone}}/instanceGroups/{{group}}/{{port}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:compute/instanceGroupNamedPort:InstanceGroupNamedPort default {{project}}/{{zone}}/{{group}}/{{port}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:compute/instanceGroupNamedPort:InstanceGroupNamedPort default {{zone}}/{{group}}/{{port}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:compute/instanceGroupNamedPort:InstanceGroupNamedPort default {{group}}/{{port}}/{{name}}
 * ```
 */
export class InstanceGroupNamedPort extends pulumi.CustomResource {
    /**
     * Get an existing InstanceGroupNamedPort resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceGroupNamedPortState, opts?: pulumi.CustomResourceOptions): InstanceGroupNamedPort {
        return new InstanceGroupNamedPort(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:compute/instanceGroupNamedPort:InstanceGroupNamedPort';

    /**
     * Returns true if the given object is an instance of InstanceGroupNamedPort.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InstanceGroupNamedPort {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InstanceGroupNamedPort.__pulumiType;
    }

    /**
     * The name of the instance group.
     */
    public readonly group!: pulumi.Output<string>;
    /**
     * The name for this named port. The name must be 1-63 characters
     * long, and comply with RFC1035.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The port number, which can be a value between 1 and 65535.
     */
    public readonly port!: pulumi.Output<number>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * The zone of the instance group.
     */
    public readonly zone!: pulumi.Output<string>;

    /**
     * Create a InstanceGroupNamedPort resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceGroupNamedPortArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceGroupNamedPortArgs | InstanceGroupNamedPortState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceGroupNamedPortState | undefined;
            inputs["group"] = state ? state.group : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["port"] = state ? state.port : undefined;
            inputs["project"] = state ? state.project : undefined;
            inputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as InstanceGroupNamedPortArgs | undefined;
            if ((!args || args.group === undefined) && !opts.urn) {
                throw new Error("Missing required property 'group'");
            }
            if ((!args || args.port === undefined) && !opts.urn) {
                throw new Error("Missing required property 'port'");
            }
            inputs["group"] = args ? args.group : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["port"] = args ? args.port : undefined;
            inputs["project"] = args ? args.project : undefined;
            inputs["zone"] = args ? args.zone : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(InstanceGroupNamedPort.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering InstanceGroupNamedPort resources.
 */
export interface InstanceGroupNamedPortState {
    /**
     * The name of the instance group.
     */
    readonly group?: pulumi.Input<string>;
    /**
     * The name for this named port. The name must be 1-63 characters
     * long, and comply with RFC1035.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The port number, which can be a value between 1 and 65535.
     */
    readonly port?: pulumi.Input<number>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
    /**
     * The zone of the instance group.
     */
    readonly zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a InstanceGroupNamedPort resource.
 */
export interface InstanceGroupNamedPortArgs {
    /**
     * The name of the instance group.
     */
    readonly group: pulumi.Input<string>;
    /**
     * The name for this named port. The name must be 1-63 characters
     * long, and comply with RFC1035.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The port number, which can be a value between 1 and 65535.
     */
    readonly port: pulumi.Input<number>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project?: pulumi.Input<string>;
    /**
     * The zone of the instance group.
     */
    readonly zone?: pulumi.Input<string>;
}
