// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * A Hyperdisk Storage Pool is a pre-purchased collection of capacity, throughput, and IOPS
 * which you can then provision to your applications as needed.
 * You can use Hyperdisk Storage Pools to create and manage disks in pools and use the disks across multiple workloads.
 *
 * To get more information about StoragePool, see:
 *
 * * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/storagePools)
 * * How-to Guides
 *     * [Create Hyperdisk Storage Pools](https://cloud.google.com/compute/docs/disks/create-storage-pools)
 *
 * ## Example Usage
 *
 * ### Compute Storage Pool Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const test_storage_pool_basic = new gcp.compute.StoragePool("test-storage-pool-basic", {
 *     name: "storage-pool-basic",
 *     poolProvisionedCapacityGb: "10240",
 *     poolProvisionedThroughput: "100",
 *     storagePoolType: "hyperdisk-throughput",
 *     zone: "us-central1-a",
 *     deletionProtection: false,
 * });
 * const project = gcp.organizations.getProject({});
 * ```
 * ### Compute Storage Pool Full
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const balanced = gcp.compute.getStoragePoolTypes({
 *     zone: "us-central1-a",
 *     storagePoolType: "hyperdisk-balanced",
 * });
 * const test_storage_pool_full = new gcp.compute.StoragePool("test-storage-pool-full", {
 *     name: "storage-pool-full",
 *     description: "Hyperdisk Balanced storage pool",
 *     capacityProvisioningType: "STANDARD",
 *     poolProvisionedCapacityGb: "10240",
 *     performanceProvisioningType: "STANDARD",
 *     poolProvisionedIops: "10000",
 *     poolProvisionedThroughput: "1024",
 *     storagePoolType: balanced.then(balanced => balanced.selfLink),
 *     deletionProtection: false,
 *     zone: "us-central1-a",
 * });
 * const project = gcp.organizations.getProject({});
 * ```
 *
 * ## Import
 *
 * StoragePool can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/zones/{{zone}}/storagePools/{{name}}`
 *
 * * `{{project}}/{{zone}}/{{name}}`
 *
 * * `{{zone}}/{{name}}`
 *
 * * `{{name}}`
 *
 * When using the `pulumi import` command, StoragePool can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:compute/storagePool:StoragePool default projects/{{project}}/zones/{{zone}}/storagePools/{{name}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:compute/storagePool:StoragePool default {{project}}/{{zone}}/{{name}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:compute/storagePool:StoragePool default {{zone}}/{{name}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:compute/storagePool:StoragePool default {{name}}
 * ```
 */
export class StoragePool extends pulumi.CustomResource {
    /**
     * Get an existing StoragePool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StoragePoolState, opts?: pulumi.CustomResourceOptions): StoragePool {
        return new StoragePool(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:compute/storagePool:StoragePool';

    /**
     * Returns true if the given object is an instance of StoragePool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StoragePool {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StoragePool.__pulumiType;
    }

    /**
     * Provisioning type of the byte capacity of the pool.
     * Possible values are: `STANDARD`, `ADVANCED`.
     */
    public readonly capacityProvisioningType!: pulumi.Output<string>;
    /**
     * Creation timestamp in RFC3339 text format.
     */
    public /*out*/ readonly creationTimestamp!: pulumi.Output<string>;
    public readonly deletionProtection!: pulumi.Output<boolean | undefined>;
    /**
     * A description of this resource. Provide this property when you create the resource.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Type of the resource.
     */
    public /*out*/ readonly kind!: pulumi.Output<string>;
    /**
     * The fingerprint used for optimistic locking of this resource.
     * Used internally during updates.
     */
    public /*out*/ readonly labelFingerprint!: pulumi.Output<string>;
    /**
     * Name of the resource. Provided by the client when the resource is created.
     * The name must be 1-63 characters long, and comply with RFC1035.
     * Specifically, the name must be 1-63 characters long and match
     * the regular expression `a-z?`
     * which means the first character must be a lowercase letter,
     * and all following characters must be a dash, lowercase letter, or digit,
     * except the last character, which cannot be a dash.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Provisioning type of the performance-related parameters of the pool, such as throughput and IOPS.
     * Possible values are: `STANDARD`, `ADVANCED`.
     */
    public readonly performanceProvisioningType!: pulumi.Output<string>;
    /**
     * Size, in GiB, of the storage pool. For more information about the size limits,
     * see https://cloud.google.com/compute/docs/disks/storage-pools.
     */
    public readonly poolProvisionedCapacityGb!: pulumi.Output<string>;
    /**
     * Provisioned IOPS of the storage pool.
     * Only relevant if the storage pool type is `hyperdisk-balanced`.
     */
    public readonly poolProvisionedIops!: pulumi.Output<string | undefined>;
    /**
     * Provisioned throughput, in MB/s, of the storage pool.
     * Only relevant if the storage pool type is `hyperdisk-balanced` or `hyperdisk-throughput`.
     */
    public readonly poolProvisionedThroughput!: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * Status information for the storage pool resource.
     * Structure is documented below.
     */
    public /*out*/ readonly resourceStatuses!: pulumi.Output<outputs.compute.StoragePoolResourceStatus[]>;
    /**
     * Status information for the storage pool resource.
     * Structure is documented below.
     */
    public /*out*/ readonly statuses!: pulumi.Output<outputs.compute.StoragePoolStatus[]>;
    /**
     * Type of the storage pool. For example, the
     * following are valid values:
     * * `https://www.googleapis.com/compute/v1/projects/{project_id}/zones/{zone}/storagePoolTypes/hyperdisk-balanced`
     * * `hyperdisk-throughput`
     */
    public readonly storagePoolType!: pulumi.Output<string>;
    /**
     * A reference to the zone where the storage pool resides.
     */
    public readonly zone!: pulumi.Output<string>;

    /**
     * Create a StoragePool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StoragePoolArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StoragePoolArgs | StoragePoolState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StoragePoolState | undefined;
            resourceInputs["capacityProvisioningType"] = state ? state.capacityProvisioningType : undefined;
            resourceInputs["creationTimestamp"] = state ? state.creationTimestamp : undefined;
            resourceInputs["deletionProtection"] = state ? state.deletionProtection : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["kind"] = state ? state.kind : undefined;
            resourceInputs["labelFingerprint"] = state ? state.labelFingerprint : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["performanceProvisioningType"] = state ? state.performanceProvisioningType : undefined;
            resourceInputs["poolProvisionedCapacityGb"] = state ? state.poolProvisionedCapacityGb : undefined;
            resourceInputs["poolProvisionedIops"] = state ? state.poolProvisionedIops : undefined;
            resourceInputs["poolProvisionedThroughput"] = state ? state.poolProvisionedThroughput : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["resourceStatuses"] = state ? state.resourceStatuses : undefined;
            resourceInputs["statuses"] = state ? state.statuses : undefined;
            resourceInputs["storagePoolType"] = state ? state.storagePoolType : undefined;
            resourceInputs["zone"] = state ? state.zone : undefined;
        } else {
            const args = argsOrState as StoragePoolArgs | undefined;
            if ((!args || args.poolProvisionedCapacityGb === undefined) && !opts.urn) {
                throw new Error("Missing required property 'poolProvisionedCapacityGb'");
            }
            if ((!args || args.poolProvisionedThroughput === undefined) && !opts.urn) {
                throw new Error("Missing required property 'poolProvisionedThroughput'");
            }
            if ((!args || args.storagePoolType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storagePoolType'");
            }
            resourceInputs["capacityProvisioningType"] = args ? args.capacityProvisioningType : undefined;
            resourceInputs["deletionProtection"] = args ? args.deletionProtection : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["performanceProvisioningType"] = args ? args.performanceProvisioningType : undefined;
            resourceInputs["poolProvisionedCapacityGb"] = args ? args.poolProvisionedCapacityGb : undefined;
            resourceInputs["poolProvisionedIops"] = args ? args.poolProvisionedIops : undefined;
            resourceInputs["poolProvisionedThroughput"] = args ? args.poolProvisionedThroughput : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["storagePoolType"] = args ? args.storagePoolType : undefined;
            resourceInputs["zone"] = args ? args.zone : undefined;
            resourceInputs["creationTimestamp"] = undefined /*out*/;
            resourceInputs["kind"] = undefined /*out*/;
            resourceInputs["labelFingerprint"] = undefined /*out*/;
            resourceInputs["resourceStatuses"] = undefined /*out*/;
            resourceInputs["statuses"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(StoragePool.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering StoragePool resources.
 */
export interface StoragePoolState {
    /**
     * Provisioning type of the byte capacity of the pool.
     * Possible values are: `STANDARD`, `ADVANCED`.
     */
    capacityProvisioningType?: pulumi.Input<string>;
    /**
     * Creation timestamp in RFC3339 text format.
     */
    creationTimestamp?: pulumi.Input<string>;
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * A description of this resource. Provide this property when you create the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Type of the resource.
     */
    kind?: pulumi.Input<string>;
    /**
     * The fingerprint used for optimistic locking of this resource.
     * Used internally during updates.
     */
    labelFingerprint?: pulumi.Input<string>;
    /**
     * Name of the resource. Provided by the client when the resource is created.
     * The name must be 1-63 characters long, and comply with RFC1035.
     * Specifically, the name must be 1-63 characters long and match
     * the regular expression `a-z?`
     * which means the first character must be a lowercase letter,
     * and all following characters must be a dash, lowercase letter, or digit,
     * except the last character, which cannot be a dash.
     */
    name?: pulumi.Input<string>;
    /**
     * Provisioning type of the performance-related parameters of the pool, such as throughput and IOPS.
     * Possible values are: `STANDARD`, `ADVANCED`.
     */
    performanceProvisioningType?: pulumi.Input<string>;
    /**
     * Size, in GiB, of the storage pool. For more information about the size limits,
     * see https://cloud.google.com/compute/docs/disks/storage-pools.
     */
    poolProvisionedCapacityGb?: pulumi.Input<string>;
    /**
     * Provisioned IOPS of the storage pool.
     * Only relevant if the storage pool type is `hyperdisk-balanced`.
     */
    poolProvisionedIops?: pulumi.Input<string>;
    /**
     * Provisioned throughput, in MB/s, of the storage pool.
     * Only relevant if the storage pool type is `hyperdisk-balanced` or `hyperdisk-throughput`.
     */
    poolProvisionedThroughput?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * Status information for the storage pool resource.
     * Structure is documented below.
     */
    resourceStatuses?: pulumi.Input<pulumi.Input<inputs.compute.StoragePoolResourceStatus>[]>;
    /**
     * Status information for the storage pool resource.
     * Structure is documented below.
     */
    statuses?: pulumi.Input<pulumi.Input<inputs.compute.StoragePoolStatus>[]>;
    /**
     * Type of the storage pool. For example, the
     * following are valid values:
     * * `https://www.googleapis.com/compute/v1/projects/{project_id}/zones/{zone}/storagePoolTypes/hyperdisk-balanced`
     * * `hyperdisk-throughput`
     */
    storagePoolType?: pulumi.Input<string>;
    /**
     * A reference to the zone where the storage pool resides.
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a StoragePool resource.
 */
export interface StoragePoolArgs {
    /**
     * Provisioning type of the byte capacity of the pool.
     * Possible values are: `STANDARD`, `ADVANCED`.
     */
    capacityProvisioningType?: pulumi.Input<string>;
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * A description of this resource. Provide this property when you create the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * Name of the resource. Provided by the client when the resource is created.
     * The name must be 1-63 characters long, and comply with RFC1035.
     * Specifically, the name must be 1-63 characters long and match
     * the regular expression `a-z?`
     * which means the first character must be a lowercase letter,
     * and all following characters must be a dash, lowercase letter, or digit,
     * except the last character, which cannot be a dash.
     */
    name?: pulumi.Input<string>;
    /**
     * Provisioning type of the performance-related parameters of the pool, such as throughput and IOPS.
     * Possible values are: `STANDARD`, `ADVANCED`.
     */
    performanceProvisioningType?: pulumi.Input<string>;
    /**
     * Size, in GiB, of the storage pool. For more information about the size limits,
     * see https://cloud.google.com/compute/docs/disks/storage-pools.
     */
    poolProvisionedCapacityGb: pulumi.Input<string>;
    /**
     * Provisioned IOPS of the storage pool.
     * Only relevant if the storage pool type is `hyperdisk-balanced`.
     */
    poolProvisionedIops?: pulumi.Input<string>;
    /**
     * Provisioned throughput, in MB/s, of the storage pool.
     * Only relevant if the storage pool type is `hyperdisk-balanced` or `hyperdisk-throughput`.
     */
    poolProvisionedThroughput: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * Type of the storage pool. For example, the
     * following are valid values:
     * * `https://www.googleapis.com/compute/v1/projects/{project_id}/zones/{zone}/storagePoolTypes/hyperdisk-balanced`
     * * `hyperdisk-throughput`
     */
    storagePoolType: pulumi.Input<string>;
    /**
     * A reference to the zone where the storage pool resides.
     */
    zone?: pulumi.Input<string>;
}
