// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * A DataAccessLabel is a label on events to define user access to data.
 *
 * To get more information about DataAccessLabel, see:
 *
 * * [API documentation](https://cloud.google.com/chronicle/docs/reference/rest/v1alpha/projects.locations.instances.dataAccessLabels)
 * * How-to Guides
 *     * [Introduction to data RBAC](https://cloud.google.com/chronicle/docs/onboard/onboard-datarbac)
 *
 * ## Example Usage
 *
 * ### Chronicle Dataaccesslabel Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const example = new gcp.chronicle.DataAccessLabel("example", {
 *     location: "us",
 *     instance: "00000000-0000-0000-0000-000000000000",
 *     dataAccessLabelId: "label-id",
 *     udmQuery: "principal.hostname=\"google.com\"",
 *     description: "label-description",
 * });
 * ```
 *
 * ## Import
 *
 * DataAccessLabel can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/locations/{{location}}/instances/{{instance}}/dataAccessLabels/{{data_access_label_id}}`
 *
 * * `{{project}}/{{location}}/{{instance}}/{{data_access_label_id}}`
 *
 * * `{{location}}/{{instance}}/{{data_access_label_id}}`
 *
 * When using the `pulumi import` command, DataAccessLabel can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:chronicle/dataAccessLabel:DataAccessLabel default projects/{{project}}/locations/{{location}}/instances/{{instance}}/dataAccessLabels/{{data_access_label_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:chronicle/dataAccessLabel:DataAccessLabel default {{project}}/{{location}}/{{instance}}/{{data_access_label_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:chronicle/dataAccessLabel:DataAccessLabel default {{location}}/{{instance}}/{{data_access_label_id}}
 * ```
 */
export class DataAccessLabel extends pulumi.CustomResource {
    /**
     * Get an existing DataAccessLabel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DataAccessLabelState, opts?: pulumi.CustomResourceOptions): DataAccessLabel {
        return new DataAccessLabel(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:chronicle/dataAccessLabel:DataAccessLabel';

    /**
     * Returns true if the given object is an instance of DataAccessLabel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DataAccessLabel {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DataAccessLabel.__pulumiType;
    }

    /**
     * Output only. The user who created the data access label.
     */
    public /*out*/ readonly author!: pulumi.Output<string>;
    /**
     * Output only. The time at which the data access label was created.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Required. The ID to use for the data access label, which will become the label's
     * display name and the final component of the label's resource name. The
     * maximum number of characters should be 63. Regex pattern is as per AIP:
     * https://google.aip.dev/122#resource-id-segments
     *
     *
     * - - -
     */
    public readonly dataAccessLabelId!: pulumi.Output<string>;
    /**
     * Optional. A description of the data access label for a human reader.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Output only. The short name displayed for the label as it appears on event data. This is same as data access label id.
     */
    public /*out*/ readonly displayName!: pulumi.Output<string>;
    /**
     * The unique identifier for the Chronicle instance, which is the same as the customer ID.
     */
    public readonly instance!: pulumi.Output<string>;
    /**
     * Output only. The user who last updated the data access label.
     */
    public /*out*/ readonly lastEditor!: pulumi.Output<string>;
    /**
     * The location of the resource. This is the geographical region where the Chronicle instance resides, such as "us" or "europe-west2".
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The unique resource name of the data access label. This unique identifier is generated using values provided for the URL parameters.
     * Format:
     * projects/{project}/locations/{location}/instances/{instance}/dataAccessLabels/{data_access_label_id}
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * A UDM query over event data.
     */
    public readonly udmQuery!: pulumi.Output<string>;
    /**
     * Output only. The time at which the data access label was last updated.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a DataAccessLabel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DataAccessLabelArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DataAccessLabelArgs | DataAccessLabelState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DataAccessLabelState | undefined;
            resourceInputs["author"] = state ? state.author : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["dataAccessLabelId"] = state ? state.dataAccessLabelId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["instance"] = state ? state.instance : undefined;
            resourceInputs["lastEditor"] = state ? state.lastEditor : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["udmQuery"] = state ? state.udmQuery : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as DataAccessLabelArgs | undefined;
            if ((!args || args.dataAccessLabelId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataAccessLabelId'");
            }
            if ((!args || args.instance === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instance'");
            }
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.udmQuery === undefined) && !opts.urn) {
                throw new Error("Missing required property 'udmQuery'");
            }
            resourceInputs["dataAccessLabelId"] = args ? args.dataAccessLabelId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["instance"] = args ? args.instance : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["udmQuery"] = args ? args.udmQuery : undefined;
            resourceInputs["author"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
            resourceInputs["lastEditor"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DataAccessLabel.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DataAccessLabel resources.
 */
export interface DataAccessLabelState {
    /**
     * Output only. The user who created the data access label.
     */
    author?: pulumi.Input<string>;
    /**
     * Output only. The time at which the data access label was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Required. The ID to use for the data access label, which will become the label's
     * display name and the final component of the label's resource name. The
     * maximum number of characters should be 63. Regex pattern is as per AIP:
     * https://google.aip.dev/122#resource-id-segments
     *
     *
     * - - -
     */
    dataAccessLabelId?: pulumi.Input<string>;
    /**
     * Optional. A description of the data access label for a human reader.
     */
    description?: pulumi.Input<string>;
    /**
     * Output only. The short name displayed for the label as it appears on event data. This is same as data access label id.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The unique identifier for the Chronicle instance, which is the same as the customer ID.
     */
    instance?: pulumi.Input<string>;
    /**
     * Output only. The user who last updated the data access label.
     */
    lastEditor?: pulumi.Input<string>;
    /**
     * The location of the resource. This is the geographical region where the Chronicle instance resides, such as "us" or "europe-west2".
     */
    location?: pulumi.Input<string>;
    /**
     * The unique resource name of the data access label. This unique identifier is generated using values provided for the URL parameters.
     * Format:
     * projects/{project}/locations/{location}/instances/{instance}/dataAccessLabels/{data_access_label_id}
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * A UDM query over event data.
     */
    udmQuery?: pulumi.Input<string>;
    /**
     * Output only. The time at which the data access label was last updated.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DataAccessLabel resource.
 */
export interface DataAccessLabelArgs {
    /**
     * Required. The ID to use for the data access label, which will become the label's
     * display name and the final component of the label's resource name. The
     * maximum number of characters should be 63. Regex pattern is as per AIP:
     * https://google.aip.dev/122#resource-id-segments
     *
     *
     * - - -
     */
    dataAccessLabelId: pulumi.Input<string>;
    /**
     * Optional. A description of the data access label for a human reader.
     */
    description?: pulumi.Input<string>;
    /**
     * The unique identifier for the Chronicle instance, which is the same as the customer ID.
     */
    instance: pulumi.Input<string>;
    /**
     * The location of the resource. This is the geographical region where the Chronicle instance resides, such as "us" or "europe-west2".
     */
    location: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * A UDM query over event data.
     */
    udmQuery: pulumi.Input<string>;
}
