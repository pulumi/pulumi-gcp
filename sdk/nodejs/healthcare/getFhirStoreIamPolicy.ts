// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Retrieves the current IAM policy data for a Google Cloud Healthcare FHIR store.
 *
 * ## example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const foo = gcp.healthcare.getFhirStoreIamPolicy({
 *     fhirStoreId: google_healthcare_fhir_store.fhir_store.id,
 * });
 * ```
 */
export function getFhirStoreIamPolicy(args: GetFhirStoreIamPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetFhirStoreIamPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:healthcare/getFhirStoreIamPolicy:getFhirStoreIamPolicy", {
        "fhirStoreId": args.fhirStoreId,
    }, opts);
}

/**
 * A collection of arguments for invoking getFhirStoreIamPolicy.
 */
export interface GetFhirStoreIamPolicyArgs {
    /**
     * The FHIR store ID, in the form
     * `{project_id}/{location_name}/{dataset_name}/{fhir_store_name}` or
     * `{location_name}/{dataset_name}/{fhir_store_name}`. In the second form, the provider's
     * project setting will be used as a fallback.
     */
    fhirStoreId: string;
}

/**
 * A collection of values returned by getFhirStoreIamPolicy.
 */
export interface GetFhirStoreIamPolicyResult {
    /**
     * (Computed) The etag of the IAM policy.
     */
    readonly etag: string;
    readonly fhirStoreId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * (Computed) The policy data
     */
    readonly policyData: string;
}
/**
 * Retrieves the current IAM policy data for a Google Cloud Healthcare FHIR store.
 *
 * ## example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const foo = gcp.healthcare.getFhirStoreIamPolicy({
 *     fhirStoreId: google_healthcare_fhir_store.fhir_store.id,
 * });
 * ```
 */
export function getFhirStoreIamPolicyOutput(args: GetFhirStoreIamPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFhirStoreIamPolicyResult> {
    return pulumi.output(args).apply((a: any) => getFhirStoreIamPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getFhirStoreIamPolicy.
 */
export interface GetFhirStoreIamPolicyOutputArgs {
    /**
     * The FHIR store ID, in the form
     * `{project_id}/{location_name}/{dataset_name}/{fhir_store_name}` or
     * `{location_name}/{dataset_name}/{fhir_store_name}`. In the second form, the provider's
     * project setting will be used as a fallback.
     */
    fhirStoreId: pulumi.Input<string>;
}
