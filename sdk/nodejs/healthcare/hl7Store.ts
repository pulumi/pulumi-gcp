// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * A Hl7V2Store is a datastore inside a Healthcare dataset that conforms to the FHIR (https://www.hl7.org/hl7V2/STU3/)
 * standard for Healthcare information exchange
 * 
 * To get more information about Hl7V2Store, see:
 * 
 * * [API documentation](https://cloud.google.com/healthcare/docs/reference/rest/v1beta1/projects.locations.datasets.hl7V2Stores)
 * * How-to Guides
 *     * [Creating a HL7v2 Store](https://cloud.google.com/healthcare/docs/how-tos/hl7v2)
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-google/blob/master/website/docs/r/healthcare_hl7_v2_store.html.markdown.
 */
export class Hl7Store extends pulumi.CustomResource {
    /**
     * Get an existing Hl7Store resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Hl7StoreState, opts?: pulumi.CustomResourceOptions): Hl7Store {
        return new Hl7Store(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:healthcare/hl7Store:Hl7Store';

    /**
     * Returns true if the given object is an instance of Hl7Store.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Hl7Store {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Hl7Store.__pulumiType;
    }

    public readonly dataset!: pulumi.Output<string>;
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly notificationConfig!: pulumi.Output<{ pubsubTopic: string } | undefined>;
    public readonly parserConfig!: pulumi.Output<{ allowNullHeader?: boolean, segmentTerminator?: string } | undefined>;
    public /*out*/ readonly selfLink!: pulumi.Output<string>;

    /**
     * Create a Hl7Store resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Hl7StoreArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Hl7StoreArgs | Hl7StoreState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as Hl7StoreState | undefined;
            inputs["dataset"] = state ? state.dataset : undefined;
            inputs["labels"] = state ? state.labels : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["notificationConfig"] = state ? state.notificationConfig : undefined;
            inputs["parserConfig"] = state ? state.parserConfig : undefined;
            inputs["selfLink"] = state ? state.selfLink : undefined;
        } else {
            const args = argsOrState as Hl7StoreArgs | undefined;
            if (!args || args.dataset === undefined) {
                throw new Error("Missing required property 'dataset'");
            }
            inputs["dataset"] = args ? args.dataset : undefined;
            inputs["labels"] = args ? args.labels : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["notificationConfig"] = args ? args.notificationConfig : undefined;
            inputs["parserConfig"] = args ? args.parserConfig : undefined;
            inputs["selfLink"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(Hl7Store.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Hl7Store resources.
 */
export interface Hl7StoreState {
    readonly dataset?: pulumi.Input<string>;
    readonly labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    readonly name?: pulumi.Input<string>;
    readonly notificationConfig?: pulumi.Input<{ pubsubTopic: pulumi.Input<string> }>;
    readonly parserConfig?: pulumi.Input<{ allowNullHeader?: pulumi.Input<boolean>, segmentTerminator?: pulumi.Input<string> }>;
    readonly selfLink?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Hl7Store resource.
 */
export interface Hl7StoreArgs {
    readonly dataset: pulumi.Input<string>;
    readonly labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    readonly name?: pulumi.Input<string>;
    readonly notificationConfig?: pulumi.Input<{ pubsubTopic: pulumi.Input<string> }>;
    readonly parserConfig?: pulumi.Input<{ allowNullHeader?: pulumi.Input<boolean>, segmentTerminator?: pulumi.Input<string> }>;
}
