// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./authority";
export * from "./caPool";
export * from "./caPoolIamBinding";
export * from "./caPoolIamMember";
export * from "./caPoolIamPolicy";
export * from "./certificate";
export * from "./certificateTemplate";
export * from "./certificateTemplateIamBinding";
export * from "./certificateTemplateIamMember";
export * from "./certificateTemplateIamPolicy";
export * from "./getAuthority";

// Import resources to register:
import { Authority } from "./authority";
import { CaPool } from "./caPool";
import { CaPoolIamBinding } from "./caPoolIamBinding";
import { CaPoolIamMember } from "./caPoolIamMember";
import { CaPoolIamPolicy } from "./caPoolIamPolicy";
import { Certificate } from "./certificate";
import { CertificateTemplate } from "./certificateTemplate";
import { CertificateTemplateIamBinding } from "./certificateTemplateIamBinding";
import { CertificateTemplateIamMember } from "./certificateTemplateIamMember";
import { CertificateTemplateIamPolicy } from "./certificateTemplateIamPolicy";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "gcp:certificateauthority/authority:Authority":
                return new Authority(name, <any>undefined, { urn })
            case "gcp:certificateauthority/caPool:CaPool":
                return new CaPool(name, <any>undefined, { urn })
            case "gcp:certificateauthority/caPoolIamBinding:CaPoolIamBinding":
                return new CaPoolIamBinding(name, <any>undefined, { urn })
            case "gcp:certificateauthority/caPoolIamMember:CaPoolIamMember":
                return new CaPoolIamMember(name, <any>undefined, { urn })
            case "gcp:certificateauthority/caPoolIamPolicy:CaPoolIamPolicy":
                return new CaPoolIamPolicy(name, <any>undefined, { urn })
            case "gcp:certificateauthority/certificate:Certificate":
                return new Certificate(name, <any>undefined, { urn })
            case "gcp:certificateauthority/certificateTemplate:CertificateTemplate":
                return new CertificateTemplate(name, <any>undefined, { urn })
            case "gcp:certificateauthority/certificateTemplateIamBinding:CertificateTemplateIamBinding":
                return new CertificateTemplateIamBinding(name, <any>undefined, { urn })
            case "gcp:certificateauthority/certificateTemplateIamMember:CertificateTemplateIamMember":
                return new CertificateTemplateIamMember(name, <any>undefined, { urn })
            case "gcp:certificateauthority/certificateTemplateIamPolicy:CertificateTemplateIamPolicy":
                return new CertificateTemplateIamPolicy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "certificateauthority/authority", _module)
pulumi.runtime.registerResourceModule("gcp", "certificateauthority/caPool", _module)
pulumi.runtime.registerResourceModule("gcp", "certificateauthority/caPoolIamBinding", _module)
pulumi.runtime.registerResourceModule("gcp", "certificateauthority/caPoolIamMember", _module)
pulumi.runtime.registerResourceModule("gcp", "certificateauthority/caPoolIamPolicy", _module)
pulumi.runtime.registerResourceModule("gcp", "certificateauthority/certificate", _module)
pulumi.runtime.registerResourceModule("gcp", "certificateauthority/certificateTemplate", _module)
pulumi.runtime.registerResourceModule("gcp", "certificateauthority/certificateTemplateIamBinding", _module)
pulumi.runtime.registerResourceModule("gcp", "certificateauthority/certificateTemplateIamMember", _module)
pulumi.runtime.registerResourceModule("gcp", "certificateauthority/certificateTemplateIamPolicy", _module)
