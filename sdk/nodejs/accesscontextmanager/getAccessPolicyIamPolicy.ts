// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Retrieves the current IAM policy data for accesspolicy
 *
 * ## example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const policy = gcp.accesscontextmanager.getAccessPolicyIamPolicy({
 *     name: google_access_context_manager_access_policy["access-policy"].name,
 * });
 * ```
 */
export function getAccessPolicyIamPolicy(args: GetAccessPolicyIamPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetAccessPolicyIamPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:accesscontextmanager/getAccessPolicyIamPolicy:getAccessPolicyIamPolicy", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getAccessPolicyIamPolicy.
 */
export interface GetAccessPolicyIamPolicyArgs {
    /**
     * Used to find the parent resource to bind the IAM policy to
     */
    name: string;
}

/**
 * A collection of values returned by getAccessPolicyIamPolicy.
 */
export interface GetAccessPolicyIamPolicyResult {
    /**
     * (Computed) The etag of the IAM policy.
     */
    readonly etag: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    /**
     * (Required only by `gcp.accesscontextmanager.AccessPolicyIamPolicy`) The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     */
    readonly policyData: string;
}
/**
 * Retrieves the current IAM policy data for accesspolicy
 *
 * ## example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const policy = gcp.accesscontextmanager.getAccessPolicyIamPolicy({
 *     name: google_access_context_manager_access_policy["access-policy"].name,
 * });
 * ```
 */
export function getAccessPolicyIamPolicyOutput(args: GetAccessPolicyIamPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccessPolicyIamPolicyResult> {
    return pulumi.output(args).apply((a: any) => getAccessPolicyIamPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getAccessPolicyIamPolicy.
 */
export interface GetAccessPolicyIamPolicyOutputArgs {
    /**
     * Used to find the parent resource to bind the IAM policy to
     */
    name: pulumi.Input<string>;
}
