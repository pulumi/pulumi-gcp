// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Get information about an Access Context Manager AccessPolicy.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const policy-org = gcp.accesscontextmanager.getAccessPolicy({
 *     parent: "organizations/1234567",
 * });
 * const policy-scoped = gcp.accesscontextmanager.getAccessPolicy({
 *     parent: "organizations/1234567",
 *     scopes: ["projects/1234567"],
 * });
 * ```
 */
export function getAccessPolicy(args: GetAccessPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetAccessPolicyResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:accesscontextmanager/getAccessPolicy:getAccessPolicy", {
        "parent": args.parent,
        "scopes": args.scopes,
    }, opts);
}

/**
 * A collection of arguments for invoking getAccessPolicy.
 */
export interface GetAccessPolicyArgs {
    /**
     * The parent of this AccessPolicy in the Cloud Resource Hierarchy. Format: `organizations/{{organization_id}}`
     */
    parent: string;
    /**
     * Folder or project on which this policy is applicable. Format: `folders/{{folder_id}}` or `projects/{{project_number}}`
     */
    scopes?: string[];
}

/**
 * A collection of values returned by getAccessPolicy.
 */
export interface GetAccessPolicyResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Resource name of the AccessPolicy.
     */
    readonly name: string;
    readonly parent: string;
    readonly scopes?: string[];
    /**
     * Human readable title. Does not affect behavior.
     */
    readonly title: string;
}
/**
 * Get information about an Access Context Manager AccessPolicy.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const policy-org = gcp.accesscontextmanager.getAccessPolicy({
 *     parent: "organizations/1234567",
 * });
 * const policy-scoped = gcp.accesscontextmanager.getAccessPolicy({
 *     parent: "organizations/1234567",
 *     scopes: ["projects/1234567"],
 * });
 * ```
 */
export function getAccessPolicyOutput(args: GetAccessPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccessPolicyResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("gcp:accesscontextmanager/getAccessPolicy:getAccessPolicy", {
        "parent": args.parent,
        "scopes": args.scopes,
    }, opts);
}

/**
 * A collection of arguments for invoking getAccessPolicy.
 */
export interface GetAccessPolicyOutputArgs {
    /**
     * The parent of this AccessPolicy in the Cloud Resource Hierarchy. Format: `organizations/{{organization_id}}`
     */
    parent: pulumi.Input<string>;
    /**
     * Folder or project on which this policy is applicable. Format: `folders/{{folder_id}}` or `projects/{{project_number}}`
     */
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
}
