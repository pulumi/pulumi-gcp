// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This resource has been deprecated, please refer to ServicePerimeterEgressPolicy.
 *
 * To get more information about EgressPolicy, see:
 *
 * * [API documentation](https://cloud.google.com/access-context-manager/docs/reference/rest/v1/accessPolicies.servicePerimeters#egresspolicy)
 *
 * ## Import
 *
 * EgressPolicy can be imported using any of these accepted formats:
 *
 * * `{{egress_policy_name}}/{{resource}}`
 *
 * When using the `pulumi import` command, EgressPolicy can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:accesscontextmanager/egressPolicy:EgressPolicy default {{egress_policy_name}}/{{resource}}
 * ```
 */
export class EgressPolicy extends pulumi.CustomResource {
    /**
     * Get an existing EgressPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EgressPolicyState, opts?: pulumi.CustomResourceOptions): EgressPolicy {
        return new EgressPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:accesscontextmanager/egressPolicy:EgressPolicy';

    /**
     * Returns true if the given object is an instance of EgressPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EgressPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EgressPolicy.__pulumiType;
    }

    /**
     * The name of the Service Perimeter to add this resource to.
     *
     *
     * - - -
     */
    public readonly egressPolicyName!: pulumi.Output<string>;
    /**
     * A GCP resource that is inside of the service perimeter.
     */
    public readonly resource!: pulumi.Output<string>;

    /**
     * Create a EgressPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EgressPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EgressPolicyArgs | EgressPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EgressPolicyState | undefined;
            resourceInputs["egressPolicyName"] = state ? state.egressPolicyName : undefined;
            resourceInputs["resource"] = state ? state.resource : undefined;
        } else {
            const args = argsOrState as EgressPolicyArgs | undefined;
            if ((!args || args.egressPolicyName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'egressPolicyName'");
            }
            if ((!args || args.resource === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resource'");
            }
            resourceInputs["egressPolicyName"] = args ? args.egressPolicyName : undefined;
            resourceInputs["resource"] = args ? args.resource : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EgressPolicy.__pulumiType, name, resourceInputs, opts, false /*remote*/);
    }
}

/**
 * Input properties used for looking up and filtering EgressPolicy resources.
 */
export interface EgressPolicyState {
    /**
     * The name of the Service Perimeter to add this resource to.
     *
     *
     * - - -
     */
    egressPolicyName?: pulumi.Input<string>;
    /**
     * A GCP resource that is inside of the service perimeter.
     */
    resource?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EgressPolicy resource.
 */
export interface EgressPolicyArgs {
    /**
     * The name of the Service Perimeter to add this resource to.
     *
     *
     * - - -
     */
    egressPolicyName: pulumi.Input<string>;
    /**
     * A GCP resource that is inside of the service perimeter.
     */
    resource: pulumi.Input<string>;
}
