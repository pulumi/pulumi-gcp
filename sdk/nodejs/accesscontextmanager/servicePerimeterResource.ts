// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Allows configuring a single GCP resource that should be inside of a service perimeter.
 * This resource is intended to be used in cases where it is not possible to compile a full list
 * of projects to include in a `gcp.accesscontextmanager.ServicePerimeter` resource,
 * to enable them to be added separately.
 *
 * > **Note:** If this resource is used alongside a `gcp.accesscontextmanager.ServicePerimeter` resource,
 * the service perimeter resource must have a `lifecycle` block with `ignoreChanges = [status[0].resources]` so
 * they don't fight over which resources should be in the policy.
 *
 * To get more information about ServicePerimeterResource, see:
 *
 * * [API documentation](https://cloud.google.com/access-context-manager/docs/reference/rest/v1/accessPolicies.servicePerimeters)
 * * How-to Guides
 *     * [Service Perimeter Quickstart](https://cloud.google.com/vpc-service-controls/docs/quickstart)
 *
 * > **Warning:** If you are using User ADCs (Application Default Credentials) with this resource,
 * you must specify a `billingProject` and set `userProjectOverride` to true
 * in the provider configuration. Otherwise the ACM API will return a 403 error.
 * Your account must have the `serviceusage.services.use` permission on the
 * `billingProject` you defined.
 *
 * ## Example Usage
 * ### Access Context Manager Service Perimeter Resource Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const access_policy = new gcp.accesscontextmanager.AccessPolicy("access-policy", {
 *     parent: "organizations/123456789",
 *     title: "my policy",
 * });
 * const service_perimeter_resourceServicePerimeter = new gcp.accesscontextmanager.ServicePerimeter("service-perimeter-resourceServicePerimeter", {
 *     parent: pulumi.interpolate`accessPolicies/${access_policy.name}`,
 *     title: "restrict_all",
 *     status: {
 *         restrictedServices: ["storage.googleapis.com"],
 *     },
 * });
 * const service_perimeter_resourceServicePerimeterResource = new gcp.accesscontextmanager.ServicePerimeterResource("service-perimeter-resourceServicePerimeterResource", {
 *     perimeterName: service_perimeter_resourceServicePerimeter.name,
 *     resource: "projects/987654321",
 * });
 * ```
 *
 * ## Import
 *
 * ServicePerimeterResource can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:accesscontextmanager/servicePerimeterResource:ServicePerimeterResource default {{perimeter_name}}/{{resource}}
 * ```
 */
export class ServicePerimeterResource extends pulumi.CustomResource {
    /**
     * Get an existing ServicePerimeterResource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServicePerimeterResourceState, opts?: pulumi.CustomResourceOptions): ServicePerimeterResource {
        return new ServicePerimeterResource(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:accesscontextmanager/servicePerimeterResource:ServicePerimeterResource';

    /**
     * Returns true if the given object is an instance of ServicePerimeterResource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServicePerimeterResource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServicePerimeterResource.__pulumiType;
    }

    /**
     * The name of the Service Perimeter to add this resource to.
     */
    public readonly perimeterName!: pulumi.Output<string>;
    /**
     * A GCP resource that is inside of the service perimeter.
     * Currently only projects are allowed.
     * Format: projects/{project_number}
     */
    public readonly resource!: pulumi.Output<string>;

    /**
     * Create a ServicePerimeterResource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServicePerimeterResourceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServicePerimeterResourceArgs | ServicePerimeterResourceState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServicePerimeterResourceState | undefined;
            inputs["perimeterName"] = state ? state.perimeterName : undefined;
            inputs["resource"] = state ? state.resource : undefined;
        } else {
            const args = argsOrState as ServicePerimeterResourceArgs | undefined;
            if ((!args || args.perimeterName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'perimeterName'");
            }
            if ((!args || args.resource === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resource'");
            }
            inputs["perimeterName"] = args ? args.perimeterName : undefined;
            inputs["resource"] = args ? args.resource : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(ServicePerimeterResource.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServicePerimeterResource resources.
 */
export interface ServicePerimeterResourceState {
    /**
     * The name of the Service Perimeter to add this resource to.
     */
    readonly perimeterName?: pulumi.Input<string>;
    /**
     * A GCP resource that is inside of the service perimeter.
     * Currently only projects are allowed.
     * Format: projects/{project_number}
     */
    readonly resource?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ServicePerimeterResource resource.
 */
export interface ServicePerimeterResourceArgs {
    /**
     * The name of the Service Perimeter to add this resource to.
     */
    readonly perimeterName: pulumi.Input<string>;
    /**
     * A GCP resource that is inside of the service perimeter.
     * Currently only projects are allowed.
     * Format: projects/{project_number}
     */
    readonly resource: pulumi.Input<string>;
}
