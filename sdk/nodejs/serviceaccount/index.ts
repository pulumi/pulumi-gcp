// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./account";
export * from "./getAccount";
export * from "./getAccountAccessToken";
export * from "./getAccountIdToken";
export * from "./getAccountKey";
export * from "./iambinding";
export * from "./iammember";
export * from "./iampolicy";
export * from "./key";

// Import resources to register:
import { Account } from "./account";
import { IAMBinding } from "./iambinding";
import { IAMMember } from "./iammember";
import { IAMPolicy } from "./iampolicy";
import { Key } from "./key";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "gcp:serviceAccount/account:Account":
                return new Account(name, <any>undefined, { urn })
            case "gcp:serviceAccount/iAMBinding:IAMBinding":
                return new IAMBinding(name, <any>undefined, { urn })
            case "gcp:serviceAccount/iAMMember:IAMMember":
                return new IAMMember(name, <any>undefined, { urn })
            case "gcp:serviceAccount/iAMPolicy:IAMPolicy":
                return new IAMPolicy(name, <any>undefined, { urn })
            case "gcp:serviceAccount/key:Key":
                return new Key(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "serviceAccount/account", _module)
pulumi.runtime.registerResourceModule("gcp", "serviceAccount/iAMBinding", _module)
pulumi.runtime.registerResourceModule("gcp", "serviceAccount/iAMMember", _module)
pulumi.runtime.registerResourceModule("gcp", "serviceAccount/iAMPolicy", _module)
pulumi.runtime.registerResourceModule("gcp", "serviceAccount/key", _module)
