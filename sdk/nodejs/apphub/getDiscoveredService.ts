// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Get information about a discovered service from its uri.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const my_service = gcp.apphub.getDiscoveredService({
 *     location: "my-location",
 *     serviceUri: "my-service-uri",
 * });
 * ```
 */
export function getDiscoveredService(args: GetDiscoveredServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetDiscoveredServiceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:apphub/getDiscoveredService:getDiscoveredService", {
        "location": args.location,
        "project": args.project,
        "serviceUri": args.serviceUri,
    }, opts);
}

/**
 * A collection of arguments for invoking getDiscoveredService.
 */
export interface GetDiscoveredServiceArgs {
    /**
     * The location of the discovered service.
     */
    location: string;
    /**
     * The host project of the discovered service.
     */
    project?: string;
    /**
     * The uri of the service.
     */
    serviceUri: string;
}

/**
 * A collection of values returned by getDiscoveredService.
 */
export interface GetDiscoveredServiceResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The location that the underlying resource resides in.
     */
    readonly location: string;
    /**
     * Resource name of a Service. Format: "projects/{host-project-id}/locations/{location}/applications/{application-id}/services/{service-id}".
     */
    readonly name: string;
    readonly project?: string;
    /**
     * Properties of an underlying compute resource that can comprise a Service. Structure is documented below
     */
    readonly serviceProperties: outputs.apphub.GetDiscoveredServiceServiceProperty[];
    /**
     * Reference to an underlying networking resource that can comprise a Service. Structure is documented below
     */
    readonly serviceReferences: outputs.apphub.GetDiscoveredServiceServiceReference[];
    readonly serviceUri: string;
}
/**
 * Get information about a discovered service from its uri.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const my_service = gcp.apphub.getDiscoveredService({
 *     location: "my-location",
 *     serviceUri: "my-service-uri",
 * });
 * ```
 */
export function getDiscoveredServiceOutput(args: GetDiscoveredServiceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDiscoveredServiceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("gcp:apphub/getDiscoveredService:getDiscoveredService", {
        "location": args.location,
        "project": args.project,
        "serviceUri": args.serviceUri,
    }, opts);
}

/**
 * A collection of arguments for invoking getDiscoveredService.
 */
export interface GetDiscoveredServiceOutputArgs {
    /**
     * The location of the discovered service.
     */
    location: pulumi.Input<string>;
    /**
     * The host project of the discovered service.
     */
    project?: pulumi.Input<string>;
    /**
     * The uri of the service.
     */
    serviceUri: pulumi.Input<string>;
}
