// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Get information about a discovered workload from its uri.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const my-workload = gcp.apphub.getDiscoveredWorkload({
 *     location: "us-central1",
 *     workloadUri: "my-workload-uri",
 * });
 * ```
 */
export function getDiscoveredWorkload(args: GetDiscoveredWorkloadArgs, opts?: pulumi.InvokeOptions): Promise<GetDiscoveredWorkloadResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:apphub/getDiscoveredWorkload:getDiscoveredWorkload", {
        "location": args.location,
        "project": args.project,
        "workloadUri": args.workloadUri,
    }, opts);
}

/**
 * A collection of arguments for invoking getDiscoveredWorkload.
 */
export interface GetDiscoveredWorkloadArgs {
    /**
     * The location of the discovered workload.
     */
    location: string;
    /**
     * The host project of the discovered workload.
     */
    project?: string;
    /**
     * The uri of the workload (instance group managed by the Instance Group Manager). Example: "//compute.googleapis.com/projects/1/regions/us-east1/instanceGroups/id1"
     */
    workloadUri: string;
}

/**
 * A collection of values returned by getDiscoveredWorkload.
 */
export interface GetDiscoveredWorkloadResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The location that the underlying resource resides in.
     */
    readonly location: string;
    /**
     * Resource name of a Workload. Format: "projects/{host-project-id}/locations/{location}/applications/{application-id}/workloads/{workload-id}".
     */
    readonly name: string;
    readonly project?: string;
    /**
     * Properties of an underlying compute resource that can comprise a Workload. Structure is documented below
     */
    readonly workloadProperties: outputs.apphub.GetDiscoveredWorkloadWorkloadProperty[];
    /**
     * Reference to an underlying networking resource that can comprise a Workload. Structure is documented below
     */
    readonly workloadReferences: outputs.apphub.GetDiscoveredWorkloadWorkloadReference[];
    readonly workloadUri: string;
}
/**
 * Get information about a discovered workload from its uri.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const my-workload = gcp.apphub.getDiscoveredWorkload({
 *     location: "us-central1",
 *     workloadUri: "my-workload-uri",
 * });
 * ```
 */
export function getDiscoveredWorkloadOutput(args: GetDiscoveredWorkloadOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetDiscoveredWorkloadResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("gcp:apphub/getDiscoveredWorkload:getDiscoveredWorkload", {
        "location": args.location,
        "project": args.project,
        "workloadUri": args.workloadUri,
    }, opts);
}

/**
 * A collection of arguments for invoking getDiscoveredWorkload.
 */
export interface GetDiscoveredWorkloadOutputArgs {
    /**
     * The location of the discovered workload.
     */
    location: pulumi.Input<string>;
    /**
     * The host project of the discovered workload.
     */
    project?: pulumi.Input<string>;
    /**
     * The uri of the workload (instance group managed by the Instance Group Manager). Example: "//compute.googleapis.com/projects/1/regions/us-east1/instanceGroups/id1"
     */
    workloadUri: pulumi.Input<string>;
}
