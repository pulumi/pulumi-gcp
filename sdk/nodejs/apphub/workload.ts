// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Workload represents a binary deployment (such as Managed Instance Groups (MIGs), GKE deployments, etc.) that performs the smallest logical subset of business functionality. It registers identified workload to the Application.
 *
 * ## Example Usage
 *
 * ## Import
 *
 * Workload can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/locations/{{location}}/applications/{{application_id}}/workloads/{{workload_id}}`
 *
 * * `{{project}}/{{location}}/{{application_id}}/{{workload_id}}`
 *
 * * `{{location}}/{{application_id}}/{{workload_id}}`
 *
 * When using the `pulumi import` command, Workload can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:apphub/workload:Workload default projects/{{project}}/locations/{{location}}/applications/{{application_id}}/workloads/{{workload_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:apphub/workload:Workload default {{project}}/{{location}}/{{application_id}}/{{workload_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:apphub/workload:Workload default {{location}}/{{application_id}}/{{workload_id}}
 * ```
 */
export class Workload extends pulumi.CustomResource {
    /**
     * Get an existing Workload resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkloadState, opts?: pulumi.CustomResourceOptions): Workload {
        return new Workload(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:apphub/workload:Workload';

    /**
     * Returns true if the given object is an instance of Workload.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Workload {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Workload.__pulumiType;
    }

    /**
     * Part of `parent`.  Full resource name of a parent Application. Example: projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
     */
    declare public readonly applicationId: pulumi.Output<string>;
    /**
     * Consumer provided attributes.
     * Structure is documented below.
     */
    declare public readonly attributes: pulumi.Output<outputs.apphub.WorkloadAttributes | undefined>;
    /**
     * Output only. Create time.
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * User-defined description of a Workload.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Immutable. The resource name of the original discovered workload.
     */
    declare public readonly discoveredWorkload: pulumi.Output<string>;
    /**
     * User-defined name for the Workload.
     */
    declare public readonly displayName: pulumi.Output<string | undefined>;
    /**
     * Part of `parent`.  Full resource name of a parent Application. Example: projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * Identifier. The resource name of the Workload. Format:"projects/{host-project-id}/locations/{location}/applications/{application-id}/workloads/{workload-id}"
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    declare public readonly project: pulumi.Output<string>;
    /**
     * Output only. Workload state. Possible values:  STATE_UNSPECIFIED CREATING ACTIVE DELETING DETACHED
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * Output only. A universally unique identifier (UUID) for the `Workload` in the UUID4 format.
     */
    declare public /*out*/ readonly uid: pulumi.Output<string>;
    /**
     * Output only. Update time.
     */
    declare public /*out*/ readonly updateTime: pulumi.Output<string>;
    /**
     * The Workload identifier.
     */
    declare public readonly workloadId: pulumi.Output<string>;
    /**
     * Properties of an underlying compute resource represented by the Workload.
     * Structure is documented below.
     */
    declare public /*out*/ readonly workloadProperties: pulumi.Output<outputs.apphub.WorkloadWorkloadProperty[]>;
    /**
     * Reference of an underlying compute resource represented by the Workload.
     * Structure is documented below.
     */
    declare public /*out*/ readonly workloadReferences: pulumi.Output<outputs.apphub.WorkloadWorkloadReference[]>;

    /**
     * Create a Workload resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkloadArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkloadArgs | WorkloadState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WorkloadState | undefined;
            resourceInputs["applicationId"] = state?.applicationId;
            resourceInputs["attributes"] = state?.attributes;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["description"] = state?.description;
            resourceInputs["discoveredWorkload"] = state?.discoveredWorkload;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["location"] = state?.location;
            resourceInputs["name"] = state?.name;
            resourceInputs["project"] = state?.project;
            resourceInputs["state"] = state?.state;
            resourceInputs["uid"] = state?.uid;
            resourceInputs["updateTime"] = state?.updateTime;
            resourceInputs["workloadId"] = state?.workloadId;
            resourceInputs["workloadProperties"] = state?.workloadProperties;
            resourceInputs["workloadReferences"] = state?.workloadReferences;
        } else {
            const args = argsOrState as WorkloadArgs | undefined;
            if (args?.applicationId === undefined && !opts.urn) {
                throw new Error("Missing required property 'applicationId'");
            }
            if (args?.discoveredWorkload === undefined && !opts.urn) {
                throw new Error("Missing required property 'discoveredWorkload'");
            }
            if (args?.location === undefined && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if (args?.workloadId === undefined && !opts.urn) {
                throw new Error("Missing required property 'workloadId'");
            }
            resourceInputs["applicationId"] = args?.applicationId;
            resourceInputs["attributes"] = args?.attributes;
            resourceInputs["description"] = args?.description;
            resourceInputs["discoveredWorkload"] = args?.discoveredWorkload;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["location"] = args?.location;
            resourceInputs["project"] = args?.project;
            resourceInputs["workloadId"] = args?.workloadId;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["uid"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
            resourceInputs["workloadProperties"] = undefined /*out*/;
            resourceInputs["workloadReferences"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Workload.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Workload resources.
 */
export interface WorkloadState {
    /**
     * Part of `parent`.  Full resource name of a parent Application. Example: projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
     */
    applicationId?: pulumi.Input<string>;
    /**
     * Consumer provided attributes.
     * Structure is documented below.
     */
    attributes?: pulumi.Input<inputs.apphub.WorkloadAttributes>;
    /**
     * Output only. Create time.
     */
    createTime?: pulumi.Input<string>;
    /**
     * User-defined description of a Workload.
     */
    description?: pulumi.Input<string>;
    /**
     * Immutable. The resource name of the original discovered workload.
     */
    discoveredWorkload?: pulumi.Input<string>;
    /**
     * User-defined name for the Workload.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Part of `parent`.  Full resource name of a parent Application. Example: projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
     */
    location?: pulumi.Input<string>;
    /**
     * Identifier. The resource name of the Workload. Format:"projects/{host-project-id}/locations/{location}/applications/{application-id}/workloads/{workload-id}"
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * Output only. Workload state. Possible values:  STATE_UNSPECIFIED CREATING ACTIVE DELETING DETACHED
     */
    state?: pulumi.Input<string>;
    /**
     * Output only. A universally unique identifier (UUID) for the `Workload` in the UUID4 format.
     */
    uid?: pulumi.Input<string>;
    /**
     * Output only. Update time.
     */
    updateTime?: pulumi.Input<string>;
    /**
     * The Workload identifier.
     */
    workloadId?: pulumi.Input<string>;
    /**
     * Properties of an underlying compute resource represented by the Workload.
     * Structure is documented below.
     */
    workloadProperties?: pulumi.Input<pulumi.Input<inputs.apphub.WorkloadWorkloadProperty>[]>;
    /**
     * Reference of an underlying compute resource represented by the Workload.
     * Structure is documented below.
     */
    workloadReferences?: pulumi.Input<pulumi.Input<inputs.apphub.WorkloadWorkloadReference>[]>;
}

/**
 * The set of arguments for constructing a Workload resource.
 */
export interface WorkloadArgs {
    /**
     * Part of `parent`.  Full resource name of a parent Application. Example: projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
     */
    applicationId: pulumi.Input<string>;
    /**
     * Consumer provided attributes.
     * Structure is documented below.
     */
    attributes?: pulumi.Input<inputs.apphub.WorkloadAttributes>;
    /**
     * User-defined description of a Workload.
     */
    description?: pulumi.Input<string>;
    /**
     * Immutable. The resource name of the original discovered workload.
     */
    discoveredWorkload: pulumi.Input<string>;
    /**
     * User-defined name for the Workload.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Part of `parent`.  Full resource name of a parent Application. Example: projects/{HOST_PROJECT_ID}/locations/{LOCATION}/applications/{APPLICATION_ID}
     */
    location: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The Workload identifier.
     */
    workloadId: pulumi.Input<string>;
}
