// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { EnvironmentArgs, EnvironmentState } from "./environment";
export type Environment = import("./environment").Environment;
export const Environment: typeof import("./environment").Environment = null as any;
utilities.lazyLoad(exports, ["Environment"], () => require("./environment"));

export { GetInstanceIamPolicyArgs, GetInstanceIamPolicyResult, GetInstanceIamPolicyOutputArgs } from "./getInstanceIamPolicy";
export const getInstanceIamPolicy: typeof import("./getInstanceIamPolicy").getInstanceIamPolicy = null as any;
export const getInstanceIamPolicyOutput: typeof import("./getInstanceIamPolicy").getInstanceIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getInstanceIamPolicy","getInstanceIamPolicyOutput"], () => require("./getInstanceIamPolicy"));

export { GetRuntimeIamPolicyArgs, GetRuntimeIamPolicyResult, GetRuntimeIamPolicyOutputArgs } from "./getRuntimeIamPolicy";
export const getRuntimeIamPolicy: typeof import("./getRuntimeIamPolicy").getRuntimeIamPolicy = null as any;
export const getRuntimeIamPolicyOutput: typeof import("./getRuntimeIamPolicy").getRuntimeIamPolicyOutput = null as any;
utilities.lazyLoad(exports, ["getRuntimeIamPolicy","getRuntimeIamPolicyOutput"], () => require("./getRuntimeIamPolicy"));

export { InstanceArgs, InstanceState } from "./instance";
export type Instance = import("./instance").Instance;
export const Instance: typeof import("./instance").Instance = null as any;
utilities.lazyLoad(exports, ["Instance"], () => require("./instance"));

export { InstanceIamBindingArgs, InstanceIamBindingState } from "./instanceIamBinding";
export type InstanceIamBinding = import("./instanceIamBinding").InstanceIamBinding;
export const InstanceIamBinding: typeof import("./instanceIamBinding").InstanceIamBinding = null as any;
utilities.lazyLoad(exports, ["InstanceIamBinding"], () => require("./instanceIamBinding"));

export { InstanceIamMemberArgs, InstanceIamMemberState } from "./instanceIamMember";
export type InstanceIamMember = import("./instanceIamMember").InstanceIamMember;
export const InstanceIamMember: typeof import("./instanceIamMember").InstanceIamMember = null as any;
utilities.lazyLoad(exports, ["InstanceIamMember"], () => require("./instanceIamMember"));

export { InstanceIamPolicyArgs, InstanceIamPolicyState } from "./instanceIamPolicy";
export type InstanceIamPolicy = import("./instanceIamPolicy").InstanceIamPolicy;
export const InstanceIamPolicy: typeof import("./instanceIamPolicy").InstanceIamPolicy = null as any;
utilities.lazyLoad(exports, ["InstanceIamPolicy"], () => require("./instanceIamPolicy"));

export { RuntimeArgs, RuntimeState } from "./runtime";
export type Runtime = import("./runtime").Runtime;
export const Runtime: typeof import("./runtime").Runtime = null as any;
utilities.lazyLoad(exports, ["Runtime"], () => require("./runtime"));

export { RuntimeIamBindingArgs, RuntimeIamBindingState } from "./runtimeIamBinding";
export type RuntimeIamBinding = import("./runtimeIamBinding").RuntimeIamBinding;
export const RuntimeIamBinding: typeof import("./runtimeIamBinding").RuntimeIamBinding = null as any;
utilities.lazyLoad(exports, ["RuntimeIamBinding"], () => require("./runtimeIamBinding"));

export { RuntimeIamMemberArgs, RuntimeIamMemberState } from "./runtimeIamMember";
export type RuntimeIamMember = import("./runtimeIamMember").RuntimeIamMember;
export const RuntimeIamMember: typeof import("./runtimeIamMember").RuntimeIamMember = null as any;
utilities.lazyLoad(exports, ["RuntimeIamMember"], () => require("./runtimeIamMember"));

export { RuntimeIamPolicyArgs, RuntimeIamPolicyState } from "./runtimeIamPolicy";
export type RuntimeIamPolicy = import("./runtimeIamPolicy").RuntimeIamPolicy;
export const RuntimeIamPolicy: typeof import("./runtimeIamPolicy").RuntimeIamPolicy = null as any;
utilities.lazyLoad(exports, ["RuntimeIamPolicy"], () => require("./runtimeIamPolicy"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "gcp:notebooks/environment:Environment":
                return new Environment(name, <any>undefined, { urn })
            case "gcp:notebooks/instance:Instance":
                return new Instance(name, <any>undefined, { urn })
            case "gcp:notebooks/instanceIamBinding:InstanceIamBinding":
                return new InstanceIamBinding(name, <any>undefined, { urn })
            case "gcp:notebooks/instanceIamMember:InstanceIamMember":
                return new InstanceIamMember(name, <any>undefined, { urn })
            case "gcp:notebooks/instanceIamPolicy:InstanceIamPolicy":
                return new InstanceIamPolicy(name, <any>undefined, { urn })
            case "gcp:notebooks/runtime:Runtime":
                return new Runtime(name, <any>undefined, { urn })
            case "gcp:notebooks/runtimeIamBinding:RuntimeIamBinding":
                return new RuntimeIamBinding(name, <any>undefined, { urn })
            case "gcp:notebooks/runtimeIamMember:RuntimeIamMember":
                return new RuntimeIamMember(name, <any>undefined, { urn })
            case "gcp:notebooks/runtimeIamPolicy:RuntimeIamPolicy":
                return new RuntimeIamPolicy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "notebooks/environment", _module)
pulumi.runtime.registerResourceModule("gcp", "notebooks/instance", _module)
pulumi.runtime.registerResourceModule("gcp", "notebooks/instanceIamBinding", _module)
pulumi.runtime.registerResourceModule("gcp", "notebooks/instanceIamMember", _module)
pulumi.runtime.registerResourceModule("gcp", "notebooks/instanceIamPolicy", _module)
pulumi.runtime.registerResourceModule("gcp", "notebooks/runtime", _module)
pulumi.runtime.registerResourceModule("gcp", "notebooks/runtimeIamBinding", _module)
pulumi.runtime.registerResourceModule("gcp", "notebooks/runtimeIamMember", _module)
pulumi.runtime.registerResourceModule("gcp", "notebooks/runtimeIamPolicy", _module)
