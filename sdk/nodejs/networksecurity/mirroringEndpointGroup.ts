// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ### Network Security Mirroring Endpoint Group Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const network = new gcp.compute.Network("network", {
 *     name: "example-network",
 *     autoCreateSubnetworks: false,
 * });
 * const deploymentGroup = new gcp.networksecurity.MirroringDeploymentGroup("deployment_group", {
 *     mirroringDeploymentGroupId: "example-dg",
 *     location: "global",
 *     network: network.id,
 * });
 * const _default = new gcp.networksecurity.MirroringEndpointGroup("default", {
 *     mirroringEndpointGroupId: "example-eg",
 *     location: "global",
 *     mirroringDeploymentGroup: deploymentGroup.id,
 *     description: "some description",
 *     labels: {
 *         foo: "bar",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * MirroringEndpointGroup can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/locations/{{location}}/mirroringEndpointGroups/{{mirroring_endpoint_group_id}}`
 *
 * * `{{project}}/{{location}}/{{mirroring_endpoint_group_id}}`
 *
 * * `{{location}}/{{mirroring_endpoint_group_id}}`
 *
 * When using the `pulumi import` command, MirroringEndpointGroup can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:networksecurity/mirroringEndpointGroup:MirroringEndpointGroup default projects/{{project}}/locations/{{location}}/mirroringEndpointGroups/{{mirroring_endpoint_group_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:networksecurity/mirroringEndpointGroup:MirroringEndpointGroup default {{project}}/{{location}}/{{mirroring_endpoint_group_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:networksecurity/mirroringEndpointGroup:MirroringEndpointGroup default {{location}}/{{mirroring_endpoint_group_id}}
 * ```
 */
export class MirroringEndpointGroup extends pulumi.CustomResource {
    /**
     * Get an existing MirroringEndpointGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MirroringEndpointGroupState, opts?: pulumi.CustomResourceOptions): MirroringEndpointGroup {
        return new MirroringEndpointGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:networksecurity/mirroringEndpointGroup:MirroringEndpointGroup';

    /**
     * Returns true if the given object is an instance of MirroringEndpointGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MirroringEndpointGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MirroringEndpointGroup.__pulumiType;
    }

    /**
     * The timestamp when the resource was created.
     * See https://google.aip.dev/148#timestamps.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * User-provided description of the endpoint group.
     * Used as additional context for the endpoint group.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     */
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Labels are key/value pairs that help to organize and filter resources.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The cloud location of the endpoint group, currently restricted to `global`.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The deployment group that this DIRECT endpoint group is connected to, for example:
     * `projects/123456789/locations/global/mirroringDeploymentGroups/my-dg`.
     * See https://google.aip.dev/124.
     */
    public readonly mirroringDeploymentGroup!: pulumi.Output<string>;
    /**
     * The ID to use for the endpoint group, which will become the final component
     * of the endpoint group's resource name.
     *
     *
     * - - -
     */
    public readonly mirroringEndpointGroupId!: pulumi.Output<string>;
    /**
     * The resource name of this endpoint group, for example:
     * `projects/123456789/locations/global/mirroringEndpointGroups/my-eg`.
     * See https://google.aip.dev/122 for more details.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     */
    public /*out*/ readonly pulumiLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * The current state of the resource does not match the user's intended state,
     * and the system is working to reconcile them. This is part of the normal
     * operation (e.g. adding a new association to the group).
     * See https://google.aip.dev/128.
     */
    public /*out*/ readonly reconciling!: pulumi.Output<boolean>;
    /**
     * The current state of the endpoint group.
     * See https://google.aip.dev/216.
     * Possible values:
     * STATE_UNSPECIFIED
     * ACTIVE
     * CLOSED
     * CREATING
     * DELETING
     * OUT_OF_SYNC
     * DELETE_FAILED
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The timestamp when the resource was most recently updated.
     * See https://google.aip.dev/148#timestamps.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a MirroringEndpointGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MirroringEndpointGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MirroringEndpointGroupArgs | MirroringEndpointGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MirroringEndpointGroupState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["mirroringDeploymentGroup"] = state ? state.mirroringDeploymentGroup : undefined;
            resourceInputs["mirroringEndpointGroupId"] = state ? state.mirroringEndpointGroupId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["pulumiLabels"] = state ? state.pulumiLabels : undefined;
            resourceInputs["reconciling"] = state ? state.reconciling : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as MirroringEndpointGroupArgs | undefined;
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.mirroringDeploymentGroup === undefined) && !opts.urn) {
                throw new Error("Missing required property 'mirroringDeploymentGroup'");
            }
            if ((!args || args.mirroringEndpointGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'mirroringEndpointGroupId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["mirroringDeploymentGroup"] = args ? args.mirroringDeploymentGroup : undefined;
            resourceInputs["mirroringEndpointGroupId"] = args ? args.mirroringEndpointGroupId : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["pulumiLabels"] = undefined /*out*/;
            resourceInputs["reconciling"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["effectiveLabels", "pulumiLabels"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(MirroringEndpointGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MirroringEndpointGroup resources.
 */
export interface MirroringEndpointGroupState {
    /**
     * The timestamp when the resource was created.
     * See https://google.aip.dev/148#timestamps.
     */
    createTime?: pulumi.Input<string>;
    /**
     * User-provided description of the endpoint group.
     * Used as additional context for the endpoint group.
     */
    description?: pulumi.Input<string>;
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     */
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Labels are key/value pairs that help to organize and filter resources.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The cloud location of the endpoint group, currently restricted to `global`.
     */
    location?: pulumi.Input<string>;
    /**
     * The deployment group that this DIRECT endpoint group is connected to, for example:
     * `projects/123456789/locations/global/mirroringDeploymentGroups/my-dg`.
     * See https://google.aip.dev/124.
     */
    mirroringDeploymentGroup?: pulumi.Input<string>;
    /**
     * The ID to use for the endpoint group, which will become the final component
     * of the endpoint group's resource name.
     *
     *
     * - - -
     */
    mirroringEndpointGroupId?: pulumi.Input<string>;
    /**
     * The resource name of this endpoint group, for example:
     * `projects/123456789/locations/global/mirroringEndpointGroups/my-eg`.
     * See https://google.aip.dev/122 for more details.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     */
    pulumiLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The current state of the resource does not match the user's intended state,
     * and the system is working to reconcile them. This is part of the normal
     * operation (e.g. adding a new association to the group).
     * See https://google.aip.dev/128.
     */
    reconciling?: pulumi.Input<boolean>;
    /**
     * The current state of the endpoint group.
     * See https://google.aip.dev/216.
     * Possible values:
     * STATE_UNSPECIFIED
     * ACTIVE
     * CLOSED
     * CREATING
     * DELETING
     * OUT_OF_SYNC
     * DELETE_FAILED
     */
    state?: pulumi.Input<string>;
    /**
     * The timestamp when the resource was most recently updated.
     * See https://google.aip.dev/148#timestamps.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MirroringEndpointGroup resource.
 */
export interface MirroringEndpointGroupArgs {
    /**
     * User-provided description of the endpoint group.
     * Used as additional context for the endpoint group.
     */
    description?: pulumi.Input<string>;
    /**
     * Labels are key/value pairs that help to organize and filter resources.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The cloud location of the endpoint group, currently restricted to `global`.
     */
    location: pulumi.Input<string>;
    /**
     * The deployment group that this DIRECT endpoint group is connected to, for example:
     * `projects/123456789/locations/global/mirroringDeploymentGroups/my-dg`.
     * See https://google.aip.dev/124.
     */
    mirroringDeploymentGroup: pulumi.Input<string>;
    /**
     * The ID to use for the endpoint group, which will become the final component
     * of the endpoint group's resource name.
     *
     *
     * - - -
     */
    mirroringEndpointGroupId: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
