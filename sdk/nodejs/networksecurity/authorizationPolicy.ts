// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 * ### Network Security Authorization Policy Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const _default = new gcp.networksecurity.AuthorizationPolicy("default", {
 *     labels: {
 *         foo: "bar",
 *     },
 *     description: "my description",
 *     action: "ALLOW",
 *     rules: [{
 *         sources: [{
 *             principals: ["namespace/*"],
 *             ipBlocks: ["1.2.3.0/24"],
 *         }],
 *     }],
 * }, {
 *     provider: google_beta,
 * });
 * ```
 * ### Network Security Authorization Policy Destinations
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const _default = new gcp.networksecurity.AuthorizationPolicy("default", {
 *     labels: {
 *         foo: "bar",
 *     },
 *     description: "my description",
 *     action: "ALLOW",
 *     rules: [{
 *         sources: [{
 *             principals: ["namespace/*"],
 *             ipBlocks: ["1.2.3.0/24"],
 *         }],
 *         destinations: [{
 *             hosts: ["mydomain.*"],
 *             ports: [8080],
 *             methods: ["GET"],
 *             httpHeaderMatch: {
 *                 headerName: ":method",
 *                 regexMatch: "GET",
 *             },
 *         }],
 *     }],
 * }, {
 *     provider: google_beta,
 * });
 * ```
 *
 * ## Import
 *
 * AuthorizationPolicy can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:networksecurity/authorizationPolicy:AuthorizationPolicy default projects/{{project}}/locations/{{location}}/authorizationPolicies/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:networksecurity/authorizationPolicy:AuthorizationPolicy default {{project}}/{{location}}/{{name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:networksecurity/authorizationPolicy:AuthorizationPolicy default {{location}}/{{name}}
 * ```
 */
export class AuthorizationPolicy extends pulumi.CustomResource {
    /**
     * Get an existing AuthorizationPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AuthorizationPolicyState, opts?: pulumi.CustomResourceOptions): AuthorizationPolicy {
        return new AuthorizationPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:networksecurity/authorizationPolicy:AuthorizationPolicy';

    /**
     * Returns true if the given object is an instance of AuthorizationPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AuthorizationPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AuthorizationPolicy.__pulumiType;
    }

    /**
     * The action to take when a rule match is found. Possible values are "ALLOW" or "DENY".
     * Possible values are: `ALLOW`, `DENY`.
     */
    public readonly action!: pulumi.Output<string>;
    /**
     * Time the AuthorizationPolicy was created in UTC.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * A free-text description of the resource. Max length 1024 characters.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Set of label tags associated with the AuthorizationPolicy resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The location of the authorization policy.
     * The default value is `global`.
     */
    public readonly location!: pulumi.Output<string | undefined>;
    /**
     * Name of the AuthorizationPolicy resource.
     *
     *
     * - - -
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * List of rules to match. Note that at least one of the rules must match in order for the action specified in the 'action' field to be taken.
     * A rule is a match if there is a matching source and destination. If left blank, the action specified in the action field will be applied on every request.
     * Structure is documented below.
     */
    public readonly rules!: pulumi.Output<outputs.networksecurity.AuthorizationPolicyRule[] | undefined>;
    /**
     * Time the AuthorizationPolicy was updated in UTC.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a AuthorizationPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AuthorizationPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AuthorizationPolicyArgs | AuthorizationPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AuthorizationPolicyState | undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["rules"] = state ? state.rules : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as AuthorizationPolicyArgs | undefined;
            if ((!args || args.action === undefined) && !opts.urn) {
                throw new Error("Missing required property 'action'");
            }
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["rules"] = args ? args.rules : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AuthorizationPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AuthorizationPolicy resources.
 */
export interface AuthorizationPolicyState {
    /**
     * The action to take when a rule match is found. Possible values are "ALLOW" or "DENY".
     * Possible values are: `ALLOW`, `DENY`.
     */
    action?: pulumi.Input<string>;
    /**
     * Time the AuthorizationPolicy was created in UTC.
     */
    createTime?: pulumi.Input<string>;
    /**
     * A free-text description of the resource. Max length 1024 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Set of label tags associated with the AuthorizationPolicy resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The location of the authorization policy.
     * The default value is `global`.
     */
    location?: pulumi.Input<string>;
    /**
     * Name of the AuthorizationPolicy resource.
     *
     *
     * - - -
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * List of rules to match. Note that at least one of the rules must match in order for the action specified in the 'action' field to be taken.
     * A rule is a match if there is a matching source and destination. If left blank, the action specified in the action field will be applied on every request.
     * Structure is documented below.
     */
    rules?: pulumi.Input<pulumi.Input<inputs.networksecurity.AuthorizationPolicyRule>[]>;
    /**
     * Time the AuthorizationPolicy was updated in UTC.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AuthorizationPolicy resource.
 */
export interface AuthorizationPolicyArgs {
    /**
     * The action to take when a rule match is found. Possible values are "ALLOW" or "DENY".
     * Possible values are: `ALLOW`, `DENY`.
     */
    action: pulumi.Input<string>;
    /**
     * A free-text description of the resource. Max length 1024 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Set of label tags associated with the AuthorizationPolicy resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The location of the authorization policy.
     * The default value is `global`.
     */
    location?: pulumi.Input<string>;
    /**
     * Name of the AuthorizationPolicy resource.
     *
     *
     * - - -
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * List of rules to match. Note that at least one of the rules must match in order for the action specified in the 'action' field to be taken.
     * A rule is a match if there is a matching source and destination. If left blank, the action specified in the action field will be applied on every request.
     * Structure is documented below.
     */
    rules?: pulumi.Input<pulumi.Input<inputs.networksecurity.AuthorizationPolicyRule>[]>;
}
