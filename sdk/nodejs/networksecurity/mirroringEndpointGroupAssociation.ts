// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ### Network Security Mirroring Endpoint Group Association Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const producerNetwork = new gcp.compute.Network("producer_network", {
 *     name: "example-prod-network",
 *     autoCreateSubnetworks: false,
 * });
 * const consumerNetwork = new gcp.compute.Network("consumer_network", {
 *     name: "example-cons-network",
 *     autoCreateSubnetworks: false,
 * });
 * const deploymentGroup = new gcp.networksecurity.MirroringDeploymentGroup("deployment_group", {
 *     mirroringDeploymentGroupId: "example-dg",
 *     location: "global",
 *     network: producerNetwork.id,
 * });
 * const endpointGroup = new gcp.networksecurity.MirroringEndpointGroup("endpoint_group", {
 *     mirroringEndpointGroupId: "example-eg",
 *     location: "global",
 *     mirroringDeploymentGroup: deploymentGroup.id,
 * });
 * const _default = new gcp.networksecurity.MirroringEndpointGroupAssociation("default", {
 *     mirroringEndpointGroupAssociationId: "example-ega",
 *     location: "global",
 *     network: consumerNetwork.id,
 *     mirroringEndpointGroup: endpointGroup.id,
 *     labels: {
 *         foo: "bar",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * MirroringEndpointGroupAssociation can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/locations/{{location}}/mirroringEndpointGroupAssociations/{{mirroring_endpoint_group_association_id}}`
 *
 * * `{{project}}/{{location}}/{{mirroring_endpoint_group_association_id}}`
 *
 * * `{{location}}/{{mirroring_endpoint_group_association_id}}`
 *
 * When using the `pulumi import` command, MirroringEndpointGroupAssociation can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:networksecurity/mirroringEndpointGroupAssociation:MirroringEndpointGroupAssociation default projects/{{project}}/locations/{{location}}/mirroringEndpointGroupAssociations/{{mirroring_endpoint_group_association_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:networksecurity/mirroringEndpointGroupAssociation:MirroringEndpointGroupAssociation default {{project}}/{{location}}/{{mirroring_endpoint_group_association_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:networksecurity/mirroringEndpointGroupAssociation:MirroringEndpointGroupAssociation default {{location}}/{{mirroring_endpoint_group_association_id}}
 * ```
 */
export class MirroringEndpointGroupAssociation extends pulumi.CustomResource {
    /**
     * Get an existing MirroringEndpointGroupAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MirroringEndpointGroupAssociationState, opts?: pulumi.CustomResourceOptions): MirroringEndpointGroupAssociation {
        return new MirroringEndpointGroupAssociation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:networksecurity/mirroringEndpointGroupAssociation:MirroringEndpointGroupAssociation';

    /**
     * Returns true if the given object is an instance of MirroringEndpointGroupAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MirroringEndpointGroupAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MirroringEndpointGroupAssociation.__pulumiType;
    }

    /**
     * Output only. [Output only] Create time stamp
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     */
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Optional. Labels as key value pairs
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. See documentation for resource type `networksecurity.googleapis.com/MirroringEndpointGroupAssociation`.
     *
     *
     * - - -
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Output only. The list of locations that this association is in and its details.
     * Structure is documented below.
     */
    public /*out*/ readonly locationsDetails!: pulumi.Output<outputs.networksecurity.MirroringEndpointGroupAssociationLocationsDetail[]>;
    /**
     * Required. Immutable. The Mirroring Endpoint Group that this resource is connected to. Format
     * is:
     * `projects/{project}/locations/global/mirroringEndpointGroups/{mirroringEndpointGroup}`
     */
    public readonly mirroringEndpointGroup!: pulumi.Output<string>;
    /**
     * Optional. Id of the requesting object
     * If auto-generating Id server-side, remove this field and
     * mirroringEndpointGroupAssociationId from the methodSignature of Create
     * RPC
     */
    public readonly mirroringEndpointGroupAssociationId!: pulumi.Output<string | undefined>;
    /**
     * Immutable. Identifier. The name of the MirroringEndpointGroupAssociation.
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * Required. Immutable. The VPC network associated. Format:
     * projects/{project}/global/networks/{network}.
     */
    public readonly network!: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     */
    public /*out*/ readonly pulumiLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Output only. Whether reconciling is in progress, recommended per
     * https://google.aip.dev/128.
     */
    public /*out*/ readonly reconciling!: pulumi.Output<boolean>;
    /**
     * (Output)
     * Output only. The association state in this location.
     * Possible values:
     * STATE_UNSPECIFIED
     * ACTIVE
     * OUT_OF_SYNC
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Output only. [Output only] Update time stamp
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a MirroringEndpointGroupAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MirroringEndpointGroupAssociationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MirroringEndpointGroupAssociationArgs | MirroringEndpointGroupAssociationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MirroringEndpointGroupAssociationState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["locationsDetails"] = state ? state.locationsDetails : undefined;
            resourceInputs["mirroringEndpointGroup"] = state ? state.mirroringEndpointGroup : undefined;
            resourceInputs["mirroringEndpointGroupAssociationId"] = state ? state.mirroringEndpointGroupAssociationId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["network"] = state ? state.network : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["pulumiLabels"] = state ? state.pulumiLabels : undefined;
            resourceInputs["reconciling"] = state ? state.reconciling : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as MirroringEndpointGroupAssociationArgs | undefined;
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.mirroringEndpointGroup === undefined) && !opts.urn) {
                throw new Error("Missing required property 'mirroringEndpointGroup'");
            }
            if ((!args || args.network === undefined) && !opts.urn) {
                throw new Error("Missing required property 'network'");
            }
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["mirroringEndpointGroup"] = args ? args.mirroringEndpointGroup : undefined;
            resourceInputs["mirroringEndpointGroupAssociationId"] = args ? args.mirroringEndpointGroupAssociationId : undefined;
            resourceInputs["network"] = args ? args.network : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["locationsDetails"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["pulumiLabels"] = undefined /*out*/;
            resourceInputs["reconciling"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["effectiveLabels", "pulumiLabels"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(MirroringEndpointGroupAssociation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MirroringEndpointGroupAssociation resources.
 */
export interface MirroringEndpointGroupAssociationState {
    /**
     * Output only. [Output only] Create time stamp
     */
    createTime?: pulumi.Input<string>;
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     */
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Optional. Labels as key value pairs
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. See documentation for resource type `networksecurity.googleapis.com/MirroringEndpointGroupAssociation`.
     *
     *
     * - - -
     */
    location?: pulumi.Input<string>;
    /**
     * Output only. The list of locations that this association is in and its details.
     * Structure is documented below.
     */
    locationsDetails?: pulumi.Input<pulumi.Input<inputs.networksecurity.MirroringEndpointGroupAssociationLocationsDetail>[]>;
    /**
     * Required. Immutable. The Mirroring Endpoint Group that this resource is connected to. Format
     * is:
     * `projects/{project}/locations/global/mirroringEndpointGroups/{mirroringEndpointGroup}`
     */
    mirroringEndpointGroup?: pulumi.Input<string>;
    /**
     * Optional. Id of the requesting object
     * If auto-generating Id server-side, remove this field and
     * mirroringEndpointGroupAssociationId from the methodSignature of Create
     * RPC
     */
    mirroringEndpointGroupAssociationId?: pulumi.Input<string>;
    /**
     * Immutable. Identifier. The name of the MirroringEndpointGroupAssociation.
     */
    name?: pulumi.Input<string>;
    /**
     * Required. Immutable. The VPC network associated. Format:
     * projects/{project}/global/networks/{network}.
     */
    network?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     */
    pulumiLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Output only. Whether reconciling is in progress, recommended per
     * https://google.aip.dev/128.
     */
    reconciling?: pulumi.Input<boolean>;
    /**
     * (Output)
     * Output only. The association state in this location.
     * Possible values:
     * STATE_UNSPECIFIED
     * ACTIVE
     * OUT_OF_SYNC
     */
    state?: pulumi.Input<string>;
    /**
     * Output only. [Output only] Update time stamp
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MirroringEndpointGroupAssociation resource.
 */
export interface MirroringEndpointGroupAssociationArgs {
    /**
     * Optional. Labels as key value pairs
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Resource ID segment making up resource `name`. It identifies the resource within its parent collection as described in https://google.aip.dev/122. See documentation for resource type `networksecurity.googleapis.com/MirroringEndpointGroupAssociation`.
     *
     *
     * - - -
     */
    location: pulumi.Input<string>;
    /**
     * Required. Immutable. The Mirroring Endpoint Group that this resource is connected to. Format
     * is:
     * `projects/{project}/locations/global/mirroringEndpointGroups/{mirroringEndpointGroup}`
     */
    mirroringEndpointGroup: pulumi.Input<string>;
    /**
     * Optional. Id of the requesting object
     * If auto-generating Id server-side, remove this field and
     * mirroringEndpointGroupAssociationId from the methodSignature of Create
     * RPC
     */
    mirroringEndpointGroupAssociationId?: pulumi.Input<string>;
    /**
     * Required. Immutable. The VPC network associated. Format:
     * projects/{project}/global/networks/{network}.
     */
    network: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
