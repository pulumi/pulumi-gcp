// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Firewall endpoint association links a firewall endpoint to a VPC network in
 * the same zone. After you define this association, Cloud Firewall forwards the
 * zonal workload traffic in your VPC network that requires layer 7 inspection to
 * the attached firewall endpoint.
 *
 * To get more information about FirewallEndpointAssociation, see:
 *
 * * [API documentation](https://cloud.google.com/firewall/docs/reference/network-security/rest/v1/projects.locations.firewallEndpointAssociations#FirewallEndpointAssociation)
 * * How-to Guides
 *     * [Create and associate firewall endpoints](https://cloud.google.com/firewall/docs/configure-firewall-endpoints)
 *     * [Firewall endpoint overview](https://cloud.google.com/firewall/docs/about-firewall-endpoints)
 *
 * > **Warning:** If you are using User ADCs (Application Default Credentials) with this resource,
 * you must specify a `billingProjectId` and set `userProjectOverride` to true
 * in the provider configuration. Otherwise the ACM API will return a 403 error.
 * Your account must have the `serviceusage.services.use` permission on the
 * `billingProjectId` you defined.
 *
 * ## Example Usage
 *
 * ## Import
 *
 * FirewallEndpointAssociation can be imported using any of these accepted formats:
 *
 * * `{{parent}}/locations/{{location}}/firewallEndpointAssociations/{{name}}`
 *
 * When using the `pulumi import` command, FirewallEndpointAssociation can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:networksecurity/firewallEndpointAssociation:FirewallEndpointAssociation default {{parent}}/locations/{{location}}/firewallEndpointAssociations/{{name}}
 * ```
 */
export class FirewallEndpointAssociation extends pulumi.CustomResource {
    /**
     * Get an existing FirewallEndpointAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FirewallEndpointAssociationState, opts?: pulumi.CustomResourceOptions): FirewallEndpointAssociation {
        return new FirewallEndpointAssociation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:networksecurity/firewallEndpointAssociation:FirewallEndpointAssociation';

    /**
     * Returns true if the given object is an instance of FirewallEndpointAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FirewallEndpointAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FirewallEndpointAssociation.__pulumiType;
    }

    /**
     * Time the firewall endpoint was created in UTC.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Whether the association is disabled. True indicates that traffic will not be intercepted.
     * > **Note:** The API will reject the request if this value is set to true when creating the resource,
     * otherwise on an update the association can be disabled.
     */
    public readonly disabled!: pulumi.Output<boolean | undefined>;
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     */
    public /*out*/ readonly effectiveLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * The URL of the firewall endpoint that is being associated.
     */
    public readonly firewallEndpoint!: pulumi.Output<string>;
    /**
     * A map of key/value label pairs to assign to the resource.
     *
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    public readonly labels!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The location (zone) of the firewall endpoint association.
     *
     *
     * - - -
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The name of the firewall endpoint association resource.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The URL of the network that is being associated.
     */
    public readonly network!: pulumi.Output<string>;
    /**
     * The name of the parent this firewall endpoint association belongs to.
     * Format: projects/{project_id}.
     */
    public readonly parent!: pulumi.Output<string | undefined>;
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     */
    public /*out*/ readonly pulumiLabels!: pulumi.Output<{[key: string]: string}>;
    /**
     * Whether reconciling is in progress, recommended per https://google.aip.dev/128.
     */
    public /*out*/ readonly reconciling!: pulumi.Output<boolean>;
    /**
     * Server-defined URL of this resource.
     */
    public /*out*/ readonly selfLink!: pulumi.Output<string>;
    /**
     * The current state of the endpoint.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * The URL of the TlsInspectionPolicy that is being associated.
     */
    public readonly tlsInspectionPolicy!: pulumi.Output<string | undefined>;
    /**
     * Time the firewall endpoint was updated in UTC.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a FirewallEndpointAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FirewallEndpointAssociationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FirewallEndpointAssociationArgs | FirewallEndpointAssociationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FirewallEndpointAssociationState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["firewallEndpoint"] = state ? state.firewallEndpoint : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["network"] = state ? state.network : undefined;
            resourceInputs["parent"] = state ? state.parent : undefined;
            resourceInputs["pulumiLabels"] = state ? state.pulumiLabels : undefined;
            resourceInputs["reconciling"] = state ? state.reconciling : undefined;
            resourceInputs["selfLink"] = state ? state.selfLink : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["tlsInspectionPolicy"] = state ? state.tlsInspectionPolicy : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as FirewallEndpointAssociationArgs | undefined;
            if ((!args || args.firewallEndpoint === undefined) && !opts.urn) {
                throw new Error("Missing required property 'firewallEndpoint'");
            }
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.network === undefined) && !opts.urn) {
                throw new Error("Missing required property 'network'");
            }
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["firewallEndpoint"] = args ? args.firewallEndpoint : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["network"] = args ? args.network : undefined;
            resourceInputs["parent"] = args ? args.parent : undefined;
            resourceInputs["tlsInspectionPolicy"] = args ? args.tlsInspectionPolicy : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["pulumiLabels"] = undefined /*out*/;
            resourceInputs["reconciling"] = undefined /*out*/;
            resourceInputs["selfLink"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["effectiveLabels", "pulumiLabels"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(FirewallEndpointAssociation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FirewallEndpointAssociation resources.
 */
export interface FirewallEndpointAssociationState {
    /**
     * Time the firewall endpoint was created in UTC.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Whether the association is disabled. True indicates that traffic will not be intercepted.
     * > **Note:** The API will reject the request if this value is set to true when creating the resource,
     * otherwise on an update the association can be disabled.
     */
    disabled?: pulumi.Input<boolean>;
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     */
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The URL of the firewall endpoint that is being associated.
     */
    firewallEndpoint?: pulumi.Input<string>;
    /**
     * A map of key/value label pairs to assign to the resource.
     *
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The location (zone) of the firewall endpoint association.
     *
     *
     * - - -
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the firewall endpoint association resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The URL of the network that is being associated.
     */
    network?: pulumi.Input<string>;
    /**
     * The name of the parent this firewall endpoint association belongs to.
     * Format: projects/{project_id}.
     */
    parent?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     */
    pulumiLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Whether reconciling is in progress, recommended per https://google.aip.dev/128.
     */
    reconciling?: pulumi.Input<boolean>;
    /**
     * Server-defined URL of this resource.
     */
    selfLink?: pulumi.Input<string>;
    /**
     * The current state of the endpoint.
     */
    state?: pulumi.Input<string>;
    /**
     * The URL of the TlsInspectionPolicy that is being associated.
     */
    tlsInspectionPolicy?: pulumi.Input<string>;
    /**
     * Time the firewall endpoint was updated in UTC.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FirewallEndpointAssociation resource.
 */
export interface FirewallEndpointAssociationArgs {
    /**
     * Whether the association is disabled. True indicates that traffic will not be intercepted.
     * > **Note:** The API will reject the request if this value is set to true when creating the resource,
     * otherwise on an update the association can be disabled.
     */
    disabled?: pulumi.Input<boolean>;
    /**
     * The URL of the firewall endpoint that is being associated.
     */
    firewallEndpoint: pulumi.Input<string>;
    /**
     * A map of key/value label pairs to assign to the resource.
     *
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The location (zone) of the firewall endpoint association.
     *
     *
     * - - -
     */
    location: pulumi.Input<string>;
    /**
     * The name of the firewall endpoint association resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The URL of the network that is being associated.
     */
    network: pulumi.Input<string>;
    /**
     * The name of the parent this firewall endpoint association belongs to.
     * Format: projects/{project_id}.
     */
    parent?: pulumi.Input<string>;
    /**
     * The URL of the TlsInspectionPolicy that is being associated.
     */
    tlsInspectionPolicy?: pulumi.Input<string>;
}
