// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * An endpoint group association represents a link between a network and an
 * endpoint group in the organization.
 *
 * Creating an association creates the networking infrastructure linking the
 * network to the endpoint group, but does not enable intercept by itself.
 * To enable intercept, the user must also create a network firewall policy
 * containing intercept rules and associate it with the network.
 *
 * ## Example Usage
 *
 * ### Network Security Intercept Endpoint Group Association Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const producerNetwork = new gcp.compute.Network("producer_network", {
 *     name: "example-prod-network",
 *     autoCreateSubnetworks: false,
 * });
 * const consumerNetwork = new gcp.compute.Network("consumer_network", {
 *     name: "example-cons-network",
 *     autoCreateSubnetworks: false,
 * });
 * const deploymentGroup = new gcp.networksecurity.InterceptDeploymentGroup("deployment_group", {
 *     interceptDeploymentGroupId: "example-dg",
 *     location: "global",
 *     network: producerNetwork.id,
 * });
 * const endpointGroup = new gcp.networksecurity.InterceptEndpointGroup("endpoint_group", {
 *     interceptEndpointGroupId: "example-eg",
 *     location: "global",
 *     interceptDeploymentGroup: deploymentGroup.id,
 * });
 * const _default = new gcp.networksecurity.InterceptEndpointGroupAssociation("default", {
 *     interceptEndpointGroupAssociationId: "example-ega",
 *     location: "global",
 *     network: consumerNetwork.id,
 *     interceptEndpointGroup: endpointGroup.id,
 *     labels: {
 *         foo: "bar",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * InterceptEndpointGroupAssociation can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/locations/{{location}}/interceptEndpointGroupAssociations/{{intercept_endpoint_group_association_id}}`
 *
 * * `{{project}}/{{location}}/{{intercept_endpoint_group_association_id}}`
 *
 * * `{{location}}/{{intercept_endpoint_group_association_id}}`
 *
 * When using the `pulumi import` command, InterceptEndpointGroupAssociation can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:networksecurity/interceptEndpointGroupAssociation:InterceptEndpointGroupAssociation default projects/{{project}}/locations/{{location}}/interceptEndpointGroupAssociations/{{intercept_endpoint_group_association_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:networksecurity/interceptEndpointGroupAssociation:InterceptEndpointGroupAssociation default {{project}}/{{location}}/{{intercept_endpoint_group_association_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:networksecurity/interceptEndpointGroupAssociation:InterceptEndpointGroupAssociation default {{location}}/{{intercept_endpoint_group_association_id}}
 * ```
 */
export class InterceptEndpointGroupAssociation extends pulumi.CustomResource {
    /**
     * Get an existing InterceptEndpointGroupAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InterceptEndpointGroupAssociationState, opts?: pulumi.CustomResourceOptions): InterceptEndpointGroupAssociation {
        return new InterceptEndpointGroupAssociation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:networksecurity/interceptEndpointGroupAssociation:InterceptEndpointGroupAssociation';

    /**
     * Returns true if the given object is an instance of InterceptEndpointGroupAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InterceptEndpointGroupAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InterceptEndpointGroupAssociation.__pulumiType;
    }

    /**
     * The timestamp when the resource was created.
     * See https://google.aip.dev/148#timestamps.
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     */
    declare public /*out*/ readonly effectiveLabels: pulumi.Output<{[key: string]: string}>;
    /**
     * The endpoint group that this association is connected to, for example:
     * `projects/123456789/locations/global/interceptEndpointGroups/my-eg`.
     * See https://google.aip.dev/124.
     */
    declare public readonly interceptEndpointGroup: pulumi.Output<string>;
    /**
     * The ID to use for the new association, which will become the final
     * component of the endpoint group's resource name. If not provided, the
     * server will generate a unique ID.
     */
    declare public readonly interceptEndpointGroupAssociationId: pulumi.Output<string | undefined>;
    /**
     * Labels are key/value pairs that help to organize and filter resources.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    declare public readonly labels: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The cloud location of the association, currently restricted to `global`.
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * The list of locations where the association is configured. This information
     * is retrieved from the linked endpoint group.
     * Structure is documented below.
     */
    declare public /*out*/ readonly locations: pulumi.Output<outputs.networksecurity.InterceptEndpointGroupAssociationLocation[]>;
    /**
     * (Deprecated)
     * The list of locations where the association is present. This information
     * is retrieved from the linked endpoint group, and not configured as part
     * of the association itself.
     * Structure is documented below.
     *
     * @deprecated `locationsDetails` is deprecated and will be removed in a future major release. Use `locations` instead.
     */
    declare public /*out*/ readonly locationsDetails: pulumi.Output<outputs.networksecurity.InterceptEndpointGroupAssociationLocationsDetail[]>;
    /**
     * The resource name of this endpoint group association, for example:
     * `projects/123456789/locations/global/interceptEndpointGroupAssociations/my-eg-association`.
     * See https://google.aip.dev/122 for more details.
     */
    declare public /*out*/ readonly name: pulumi.Output<string>;
    /**
     * The VPC network that is associated. for example:
     * `projects/123456789/global/networks/my-network`.
     * See https://google.aip.dev/124.
     */
    declare public readonly network: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    declare public readonly project: pulumi.Output<string>;
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     */
    declare public /*out*/ readonly pulumiLabels: pulumi.Output<{[key: string]: string}>;
    /**
     * The current state of the resource does not match the user's intended state,
     * and the system is working to reconcile them. This part of the normal
     * operation (e.g. adding a new location to the target deployment group).
     * See https://google.aip.dev/128.
     */
    declare public /*out*/ readonly reconciling: pulumi.Output<boolean>;
    /**
     * (Output)
     * The current state of the association in this location.
     * Possible values:
     * STATE_UNSPECIFIED
     * ACTIVE
     * OUT_OF_SYNC
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * The timestamp when the resource was most recently updated.
     * See https://google.aip.dev/148#timestamps.
     */
    declare public /*out*/ readonly updateTime: pulumi.Output<string>;

    /**
     * Create a InterceptEndpointGroupAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InterceptEndpointGroupAssociationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InterceptEndpointGroupAssociationArgs | InterceptEndpointGroupAssociationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InterceptEndpointGroupAssociationState | undefined;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["effectiveLabels"] = state?.effectiveLabels;
            resourceInputs["interceptEndpointGroup"] = state?.interceptEndpointGroup;
            resourceInputs["interceptEndpointGroupAssociationId"] = state?.interceptEndpointGroupAssociationId;
            resourceInputs["labels"] = state?.labels;
            resourceInputs["location"] = state?.location;
            resourceInputs["locations"] = state?.locations;
            resourceInputs["locationsDetails"] = state?.locationsDetails;
            resourceInputs["name"] = state?.name;
            resourceInputs["network"] = state?.network;
            resourceInputs["project"] = state?.project;
            resourceInputs["pulumiLabels"] = state?.pulumiLabels;
            resourceInputs["reconciling"] = state?.reconciling;
            resourceInputs["state"] = state?.state;
            resourceInputs["updateTime"] = state?.updateTime;
        } else {
            const args = argsOrState as InterceptEndpointGroupAssociationArgs | undefined;
            if (args?.interceptEndpointGroup === undefined && !opts.urn) {
                throw new Error("Missing required property 'interceptEndpointGroup'");
            }
            if (args?.location === undefined && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if (args?.network === undefined && !opts.urn) {
                throw new Error("Missing required property 'network'");
            }
            resourceInputs["interceptEndpointGroup"] = args?.interceptEndpointGroup;
            resourceInputs["interceptEndpointGroupAssociationId"] = args?.interceptEndpointGroupAssociationId;
            resourceInputs["labels"] = args?.labels;
            resourceInputs["location"] = args?.location;
            resourceInputs["network"] = args?.network;
            resourceInputs["project"] = args?.project;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["locations"] = undefined /*out*/;
            resourceInputs["locationsDetails"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["pulumiLabels"] = undefined /*out*/;
            resourceInputs["reconciling"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["effectiveLabels", "pulumiLabels"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(InterceptEndpointGroupAssociation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering InterceptEndpointGroupAssociation resources.
 */
export interface InterceptEndpointGroupAssociationState {
    /**
     * The timestamp when the resource was created.
     * See https://google.aip.dev/148#timestamps.
     */
    createTime?: pulumi.Input<string>;
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     */
    effectiveLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The endpoint group that this association is connected to, for example:
     * `projects/123456789/locations/global/interceptEndpointGroups/my-eg`.
     * See https://google.aip.dev/124.
     */
    interceptEndpointGroup?: pulumi.Input<string>;
    /**
     * The ID to use for the new association, which will become the final
     * component of the endpoint group's resource name. If not provided, the
     * server will generate a unique ID.
     */
    interceptEndpointGroupAssociationId?: pulumi.Input<string>;
    /**
     * Labels are key/value pairs that help to organize and filter resources.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The cloud location of the association, currently restricted to `global`.
     */
    location?: pulumi.Input<string>;
    /**
     * The list of locations where the association is configured. This information
     * is retrieved from the linked endpoint group.
     * Structure is documented below.
     */
    locations?: pulumi.Input<pulumi.Input<inputs.networksecurity.InterceptEndpointGroupAssociationLocation>[]>;
    /**
     * (Deprecated)
     * The list of locations where the association is present. This information
     * is retrieved from the linked endpoint group, and not configured as part
     * of the association itself.
     * Structure is documented below.
     *
     * @deprecated `locationsDetails` is deprecated and will be removed in a future major release. Use `locations` instead.
     */
    locationsDetails?: pulumi.Input<pulumi.Input<inputs.networksecurity.InterceptEndpointGroupAssociationLocationsDetail>[]>;
    /**
     * The resource name of this endpoint group association, for example:
     * `projects/123456789/locations/global/interceptEndpointGroupAssociations/my-eg-association`.
     * See https://google.aip.dev/122 for more details.
     */
    name?: pulumi.Input<string>;
    /**
     * The VPC network that is associated. for example:
     * `projects/123456789/global/networks/my-network`.
     * See https://google.aip.dev/124.
     */
    network?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     */
    pulumiLabels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The current state of the resource does not match the user's intended state,
     * and the system is working to reconcile them. This part of the normal
     * operation (e.g. adding a new location to the target deployment group).
     * See https://google.aip.dev/128.
     */
    reconciling?: pulumi.Input<boolean>;
    /**
     * (Output)
     * The current state of the association in this location.
     * Possible values:
     * STATE_UNSPECIFIED
     * ACTIVE
     * OUT_OF_SYNC
     */
    state?: pulumi.Input<string>;
    /**
     * The timestamp when the resource was most recently updated.
     * See https://google.aip.dev/148#timestamps.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a InterceptEndpointGroupAssociation resource.
 */
export interface InterceptEndpointGroupAssociationArgs {
    /**
     * The endpoint group that this association is connected to, for example:
     * `projects/123456789/locations/global/interceptEndpointGroups/my-eg`.
     * See https://google.aip.dev/124.
     */
    interceptEndpointGroup: pulumi.Input<string>;
    /**
     * The ID to use for the new association, which will become the final
     * component of the endpoint group's resource name. If not provided, the
     * server will generate a unique ID.
     */
    interceptEndpointGroupAssociationId?: pulumi.Input<string>;
    /**
     * Labels are key/value pairs that help to organize and filter resources.
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The cloud location of the association, currently restricted to `global`.
     */
    location: pulumi.Input<string>;
    /**
     * The VPC network that is associated. for example:
     * `projects/123456789/global/networks/my-network`.
     * See https://google.aip.dev/124.
     */
    network: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
