// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { PostureArgs, PostureState } from "./posture";
export type Posture = import("./posture").Posture;
export const Posture: typeof import("./posture").Posture = null as any;
utilities.lazyLoad(exports, ["Posture"], () => require("./posture"));

export { PostureDeploymentArgs, PostureDeploymentState } from "./postureDeployment";
export type PostureDeployment = import("./postureDeployment").PostureDeployment;
export const PostureDeployment: typeof import("./postureDeployment").PostureDeployment = null as any;
utilities.lazyLoad(exports, ["PostureDeployment"], () => require("./postureDeployment"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "gcp:securityposture/posture:Posture":
                return new Posture(name, <any>undefined, { urn })
            case "gcp:securityposture/postureDeployment:PostureDeployment":
                return new PostureDeployment(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "securityposture/posture", _module)
pulumi.runtime.registerResourceModule("gcp", "securityposture/postureDeployment", _module)
