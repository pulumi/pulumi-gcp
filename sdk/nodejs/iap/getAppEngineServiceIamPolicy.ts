// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Retrieves the current IAM policy data for appengineservice
 *
 * ## example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const policy = gcp.iap.getAppEngineServiceIamPolicy({
 *     appId: google_app_engine_standard_app_version.version.project,
 *     project: google_app_engine_standard_app_version.version.project,
 *     service: google_app_engine_standard_app_version.version.service,
 * });
 * ```
 */
export function getAppEngineServiceIamPolicy(args: GetAppEngineServiceIamPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetAppEngineServiceIamPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:iap/getAppEngineServiceIamPolicy:getAppEngineServiceIamPolicy", {
        "appId": args.appId,
        "project": args.project,
        "service": args.service,
    }, opts);
}

/**
 * A collection of arguments for invoking getAppEngineServiceIamPolicy.
 */
export interface GetAppEngineServiceIamPolicyArgs {
    /**
     * Id of the App Engine application. Used to find the parent resource to bind the IAM policy to
     */
    appId: string;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     */
    project?: string;
    /**
     * Service id of the App Engine application Used to find the parent resource to bind the IAM policy to
     */
    service: string;
}

/**
 * A collection of values returned by getAppEngineServiceIamPolicy.
 */
export interface GetAppEngineServiceIamPolicyResult {
    readonly appId: string;
    /**
     * (Computed) The etag of the IAM policy.
     */
    readonly etag: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * (Required only by `gcp.iap.AppEngineServiceIamPolicy`) The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     */
    readonly policyData: string;
    readonly project: string;
    readonly service: string;
}
/**
 * Retrieves the current IAM policy data for appengineservice
 *
 * ## example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const policy = gcp.iap.getAppEngineServiceIamPolicy({
 *     appId: google_app_engine_standard_app_version.version.project,
 *     project: google_app_engine_standard_app_version.version.project,
 *     service: google_app_engine_standard_app_version.version.service,
 * });
 * ```
 */
export function getAppEngineServiceIamPolicyOutput(args: GetAppEngineServiceIamPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAppEngineServiceIamPolicyResult> {
    return pulumi.output(args).apply((a: any) => getAppEngineServiceIamPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getAppEngineServiceIamPolicy.
 */
export interface GetAppEngineServiceIamPolicyOutputArgs {
    /**
     * Id of the App Engine application. Used to find the parent resource to bind the IAM policy to
     */
    appId: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * Service id of the App Engine application Used to find the parent resource to bind the IAM policy to
     */
    service: pulumi.Input<string>;
}
