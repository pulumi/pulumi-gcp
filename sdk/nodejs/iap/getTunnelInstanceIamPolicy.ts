// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Retrieves the current IAM policy data for tunnelinstance
 */
export function getTunnelInstanceIamPolicy(args: GetTunnelInstanceIamPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetTunnelInstanceIamPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:iap/getTunnelInstanceIamPolicy:getTunnelInstanceIamPolicy", {
        "instance": args.instance,
        "project": args.project,
        "zone": args.zone,
    }, opts);
}

/**
 * A collection of arguments for invoking getTunnelInstanceIamPolicy.
 */
export interface GetTunnelInstanceIamPolicyArgs {
    /**
     * Used to find the parent resource to bind the IAM policy to
     */
    instance: string;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     */
    project?: string;
    zone?: string;
}

/**
 * A collection of values returned by getTunnelInstanceIamPolicy.
 */
export interface GetTunnelInstanceIamPolicyResult {
    /**
     * (Computed) The etag of the IAM policy.
     */
    readonly etag: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instance: string;
    /**
     * (Required only by `gcp.iap.TunnelInstanceIAMPolicy`) The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     */
    readonly policyData: string;
    readonly project: string;
    readonly zone: string;
}
/**
 * Retrieves the current IAM policy data for tunnelinstance
 */
export function getTunnelInstanceIamPolicyOutput(args: GetTunnelInstanceIamPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTunnelInstanceIamPolicyResult> {
    return pulumi.output(args).apply((a: any) => getTunnelInstanceIamPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getTunnelInstanceIamPolicy.
 */
export interface GetTunnelInstanceIamPolicyOutputArgs {
    /**
     * Used to find the parent resource to bind the IAM policy to
     */
    instance: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     */
    project?: pulumi.Input<string>;
    zone?: pulumi.Input<string>;
}
