// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Provides connectivity for VMware Engine private clouds.
 *
 * To get more information about Network, see:
 *
 * * [API documentation](https://cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.vmwareEngineNetworks)
 *
 * ## Example Usage
 *
 * ### Vmware Engine Network Standard
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const vmw_engine_network = new gcp.vmwareengine.Network("vmw-engine-network", {
 *     name: "standard-nw",
 *     location: "global",
 *     type: "STANDARD",
 *     description: "VMwareEngine standard network sample",
 * });
 * ```
 * ### Vmware Engine Network Legacy
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * import * as time from "@pulumiverse/time";
 *
 * // there can be only 1 Legacy network per region for a given project,
 * // so creating new project for isolation in CI.
 * const acceptanceProject = new gcp.organizations.Project("acceptance", {
 *     name: "vmw-proj",
 *     projectId: "vmw-proj",
 *     orgId: "123456789",
 *     billingAccount: "000000-0000000-0000000-000000",
 *     deletionPolicy: "DELETE",
 * });
 * const wait60Seconds = new time.index.Sleep("wait_60_seconds", {createDuration: "60s"}, {
 *     dependsOn: [acceptanceProject],
 * });
 * const acceptance = new gcp.projects.Service("acceptance", {
 *     project: acceptanceProject.projectId,
 *     service: "vmwareengine.googleapis.com",
 * }, {
 *     dependsOn: [wait60Seconds],
 * });
 * const vmw_engine_network = new gcp.vmwareengine.Network("vmw-engine-network", {
 *     project: acceptance.project,
 *     name: "us-west1-default",
 *     location: "us-west1",
 *     type: "LEGACY",
 *     description: "VMwareEngine legacy network sample",
 * });
 * ```
 *
 * ## Import
 *
 * Network can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/locations/{{location}}/vmwareEngineNetworks/{{name}}`
 *
 * * `{{project}}/{{location}}/{{name}}`
 *
 * * `{{location}}/{{name}}`
 *
 * When using the `pulumi import` command, Network can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:vmwareengine/network:Network default projects/{{project}}/locations/{{location}}/vmwareEngineNetworks/{{name}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:vmwareengine/network:Network default {{project}}/{{location}}/{{name}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:vmwareengine/network:Network default {{location}}/{{name}}
 * ```
 */
export class Network extends pulumi.CustomResource {
    /**
     * Get an existing Network resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkState, opts?: pulumi.CustomResourceOptions): Network {
        return new Network(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:vmwareengine/network:Network';

    /**
     * Returns true if the given object is an instance of Network.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Network {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Network.__pulumiType;
    }

    /**
     * Creation time of this resource.
     * A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
     * Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
     */
    declare public /*out*/ readonly createTime: pulumi.Output<string>;
    /**
     * User-provided description for this VMware Engine network.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Checksum that may be sent on update and delete requests to ensure that the user-provided value is up to date befor
     * The server computes checksums based on the value of other fields in the request.
     */
    declare public /*out*/ readonly etag: pulumi.Output<string>;
    /**
     * The location where the VMwareEngineNetwork should reside.
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * The ID of the VMwareEngineNetwork.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    declare public readonly project: pulumi.Output<string>;
    /**
     * State of the VMware Engine network.
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * VMware Engine network type.
     * Possible values are: `LEGACY`, `STANDARD`.
     */
    declare public readonly type: pulumi.Output<string>;
    /**
     * System-generated unique identifier for the resource.
     */
    declare public /*out*/ readonly uid: pulumi.Output<string>;
    /**
     * Last update time of this resource.
     * A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
     * Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
     */
    declare public /*out*/ readonly updateTime: pulumi.Output<string>;
    /**
     * VMware Engine service VPC networks that provide connectivity from a private cloud to customer projects,
     * the internet, and other Google Cloud services.
     * Structure is documented below.
     */
    declare public /*out*/ readonly vpcNetworks: pulumi.Output<outputs.vmwareengine.NetworkVpcNetwork[]>;

    /**
     * Create a Network resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkArgs | NetworkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkState | undefined;
            resourceInputs["createTime"] = state?.createTime;
            resourceInputs["description"] = state?.description;
            resourceInputs["etag"] = state?.etag;
            resourceInputs["location"] = state?.location;
            resourceInputs["name"] = state?.name;
            resourceInputs["project"] = state?.project;
            resourceInputs["state"] = state?.state;
            resourceInputs["type"] = state?.type;
            resourceInputs["uid"] = state?.uid;
            resourceInputs["updateTime"] = state?.updateTime;
            resourceInputs["vpcNetworks"] = state?.vpcNetworks;
        } else {
            const args = argsOrState as NetworkArgs | undefined;
            if (args?.location === undefined && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if (args?.type === undefined && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["location"] = args?.location;
            resourceInputs["name"] = args?.name;
            resourceInputs["project"] = args?.project;
            resourceInputs["type"] = args?.type;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["etag"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["uid"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
            resourceInputs["vpcNetworks"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Network.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Network resources.
 */
export interface NetworkState {
    /**
     * Creation time of this resource.
     * A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
     * Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
     */
    createTime?: pulumi.Input<string>;
    /**
     * User-provided description for this VMware Engine network.
     */
    description?: pulumi.Input<string>;
    /**
     * Checksum that may be sent on update and delete requests to ensure that the user-provided value is up to date befor
     * The server computes checksums based on the value of other fields in the request.
     */
    etag?: pulumi.Input<string>;
    /**
     * The location where the VMwareEngineNetwork should reside.
     */
    location?: pulumi.Input<string>;
    /**
     * The ID of the VMwareEngineNetwork.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * State of the VMware Engine network.
     */
    state?: pulumi.Input<string>;
    /**
     * VMware Engine network type.
     * Possible values are: `LEGACY`, `STANDARD`.
     */
    type?: pulumi.Input<string>;
    /**
     * System-generated unique identifier for the resource.
     */
    uid?: pulumi.Input<string>;
    /**
     * Last update time of this resource.
     * A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine fractional digits.
     * Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
     */
    updateTime?: pulumi.Input<string>;
    /**
     * VMware Engine service VPC networks that provide connectivity from a private cloud to customer projects,
     * the internet, and other Google Cloud services.
     * Structure is documented below.
     */
    vpcNetworks?: pulumi.Input<pulumi.Input<inputs.vmwareengine.NetworkVpcNetwork>[]>;
}

/**
 * The set of arguments for constructing a Network resource.
 */
export interface NetworkArgs {
    /**
     * User-provided description for this VMware Engine network.
     */
    description?: pulumi.Input<string>;
    /**
     * The location where the VMwareEngineNetwork should reside.
     */
    location: pulumi.Input<string>;
    /**
     * The ID of the VMwareEngineNetwork.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * VMware Engine network type.
     * Possible values are: `LEGACY`, `STANDARD`.
     */
    type: pulumi.Input<string>;
}
