// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getPrivateCloud(args: GetPrivateCloudArgs, opts?: pulumi.InvokeOptions): Promise<GetPrivateCloudResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:vmwareengine/getPrivateCloud:getPrivateCloud", {
        "location": args.location,
        "name": args.name,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getPrivateCloud.
 */
export interface GetPrivateCloudArgs {
    /**
     * Location of the resource.
     *
     * - - -
     */
    location: string;
    /**
     * Name of the resource.
     */
    name: string;
    /**
     * The ID of the project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    project?: string;
}

/**
 * A collection of values returned by getPrivateCloud.
 */
export interface GetPrivateCloudResult {
    readonly description: string;
    readonly hcxes: outputs.vmwareengine.GetPrivateCloudHcx[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly location: string;
    readonly managementClusters: outputs.vmwareengine.GetPrivateCloudManagementCluster[];
    readonly name: string;
    readonly networkConfigs: outputs.vmwareengine.GetPrivateCloudNetworkConfig[];
    readonly nsxes: outputs.vmwareengine.GetPrivateCloudNsx[];
    readonly project?: string;
    readonly state: string;
    readonly uid: string;
    readonly vcenters: outputs.vmwareengine.GetPrivateCloudVcenter[];
}
export function getPrivateCloudOutput(args: GetPrivateCloudOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPrivateCloudResult> {
    return pulumi.output(args).apply((a: any) => getPrivateCloud(a, opts))
}

/**
 * A collection of arguments for invoking getPrivateCloud.
 */
export interface GetPrivateCloudOutputArgs {
    /**
     * Location of the resource.
     *
     * - - -
     */
    location: pulumi.Input<string>;
    /**
     * Name of the resource.
     */
    name: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
