// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ChatEngineArgs, ChatEngineState } from "./chatEngine";
export type ChatEngine = import("./chatEngine").ChatEngine;
export const ChatEngine: typeof import("./chatEngine").ChatEngine = null as any;
utilities.lazyLoad(exports, ["ChatEngine"], () => require("./chatEngine"));

export { DataStoreArgs, DataStoreState } from "./dataStore";
export type DataStore = import("./dataStore").DataStore;
export const DataStore: typeof import("./dataStore").DataStore = null as any;
utilities.lazyLoad(exports, ["DataStore"], () => require("./dataStore"));

export { SearchEngineArgs, SearchEngineState } from "./searchEngine";
export type SearchEngine = import("./searchEngine").SearchEngine;
export const SearchEngine: typeof import("./searchEngine").SearchEngine = null as any;
utilities.lazyLoad(exports, ["SearchEngine"], () => require("./searchEngine"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "gcp:discoveryengine/chatEngine:ChatEngine":
                return new ChatEngine(name, <any>undefined, { urn })
            case "gcp:discoveryengine/dataStore:DataStore":
                return new DataStore(name, <any>undefined, { urn })
            case "gcp:discoveryengine/searchEngine:SearchEngine":
                return new SearchEngine(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "discoveryengine/chatEngine", _module)
pulumi.runtime.registerResourceModule("gcp", "discoveryengine/dataStore", _module)
pulumi.runtime.registerResourceModule("gcp", "discoveryengine/searchEngine", _module)
