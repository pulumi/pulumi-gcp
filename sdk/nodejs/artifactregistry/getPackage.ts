// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This data source fetches information of a package from a provided Artifact Registry repository.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as google from "@pulumi/google";
 *
 * const myPackage = new google.index.ArtifactRegistryPackage("my_package", {
 *     location: "us-west1",
 *     repositoryId: "my-repository",
 * });
 * ```
 */
export function getPackage(args: GetPackageArgs, opts?: pulumi.InvokeOptions): Promise<GetPackageResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:artifactregistry/getPackage:getPackage", {
        "location": args.location,
        "name": args.name,
        "project": args.project,
        "repositoryId": args.repositoryId,
    }, opts);
}

/**
 * A collection of arguments for invoking getPackage.
 */
export interface GetPackageArgs {
    /**
     * The location of the artifact registry.
     */
    location: string;
    /**
     * The name of the package.
     */
    name: string;
    /**
     * The project ID in which the resource belongs. If it is not provided, the provider project is used.
     */
    project?: string;
    /**
     * The last part of the repository name to fetch from.
     */
    repositoryId: string;
}

/**
 * A collection of values returned by getPackage.
 */
export interface GetPackageResult {
    /**
     * Client specified annotations.
     */
    readonly annotations: {[key: string]: string};
    /**
     * The time, as a RFC 3339 string, this package was created.
     */
    readonly createTime: string;
    /**
     * The display name of the package.
     */
    readonly displayName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly location: string;
    readonly name: string;
    readonly project?: string;
    readonly repositoryId: string;
    /**
     * The time, as a RFC 3339 string, this package was last updated. This includes publishing a new version of the package.
     */
    readonly updateTime: string;
}
/**
 * This data source fetches information of a package from a provided Artifact Registry repository.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as google from "@pulumi/google";
 *
 * const myPackage = new google.index.ArtifactRegistryPackage("my_package", {
 *     location: "us-west1",
 *     repositoryId: "my-repository",
 * });
 * ```
 */
export function getPackageOutput(args: GetPackageOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPackageResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("gcp:artifactregistry/getPackage:getPackage", {
        "location": args.location,
        "name": args.name,
        "project": args.project,
        "repositoryId": args.repositoryId,
    }, opts);
}

/**
 * A collection of arguments for invoking getPackage.
 */
export interface GetPackageOutputArgs {
    /**
     * The location of the artifact registry.
     */
    location: pulumi.Input<string>;
    /**
     * The name of the package.
     */
    name: pulumi.Input<string>;
    /**
     * The project ID in which the resource belongs. If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The last part of the repository name to fetch from.
     */
    repositoryId: pulumi.Input<string>;
}
