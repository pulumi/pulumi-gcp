// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * This data source fetches information of a tag from a provided Artifact Registry repository.
 */
export function getTag(args: GetTagArgs, opts?: pulumi.InvokeOptions): Promise<GetTagResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:artifactregistry/getTag:getTag", {
        "location": args.location,
        "packageName": args.packageName,
        "project": args.project,
        "repositoryId": args.repositoryId,
        "tagName": args.tagName,
    }, opts);
}

/**
 * A collection of arguments for invoking getTag.
 */
export interface GetTagArgs {
    /**
     * The location of the artifact registry.
     */
    location: string;
    /**
     * The name of the package.
     */
    packageName: string;
    /**
     * The project ID in which the resource belongs. If it is not provided, the provider project is used.
     */
    project?: string;
    /**
     * The last part of the repository name to fetch from.
     */
    repositoryId: string;
    /**
     * The name of the tag.
     */
    tagName: string;
}

/**
 * A collection of values returned by getTag.
 */
export interface GetTagResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly location: string;
    /**
     * The name of the tag, for example: `projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/tags/tag1`. If the package part contains slashes, the slashes are escaped.
     */
    readonly name: string;
    readonly packageName: string;
    readonly project?: string;
    readonly repositoryId: string;
    readonly tagName: string;
    /**
     * The version of the tag.
     */
    readonly version: string;
}
/**
 * This data source fetches information of a tag from a provided Artifact Registry repository.
 */
export function getTagOutput(args: GetTagOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetTagResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("gcp:artifactregistry/getTag:getTag", {
        "location": args.location,
        "packageName": args.packageName,
        "project": args.project,
        "repositoryId": args.repositoryId,
        "tagName": args.tagName,
    }, opts);
}

/**
 * A collection of arguments for invoking getTag.
 */
export interface GetTagOutputArgs {
    /**
     * The location of the artifact registry.
     */
    location: pulumi.Input<string>;
    /**
     * The name of the package.
     */
    packageName: pulumi.Input<string>;
    /**
     * The project ID in which the resource belongs. If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The last part of the repository name to fetch from.
     */
    repositoryId: pulumi.Input<string>;
    /**
     * The name of the tag.
     */
    tagName: pulumi.Input<string>;
}
