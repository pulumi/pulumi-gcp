// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Get info about a Google Cloud Filestore instance.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const myInstance = gcp.filestore.getInstance({
 *     name: "my-filestore-instance",
 * });
 * export const instanceIpAddresses = myInstance.then(myInstance => myInstance.networks?.ipAddresses);
 * export const instanceConnectMode = myInstance.then(myInstance => myInstance.networks?.connectMode);
 * export const instanceFileShareName = myInstance.then(myInstance => myInstance.fileShares?.name);
 * ```
 */
export function getInstance(args: GetInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetInstanceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:filestore/getInstance:getInstance", {
        "location": args.location,
        "name": args.name,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getInstance.
 */
export interface GetInstanceArgs {
    /**
     * The name of the location of the instance. This 
     * can be a region for ENTERPRISE tier instances. If it is not provided,
     * the provider region or zone is used.
     */
    location?: string;
    /**
     * The name of a Filestore instance.
     *
     * - - -
     */
    name: string;
    /**
     * The project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    project?: string;
}

/**
 * A collection of values returned by getInstance.
 */
export interface GetInstanceResult {
    readonly createTime: string;
    readonly deletionProtectionEnabled: boolean;
    readonly deletionProtectionReason: string;
    readonly description: string;
    readonly effectiveLabels: {[key: string]: string};
    readonly etag: string;
    readonly fileShares: outputs.filestore.GetInstanceFileShare[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly kmsKeyName: string;
    readonly labels: {[key: string]: string};
    readonly location?: string;
    readonly name: string;
    readonly networks: outputs.filestore.GetInstanceNetwork[];
    readonly performanceConfigs: outputs.filestore.GetInstancePerformanceConfig[];
    readonly project?: string;
    readonly protocol: string;
    readonly pulumiLabels: {[key: string]: string};
    readonly tags: {[key: string]: string};
    readonly tier: string;
    readonly zone: string;
}
/**
 * Get info about a Google Cloud Filestore instance.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const myInstance = gcp.filestore.getInstance({
 *     name: "my-filestore-instance",
 * });
 * export const instanceIpAddresses = myInstance.then(myInstance => myInstance.networks?.ipAddresses);
 * export const instanceConnectMode = myInstance.then(myInstance => myInstance.networks?.connectMode);
 * export const instanceFileShareName = myInstance.then(myInstance => myInstance.fileShares?.name);
 * ```
 */
export function getInstanceOutput(args: GetInstanceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetInstanceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("gcp:filestore/getInstance:getInstance", {
        "location": args.location,
        "name": args.name,
        "project": args.project,
    }, opts);
}

/**
 * A collection of arguments for invoking getInstance.
 */
export interface GetInstanceOutputArgs {
    /**
     * The name of the location of the instance. This 
     * can be a region for ENTERPRISE tier instances. If it is not provided,
     * the provider region or zone is used.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of a Filestore instance.
     *
     * - - -
     */
    name: pulumi.Input<string>;
    /**
     * The project in which the resource belongs. If it
     * is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
