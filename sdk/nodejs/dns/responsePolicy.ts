// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 * ### Dns Response Policy Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const network_1 = new gcp.compute.Network("network-1", {autoCreateSubnetworks: false}, {
 *     provider: google_beta,
 * });
 * const network_2 = new gcp.compute.Network("network-2", {autoCreateSubnetworks: false}, {
 *     provider: google_beta,
 * });
 * const example_response_policy = new gcp.dns.ResponsePolicy("example-response-policy", {
 *     responsePolicyName: "example-response-policy",
 *     networks: [
 *         {
 *             networkUrl: network_1.id,
 *         },
 *         {
 *             networkUrl: network_2.id,
 *         },
 *     ],
 * }, {
 *     provider: google_beta,
 * });
 * ```
 *
 * ## Import
 *
 * ResponsePolicy can be imported using any of these accepted formats
 *
 * ```sh
 *  $ pulumi import gcp:dns/responsePolicy:ResponsePolicy default projects/{{project}}/responsePolicies/{{response_policy_name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:dns/responsePolicy:ResponsePolicy default {{project}}/{{response_policy_name}}
 * ```
 *
 * ```sh
 *  $ pulumi import gcp:dns/responsePolicy:ResponsePolicy default {{response_policy_name}}
 * ```
 */
export class ResponsePolicy extends pulumi.CustomResource {
    /**
     * Get an existing ResponsePolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ResponsePolicyState, opts?: pulumi.CustomResourceOptions): ResponsePolicy {
        return new ResponsePolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'gcp:dns/responsePolicy:ResponsePolicy';

    /**
     * Returns true if the given object is an instance of ResponsePolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ResponsePolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ResponsePolicy.__pulumiType;
    }

    /**
     * The description of the response policy, such as `My new response policy`.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The list of network names specifying networks to which this policy is applied.
     * Structure is documented below.
     */
    public readonly networks!: pulumi.Output<outputs.dns.ResponsePolicyNetwork[] | undefined>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * The user assigned name for this Response Policy, such as `myresponsepolicy`.
     */
    public readonly responsePolicyName!: pulumi.Output<string>;

    /**
     * Create a ResponsePolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ResponsePolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ResponsePolicyArgs | ResponsePolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ResponsePolicyState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["networks"] = state ? state.networks : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["responsePolicyName"] = state ? state.responsePolicyName : undefined;
        } else {
            const args = argsOrState as ResponsePolicyArgs | undefined;
            if ((!args || args.responsePolicyName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'responsePolicyName'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["networks"] = args ? args.networks : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["responsePolicyName"] = args ? args.responsePolicyName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ResponsePolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ResponsePolicy resources.
 */
export interface ResponsePolicyState {
    /**
     * The description of the response policy, such as `My new response policy`.
     */
    description?: pulumi.Input<string>;
    /**
     * The list of network names specifying networks to which this policy is applied.
     * Structure is documented below.
     */
    networks?: pulumi.Input<pulumi.Input<inputs.dns.ResponsePolicyNetwork>[]>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The user assigned name for this Response Policy, such as `myresponsepolicy`.
     */
    responsePolicyName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ResponsePolicy resource.
 */
export interface ResponsePolicyArgs {
    /**
     * The description of the response policy, such as `My new response policy`.
     */
    description?: pulumi.Input<string>;
    /**
     * The list of network names specifying networks to which this policy is applied.
     * Structure is documented below.
     */
    networks?: pulumi.Input<pulumi.Input<inputs.dns.ResponsePolicyNetwork>[]>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The user assigned name for this Response Policy, such as `myresponsepolicy`.
     */
    responsePolicyName: pulumi.Input<string>;
}
