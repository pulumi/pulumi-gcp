// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getGroupTransitiveMemberships(args: GetGroupTransitiveMembershipsArgs, opts?: pulumi.InvokeOptions): Promise<GetGroupTransitiveMembershipsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:cloudidentity/getGroupTransitiveMemberships:getGroupTransitiveMemberships", {
        "group": args.group,
    }, opts);
}

/**
 * A collection of arguments for invoking getGroupTransitiveMemberships.
 */
export interface GetGroupTransitiveMembershipsArgs {
    group: string;
}

/**
 * A collection of values returned by getGroupTransitiveMemberships.
 */
export interface GetGroupTransitiveMembershipsResult {
    readonly group: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly memberships: outputs.cloudidentity.GetGroupTransitiveMembershipsMembership[];
}
export function getGroupTransitiveMembershipsOutput(args: GetGroupTransitiveMembershipsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGroupTransitiveMembershipsResult> {
    return pulumi.output(args).apply((a: any) => getGroupTransitiveMemberships(a, opts))
}

/**
 * A collection of arguments for invoking getGroupTransitiveMemberships.
 */
export interface GetGroupTransitiveMembershipsOutputArgs {
    group: pulumi.Input<string>;
}
